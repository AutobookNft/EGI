### Indice dei File ###

[File 1]( /home/fabio/EGI/app/Actions/Fortify/CreateNewUser.php)
[File 2]( /home/fabio/EGI/app/Actions/Fortify/PasswordValidationRules.php)
[File 3]( /home/fabio/EGI/app/Actions/Fortify/ResetUserPassword.php)
[File 4]( /home/fabio/EGI/app/Actions/Fortify/UpdateUserPassword.php)
[File 5]( /home/fabio/EGI/app/Actions/Fortify/UpdateUserProfileInformation.php)
[File 6]( /home/fabio/EGI/app/Actions/Jetstream/AddTeamMember.php)
[File 7]( /home/fabio/EGI/app/Actions/Jetstream/CreateTeam.php)
[File 8]( /home/fabio/EGI/app/Actions/Jetstream/DeleteTeam.php)
[File 9]( /home/fabio/EGI/app/Actions/Jetstream/DeleteUser.php)
[File 10]( /home/fabio/EGI/app/Actions/Jetstream/InviteTeamMember.php)
[File 11]( /home/fabio/EGI/app/Actions/Jetstream/RemoveTeamMember.php)
[File 12]( /home/fabio/EGI/app/Actions/Jetstream/UpdateTeamName.php)
[File 13]( /home/fabio/EGI/app/Casts/EGIImageCast.php)
[File 14]( /home/fabio/EGI/app/Contracts/NotificationHandlerInterface.php)
[File 15]( /home/fabio/EGI/app/Contracts/ProposalHandlerInterface.php)
[File 16]( /home/fabio/EGI/app/Http/Controllers/Admin/RoleController.php)
[File 17]( /home/fabio/EGI/app/Http/Controllers/Controller.php)
[File 18]( /home/fabio/EGI/app/Http/Controllers/DropController.php)
[File 19]( /home/fabio/EGI/app/Http/Controllers/IconAdminController.php)
[File 20]( /home/fabio/EGI/app/Http/Controllers/WalletController.php)
[File 21]( /home/fabio/EGI/app/Http/Kernel.php)
[File 22]( /home/fabio/EGI/app/Http/Middleware/AddViewDebugInfo.php)
[File 23]( /home/fabio/EGI/app/Http/Middleware/CheckCollectionPermission.php)
[File 24]( /home/fabio/EGI/app/Http/Middleware/DisableCache.php)
[File 25]( /home/fabio/EGI/app/Http/Middleware/EncryptCookies.php)
[File 26]( /home/fabio/EGI/app/Http/Middleware/SetLanguage.php)
[File 27]( /home/fabio/EGI/app/Http/Middleware/SetLocale.php)
[File 28]( /home/fabio/EGI/app/Http/Middleware/VerifyCsrfToken.php)
[File 29]( /home/fabio/EGI/app/Http/Resources/CollectionResource.php)
[File 30]( /home/fabio/EGI/app/Livewire/Collections/CollectionCarousel.php)
[File 31]( /home/fabio/EGI/app/Livewire/Collections/CollectionEdit.php)
[File 32]( /home/fabio/EGI/app/Livewire/Collections/CollectionOpen.php)
[File 33]( /home/fabio/EGI/app/Livewire/Collections/CollectionUserMember.php)
[File 34]( /home/fabio/EGI/app/Livewire/Collections/CreateCollection.php)
[File 35]( /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php)
[File 36]( /home/fabio/EGI/app/Livewire/Collections/HeadImagesManager.php)
[File 37]( /home/fabio/EGI/app/Livewire/Collections/Images/AvatarImageUpload.php)
[File 38]( /home/fabio/EGI/app/Livewire/Collections/Images/BannerImageUpload.php)
[File 39]( /home/fabio/EGI/app/Livewire/Collections/Images/CardImageUpload.php)
[File 40]( /home/fabio/EGI/app/Livewire/Collections/Images/EgiImageUpload.php)
[File 41]( /home/fabio/EGI/app/Livewire/Collections/InviteUserToCollectionModal.php)
[File 42]( /home/fabio/EGI/app/Livewire/Collections/RejectModal.php)
[File 43]( /home/fabio/EGI/app/Livewire/Collections/Show.php)
[File 44]( /home/fabio/EGI/app/Livewire/Dashboard.php)
[File 45]( /home/fabio/EGI/app/Livewire/LanguageSelector.php)
[File 46]( /home/fabio/EGI/app/Livewire/Layout/Navigation.php)
[File 47]( /home/fabio/EGI/app/Livewire/Layout/Sidebar.php)
[File 48]( /home/fabio/EGI/app/Livewire/PhotoUploader.php)
[File 49]( /home/fabio/EGI/app/Livewire/Proposals/AcceptProposalModal.php)
[File 50]( /home/fabio/EGI/app/Livewire/Proposals/DeclineProposalModal.php)
[File 51]( /home/fabio/EGI/app/Livewire/Proposals/ProposalAcceptedNotification.php)
[File 52]( /home/fabio/EGI/app/Livewire/Proposals/ProposalDeclinedNotification.php)
[File 53]( /home/fabio/EGI/app/Livewire/Sidebar.php)
[File 54]( /home/fabio/EGI/app/Livewire/TeamManager.php)
[File 55]( /home/fabio/EGI/app/Livewire/Traits/HandlesCollectionUpdate.php)
[File 56]( /home/fabio/EGI/app/Livewire/Welcome/AuthForms.php)
[File 57]( /home/fabio/EGI/app/Models/Collection.php)
[File 58]( /home/fabio/EGI/app/Models/CollectionInvitation.php)
[File 59]( /home/fabio/EGI/app/Models/CollectionUser.php)
[File 60]( /home/fabio/EGI/app/Models/Egi.php)
[File 61]( /home/fabio/EGI/app/Models/EgiAudit.php)
[File 62]( /home/fabio/EGI/app/Models/Icon.php)
[File 63]( /home/fabio/EGI/app/Models/Membership.php)
[File 64]( /home/fabio/EGI/app/Models/Notification.php)
[File 65]( /home/fabio/EGI/app/Models/Permission.php)
[File 66]( /home/fabio/EGI/app/Models/User.php)
[File 67]( /home/fabio/EGI/app/Models/Wallet.php)
[File 68]( /home/fabio/EGI/app/Models/WalletChangeApproval.php)
[File 69]( /home/fabio/EGI/app/Notifications/CollectionInvitationNotification.php)
[File 70]( /home/fabio/EGI/app/Notifications/WalletChangeRequest.php)
[File 71]( /home/fabio/EGI/app/Notifications/WalletChangeResponse.php)
[File 72]( /home/fabio/EGI/app/Policies/CollectionPolicy.php)
[File 73]( /home/fabio/EGI/app/Policies/EgiPolicy.php)
[File 74]( /home/fabio/EGI/app/Policies/ProfilePolicy.php)
[File 75]( /home/fabio/EGI/app/Policies/TeamPolicy.php)
[File 76]( /home/fabio/EGI/app/Policies/TeamWalletPolicy.php)
[File 77]( /home/fabio/EGI/app/Providers/AppServiceProvider.php)
[File 78]( /home/fabio/EGI/app/Providers/FileHelperServiceProvider.php)
[File 79]( /home/fabio/EGI/app/Providers/FortifyServiceProvider.php)
[File 80]( /home/fabio/EGI/app/Providers/JetstreamServiceProvider.php)
[File 81]( /home/fabio/EGI/app/Providers/ViewDebugServiceProvider.php)
[File 82]( /home/fabio/EGI/app/Repositories/IconRepository.php)
[File 83]( /home/fabio/EGI/app/Services/EGIImageService.php)
[File 84]( /home/fabio/EGI/app/Services/FileStorageService.php)
[File 85]( /home/fabio/EGI/app/Services/Menu/ContextMenus.php)
[File 86]( /home/fabio/EGI/app/Services/Menu/Items/AssignPermissionsMenu.php)
[File 87]( /home/fabio/EGI/app/Services/Menu/Items/AssignRolesMenu.php)
[File 88]( /home/fabio/EGI/app/Services/Menu/Items/BackToDashboardMenu.php)
[File 89]( /home/fabio/EGI/app/Services/Menu/Items/NewCollectionMenu.php)
[File 90]( /home/fabio/EGI/app/Services/Menu/Items/OpenCollectionMenu.php)
[File 91]( /home/fabio/EGI/app/Services/Menu/Items/PermissionsRolesMenu.php)
[File 92]( /home/fabio/EGI/app/Services/Menu/MenuConditionEvaluator.php)
[File 93]( /home/fabio/EGI/app/Services/Menu/MenuGroup.php)
[File 94]( /home/fabio/EGI/app/Services/Menu/MenuItem.php)
[File 95]( /home/fabio/EGI/app/Services/Menu/MenuScanner.php)
[File 96]( /home/fabio/EGI/app/Services/Notifications/InvitationNotificationHandler.php)
[File 97]( /home/fabio/EGI/app/Services/Notifications/NotificationHandlerFactory.php)
[File 98]( /home/fabio/EGI/app/Services/Notifications/WalletChangeRequestHandler.php)
[File 99]( /home/fabio/EGI/app/Services/Proposals/Handlers/WalletProposalHandler.php)
[File 100]( /home/fabio/EGI/app/Services/Proposals/ProposalHandlerFactory.php)
[File 101]( /home/fabio/EGI/app/Traits/HasCreateDefaultCollectionWallets.php)
[File 102]( /home/fabio/EGI/app/Traits/HasPermissionTrait.php)
[File 103]( /home/fabio/EGI/app/Traits/HasTeamRoles.php)
[File 104]( /home/fabio/EGI/app/Traits/HasTeams.php)
[File 105]( /home/fabio/EGI/app/Traits/HasUtilitys.php)
[File 106]( /home/fabio/EGI/app/Traits/SaveCollectionTraits.php)
[File 107]( /home/fabio/EGI/app/Traits/UsesUuid.php)
[File 108]( /home/fabio/EGI/app/View/Components/AppLayout.php)
[File 109]( /home/fabio/EGI/app/View/Components/AuthSessionStatus.php)
[File 110]( /home/fabio/EGI/app/View/Components/BackButton.php)
[File 111]( /home/fabio/EGI/app/View/Components/CollectionCard.php)
[File 112]( /home/fabio/EGI/app/View/Components/FormButton.php)
[File 113]( /home/fabio/EGI/app/View/Components/FormInput.php)
[File 114]( /home/fabio/EGI/app/View/Components/FormInputIcon.php)
[File 115]( /home/fabio/EGI/app/View/Components/FormSelect.php)
[File 116]( /home/fabio/EGI/app/View/Components/GuestLayout.php)
[File 117]( /home/fabio/EGI/app/View/Components/GuestWelcomeLayout.php)
[File 118]( /home/fabio/EGI/app/View/Components/ImageUploader.php)
[File 119]( /home/fabio/EGI/app/View/Components/RepoIcon.php)
[File 120]( /home/fabio/EGI/app/View/Components/Separator.php)
[File 121]( /home/fabio/EGI/app/View/Components/SuggestionIcon.php)
[File 122]( /home/fabio/EGI/app/View/Components/auth-session-status.blade.php)
[File 123]( /home/fabio/EGI/bootstrap/app.php)
[File 124]( /home/fabio/EGI/bootstrap/cache/packages.php)
[File 125]( /home/fabio/EGI/bootstrap/cache/services.php)
[File 126]( /home/fabio/EGI/bootstrap/providers.php)
[File 127]( /home/fabio/EGI/config/app.php)
[File 128]( /home/fabio/EGI/config/auth.php)
[File 129]( /home/fabio/EGI/config/cache.php)
[File 130]( /home/fabio/EGI/config/context.php)
[File 131]( /home/fabio/EGI/config/database.php)
[File 132]( /home/fabio/EGI/config/filesystems.php)
[File 133]( /home/fabio/EGI/config/fortify.php)
[File 134]( /home/fabio/EGI/config/icons.php)
[File 135]( /home/fabio/EGI/config/jetstream.php)
[File 136]( /home/fabio/EGI/config/logging.php)
[File 137]( /home/fabio/EGI/config/mail.php)
[File 138]( /home/fabio/EGI/config/paths.php)
[File 139]( /home/fabio/EGI/config/permission.php)
[File 140]( /home/fabio/EGI/config/queue.php)
[File 141]( /home/fabio/EGI/config/sanctum.php)
[File 142]( /home/fabio/EGI/config/services.php)
[File 143]( /home/fabio/EGI/config/session.php)
[File 144]( /home/fabio/EGI/database/factories/CollectionFactory.php)
[File 145]( /home/fabio/EGI/database/factories/TeamFactory.php)
[File 146]( /home/fabio/EGI/database/factories/UserFactory.php)
[File 147]( /home/fabio/EGI/database/factories/WalletFactory.php)
[File 148]( /home/fabio/EGI/database/migrations/0001_01_01_000000_create_users_table.php)
[File 149]( /home/fabio/EGI/database/migrations/0001_01_01_000001_create_cache_table.php)
[File 150]( /home/fabio/EGI/database/migrations/0001_01_01_000002_create_jobs_table.php)
[File 151]( /home/fabio/EGI/database/migrations/2024_11_07_063504_add_two_factor_columns_to_users_table.php)
[File 152]( /home/fabio/EGI/database/migrations/2024_11_07_163525_create_personal_access_tokens_table.php)
[File 153]( /home/fabio/EGI/database/migrations/2024_11_07_165429_create_permission_tables.php)
[File 154]( /home/fabio/EGI/database/migrations/2024_11_14_090414_create_collections_table.php)
[File 155]( /home/fabio/EGI/database/migrations/2024_11_18_122016_create_icons_table.php)
[File 156]( /home/fabio/EGI/database/migrations/2024_12_10_171308_create_egi_table.php)
[File 157]( /home/fabio/EGI/database/migrations/2024_12_10_171834_create_egi_audits_table.php)
[File 158]( /home/fabio/EGI/database/migrations/2024_12_23_143829_create_notifications_table.php)
[File 159]( /home/fabio/EGI/database/migrations/2024_12_27_102951_create_collection_user_table.php)
[File 160]( /home/fabio/EGI/database/migrations/2024_12_27_104339_create_wallets_table.php)
[File 161]( /home/fabio/EGI/database/migrations/2024_12_27_104350_create_wallet_change_approvals_table.php)
[File 162]( /home/fabio/EGI/database/migrations/2024_12_28_131757_create_collection_invitations_table.php)
[File 163]( /home/fabio/EGI/database/seeders/AdminUserSeeder.php)
[File 164]( /home/fabio/EGI/database/seeders/DatabaseSeeder.php)
[File 165]( /home/fabio/EGI/database/seeders/FakeUserSeeder.php)
[File 166]( /home/fabio/EGI/database/seeders/IconSeeder.php)
[File 167]( /home/fabio/EGI/database/seeders/InitialSetupSeeder.php)
[File 168]( /home/fabio/EGI/database/seeders/RolesAndPermissionsSeeder.php)
[File 169]( /home/fabio/EGI/database/seeders/SuperAdminUserSeeder.php)
[File 170]( /home/fabio/EGI/helpers.php)
[File 171]( /home/fabio/EGI/newOwner.php)
[File 172]( /home/fabio/EGI/public/index.php)
[File 173]( /home/fabio/EGI/resources/lang/de/collection.php)
[File 174]( /home/fabio/EGI/resources/lang/de/errors.php)
[File 175]( /home/fabio/EGI/resources/lang/de/label.php)
[File 176]( /home/fabio/EGI/resources/lang/de/login.php)
[File 177]( /home/fabio/EGI/resources/lang/de/profile.php)
[File 178]( /home/fabio/EGI/resources/lang/de/side_nav_bar.php)
[File 179]( /home/fabio/EGI/resources/lang/de/traits.php)
[File 180]( /home/fabio/EGI/resources/lang/en/auth.php)
[File 181]( /home/fabio/EGI/resources/lang/en/collection.php)
[File 182]( /home/fabio/EGI/resources/lang/en/errors.php)
[File 183]( /home/fabio/EGI/resources/lang/en/label.php)
[File 184]( /home/fabio/EGI/resources/lang/en/login.php)
[File 185]( /home/fabio/EGI/resources/lang/en/notification.php)
[File 186]( /home/fabio/EGI/resources/lang/en/pagination.php)
[File 187]( /home/fabio/EGI/resources/lang/en/passwords.php)
[File 188]( /home/fabio/EGI/resources/lang/en/profile.php)
[File 189]( /home/fabio/EGI/resources/lang/en/side_nav_bar.php)
[File 190]( /home/fabio/EGI/resources/lang/en/traits.php)
[File 191]( /home/fabio/EGI/resources/lang/en/validation.php)
[File 192]( /home/fabio/EGI/resources/lang/es/collection.php)
[File 193]( /home/fabio/EGI/resources/lang/es/errors.php)
[File 194]( /home/fabio/EGI/resources/lang/es/label.php)
[File 195]( /home/fabio/EGI/resources/lang/es/login.php)
[File 196]( /home/fabio/EGI/resources/lang/es/profile.php)
[File 197]( /home/fabio/EGI/resources/lang/es/side_nav_bar.php)
[File 198]( /home/fabio/EGI/resources/lang/es/traits.php)
[File 199]( /home/fabio/EGI/resources/lang/fr/collection.php)
[File 200]( /home/fabio/EGI/resources/lang/fr/errors.php)
[File 201]( /home/fabio/EGI/resources/lang/fr/label.php)
[File 202]( /home/fabio/EGI/resources/lang/fr/login.php)
[File 203]( /home/fabio/EGI/resources/lang/fr/profile.php)
[File 204]( /home/fabio/EGI/resources/lang/fr/side_nav_bar.php)
[File 205]( /home/fabio/EGI/resources/lang/fr/traits.php)
[File 206]( /home/fabio/EGI/resources/lang/it/collection.php)
[File 207]( /home/fabio/EGI/resources/lang/it/errors.php)
[File 208]( /home/fabio/EGI/resources/lang/it/label.php)
[File 209]( /home/fabio/EGI/resources/lang/it/login.php)
[File 210]( /home/fabio/EGI/resources/lang/it/notification.php)
[File 211]( /home/fabio/EGI/resources/lang/it/profile.php)
[File 212]( /home/fabio/EGI/resources/lang/it/side_nav_bar.php)
[File 213]( /home/fabio/EGI/resources/lang/it/traits.php)
[File 214]( /home/fabio/EGI/resources/lang/it/utilities.php)
[File 215]( /home/fabio/EGI/resources/lang/pt/collection.php)
[File 216]( /home/fabio/EGI/resources/lang/pt/errors.php)
[File 217]( /home/fabio/EGI/resources/lang/pt/label.php)
[File 218]( /home/fabio/EGI/resources/lang/pt/login.php)
[File 219]( /home/fabio/EGI/resources/lang/pt/profile.php)
[File 220]( /home/fabio/EGI/resources/lang/pt/side_nav_bar.php)
[File 221]( /home/fabio/EGI/resources/lang/pt/traits.php)
[File 222]( /home/fabio/EGI/resources/views/_welcome.blade.php)
[File 223]( /home/fabio/EGI/resources/views/admin/assign-permissions.blade.php)
[File 224]( /home/fabio/EGI/resources/views/admin/assign-role.blade.php)
[File 225]( /home/fabio/EGI/resources/views/admin/roles/create.blade.php)
[File 226]( /home/fabio/EGI/resources/views/admin/roles/edit.blade.php)
[File 227]( /home/fabio/EGI/resources/views/admin/roles/index.blade.php)
[File 228]( /home/fabio/EGI/resources/views/api/api-token-manager.blade.php)
[File 229]( /home/fabio/EGI/resources/views/api/index.blade.php)
[File 230]( /home/fabio/EGI/resources/views/auth/confirm-password.blade.php)
[File 231]( /home/fabio/EGI/resources/views/auth/forgot-password.blade.php)
[File 232]( /home/fabio/EGI/resources/views/auth/login.blade.php)
[File 233]( /home/fabio/EGI/resources/views/auth/register.blade.php)
[File 234]( /home/fabio/EGI/resources/views/auth/reset-password.blade.php)
[File 235]( /home/fabio/EGI/resources/views/auth/two-factor-challenge.blade.php)
[File 236]( /home/fabio/EGI/resources/views/auth/verify-email.blade.php)
[File 237]( /home/fabio/EGI/resources/views/components/action-message.blade.php)
[File 238]( /home/fabio/EGI/resources/views/components/action-section.blade.php)
[File 239]( /home/fabio/EGI/resources/views/components/application-logo.blade.php)
[File 240]( /home/fabio/EGI/resources/views/components/application-mark.blade.php)
[File 241]( /home/fabio/EGI/resources/views/components/auth-session-status.blade.php)
[File 242]( /home/fabio/EGI/resources/views/components/authentication-card-logo.blade.php)
[File 243]( /home/fabio/EGI/resources/views/components/authentication-card.blade.php)
[File 244]( /home/fabio/EGI/resources/views/components/back-button.blade.php)
[File 245]( /home/fabio/EGI/resources/views/components/banner.blade.php)
[File 246]( /home/fabio/EGI/resources/views/components/button.blade.php)
[File 247]( /home/fabio/EGI/resources/views/components/checkbox.blade.php)
[File 248]( /home/fabio/EGI/resources/views/components/collection-card.blade.php)
[File 249]( /home/fabio/EGI/resources/views/components/confirmation-modal.blade.php)
[File 250]( /home/fabio/EGI/resources/views/components/confirms-password.blade.php)
[File 251]( /home/fabio/EGI/resources/views/components/danger-button.blade.php)
[File 252]( /home/fabio/EGI/resources/views/components/dialog-modal.blade.php)
[File 253]( /home/fabio/EGI/resources/views/components/dropdown-link.blade.php)
[File 254]( /home/fabio/EGI/resources/views/components/dropdown.blade.php)
[File 255]( /home/fabio/EGI/resources/views/components/form-button.blade.php)
[File 256]( /home/fabio/EGI/resources/views/components/form-input-icon.blade.php)
[File 257]( /home/fabio/EGI/resources/views/components/form-input.blade.php)
[File 258]( /home/fabio/EGI/resources/views/components/form-section.blade.php)
[File 259]( /home/fabio/EGI/resources/views/components/form-select.blade.php)
[File 260]( /home/fabio/EGI/resources/views/components/icons/email.blade.php)
[File 261]( /home/fabio/EGI/resources/views/components/icons/help.blade.php)
[File 262]( /home/fabio/EGI/resources/views/components/icons/password.blade.php)
[File 263]( /home/fabio/EGI/resources/views/components/icons/search.blade.php)
[File 264]( /home/fabio/EGI/resources/views/components/icons/user.blade.php)
[File 265]( /home/fabio/EGI/resources/views/components/image-uploader.blade.php)
[File 266]( /home/fabio/EGI/resources/views/components/input-error.blade.php)
[File 267]( /home/fabio/EGI/resources/views/components/input.blade.php)
[File 268]( /home/fabio/EGI/resources/views/components/label.blade.php)
[File 269]( /home/fabio/EGI/resources/views/components/layouts/app.blade.php)
[File 270]( /home/fabio/EGI/resources/views/components/modal.blade.php)
[File 271]( /home/fabio/EGI/resources/views/components/nav-link.blade.php)
[File 272]( /home/fabio/EGI/resources/views/components/repo-icon.blade.php)
[File 273]( /home/fabio/EGI/resources/views/components/responsive-nav-link.blade.php)
[File 274]( /home/fabio/EGI/resources/views/components/secondary-button.blade.php)
[File 275]( /home/fabio/EGI/resources/views/components/section-border.blade.php)
[File 276]( /home/fabio/EGI/resources/views/components/section-title.blade.php)
[File 277]( /home/fabio/EGI/resources/views/components/separator.blade.php)
[File 278]( /home/fabio/EGI/resources/views/components/suggestion-icon.blade.php)
[File 279]( /home/fabio/EGI/resources/views/components/switchable-team.blade.php)
[File 280]( /home/fabio/EGI/resources/views/components/validation-errors.blade.php)
[File 281]( /home/fabio/EGI/resources/views/components/welcome.blade.php)
[File 282]( /home/fabio/EGI/resources/views/dashboard.blade.php)
[File 283]( /home/fabio/EGI/resources/views/emails/team-invitation.blade.php)
[File 284]( /home/fabio/EGI/resources/views/error.blade.php)
[File 285]( /home/fabio/EGI/resources/views/layouts/app.blade.php)
[File 286]( /home/fabio/EGI/resources/views/layouts/guest-welcome.blade.php)
[File 287]( /home/fabio/EGI/resources/views/layouts/guest.blade.php)
[File 288]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/back_to_collection_button.blade.php)
[File 289]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/data_section.blade.php)
[File 290]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/image_section.blade.php)
[File 291]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_avatar.blade.php)
[File 292]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_banner.blade.php)
[File 293]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_card.blade.php)
[File 294]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/wallets_section.blade.php)
[File 295]( /home/fabio/EGI/resources/views/livewire/collections/collection-carousel.blade.php)
[File 296]( /home/fabio/EGI/resources/views/livewire/collections/collection-manager.blade.php)
[File 297]( /home/fabio/EGI/resources/views/livewire/collections/collection-user.blade.php)
[File 298]( /home/fabio/EGI/resources/views/livewire/collections/create-collection.blade.php)
[File 299]( /home/fabio/EGI/resources/views/livewire/collections/edit-wallet-modal.blade.php)
[File 300]( /home/fabio/EGI/resources/views/livewire/collections/head-images-manager.blade.php)
[File 301]( /home/fabio/EGI/resources/views/livewire/collections/images/avatar-image-upload.blade.php)
[File 302]( /home/fabio/EGI/resources/views/livewire/collections/images/banner-image-upload.blade.php)
[File 303]( /home/fabio/EGI/resources/views/livewire/collections/images/card-image-upload.blade.php)
[File 304]( /home/fabio/EGI/resources/views/livewire/collections/images/egi-image-upload.blade.php)
[File 305]( /home/fabio/EGI/resources/views/livewire/collections/invite-user-to-collection-modal.blade.php)
[File 306]( /home/fabio/EGI/resources/views/livewire/collections/no-team.blade.php)
[File 307]( /home/fabio/EGI/resources/views/livewire/collections/open.blade.php)
[File 308]( /home/fabio/EGI/resources/views/livewire/collections/reject-modal.blade.php)
[File 309]( /home/fabio/EGI/resources/views/livewire/collections/show.blade.php)
[File 310]( /home/fabio/EGI/resources/views/livewire/dashboard.blade.php)
[File 311]( /home/fabio/EGI/resources/views/livewire/language-selector.blade.php)
[File 312]( /home/fabio/EGI/resources/views/livewire/layout/navigation.blade.php)
[File 313]( /home/fabio/EGI/resources/views/livewire/modale/collection_general_suggestion.blade.php)
[File 314]( /home/fabio/EGI/resources/views/livewire/modale/collection_image_suggestion.blade.php)
[File 315]( /home/fabio/EGI/resources/views/livewire/photo-uploader.blade.php)
[File 316]( /home/fabio/EGI/resources/views/livewire/proposals/decline-proposal-modal.blade.php)
[File 317]( /home/fabio/EGI/resources/views/livewire/sidebar.blade)
[File 318]( /home/fabio/EGI/resources/views/livewire/sidebar.blade)
[File 319]( /home/fabio/EGI/resources/views/livewire/sidebar.blade.php)
[File 320]( /home/fabio/EGI/resources/views/livewire/team-manager.blade.php)
[File 321]( /home/fabio/EGI/resources/views/livewire/welcome/auth-forms.blade.php)
[File 322]( /home/fabio/EGI/resources/views/navigation-menu.blade.php)
[File 323]( /home/fabio/EGI/resources/views/notifications/default.blade.php)
[File 324]( /home/fabio/EGI/resources/views/notifications/invitation.blade.php)
[File 325]( /home/fabio/EGI/resources/views/notifications/proposa-declined-notification.blade.php)
[File 326]( /home/fabio/EGI/resources/views/notifications/wallet-change-request.blade.php)
[File 327]( /home/fabio/EGI/resources/views/policy.blade.php)
[File 328]( /home/fabio/EGI/resources/views/profile/delete-user-form.blade.php)
[File 329]( /home/fabio/EGI/resources/views/profile/logout-other-browser-sessions-form.blade.php)
[File 330]( /home/fabio/EGI/resources/views/profile/show.blade.php)
[File 331]( /home/fabio/EGI/resources/views/profile/two-factor-authentication-form.blade.php)
[File 332]( /home/fabio/EGI/resources/views/profile/update-password-form.blade.php)
[File 333]( /home/fabio/EGI/resources/views/profile/update-profile-information-form.blade.php)
[File 334]( /home/fabio/EGI/resources/views/teams/create-team-form.blade.php)
[File 335]( /home/fabio/EGI/resources/views/teams/create.blade.php)
[File 336]( /home/fabio/EGI/resources/views/teams/delete-team-form.blade.php)
[File 337]( /home/fabio/EGI/resources/views/teams/show.blade.php)
[File 338]( /home/fabio/EGI/resources/views/teams/team-member-manager.blade.php)
[File 339]( /home/fabio/EGI/resources/views/teams/update-team-name-form.blade.php)
[File 340]( /home/fabio/EGI/resources/views/terms.blade.php)
[File 341]( /home/fabio/EGI/resources/views/welcome.blade.php)
[File 342]( /home/fabio/EGI/routes/api.php)
[File 343]( /home/fabio/EGI/routes/console.php)
[File 344]( /home/fabio/EGI/routes/web.php)
[File 345]( /home/fabio/EGI/tests/Feature/ApiTokenPermissionsTest.php)
[File 346]( /home/fabio/EGI/tests/Feature/AuthenticationTest.php)
[File 347]( /home/fabio/EGI/tests/Feature/BrowserSessionsTest.php)
[File 348]( /home/fabio/EGI/tests/Feature/CreateApiTokenTest.php)
[File 349]( /home/fabio/EGI/tests/Feature/CreateTeamTest.php)
[File 350]( /home/fabio/EGI/tests/Feature/DeleteAccountTest.php)
[File 351]( /home/fabio/EGI/tests/Feature/DeleteApiTokenTest.php)
[File 352]( /home/fabio/EGI/tests/Feature/DeleteTeamTest.php)
[File 353]( /home/fabio/EGI/tests/Feature/EmailVerificationTest.php)
[File 354]( /home/fabio/EGI/tests/Feature/ExampleTest.php)
[File 355]( /home/fabio/EGI/tests/Feature/InviteTeamMemberTest.php)
[File 356]( /home/fabio/EGI/tests/Feature/LeaveTeamTest.php)
[File 357]( /home/fabio/EGI/tests/Feature/PasswordConfirmationTest.php)
[File 358]( /home/fabio/EGI/tests/Feature/PasswordResetTest.php)
[File 359]( /home/fabio/EGI/tests/Feature/ProfileInformationTest.php)
[File 360]( /home/fabio/EGI/tests/Feature/RegistrationTest.php)
[File 361]( /home/fabio/EGI/tests/Feature/RemoveTeamMemberTest.php)
[File 362]( /home/fabio/EGI/tests/Feature/TwoFactorAuthenticationSettingsTest.php)
[File 363]( /home/fabio/EGI/tests/Feature/UpdatePasswordTest.php)
[File 364]( /home/fabio/EGI/tests/Feature/UpdateTeamMemberRoleTest.php)
[File 365]( /home/fabio/EGI/tests/Feature/UpdateTeamNameTest.php)
[File 366]( /home/fabio/EGI/tests/TestCase.php)
[File 367]( /home/fabio/EGI/tests/Unit/ExampleTest.php)
[File 368]( /home/fabio/EGI/app/Actions/Fortify/CreateNewUser.php)
[File 369]( /home/fabio/EGI/app/Actions/Fortify/PasswordValidationRules.php)
[File 370]( /home/fabio/EGI/app/Actions/Fortify/ResetUserPassword.php)
[File 371]( /home/fabio/EGI/app/Actions/Fortify/UpdateUserPassword.php)
[File 372]( /home/fabio/EGI/app/Actions/Fortify/UpdateUserProfileInformation.php)
[File 373]( /home/fabio/EGI/app/Actions/Jetstream/AddTeamMember.php)
[File 374]( /home/fabio/EGI/app/Actions/Jetstream/CreateTeam.php)
[File 375]( /home/fabio/EGI/app/Actions/Jetstream/DeleteTeam.php)
[File 376]( /home/fabio/EGI/app/Actions/Jetstream/DeleteUser.php)
[File 377]( /home/fabio/EGI/app/Actions/Jetstream/InviteTeamMember.php)
[File 378]( /home/fabio/EGI/app/Actions/Jetstream/RemoveTeamMember.php)
[File 379]( /home/fabio/EGI/app/Actions/Jetstream/UpdateTeamName.php)
[File 380]( /home/fabio/EGI/app/Casts/EGIImageCast.php)
[File 381]( /home/fabio/EGI/app/Contracts/NotificationHandlerInterface.php)
[File 382]( /home/fabio/EGI/app/Contracts/ProposalHandlerInterface.php)
[File 383]( /home/fabio/EGI/app/Http/Controllers/Admin/RoleController.php)
[File 384]( /home/fabio/EGI/app/Http/Controllers/Controller.php)
[File 385]( /home/fabio/EGI/app/Http/Controllers/DropController.php)
[File 386]( /home/fabio/EGI/app/Http/Controllers/IconAdminController.php)
[File 387]( /home/fabio/EGI/app/Http/Controllers/WalletController.php)
[File 388]( /home/fabio/EGI/app/Http/Kernel.php)
[File 389]( /home/fabio/EGI/app/Http/Middleware/AddViewDebugInfo.php)
[File 390]( /home/fabio/EGI/app/Http/Middleware/CheckCollectionPermission.php)
[File 391]( /home/fabio/EGI/app/Http/Middleware/DisableCache.php)
[File 392]( /home/fabio/EGI/app/Http/Middleware/EncryptCookies.php)
[File 393]( /home/fabio/EGI/app/Http/Middleware/SetLanguage.php)
[File 394]( /home/fabio/EGI/app/Http/Middleware/SetLocale.php)
[File 395]( /home/fabio/EGI/app/Http/Middleware/VerifyCsrfToken.php)
[File 396]( /home/fabio/EGI/app/Http/Resources/CollectionResource.php)
[File 397]( /home/fabio/EGI/app/Livewire/Collections/CollectionCarousel.php)
[File 398]( /home/fabio/EGI/app/Livewire/Collections/CollectionEdit.php)
[File 399]( /home/fabio/EGI/app/Livewire/Collections/CollectionOpen.php)
[File 400]( /home/fabio/EGI/app/Livewire/Collections/CollectionUserMember.php)
[File 401]( /home/fabio/EGI/app/Livewire/Collections/CreateCollection.php)
[File 402]( /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php)
[File 403]( /home/fabio/EGI/app/Livewire/Collections/HeadImagesManager.php)
[File 404]( /home/fabio/EGI/app/Livewire/Collections/Images/AvatarImageUpload.php)
[File 405]( /home/fabio/EGI/app/Livewire/Collections/Images/BannerImageUpload.php)
[File 406]( /home/fabio/EGI/app/Livewire/Collections/Images/CardImageUpload.php)
[File 407]( /home/fabio/EGI/app/Livewire/Collections/Images/EgiImageUpload.php)
[File 408]( /home/fabio/EGI/app/Livewire/Collections/InviteUserToCollectionModal.php)
[File 409]( /home/fabio/EGI/app/Livewire/Collections/RejectModal.php)
[File 410]( /home/fabio/EGI/app/Livewire/Collections/Show.php)
[File 411]( /home/fabio/EGI/app/Livewire/Dashboard.php)
[File 412]( /home/fabio/EGI/app/Livewire/LanguageSelector.php)
[File 413]( /home/fabio/EGI/app/Livewire/Layout/Navigation.php)
[File 414]( /home/fabio/EGI/app/Livewire/Layout/Sidebar.php)
[File 415]( /home/fabio/EGI/app/Livewire/PhotoUploader.php)
[File 416]( /home/fabio/EGI/app/Livewire/Proposals/AcceptProposalModal.php)
[File 417]( /home/fabio/EGI/app/Livewire/Proposals/DeclineProposalModal.php)
[File 418]( /home/fabio/EGI/app/Livewire/Proposals/ProposalAcceptedNotification.php)
[File 419]( /home/fabio/EGI/app/Livewire/Proposals/ProposalDeclinedNotification.php)
[File 420]( /home/fabio/EGI/app/Livewire/Sidebar.php)
[File 421]( /home/fabio/EGI/app/Livewire/TeamManager.php)
[File 422]( /home/fabio/EGI/app/Livewire/Traits/HandlesCollectionUpdate.php)
[File 423]( /home/fabio/EGI/app/Livewire/Welcome/AuthForms.php)
[File 424]( /home/fabio/EGI/app/Models/Collection.php)
[File 425]( /home/fabio/EGI/app/Models/CollectionInvitation.php)
[File 426]( /home/fabio/EGI/app/Models/CollectionUser.php)
[File 427]( /home/fabio/EGI/app/Models/Egi.php)
[File 428]( /home/fabio/EGI/app/Models/EgiAudit.php)
[File 429]( /home/fabio/EGI/app/Models/Icon.php)
[File 430]( /home/fabio/EGI/app/Models/Membership.php)
[File 431]( /home/fabio/EGI/app/Models/Notification.php)
[File 432]( /home/fabio/EGI/app/Models/Permission.php)
[File 433]( /home/fabio/EGI/app/Models/User.php)
[File 434]( /home/fabio/EGI/app/Models/Wallet.php)
[File 435]( /home/fabio/EGI/app/Models/WalletChangeApproval.php)
[File 436]( /home/fabio/EGI/app/Notifications/CollectionInvitationNotification.php)
[File 437]( /home/fabio/EGI/app/Notifications/WalletChangeRequest.php)
[File 438]( /home/fabio/EGI/app/Notifications/WalletChangeResponse.php)
[File 439]( /home/fabio/EGI/app/Policies/CollectionPolicy.php)
[File 440]( /home/fabio/EGI/app/Policies/EgiPolicy.php)
[File 441]( /home/fabio/EGI/app/Policies/ProfilePolicy.php)
[File 442]( /home/fabio/EGI/app/Policies/TeamPolicy.php)
[File 443]( /home/fabio/EGI/app/Policies/TeamWalletPolicy.php)
[File 444]( /home/fabio/EGI/app/Providers/AppServiceProvider.php)
[File 445]( /home/fabio/EGI/app/Providers/FileHelperServiceProvider.php)
[File 446]( /home/fabio/EGI/app/Providers/FortifyServiceProvider.php)
[File 447]( /home/fabio/EGI/app/Providers/JetstreamServiceProvider.php)
[File 448]( /home/fabio/EGI/app/Providers/ViewDebugServiceProvider.php)
[File 449]( /home/fabio/EGI/app/Repositories/IconRepository.php)
[File 450]( /home/fabio/EGI/app/Services/EGIImageService.php)
[File 451]( /home/fabio/EGI/app/Services/FileStorageService.php)
[File 452]( /home/fabio/EGI/app/Services/Menu/ContextMenus.php)
[File 453]( /home/fabio/EGI/app/Services/Menu/Items/AssignPermissionsMenu.php)
[File 454]( /home/fabio/EGI/app/Services/Menu/Items/AssignRolesMenu.php)
[File 455]( /home/fabio/EGI/app/Services/Menu/Items/BackToDashboardMenu.php)
[File 456]( /home/fabio/EGI/app/Services/Menu/Items/NewCollectionMenu.php)
[File 457]( /home/fabio/EGI/app/Services/Menu/Items/OpenCollectionMenu.php)
[File 458]( /home/fabio/EGI/app/Services/Menu/Items/PermissionsRolesMenu.php)
[File 459]( /home/fabio/EGI/app/Services/Menu/MenuConditionEvaluator.php)
[File 460]( /home/fabio/EGI/app/Services/Menu/MenuGroup.php)
[File 461]( /home/fabio/EGI/app/Services/Menu/MenuItem.php)
[File 462]( /home/fabio/EGI/app/Services/Menu/MenuScanner.php)
[File 463]( /home/fabio/EGI/app/Services/Notifications/InvitationNotificationHandler.php)
[File 464]( /home/fabio/EGI/app/Services/Notifications/NotificationHandlerFactory.php)
[File 465]( /home/fabio/EGI/app/Services/Notifications/WalletChangeRequestHandler.php)
[File 466]( /home/fabio/EGI/app/Services/Proposals/Handlers/WalletProposalHandler.php)
[File 467]( /home/fabio/EGI/app/Services/Proposals/ProposalHandlerFactory.php)
[File 468]( /home/fabio/EGI/app/Traits/HasCreateDefaultCollectionWallets.php)
[File 469]( /home/fabio/EGI/app/Traits/HasPermissionTrait.php)
[File 470]( /home/fabio/EGI/app/Traits/HasTeamRoles.php)
[File 471]( /home/fabio/EGI/app/Traits/HasTeams.php)
[File 472]( /home/fabio/EGI/app/Traits/HasUtilitys.php)
[File 473]( /home/fabio/EGI/app/Traits/SaveCollectionTraits.php)
[File 474]( /home/fabio/EGI/app/Traits/UsesUuid.php)
[File 475]( /home/fabio/EGI/app/View/Components/AppLayout.php)
[File 476]( /home/fabio/EGI/app/View/Components/AuthSessionStatus.php)
[File 477]( /home/fabio/EGI/app/View/Components/BackButton.php)
[File 478]( /home/fabio/EGI/app/View/Components/CollectionCard.php)
[File 479]( /home/fabio/EGI/app/View/Components/FormButton.php)
[File 480]( /home/fabio/EGI/app/View/Components/FormInput.php)
[File 481]( /home/fabio/EGI/app/View/Components/FormInputIcon.php)
[File 482]( /home/fabio/EGI/app/View/Components/FormSelect.php)
[File 483]( /home/fabio/EGI/app/View/Components/GuestLayout.php)
[File 484]( /home/fabio/EGI/app/View/Components/GuestWelcomeLayout.php)
[File 485]( /home/fabio/EGI/app/View/Components/ImageUploader.php)
[File 486]( /home/fabio/EGI/app/View/Components/RepoIcon.php)
[File 487]( /home/fabio/EGI/app/View/Components/Separator.php)
[File 488]( /home/fabio/EGI/app/View/Components/SuggestionIcon.php)
[File 489]( /home/fabio/EGI/app/View/Components/auth-session-status.blade.php)
[File 490]( /home/fabio/EGI/bootstrap/app.php)
[File 491]( /home/fabio/EGI/bootstrap/cache/packages.php)
[File 492]( /home/fabio/EGI/bootstrap/cache/services.php)
[File 493]( /home/fabio/EGI/bootstrap/providers.php)
[File 494]( /home/fabio/EGI/config/app.php)
[File 495]( /home/fabio/EGI/config/auth.php)
[File 496]( /home/fabio/EGI/config/cache.php)
[File 497]( /home/fabio/EGI/config/context.php)
[File 498]( /home/fabio/EGI/config/database.php)
[File 499]( /home/fabio/EGI/config/filesystems.php)
[File 500]( /home/fabio/EGI/config/fortify.php)
[File 501]( /home/fabio/EGI/config/icons.php)
[File 502]( /home/fabio/EGI/config/jetstream.php)
[File 503]( /home/fabio/EGI/config/logging.php)
[File 504]( /home/fabio/EGI/config/mail.php)
[File 505]( /home/fabio/EGI/config/paths.php)
[File 506]( /home/fabio/EGI/config/permission.php)
[File 507]( /home/fabio/EGI/config/queue.php)
[File 508]( /home/fabio/EGI/config/sanctum.php)
[File 509]( /home/fabio/EGI/config/services.php)
[File 510]( /home/fabio/EGI/config/session.php)
[File 511]( /home/fabio/EGI/database/factories/CollectionFactory.php)
[File 512]( /home/fabio/EGI/database/factories/TeamFactory.php)
[File 513]( /home/fabio/EGI/database/factories/UserFactory.php)
[File 514]( /home/fabio/EGI/database/factories/WalletFactory.php)
[File 515]( /home/fabio/EGI/database/migrations/0001_01_01_000000_create_users_table.php)
[File 516]( /home/fabio/EGI/database/migrations/0001_01_01_000001_create_cache_table.php)
[File 517]( /home/fabio/EGI/database/migrations/0001_01_01_000002_create_jobs_table.php)
[File 518]( /home/fabio/EGI/database/migrations/2024_11_07_063504_add_two_factor_columns_to_users_table.php)
[File 519]( /home/fabio/EGI/database/migrations/2024_11_07_163525_create_personal_access_tokens_table.php)
[File 520]( /home/fabio/EGI/database/migrations/2024_11_07_165429_create_permission_tables.php)
[File 521]( /home/fabio/EGI/database/migrations/2024_11_14_090414_create_collections_table.php)
[File 522]( /home/fabio/EGI/database/migrations/2024_11_18_122016_create_icons_table.php)
[File 523]( /home/fabio/EGI/database/migrations/2024_12_10_171308_create_egi_table.php)
[File 524]( /home/fabio/EGI/database/migrations/2024_12_10_171834_create_egi_audits_table.php)
[File 525]( /home/fabio/EGI/database/migrations/2024_12_23_143829_create_notifications_table.php)
[File 526]( /home/fabio/EGI/database/migrations/2024_12_27_102951_create_collection_user_table.php)
[File 527]( /home/fabio/EGI/database/migrations/2024_12_27_104339_create_wallets_table.php)
[File 528]( /home/fabio/EGI/database/migrations/2024_12_27_104350_create_wallet_change_approvals_table.php)
[File 529]( /home/fabio/EGI/database/migrations/2024_12_28_131757_create_collection_invitations_table.php)
[File 530]( /home/fabio/EGI/database/seeders/AdminUserSeeder.php)
[File 531]( /home/fabio/EGI/database/seeders/DatabaseSeeder.php)
[File 532]( /home/fabio/EGI/database/seeders/FakeUserSeeder.php)
[File 533]( /home/fabio/EGI/database/seeders/IconSeeder.php)
[File 534]( /home/fabio/EGI/database/seeders/InitialSetupSeeder.php)
[File 535]( /home/fabio/EGI/database/seeders/RolesAndPermissionsSeeder.php)
[File 536]( /home/fabio/EGI/database/seeders/SuperAdminUserSeeder.php)
[File 537]( /home/fabio/EGI/helpers.php)
[File 538]( /home/fabio/EGI/newOwner.php)
[File 539]( /home/fabio/EGI/public/index.php)
[File 540]( /home/fabio/EGI/resources/lang/de/collection.php)
[File 541]( /home/fabio/EGI/resources/lang/de/errors.php)
[File 542]( /home/fabio/EGI/resources/lang/de/label.php)
[File 543]( /home/fabio/EGI/resources/lang/de/login.php)
[File 544]( /home/fabio/EGI/resources/lang/de/profile.php)
[File 545]( /home/fabio/EGI/resources/lang/de/side_nav_bar.php)
[File 546]( /home/fabio/EGI/resources/lang/de/traits.php)
[File 547]( /home/fabio/EGI/resources/lang/en/auth.php)
[File 548]( /home/fabio/EGI/resources/lang/en/collection.php)
[File 549]( /home/fabio/EGI/resources/lang/en/errors.php)
[File 550]( /home/fabio/EGI/resources/lang/en/label.php)
[File 551]( /home/fabio/EGI/resources/lang/en/login.php)
[File 552]( /home/fabio/EGI/resources/lang/en/notification.php)
[File 553]( /home/fabio/EGI/resources/lang/en/pagination.php)
[File 554]( /home/fabio/EGI/resources/lang/en/passwords.php)
[File 555]( /home/fabio/EGI/resources/lang/en/profile.php)
[File 556]( /home/fabio/EGI/resources/lang/en/side_nav_bar.php)
[File 557]( /home/fabio/EGI/resources/lang/en/traits.php)
[File 558]( /home/fabio/EGI/resources/lang/en/validation.php)
[File 559]( /home/fabio/EGI/resources/lang/es/collection.php)
[File 560]( /home/fabio/EGI/resources/lang/es/errors.php)
[File 561]( /home/fabio/EGI/resources/lang/es/label.php)
[File 562]( /home/fabio/EGI/resources/lang/es/login.php)
[File 563]( /home/fabio/EGI/resources/lang/es/profile.php)
[File 564]( /home/fabio/EGI/resources/lang/es/side_nav_bar.php)
[File 565]( /home/fabio/EGI/resources/lang/es/traits.php)
[File 566]( /home/fabio/EGI/resources/lang/fr/collection.php)
[File 567]( /home/fabio/EGI/resources/lang/fr/errors.php)
[File 568]( /home/fabio/EGI/resources/lang/fr/label.php)
[File 569]( /home/fabio/EGI/resources/lang/fr/login.php)
[File 570]( /home/fabio/EGI/resources/lang/fr/profile.php)
[File 571]( /home/fabio/EGI/resources/lang/fr/side_nav_bar.php)
[File 572]( /home/fabio/EGI/resources/lang/fr/traits.php)
[File 573]( /home/fabio/EGI/resources/lang/it/collection.php)
[File 574]( /home/fabio/EGI/resources/lang/it/errors.php)
[File 575]( /home/fabio/EGI/resources/lang/it/label.php)
[File 576]( /home/fabio/EGI/resources/lang/it/login.php)
[File 577]( /home/fabio/EGI/resources/lang/it/notification.php)
[File 578]( /home/fabio/EGI/resources/lang/it/profile.php)
[File 579]( /home/fabio/EGI/resources/lang/it/side_nav_bar.php)
[File 580]( /home/fabio/EGI/resources/lang/it/traits.php)
[File 581]( /home/fabio/EGI/resources/lang/it/utilities.php)
[File 582]( /home/fabio/EGI/resources/lang/pt/collection.php)
[File 583]( /home/fabio/EGI/resources/lang/pt/errors.php)
[File 584]( /home/fabio/EGI/resources/lang/pt/label.php)
[File 585]( /home/fabio/EGI/resources/lang/pt/login.php)
[File 586]( /home/fabio/EGI/resources/lang/pt/profile.php)
[File 587]( /home/fabio/EGI/resources/lang/pt/side_nav_bar.php)
[File 588]( /home/fabio/EGI/resources/lang/pt/traits.php)
[File 589]( /home/fabio/EGI/resources/views/_welcome.blade.php)
[File 590]( /home/fabio/EGI/resources/views/admin/assign-permissions.blade.php)
[File 591]( /home/fabio/EGI/resources/views/admin/assign-role.blade.php)
[File 592]( /home/fabio/EGI/resources/views/admin/roles/create.blade.php)
[File 593]( /home/fabio/EGI/resources/views/admin/roles/edit.blade.php)
[File 594]( /home/fabio/EGI/resources/views/admin/roles/index.blade.php)
[File 595]( /home/fabio/EGI/resources/views/api/api-token-manager.blade.php)
[File 596]( /home/fabio/EGI/resources/views/api/index.blade.php)
[File 597]( /home/fabio/EGI/resources/views/auth/confirm-password.blade.php)
[File 598]( /home/fabio/EGI/resources/views/auth/forgot-password.blade.php)
[File 599]( /home/fabio/EGI/resources/views/auth/login.blade.php)
[File 600]( /home/fabio/EGI/resources/views/auth/register.blade.php)
[File 601]( /home/fabio/EGI/resources/views/auth/reset-password.blade.php)
[File 602]( /home/fabio/EGI/resources/views/auth/two-factor-challenge.blade.php)
[File 603]( /home/fabio/EGI/resources/views/auth/verify-email.blade.php)
[File 604]( /home/fabio/EGI/resources/views/components/action-message.blade.php)
[File 605]( /home/fabio/EGI/resources/views/components/action-section.blade.php)
[File 606]( /home/fabio/EGI/resources/views/components/application-logo.blade.php)
[File 607]( /home/fabio/EGI/resources/views/components/application-mark.blade.php)
[File 608]( /home/fabio/EGI/resources/views/components/auth-session-status.blade.php)
[File 609]( /home/fabio/EGI/resources/views/components/authentication-card-logo.blade.php)
[File 610]( /home/fabio/EGI/resources/views/components/authentication-card.blade.php)
[File 611]( /home/fabio/EGI/resources/views/components/back-button.blade.php)
[File 612]( /home/fabio/EGI/resources/views/components/banner.blade.php)
[File 613]( /home/fabio/EGI/resources/views/components/button.blade.php)
[File 614]( /home/fabio/EGI/resources/views/components/checkbox.blade.php)
[File 615]( /home/fabio/EGI/resources/views/components/collection-card.blade.php)
[File 616]( /home/fabio/EGI/resources/views/components/confirmation-modal.blade.php)
[File 617]( /home/fabio/EGI/resources/views/components/confirms-password.blade.php)
[File 618]( /home/fabio/EGI/resources/views/components/danger-button.blade.php)
[File 619]( /home/fabio/EGI/resources/views/components/dialog-modal.blade.php)
[File 620]( /home/fabio/EGI/resources/views/components/dropdown-link.blade.php)
[File 621]( /home/fabio/EGI/resources/views/components/dropdown.blade.php)
[File 622]( /home/fabio/EGI/resources/views/components/form-button.blade.php)
[File 623]( /home/fabio/EGI/resources/views/components/form-input-icon.blade.php)
[File 624]( /home/fabio/EGI/resources/views/components/form-input.blade.php)
[File 625]( /home/fabio/EGI/resources/views/components/form-section.blade.php)
[File 626]( /home/fabio/EGI/resources/views/components/form-select.blade.php)
[File 627]( /home/fabio/EGI/resources/views/components/icons/email.blade.php)
[File 628]( /home/fabio/EGI/resources/views/components/icons/help.blade.php)
[File 629]( /home/fabio/EGI/resources/views/components/icons/password.blade.php)
[File 630]( /home/fabio/EGI/resources/views/components/icons/search.blade.php)
[File 631]( /home/fabio/EGI/resources/views/components/icons/user.blade.php)
[File 632]( /home/fabio/EGI/resources/views/components/image-uploader.blade.php)
[File 633]( /home/fabio/EGI/resources/views/components/input-error.blade.php)
[File 634]( /home/fabio/EGI/resources/views/components/input.blade.php)
[File 635]( /home/fabio/EGI/resources/views/components/label.blade.php)
[File 636]( /home/fabio/EGI/resources/views/components/layouts/app.blade.php)
[File 637]( /home/fabio/EGI/resources/views/components/modal.blade.php)
[File 638]( /home/fabio/EGI/resources/views/components/nav-link.blade.php)
[File 639]( /home/fabio/EGI/resources/views/components/repo-icon.blade.php)
[File 640]( /home/fabio/EGI/resources/views/components/responsive-nav-link.blade.php)
[File 641]( /home/fabio/EGI/resources/views/components/secondary-button.blade.php)
[File 642]( /home/fabio/EGI/resources/views/components/section-border.blade.php)
[File 643]( /home/fabio/EGI/resources/views/components/section-title.blade.php)
[File 644]( /home/fabio/EGI/resources/views/components/separator.blade.php)
[File 645]( /home/fabio/EGI/resources/views/components/suggestion-icon.blade.php)
[File 646]( /home/fabio/EGI/resources/views/components/switchable-team.blade.php)
[File 647]( /home/fabio/EGI/resources/views/components/validation-errors.blade.php)
[File 648]( /home/fabio/EGI/resources/views/components/welcome.blade.php)
[File 649]( /home/fabio/EGI/resources/views/dashboard.blade.php)
[File 650]( /home/fabio/EGI/resources/views/emails/team-invitation.blade.php)
[File 651]( /home/fabio/EGI/resources/views/error.blade.php)
[File 652]( /home/fabio/EGI/resources/views/layouts/app.blade.php)
[File 653]( /home/fabio/EGI/resources/views/layouts/guest-welcome.blade.php)
[File 654]( /home/fabio/EGI/resources/views/layouts/guest.blade.php)
[File 655]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/back_to_collection_button.blade.php)
[File 656]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/data_section.blade.php)
[File 657]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/image_section.blade.php)
[File 658]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_avatar.blade.php)
[File 659]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_banner.blade.php)
[File 660]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_card.blade.php)
[File 661]( /home/fabio/EGI/resources/views/livewire/collection-manager-includes/wallets_section.blade.php)
[File 662]( /home/fabio/EGI/resources/views/livewire/collections/collection-carousel.blade.php)
[File 663]( /home/fabio/EGI/resources/views/livewire/collections/collection-manager.blade.php)
[File 664]( /home/fabio/EGI/resources/views/livewire/collections/collection-user.blade.php)
[File 665]( /home/fabio/EGI/resources/views/livewire/collections/create-collection.blade.php)
[File 666]( /home/fabio/EGI/resources/views/livewire/collections/edit-wallet-modal.blade.php)
[File 667]( /home/fabio/EGI/resources/views/livewire/collections/head-images-manager.blade.php)
[File 668]( /home/fabio/EGI/resources/views/livewire/collections/images/avatar-image-upload.blade.php)
[File 669]( /home/fabio/EGI/resources/views/livewire/collections/images/banner-image-upload.blade.php)
[File 670]( /home/fabio/EGI/resources/views/livewire/collections/images/card-image-upload.blade.php)
[File 671]( /home/fabio/EGI/resources/views/livewire/collections/images/egi-image-upload.blade.php)
[File 672]( /home/fabio/EGI/resources/views/livewire/collections/invite-user-to-collection-modal.blade.php)
[File 673]( /home/fabio/EGI/resources/views/livewire/collections/no-team.blade.php)
[File 674]( /home/fabio/EGI/resources/views/livewire/collections/open.blade.php)
[File 675]( /home/fabio/EGI/resources/views/livewire/collections/reject-modal.blade.php)
[File 676]( /home/fabio/EGI/resources/views/livewire/collections/show.blade.php)
[File 677]( /home/fabio/EGI/resources/views/livewire/dashboard.blade.php)
[File 678]( /home/fabio/EGI/resources/views/livewire/language-selector.blade.php)
[File 679]( /home/fabio/EGI/resources/views/livewire/layout/navigation.blade.php)
[File 680]( /home/fabio/EGI/resources/views/livewire/modale/collection_general_suggestion.blade.php)
[File 681]( /home/fabio/EGI/resources/views/livewire/modale/collection_image_suggestion.blade.php)
[File 682]( /home/fabio/EGI/resources/views/livewire/photo-uploader.blade.php)
[File 683]( /home/fabio/EGI/resources/views/livewire/proposals/decline-proposal-modal.blade.php)
[File 684]( /home/fabio/EGI/resources/views/livewire/sidebar.blade)
[File 685]( /home/fabio/EGI/resources/views/livewire/sidebar.blade)
[File 686]( /home/fabio/EGI/resources/views/livewire/sidebar.blade.php)
[File 687]( /home/fabio/EGI/resources/views/livewire/team-manager.blade.php)
[File 688]( /home/fabio/EGI/resources/views/livewire/welcome/auth-forms.blade.php)
[File 689]( /home/fabio/EGI/resources/views/navigation-menu.blade.php)
[File 690]( /home/fabio/EGI/resources/views/notifications/default.blade.php)
[File 691]( /home/fabio/EGI/resources/views/notifications/invitation.blade.php)
[File 692]( /home/fabio/EGI/resources/views/notifications/proposa-declined-notification.blade.php)
[File 693]( /home/fabio/EGI/resources/views/notifications/wallet-change-request.blade.php)
[File 694]( /home/fabio/EGI/resources/views/policy.blade.php)
[File 695]( /home/fabio/EGI/resources/views/profile/delete-user-form.blade.php)
[File 696]( /home/fabio/EGI/resources/views/profile/logout-other-browser-sessions-form.blade.php)
[File 697]( /home/fabio/EGI/resources/views/profile/show.blade.php)
[File 698]( /home/fabio/EGI/resources/views/profile/two-factor-authentication-form.blade.php)
[File 699]( /home/fabio/EGI/resources/views/profile/update-password-form.blade.php)
[File 700]( /home/fabio/EGI/resources/views/profile/update-profile-information-form.blade.php)
[File 701]( /home/fabio/EGI/resources/views/teams/create-team-form.blade.php)
[File 702]( /home/fabio/EGI/resources/views/teams/create.blade.php)
[File 703]( /home/fabio/EGI/resources/views/teams/delete-team-form.blade.php)
[File 704]( /home/fabio/EGI/resources/views/teams/show.blade.php)
[File 705]( /home/fabio/EGI/resources/views/teams/team-member-manager.blade.php)
[File 706]( /home/fabio/EGI/resources/views/teams/update-team-name-form.blade.php)
[File 707]( /home/fabio/EGI/resources/views/terms.blade.php)
[File 708]( /home/fabio/EGI/resources/views/welcome.blade.php)
[File 709]( /home/fabio/EGI/routes/api.php)
[File 710]( /home/fabio/EGI/routes/console.php)
[File 711]( /home/fabio/EGI/routes/web.php)
[File 712]( /home/fabio/EGI/tests/Feature/ApiTokenPermissionsTest.php)
[File 713]( /home/fabio/EGI/tests/Feature/AuthenticationTest.php)
[File 714]( /home/fabio/EGI/tests/Feature/BrowserSessionsTest.php)
[File 715]( /home/fabio/EGI/tests/Feature/CreateApiTokenTest.php)
[File 716]( /home/fabio/EGI/tests/Feature/CreateTeamTest.php)
[File 717]( /home/fabio/EGI/tests/Feature/DeleteAccountTest.php)
[File 718]( /home/fabio/EGI/tests/Feature/DeleteApiTokenTest.php)
[File 719]( /home/fabio/EGI/tests/Feature/DeleteTeamTest.php)
[File 720]( /home/fabio/EGI/tests/Feature/EmailVerificationTest.php)
[File 721]( /home/fabio/EGI/tests/Feature/ExampleTest.php)
[File 722]( /home/fabio/EGI/tests/Feature/InviteTeamMemberTest.php)
[File 723]( /home/fabio/EGI/tests/Feature/LeaveTeamTest.php)
[File 724]( /home/fabio/EGI/tests/Feature/PasswordConfirmationTest.php)
[File 725]( /home/fabio/EGI/tests/Feature/PasswordResetTest.php)
[File 726]( /home/fabio/EGI/tests/Feature/ProfileInformationTest.php)
[File 727]( /home/fabio/EGI/tests/Feature/RegistrationTest.php)
[File 728]( /home/fabio/EGI/tests/Feature/RemoveTeamMemberTest.php)
[File 729]( /home/fabio/EGI/tests/Feature/TwoFactorAuthenticationSettingsTest.php)
[File 730]( /home/fabio/EGI/tests/Feature/UpdatePasswordTest.php)
[File 731]( /home/fabio/EGI/tests/Feature/UpdateTeamMemberRoleTest.php)
[File 732]( /home/fabio/EGI/tests/Feature/UpdateTeamNameTest.php)
[File 733]( /home/fabio/EGI/tests/TestCase.php)
[File 734]( /home/fabio/EGI/tests/Unit/ExampleTest.php)

### Fine Indice ###


#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/CreateNewUser.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use App\Models\Collection;
use App\Traits\HasCreateDefaultCollectionWallets;
use App\Traits\HasUtilitys;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\CreatesNewUsers;
use Spatie\Permission\Models\Role;

class CreateNewUser implements CreatesNewUsers
{
    use PasswordValidationRules;
    use HasCreateDefaultCollectionWallets;
    use HasUtilitys;


    /**
     * Crea un nuovo utente registrato.
     *
     * @param  array<string, string>  $input
     */
    public function create(array $input): User
    {
        Log::channel('florenceegi')->info('Classe: CreateNewUser Metodo create: INIZIO', ['input' => $input]);

        // Validazione dell'input
        $this->validateInput($input);

        // Generazione dei dettagli del wallet
        [$wallet_address, $wallet_balance] = $this->generateWalletDetails();

        // Creazione dell'utente e delle risorse collegate
        return $this->handleUserCreation($input, $wallet_address, $wallet_balance);
    }

    private function validateInput(array $input): void
    {
        try {
            Validator::make($input, [
                'name' => ['required', 'string', 'max:255'],
                'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
                'password' => $this->passwordRules(),
            ])->validate();

            Log::channel('florenceegi')->info('Classe: CreateNewUser Metodo validateInput: VALIDAZIONE OK');
        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->error('Errore di validazione', ['errors' => $e->errors()]);
            throw $e;
        }
    }

    private function generateWalletDetails(): array
    {
        $wallet_address = $this->generateFakeAlgorandAddress();
        Log::channel('florenceegi')->info('Generato wallet address', ['wallet_address' => $wallet_address]);

        $wallet_balance = config('app.virtual_wallet_balance');
        Log::channel('florenceegi')->info('Generato wallet balance', ['wallet_balance' => $wallet_balance]);

        return [$wallet_address, $wallet_balance];
    }

    private function handleUserCreation(array $input, string $wallet_address, float $wallet_balance): User
    {
        return DB::transaction(function () use ($input, $wallet_address, $wallet_balance) {
            return tap(User::create([
                'name' => $input['name'],
                'email' => $input['email'],
                'wallet' => $wallet_address,
                'wallet_balance' => $wallet_balance,
                'language' => app()->getLocale(),
                'password' => Hash::make($input['password']),
            ]), function (User $user) {
                Log::channel('florenceegi')->info('Utente creato con successo', ['user_id' => $user->id]);

                // Crea la collection e i wallet predefiniti
                $this->createDefaultCollection($user);
            });
        });
    }

    /**
     * Crea una collection predefinita per l'utente.
     */
    protected function createDefaultCollection(User $user): void
    {
        tap(Collection::create([
            'user_id' => $user->id,
            'epp_id' => config('app.epp_id'),
            'collection_name' => explode(' ', $user->name, 2)[0] . "'s Collection",
            'description' => __('collection.default_description'),
            'creator_id' => $user->id,
            'type' => 'standard',
            'position' => 1,
            'EGI_number' => 1,
            'floor_price' => 0.0,
            'is_published' => false,
        ]), function (Collection $collection) use ($user) {
            Log::channel('florenceegi')->info('Collection creata con successo', ['collection_id' => $collection->id]);

            // Associa l'utente alla collection nella tabella pivot collection_user
            $collection->users()->attach($user->id, ['role' => 'creator']);

            // Crea i wallet predefiniti per la collection
            $this->attachDefaultWallets($collection, $user);

            // Assegna il ruolo di creator all'utente
            $this->assignCreatorRole($user->id);
        });
    }

    public function assignCreatorRole(int $userId)
    {
        $user = User::find($userId);

        if (!$user) {
            Log::channel('florenceegi')->error('Utente non trovato durante l\'assegnazione del ruolo', ['user_id' => $userId]);
            return;
        }

        $creatorRole = Role::firstOrCreate(['name' => 'creator']);

        if (!$user->hasRole('creator')) {
            $user->assignRole($creatorRole);
            Log::channel('florenceegi')->info('Assegnato ruolo creator all\'utente', ['user_id' => $userId]);
        }
    }

    /**
     * Crea i wallet predefiniti per la collection.
     */
    protected function attachDefaultWallets(Collection $collection, User $user): void
    {
        $defaultWallets = [
            ['user_id' => $user->id, 'wallet' => $user->wallet, 'royalty_mint' => 50.0, 'royalty_rebind' => 10.0], // Wallet Creator
            ['user_id' => config('app.natan_id'), 'wallet' => config('app.natan_wallet_address'), 'royalty_mint' => 25.0, 'royalty_rebind' => 5.0], // Wallet Natan
            ['user_id' => config('app.epp_id'), 'wallet' => config('app.epp_wallet_address'), 'royalty_mint' => 25.0, 'royalty_rebind' => 5.0], // Wallet EPP
        ];

        foreach ($defaultWallets as $wallet) {
            $collection->wallets()->create($wallet);
        }

        Log::channel('florenceegi')->info('Wallet predefiniti associati alla collection', ['collection_id' => $collection->id]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/PasswordValidationRules.php ####

<?php

namespace App\Actions\Fortify;

use Illuminate\Validation\Rules\Password;

trait PasswordValidationRules
{
    /**
     * Get the validation rules used to validate passwords.
     *
     * @return array<int, \Illuminate\Contracts\Validation\Rule|array<mixed>|string>
     */
    protected function passwordRules(): array
    {
        return ['required', 'string', Password::default(), 'confirmed'];
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/ResetUserPassword.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\ResetsUserPasswords;

class ResetUserPassword implements ResetsUserPasswords
{
    use PasswordValidationRules;

    /**
     * Validate and reset the user's forgotten password.
     *
     * @param  array<string, string>  $input
     */
    public function reset(User $user, array $input): void
    {
        Validator::make($input, [
            'password' => $this->passwordRules(),
        ])->validate();

        $user->forceFill([
            'password' => Hash::make($input['password']),
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/UpdateUserPassword.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\UpdatesUserPasswords;

class UpdateUserPassword implements UpdatesUserPasswords
{
    use PasswordValidationRules;

    /**
     * Validate and update the user's password.
     *
     * @param  array<string, string>  $input
     */
    public function update(User $user, array $input): void
    {
        Validator::make($input, [
            'current_password' => ['required', 'string', 'current_password:web'],
            'password' => $this->passwordRules(),
        ], [
            'current_password.current_password' => __('The provided password does not match your current password.'),
        ])->validateWithBag('updatePassword');

        $user->forceFill([
            'password' => Hash::make($input['password']),
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/UpdateUserProfileInformation.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\Rule;
use Laravel\Fortify\Contracts\UpdatesUserProfileInformation;

class UpdateUserProfileInformation implements UpdatesUserProfileInformation
{
    /**
     * Validate and update the given user's profile information.
     *
     * @param  array<string, mixed>  $input
     */
    public function update(User $user, array $input): void
    {
        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'email', 'max:255', Rule::unique('users')->ignore($user->id)],
            'photo' => ['nullable', 'mimes:jpg,jpeg,png', 'max:1024'],
        ])->validateWithBag('updateProfileInformation');

        if (isset($input['photo'])) {
            $user->updateProfilePhoto($input['photo']);
        }

        if ($input['email'] !== $user->email &&
            $user instanceof MustVerifyEmail) {
            $this->updateVerifiedUser($user, $input);
        } else {
            $user->forceFill([
                'name' => $input['name'],
                'email' => $input['email'],
            ])->save();
        }
    }

    /**
     * Update the given verified user's profile information.
     *
     * @param  array<string, string>  $input
     */
    protected function updateVerifiedUser(User $user, array $input): void
    {
        $user->forceFill([
            'name' => $input['name'],
            'email' => $input['email'],
            'email_verified_at' => null,
        ])->save();

        $user->sendEmailVerificationNotification();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/AddTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Closure;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\AddsTeamMembers;
use Laravel\Jetstream\Events\AddingTeamMember;
use Laravel\Jetstream\Events\TeamMemberAdded;
use Laravel\Jetstream\Jetstream;
use Laravel\Jetstream\Rules\Role;

class AddTeamMember implements AddsTeamMembers
{
    /**
     * Add a new team member to the given team.
     */
    public function add(User $user, Team $team, string $email, ?string $role = null): void
    {
        Gate::forUser($user)->authorize('addTeamMember', $team);

        $this->validate($team, $email, $role);

        $newTeamMember = Jetstream::findUserByEmailOrFail($email);

        AddingTeamMember::dispatch($team, $newTeamMember);

        $team->users()->attach(
            $newTeamMember, ['role' => $role]
        );

        TeamMemberAdded::dispatch($team, $newTeamMember);
    }

    /**
     * Validate the add member operation.
     */
    protected function validate(Team $team, string $email, ?string $role): void
    {
        Validator::make([
            'email' => $email,
            'role' => $role,
        ], $this->rules(), [
            'email.exists' => __('We were unable to find a registered user with this email address.'),
        ])->after(
            $this->ensureUserIsNotAlreadyOnTeam($team, $email)
        )->validateWithBag('addTeamMember');
    }

    /**
     * Get the validation rules for adding a team member.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    protected function rules(): array
    {
        return array_filter([
            'email' => ['required', 'email', 'exists:users'],
            'role' => Jetstream::hasRoles()
                            ? ['required', 'string', new Role]
                            : null,
        ]);
    }

    /**
     * Ensure that the user is not already on the team.
     */
    protected function ensureUserIsNotAlreadyOnTeam(Team $team, string $email): Closure
    {
        return function ($validator) use ($team, $email) {
            $validator->errors()->addIf(
                $team->hasUserWithEmail($email),
                'email',
                __('This user already belongs to the team.')
            );
        };
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/CreateTeam.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\CreatesTeams;
use Laravel\Jetstream\Events\AddingTeam;
use Laravel\Jetstream\Jetstream;

class CreateTeam implements CreatesTeams
{
    /**
     * Validate and create a new team for the given user.
     *
     * @param  array<string, string>  $input
     */
    public function create(User $user, array $input): Team
    {
        Gate::forUser($user)->authorize('create', Jetstream::newTeamModel());

        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
        ])->validateWithBag('createTeam');

        AddingTeam::dispatch($user);

        $user->switchTeam($team = $user->ownedTeams()->create([
            'name' => $input['name'],
            'personal_team' => false,
        ]));

        return $team;
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/DeleteTeam.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use Laravel\Jetstream\Contracts\DeletesTeams;

class DeleteTeam implements DeletesTeams
{
    /**
     * Delete the given team.
     */
    public function delete(Team $team): void
    {
        $team->purge();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/DeleteUser.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\DB;
use Laravel\Jetstream\Contracts\DeletesTeams;
use Laravel\Jetstream\Contracts\DeletesUsers;

class DeleteUser implements DeletesUsers
{
    /**
     * Create a new action instance.
     */
    public function __construct(protected DeletesTeams $deletesTeams)
    {
    }

    /**
     * Delete the given user.
     */
    public function delete(User $user): void
    {
        DB::transaction(function () use ($user) {
            $this->deleteTeams($user);
            $user->deleteProfilePhoto();
            $user->tokens->each->delete();
            $user->delete();
        });
    }

    /**
     * Delete the teams and team associations attached to the user.
     */
    protected function deleteTeams(User $user): void
    {
        $user->teams()->detach();

        $user->ownedTeams->each(function (Team $team) {
            $this->deletesTeams->delete($team);
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/InviteTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Closure;
use Illuminate\Database\Query\Builder;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\Rule;
use Laravel\Jetstream\Contracts\InvitesTeamMembers;
use Laravel\Jetstream\Events\InvitingTeamMember;
use Laravel\Jetstream\Jetstream;
use Laravel\Jetstream\Mail\TeamInvitation;
use Laravel\Jetstream\Rules\Role;

class InviteTeamMember implements InvitesTeamMembers
{
    /**
     * Invite a new team member to the given team.
     */
    public function invite(User $user, Team $team, string $email, ?string $role = null): void
    {
        Gate::forUser($user)->authorize('addTeamMember', $team);

        $this->validate($team, $email, $role);

        InvitingTeamMember::dispatch($team, $email, $role);

        $invitation = $team->teamInvitations()->create([
            'email' => $email,
            'role' => $role,
        ]);

        Mail::to($email)->send(new TeamInvitation($invitation));
    }

    /**
     * Validate the invite member operation.
     */
    protected function validate(Team $team, string $email, ?string $role): void
    {
        Validator::make([
            'email' => $email,
            'role' => $role,
        ], $this->rules($team), [
            'email.unique' => __('This user has already been invited to the team.'),
        ])->after(
            $this->ensureUserIsNotAlreadyOnTeam($team, $email)
        )->validateWithBag('addTeamMember');
    }

    /**
     * Get the validation rules for inviting a team member.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    protected function rules(Team $team): array
    {
        return array_filter([
            'email' => [
                'required', 'email',
                Rule::unique(Jetstream::teamInvitationModel())->where(function (Builder $query) use ($team) {
                    $query->where('team_id', $team->id);
                }),
            ],
            'role' => Jetstream::hasRoles()
                            ? ['required', 'string', new Role]
                            : null,
        ]);
    }

    /**
     * Ensure that the user is not already on the team.
     */
    protected function ensureUserIsNotAlreadyOnTeam(Team $team, string $email): Closure
    {
        return function ($validator) use ($team, $email) {
            $validator->errors()->addIf(
                $team->hasUserWithEmail($email),
                'email',
                __('This user already belongs to the team.')
            );
        };
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/RemoveTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Support\Facades\Gate;
use Illuminate\Validation\ValidationException;
use Laravel\Jetstream\Contracts\RemovesTeamMembers;
use Laravel\Jetstream\Events\TeamMemberRemoved;

class RemoveTeamMember implements RemovesTeamMembers
{
    /**
     * Remove the team member from the given team.
     */
    public function remove(User $user, Team $team, User $teamMember): void
    {
        $this->authorize($user, $team, $teamMember);

        $this->ensureUserDoesNotOwnTeam($teamMember, $team);

        $team->removeUser($teamMember);

        TeamMemberRemoved::dispatch($team, $teamMember);
    }

    /**
     * Authorize that the user can remove the team member.
     */
    protected function authorize(User $user, Team $team, User $teamMember): void
    {
        if (! Gate::forUser($user)->check('removeTeamMember', $team) &&
            $user->id !== $teamMember->id) {
            throw new AuthorizationException;
        }
    }

    /**
     * Ensure that the currently authenticated user does not own the team.
     */
    protected function ensureUserDoesNotOwnTeam(User $teamMember, Team $team): void
    {
        if ($teamMember->id === $team->owner->id) {
            throw ValidationException::withMessages([
                'team' => [__('You may not leave a team that you created.')],
            ])->errorBag('removeTeamMember');
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/UpdateTeamName.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\UpdatesTeamNames;

class UpdateTeamName implements UpdatesTeamNames
{
    /**
     * Validate and update the given team's name.
     *
     * @param  array<string, string>  $input
     */
    public function update(User $user, Team $team, array $input): void
    {
        Gate::forUser($user)->authorize('update', $team);

        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
        ])->validateWithBag('updateTeamName');

        $team->forceFill([
            'name' => $input['name'],
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Casts/EGIImageCast.php ####

<?php

namespace App\Casts;

use App\Services\EGIImageService;
use Illuminate\Contracts\Database\Eloquent\CastsAttributes;
use Illuminate\Database\Eloquent\Model;

/**
 * Class EGIImageCast
 *
 * Custom cast to transform image filenames into full URLs using EGIImageService.
 */
class EGIImageCast implements CastsAttributes
{
    /**
     * Cast the given value to an image URL.
     *
     * @param  Model  $model
     * @param  string $key
     * @param  mixed  $value
     * @param  array  $attributes
     * @return string|null
     */
    public function get($model, string $key, $value, array $attributes)
    {
        if (!$value) {
            return null;
        }

        // Determine the path key based on the field name.
        $pathKey = match ($key) {
            'image_banner' => 'head.banner',
            'image_card'   => 'head.card',
            'image_avatar' => 'head.avatar',
            'image_EGI'    => 'head.EGI_asset',
            default        => 'head.root',
        };

        // Retrieve the image URL using EGIImageService.
        return EGIImageService::getCachedEGIImagePath(
            $model->id,
            $value,
            $model->is_published,
            null,
            $pathKey
        );
    }

    /**
     * Prepare the given value for storage (no transformation).
     *
     * @param  Model  $model
     * @param  string $key
     * @param  mixed  $value
     * @param  array  $attributes
     * @return mixed
     */
    public function set($model, string $key, $value, array $attributes)
    {
        // Return the value as is for storage.
        return $value;
    }
}

#### Inizio File: /home/fabio/EGI/app/Contracts/NotificationHandlerInterface.php ####

<?php

namespace App\Contracts;

use Illuminate\Notifications\DatabaseNotification;

interface NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action);
}

#### Inizio File: /home/fabio/EGI/app/Contracts/ProposalHandlerInterface.php ####

<?php

namespace App\Contracts;

interface ProposalHandlerInterface
{
    /**
     * Gestisce il declino di una proposta.
     *
     * @param int $proposalId
     * @param string $reason
     * @return void
     */
    public function decline(int $proposalId, string $reason): void;
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/Admin/RoleController.php ####

<?php

declare(strict_types=1);

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Redirect;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;

class RoleController extends Controller
{
    public function __construct()
    {
        // Sposta il middleware nella definizione delle rotte
    }

    public function index(): View
    {

        $roles = Role::with('permissions')->get();
        Log::info('Roles: ' . $roles);
        return view('admin.roles.index', compact('roles'));
    }

    public function create(): View
    {
        $permissions = Permission::all();
        return view('admin.roles.create', compact('permissions'));
    }

    public function store(Request $request): RedirectResponse
    {
        $validated = $request->validate([
            'name' => ['required', 'string', 'max:255', 'unique:roles'],
            'permissions' => ['required', 'array'],
            'permissions.*' => ['exists:permissions,id'],
        ]);

        $role = Role::create(['name' => $validated['name']]);

        $permissionNames = $this->getPermissionNames($validated['permissions']);
        $role->syncPermissions($permissionNames);

        return Redirect::route('admin.roles.index')
            ->with('success', 'Role created successfully.');
    }

    public function edit(Role $role): View
    {
        $permissions = Permission::all();
        return view('admin.roles.edit', compact('role', 'permissions'));
    }

    public function update(Request $request, Role $role): RedirectResponse
    {
        $validated = $request->validate([
            'name' => ['required', 'string', 'max:255', 'unique:roles,name,' . $role->id],
            'permissions' => ['required', 'array'],
            'permissions.*' => ['exists:permissions,id'],
        ]);

        $role->update(['name' => $validated['name']]);

        $permissionNames = $this->getPermissionNames($validated['permissions']);
        $role->syncPermissions($permissionNames);

        return Redirect::route('admin.roles.index')
            ->with('success', 'Role updated successfully.');
    }

    protected function getPermissionNames(array $ids): array
    {
        return Permission::whereIn('id', $ids)->pluck('name')->toArray();
    }

    public function showAssignRoleForm()
    {
        $roles = Role::all(); // Recupera tutti i ruoli dalla tabella `roles`
        return view('admin.assign-role', compact('roles'));
    }

    public function showAssignPermissionsForm()
    {
        $permissions = Permission::all(); // Recupera tutti i permessi
        return view('admin.assign-permissions', compact('permissions'));
    }

    public function assignRole(Request $request)
    {
        $request->validate([
            'email' => 'required|email|exists:users,email',
            'role' => 'required|exists:roles,name',
        ]);

        $user = User::where('email', $request->email)->firstOrFail();
        $role = $request->role;


        // Assegna il ruolo all'utente
        $user->assignRole($role);

        Log::info('Ruolo assegnato: ' . $role . ' a ' . $user->email);

        return redirect()->back()->with('success', 'Ruolo assegnato correttamente!');
    }

    public function assignPermissions(Request $request)
    {
        $request->validate([
            'email' => 'required|email|exists:users,email',
            'permissions' => 'required|array',
            'permissions.*' => 'exists:permissions,name',
        ]);

        $user = User::where('email', $request->email)->firstOrFail();
        $permissions = $request->permissions;

        // Assegna i permessi selezionati all'utente
        $user->syncPermissions($permissions);

        return redirect()->back()->with('success', 'Permessi assegnati correttamente!');
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/Controller.php ####

<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/DropController.php ####

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class DropController extends Controller
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/IconAdminController.php ####

<?php


namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Icon;

class IconAdminController extends Controller
{

    public function __construct()
    {
        $this->middleware('can:manage_icons');
    }

    public function index()
    {
        $icons = Icon::all();
        return view('admin.icons.index', compact('icons'));
    }

    public function edit(Icon $icon)
    {
        return view('admin.icons.edit', compact('icon'));
    }

    public function update(Request $request, Icon $icon)
    {
        $request->validate([
            'html' => 'required|string',
        ]);

        $icon->update([
            'html' => $request->svg,
        ]);

        return redirect()->route('admin.icons.index')->with('status', 'Icon updated successfully!');
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/WalletController.php ####

<?php

namespace App\Http\Controllers;

use App\Models\TeamWallet;
use Illuminate\Http\Request;

class WalletController extends Controller
{
    public function edit(TeamWallet $wallet)
{
    $this->authorize('update', $wallet);
    return view('wallets.edit', compact('wallet'));
}
}

#### Inizio File: /home/fabio/EGI/app/Http/Kernel.php ####

<?php

namespace App\Http;

use App\Http\Middleware\CheckTeamPermission;
use App\Http\Middleware\SetLanguage;
use Illuminate\Foundation\Http\Kernel as HttpKernel;
use Spatie\Permission\Middleware\RoleOrPermissionMiddleware;

class Kernel extends HttpKernel
{
    /**
     * The application's route middleware.
     *
     * These middleware may be assigned to groups or used individually.
     *
     * @var array
     */
    protected $routeMiddleware = [
        // ... altri middleware
        // 'team' => CheckTeamPermission::class,
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array
     */
    protected $middlewareGroups = [
        // 'web' => [
        //     // ... altri middleware
        //     // \App\Http\Middleware\DisableCache::class,
        //     SetLanguage::class,
        //     RoleOrPermissionMiddleware::class, // Assicurati che questo sia presente
        // ],
    ];

}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/AddViewDebugInfo.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class AddViewDebugInfo
{
    public function handle(Request $request, Closure $next): Response
    {
        $response = $next($request);

        if (!app()->environment('production') &&
            $response instanceof Response &&
            str_contains($response->headers->get('content-type') ?? '', 'text/html')
        ) {
            $content = $response->getContent();

            // Aggiungi uno script per mostrare il path nella console del browser
            $debugScript = sprintf('
                <script>
                    console.group("🔍 View Debug Info");
                    console.log(
                        "Current Route: %s",
                        "%s"
                    );
                    console.log(
                        "Current View: %s",
                        "%s"
                    );
                    console.groupEnd();
                </script>
            ',
                request()->route()?->getName() ?? request()->path(),
                request()->url(),
                view()->shared('__current_view_path', 'Unknown View'),
                request()->route()?->getActionName() ?? 'Unknown Action'
            );

            // Inserisci lo script prima della chiusura del body
            $content = preg_replace('/<\/body>/', $debugScript . '</body>', $content, 1);
            $response->setContent($content);
        }

        return $response;
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/CheckCollectionPermission.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Spatie\Permission\Models\Role;

class CheckCollectionPermission
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @param  string|null  $permission
     * @return mixed
     */
    public function handle(Request $request, Closure $next, $permission = null)
    {
        // Recupera l'utente autenticato
        $user = Auth::user();

        Log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'user_id' => $user->id,
            'permission' => $permission,
            'user_name' => $user->name,
        ]);

        // Verifica se la rotta è 'collections.open'
        $rotta = $request->route()->getName();

        if ($rotta === 'collections.open') {
            // Trova tutte le collection associate all'utente tramite collection_user
            $collections = Collection::whereHas('users', function ($query) use ($user) {
                $query->where('user_id', $user->id);
            })->get();

            // Se esiste una sola collection, usala per il controllo
            if ($collections->count() === 1) {
                $collection = $collections->first();
            } else {
                // Se ci sono più collection, consenti l'accesso per il selettore/carousel
                return $next($request);
            }
        } else {
            // Recupera l'ID della collection dalla richiesta per le altre rotte
            $collectionId = $request->route('id') ?? $request->route('collection');
            $collection = Collection::find($collectionId);

            // Se la collection non esiste, restituisci un errore 404
            if (!$collection) {
                abort(404, 'Collection non trovata.');
            }
        }

        // Verifica se l'utente è membro della collection tramite collection_user
        $membership = $collection->users()->where('user_id', $user->id)->first();

        if (!$membership) {
            abort(403, 'Non sei un membro della collection associata.');
        }

        // Recupera il ruolo dell'utente nella collection
        $roleName = $membership->pivot->role;

        Log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'collection_id' => $collection->id,
            'role_name' => $roleName,
        ]);

        // Verifica se il ruolo esiste in Spatie
        $role = Role::where('name', $roleName)->first();
        log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'role' => $role,
        ]);

        if (!$role) {
            abort(403, 'Ruolo non valido.');
        }

        // Verifica se il ruolo ha il permesso richiesto
        if ($permission && !$role->hasPermissionTo($permission)) {
            abort(403, 'Non hai i permessi necessari per eseguire questa azione.');
        }

        return $next($request);
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/DisableCache.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;

class DisableCache
{
    public function handle(Request $request, Closure $next)
    {
        $response = $next($request);
        $response->headers->set('Cache-Control', 'no-cache, no-store, must-revalidate');
        $response->headers->set('Pragma', 'no-cache');
        $response->headers->set('Expires', '0');
        return $response;
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/EncryptCookies.php ####

<?php

namespace App\Http\Middleware;

use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;

class EncryptCookies extends Middleware
{
    /**
     * The names of the cookies that should not be encrypted.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/SetLanguage.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;

class SetLanguage
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next
     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse
     */
    public function handle(Request $request, Closure $next)
    {
        // 1) Verifica se l'utente è autenticato e ha un valore 'language' nel DB

        // Log::channel('florenceegi')->info('USER: '.Auth::user());
        // Log::channel('florenceegi')->info('LINGUA CORRENTE DA DB: '.Auth::user()->language);

        if (Auth::user() && Auth::user()->language) {
            $modalita = 'DB';
            $lang = trim(Auth::user()->language);
            App::setLocale($lang);

            // 2) Se l'utente non è autenticato o non ha una lingua impostata, verifica il cookie 'language'
        } elseif (Cookie::has('language')) {
            $modalita = 'COOKIE';
            $lang = trim(Cookie::get('language'));
            App::setLocale($lang);
            // 3) Se nessuna delle opzioni precedenti è disponibile, usa la lingua predefinita dal file di configurazione
        } else {
            $modalita = 'CONFIG';
            $lang = trim(config('app.locale'));
            App::setLocale($lang);
        }

        session(['language__'.$modalita => App::getLocale()]);
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.$modalita.' '.$lang);

        return $next($request);
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/SetLocale.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;

class SetLocale
{
    public function handle(Request $request, Closure $next)
    {
        // Prendi la lingua dall'utente autenticato o dalla sessione o usa quella di default
        $locale = Auth::check() && Auth::user()->language
            ? Auth::user()->language
            : session('locale', config('app.locale'));

        // Verifica che la lingua sia tra quelle supportate
        if (in_array($locale, config('app.languages'))) {
            App::setLocale($locale);
        }

        return $next($request);
    }
} 

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/VerifyCsrfToken.php ####

<?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;

class VerifyCsrfToken extends Middleware
{
    /**
     * The URIs that should be excluded from CSRF verification.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

#### Inizio File: /home/fabio/EGI/app/Http/Resources/CollectionResource.php ####

<?php

namespace App\Http\Resources;

use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;

class CollectionResource extends JsonResource
{
    /**
     * Trasforma la risorsa in un array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function toArray($request)
    {
        return [
            'id' => $this->id,
            'creator_id' => $this->creator_id,
            'owner_id' => $this->owner_id,
            'epp_id' => $this->epp_id,
            'type' => $this->type,
            'is_published' => $this->is_published,
            'collection_name' => $this->collection_name,
            'position' => $this->position,
            'EGI_number' => $this->EGI_number,
            'floor_price' => $this->floor_price,
            'description' => $this->description,
            'url_collection_site' => $this->url_collection_site,
            'image_banner' => $this->path_image_banner,
            'image_card' => $this->path_image_card,
            'image_avatar' => $this->path_image_avatar,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionCarousel.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\Collection;
use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class CollectionCarousel extends Component
{
    public $collections;
    public $activeSlide = 0;
    protected $iconRepository;

    public function boot(IconRepository $iconRepository)
    {
        $this->iconRepository = $iconRepository;
    }

    public function mount()
    {

        $team_id = Auth::user()->currentTeam->id;
        $this->collections = Collection::where('team_id', $team_id)->get();

        Log::channel('florenceegi')->info('Collections for team', [
            'team_id' => $team_id,
            'collections' => $this->collections,
        ]);

    }

    public function nextSlide()
    {
        $this->activeSlide = ($this->activeSlide + 1) % count($this->collections);
    }

    public function prevSlide()
    {
        $this->activeSlide = ($this->activeSlide - 1 + count($this->collections)) % count($this->collections);
    }

    public function edit($id)
    {
        // Implementa la logica per modificare la collezione
    }

    public function delete($id)
    {
        // Implementa la logica per eliminare la collezione
    }

    public function render()
    {
        $iconHtml = $this->iconRepository->getIcon('camera', 'elegant', '');
        return view('livewire.collections.collection-carousel', compact('iconHtml'));
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionEdit.php ####

<?php

namespace App\Livewire\Collections;

use App\Helpers\FileHelper;
use App\Livewire\Traits\HandlesCollectionUpdate;
use App\Models\Collection;
use App\Models\Team;
use App\Models\TeamUser;
use Livewire\Component;
use Livewire\WithFileUploads;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Illuminate\Support\Facades\Auth;
use Livewire\Attributes\Validate;
use App\Traits\SaveCollectionTraits;


/**
 * Class CollectionEdit
 * @package App\Livewire\Collections
 * NOTA BENE: il metodo Save è all'interno del trait SaveCollectionTraits
 */

class CollectionEdit extends Component
{
    use WithFileUploads, SaveCollectionTraits;

    #[Validate('required|string|max:255')]
    public $collection_name;

    #[Validate('required|string')]
    public $type;

    #[Validate('nullable|integer')]
    public $position;

    #[Validate('nullable|integer')]
    public $EGI_number;

    #[Validate('nullable|numeric')]
    public $floor_price;

    #[Validate('nullable|string')]
    public $description;

    #[Validate('nullable|string')]
    public $url_collection_site;

    #[Validate('nullable|boolean')]
    public $is_published;

    public $collections;

    public $collection =[];

    public $model_collection = null;

    public $log;

    public $collectionId;

    public $teamUsers;

    public $teamId;

    public function mount($id = null)
    {

        $this->collectionId = $id;
        $collection = Collection::findOrFail($this->collectionId);

        Log::channel('florenceegi')->info('CollectionEdit:mount', ['collection' => $collection]);

        $this->collection_name = $collection->collection_name;
        $this->type = $collection->type;
        $this->position = $collection->position;
        $this->EGI_number = $collection->EGI_number;
        $this->floor_price = $collection->floor_price;
        $this->description = $collection->description;
        $this->url_collection_site = $collection->url_collection_site;
        $this->is_published = $collection->is_published;

    }

    public function render()
    {
        return view('livewire.collections.collection-manager', [
            'userId' => Auth::id(),
            'collectionId' => $this->collectionId,
        ]);
    }

}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionOpen.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\Validate;
use Livewire\Component;
use Livewire\Features\SupportFileUploads\WithFileUploads;
use App\Traits\SaveCollectionTraits;

/**
 * Class CollectionEdit
 * @package App\Livewire\Collections
 * NOTA BENE: il metodo Save è all'interno del trait SaveCollectionTraits
 */

class CollectionOpen extends Component
{
    use WithFileUploads, SaveCollectionTraits; // Usa il nuovo trait

    #[Validate('required|string|max:255')]
    public $collection_name;

    #[Validate('required|string')]
    public $type;

    #[Validate('nullable|integer')]
    public $position;

    #[Validate('nullable|integer')]
    public $EGI_number;

    #[Validate('nullable|numeric')]
    public $floor_price;

    #[Validate('nullable|string')]
    public $description;

    #[Validate('nullable|string')]
    public $url_collection_site;

    #[Validate('nullable|boolean')]
    public $is_published;

    public $activeSlide = 0;
    public $collections;
    public $collection;
    public $noCollectionMessage = 'Non ci sono collection disponibili.';
    protected $iconRepository;
    protected $user;

    public $collectionId;

    public function boot(IconRepository $iconRepository)
    {
        $this->iconRepository = $iconRepository;
    }

    public function mount()
    {

        $this->collections = collect(); // Inizializza come una Collection vuota
        $this->loadCollections();

    }

    public function loadCollections()
    {
        // Recupera l'utente autenticato
        $this->user = Auth::user();

        $user = $this->user; // Nella callback non si puù usare $this

        // Recupera tutte le collection associate all'utente
        $this->collections = Collection::whereHas('users', function ($query) use ($user) {
            $query->where('user_id', $user->id);
        })->get();

        // Verifica se c'è una sola collection
        if ($this->collections->count() === 1) {

            Log::channel('florenceegi')->info('CollectionEdit:mount', ['collection' => $this->collection]);

            $this->collection = $this->collections->first();

        }
    }

    public function render()
    {

        Log::channel('florenceegi')->info('CollectionOpen', [
            'collection' => $this->collection,
        ]);

        // Se l'utente non ha alcuna collection, mostra un messaggio di avviso
        if (!$this->collections || $this->collections->isEmpty()) {
            return view('livewire.collections.no-collection', [
                'message' => $this->noCollectionMessage,
            ]);
        }

        // Se ci sono più di una collection, mostra il carousel
        if ($this->collections->count() > 1) {
            $iconHtml = $this->iconRepository->getIcon('camera', 'elegant', '');

            return view('livewire.collections.collection-carousel', [
                'iconHtml' => $iconHtml,
                'collections' => $this->collections,
            ]);
        }

        // Se c'è una sola collection, carica i dettagli
        $this->collectionId = $this->collection->id;
        $this->collection_name = $this->collection->collection_name;
        $this->type = $this->collection->type;
        $this->position = $this->collection->position;
        $this->EGI_number = $this->collection->EGI_number;
        $this->floor_price = $this->collection->floor_price;
        $this->description = $this->collection->description;
        $this->url_collection_site = $this->collection->url_collection_site;
        $this->is_published = $this->collection->is_published;

        return view('livewire.collections.collection-manager');
    }

    // public function nextSlide()
    // {
    //     $this->activeSlide = ($this->activeSlide + 1) % $this->collections->count();
    // }

    // public function prevSlide()
    // {
    //     $this->activeSlide = ($this->activeSlide - 1 + $this->collections->count()) % $this->collections->count();
    // }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionUserMember.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Models\CollectionUser;
use App\Models\Wallet;
use Livewire\Component;
use Illuminate\Support\Facades\Log;
use App\Traits\HasPermissionTrait;

class CollectionUserMember extends Component
{

    use HasPermissionTrait;

    public $collectionUsers; // Lista membri del team
    public $wallets;

    public $collection;
    public $collectionId;
    public $collectionName;
    public $collectionOwner; // Proprietario della collection
    public $show = false; // Proprietà per gestire la visibilità della modale

    public function mount($id)
    {
        Log::channel('florenceegi')->info('Collection id', [
            'collectionId' => $id
        ]);

        $this->collectionId = $id;

        // Carica la collection e i suoi dati
        $this->loadCollectionData();
        $this->loadTeamUsers();
    }

    public function loadCollectionData()
    {
        $this->collection = Collection::findOrFail($this->collectionId);

        $this->collectionName = $this->collection->collection_name;
        $this->collectionOwner = $this->collection->owner; // Assumendo che esista una relazione `owner` nel modello Collection
    }

    public function loadTeamUsers()
    {
        $this->collectionUsers = CollectionUser::where('collection_id', $this->collectionId)->get();
        $this->wallets = Wallet::where('collection_id', '=', $this->collectionId)->get();

        Log::channel('florenceegi')->info('CollectionUsersMembers', [
            'collectionId' => $this->collectionId,
            'wallets' => $this->wallets
        ]);
    }

    public function render()
    {
        return view('livewire.collections.collection-user');
    }
}


#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CreateCollection.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\Collection;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\Validate;

class CreateCollection extends Component
{
    public $collection = [
        'creator_id' => null,
        'type' => 'image',
        'status' => 'draft',
        'is_published' => false,
        'collection_name' => null,
        'position' => null,
        'EGI_number' => null,
        'floor_price' => null,
        'description' => null,
    ];

    // Regole di validazione
    protected $rules = [
        'collection.creator_id' => 'required|exists:users,id',
        'collection.collection_name' => 'required|string|max:255',
        'collection.type' => 'required|string|in:image,e-book,audio,video',
        'collection.position' => 'nullable|integer',
        'collection.EGI_number' => 'nullable|integer',
        'collection.floor_price' => 'nullable|numeric',
        'collection.description' => 'nullable|string',
        'collection.status' => 'nullable|string|in:draft,pending_approval,published',
        'collection.is_published' => 'nullable|boolean',
    ];

    public function create()
    {
        Log::channel('florenceegi')->info('Class: CreateCollection. Method: create()');

        try {
            $this->prepareCollectionData();

            $this->validate();

            $collection = Collection::create($this->collection);

            Log::channel('florenceegi')->info('Collection created successfully', [
                'collection_id' => $collection->id,
                'collection_name' => $collection->collection_name,
            ]);

            session()->flash('message', __('collection.created_successfully'));

            // Associa l'utente come creator nella tabella pivot collection_user
            $collection->users()->attach(Auth::id(), ['role' => 'creator']);

            // Reset dei campi
            $this->resetInputFields();

            return redirect()->route('collections.edit', $collection->id);

        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->warning('Validation failed during collection creation', [
                'errors' => $e->errors(),
            ]);
            session()->flash('error', __('collection.create_validation_error'));
            throw $e;
        } catch (\Exception $e) {
            Log::channel('florenceegi')->error('Failed to create collection', [
                'error' => $e->getMessage(),
            ]);
            session()->flash('error', __('collection.creation_failed'));
        }
    }

    private function prepareCollectionData()
    {
        $this->collection['creator_id'] = Auth::id();
        $this->collection['epp_id'] = config('app.epp_id');
        $this->collection['type'] = $this->collection['type'] ?? 'image';
        $this->collection['status'] = 'draft';
        $this->collection['is_published'] = false;
        $this->collection['position'] = $this->collection['position'] ?? 1;
        $this->collection['EGI_number'] = $this->collection['EGI_number'] ?? 1;
        $this->collection['floor_price'] = $this->collection['floor_price'] ?? 0.0;
    }

    private function resetInputFields()
    {
        $this->collection = [
            'creator_id' => null,
            'type' => 'image',
            'status' => 'draft',
            'is_published' => false,
            'collection_name' => null,
            'position' => null,
            'EGI_number' => null,
            'floor_price' => null,
            'description' => null,
        ];
    }

    public function render()
    {
        return view('livewire.collections.create-collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use Illuminate\Support\Facades\Notification;
use App\Models\User;
use App\Models\Wallet;
use App\Models\WalletChangeApproval;
use App\Notifications\WalletChangeRequest;
use App\Notifications\WalletChangeResponse;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\Attributes\On;

class EditWalletModal extends Component
{

    use HasPermissionTrait;

    public $walletId; // Proprietà per identificare l'utente nella collection
    public $collectionId; // Proprietà per identificare l'utente nella collection
    public $walletAddress;
    public $royaltyMint;
    public $royaltyRebind;
    public $approverUserId;

    public $mode = 'create'; // Modalità di apertura della modale
    public $show = false; // Proprietà per gestire la visibilità della modale

    public function mount($walletId = null)
    {

        // if ($this->walleId) {
        //     $this->loadData($this->walleId);
        // }
    }

    public function loadData()
    {

        $wallet = Wallet::findOrFail($this->walletId);

        Log::channel('florenceegi')->info('Wallet', [
            'walletId' => $this->walletId
        ]);

        $this->walletAddress = $wallet->wallet;
        $this->royaltyMint = $wallet->royalty_mint;
        $this->royaltyRebind = $wallet->royalty_rebind;
    }

    #[On('openHandleWallets')]
    public function openHandleWallets($walletId)
    {
        $this->walletId = $walletId;
        $this->loadData();
        $this->show = true; // Mostra la modale
        $this->mode = 'edit';
    }
    #[On('openForCreateNewWallets')]
    public function openForCreateNewWallets($collectionId = null, $userId = null)
    {
        if ($collectionId) {
            Log::channel('florenceegi')->info('Collection id', [
                'collectionId' => $collectionId
            ]);
            $this->collectionId = $collectionId;
            $this->approverUserId = $userId;
        } else {
            Log::channel('florenceegi')->info('No Collection ID provided for wallet creation.');
        }

        $this->show = true; // Mostra la modale
        $this->mode = 'create';
    }


    public function closeHandleWallets()
    {
        $this->walletAddress = null;
        $this->royaltyMint = null;
        $this->royaltyRebind = null;
        $this->show = false; // Mostra la modale
    }

    public function createNewWallet()
    {

        Log::channel('florenceegi')->info('createNewWallet');

        $this->validate([
            'walletAddress' => 'required|string',
            'royaltyMint' => 'nullable|numeric|min:0|max:100',
            'royaltyRebind' => 'nullable|numeric|min:0|max:100',
        ]);

        // Uso la relazione tra il modello Wallet e il metodo collection per recuperare la collection
        $collection = Collection::findOrFail($this->collectionId);
        // $approverUserId = $collection->creator_id;

        Log::channel('florenceegi')->info('createNewWallet PRIMA della verifica dei permessi', [
            'collectionId' => $this->collectionId,
            'approverUserId' => $this->approverUserId
        ]);

        // Verifica permessi
        if (!$this->hasPermission($collection, 'create_wallet')) {
            session()->flash('error', __('You do not have permission to create a wallet.'));
            return;
        }

        Log::channel('florenceegi')->info('createNewWallet DOPO della verifica dei permessi', [
            'collectionId' => $this->collectionId,
            'approverUserId' => $this->approverUserId
        ]);

        // Verifica e aggiorna la quota del creator
        $this->validateAndAdjustCreatorQuota($collection, $this->royaltyMint, $this->royaltyRebind);

        // Crea una proposta di wallet
        $this->proposeNewWallet($this->collectionId, $this->approverUserId, $this->walletAddress, $this->royaltyMint, $this->royaltyRebind);

        $this->show = false;
        session()->flash('message', __('Wallet creation request sent successfully!'));
    }

    public function saveWallet()
    {
        $this->validate([
            'walletAddress' => 'required|string',
            'royaltyMint' => 'nullable|numeric|min:0|max:100',
            'royaltyRebind' => 'nullable|numeric|min:0|max:100',
        ]);

        $wallet = Wallet::findOrFail($this->walletId);

        // **Controllo dei Permessi**
        if ($wallet->user_id !== Auth::id()) {
            // Usa il trait per verificare i permessi sulla collection
            $this->hasPermission($wallet->collection, 'update_wallet');
        }

        // **Validazione delle Quote**
        $remainingMint = $this->validateCreatorModification('royalty_mint', $wallet, $this->royaltyMint);
        $remainingRebind = $this->validateCreatorModification('royalty_rebind', $wallet, $this->royaltyRebind);

        // **Gestione delle Riduzioni e Accredito all’EPP**
        $this->handleReductionsAndEpp($wallet, $remainingMint, $remainingRebind);

        // **Inserimento in wallet_change_approvals**
        if ($wallet->user_id !== Auth::id()) {
            $this->createWalletApproval($wallet);
            session()->flash('message', __('The modification has been submitted for approval.'));
            $this->show = false;
            return;
        }

        // **Applicazione della Modifica**
        $wallet->update([
            'wallet' => $this->walletAddress,
            'royalty_mint' => $this->royaltyMint,
            'royalty_rebind' => $this->royaltyRebind,
        ]);

        $this->dispatch('collectionMemberUpdated');
        $this->show = false;
        session()->flash('message', __('Wallet updated successfully!'));
    }


    private function handleReductionsAndEpp($wallet, $remainingMint, $remainingRebind)
    {
        $eppWallet = Wallet::where('collection_id', $wallet->collection_id)->where('platform_role', 'EPP')->first();

        if ($remainingMint < 0) {
            $eppWallet->increment('royalty_mint', abs($remainingMint));
        }

        if ($remainingRebind < 0) {
            $eppWallet->increment('royalty_rebind', abs($remainingRebind));
        }
    }

    private function validateCreatorModification($type, $wallet, $newValue)
    {
        $maxValue = $type === 'royalty_mint' ? 70.0 : 4.5;
        $currentSum = Wallet::where('collection_id', $wallet->collection_id)->sum($type);

        $newSum = $currentSum - $wallet->$type + $newValue;

        if ($newSum > $maxValue) {
            throw new \Exception(__('The total exceeds the maximum allowed percentage.'));
        }

        return $maxValue - $newSum;
    }

    public function validateAndAdjustCreatorQuota($collection, $newMint, $newRebind)
    {
        $creatorWallet = Wallet::where('collection_id', $collection->id)
                            ->where('user_id', $collection->creator_id)
                            ->first();

        if (!$creatorWallet) {
            throw new \Exception(__('Creator wallet not found.'));
        }

        // Verifica se il creator ha abbastanza quota disponibile
        if ($creatorWallet->royalty_mint < $newMint || $creatorWallet->royalty_rebind < $newRebind) {
            throw new \Exception(__('Creator does not have enough quota to allocate.'));
        }

        // Riduci la quota del creator
        // $creatorWallet->update([
        //     'royalty_mint' => $creatorWallet->royalty_mint - $newMint,
        //     'royalty_rebind' => $creatorWallet->royalty_rebind - $newRebind,
        // ]);
    }

    public function proposeNewWallet($collection, $approverUserId, $walletAddress, $mint, $rebind)
    {

        Log::channel('florenceegi')->info('proposeNewWallet', [
            'approverUserId' => $approverUserId
        ]);

        $approval = WalletChangeApproval::create([
            'wallet_id' => null, // Perché è un nuovo wallet
            'requested_by_user_id' => Auth::user()->id, // Chi inoltra la richiesta
            'approver_user_id' => $approverUserId, // Chi deve approvare la richiesta
            'change_type' => 'create',
            'change_details' => [
                'wallet_address' => $walletAddress,
                'royalty_mint' => $mint,
                'royalty_rebind' => $rebind,
            ],
            'status' => 'pending',
        ]);

        // Notifica il membro della collection
        $member = User::find($approverUserId);
        Notification::send($member, new WalletChangeRequest($approval));
    }

    public function approveChange($approvalId)
    {
        $approval = WalletChangeApproval::findOrFail($approvalId);
        $wallet = $approval->wallet;

        $wallet->update($approval->change_details['new']);
        $approval->update(['status' => 'approved']);

        Notification::send($approval->requestedBy, new WalletChangeResponse($approval, 'proposal'));
        session()->flash('message', __('The wallet change has been approved.'));
    }

    public function declineChange($approvalId, $reason = null)
    {
        $approval = WalletChangeApproval::findOrFail($approvalId);

        $approval->update([
            'status' => 'rejected',
            'rejection_reason' => $reason,
        ]);

        Notification::send($approval->requestedBy, new WalletChangeResponse($approval, 'rejected'));
        session()->flash('message', __('The wallet change has been declined.'));
    }

    public function render()
    {
        return view('livewire.collections.edit-wallet-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/HeadImagesManager.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Services\EGIImageService;
use Illuminate\Support\Facades\Log;
use Livewire\Component;

/**
 * Class HeadImagesManager
 *
 * This Livewire component manages the header images (banner, card, and avatar)
 * for a specific collection. It initializes the collection and provides a render
 * method to display the associated view.
 */
class HeadImagesManager extends Component
{
    /**
     * The collection instance associated with the header images.
     *
     * @var Collection
     */
    public $collection;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * Mount the component and initialize the collection.
     *
     * @param int $id The ID of the collection to be managed.
     *
     * @return void
     */
    public function mount($id)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $id;

        // Retrieve the collection from the database or fail with a 404 error if not found.
        $this->collection = Collection::findOrFail($this->collectionId);
    }

    /**
     * Remove the existing banner image from storage and update the database.
     *
     * @return void
     */
    public function removeImage($type)
    {

        Log::channel('florenceegi')->info('HeadImagesManager, removeImage', ['type' => $type]);


        // Clear the image state in the component.
        switch ($type) {
            case 'banner':
                $this->dispatch('bannerImageRemove');
                break;
            case 'card':
                $this->dispatch('cardImageRemove');
                break;
            case 'EGI':
                $this->dispatch('egiImageRemove');
                break;
            case 'avatar':
                $this->dispatch('avatarImageRemove');
                break;
        }



    }

    /**
     * Render the component's view.
     *
     * @return \Illuminate\View\View The view associated with the component.
     */
    public function render()
    {
        // Return the Livewire view for managing head images.
        return view('livewire.collections.head-images-manager');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/AvatarImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use App\Traits\SaveCollectionTraits;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class AvatarImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * the avatar image associated with a specific collection.
 */
class AvatarImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The avatar image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_avatar;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing avatar image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID.
     *
     * @param int $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $collectionId;

        // Load the existing avatar image.
        $this->loadExistingImage();
    }

    /**
     * Load the existing avatar image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an avatar image.
        if ($collection->image_avatar) {
            // Retrieve the cached image path for the avatar.
            // $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
            //     $this->collectionId,
            //     $collection->image_avatar,
            //     $collection->is_published,
            //     null,
            //     'head.avatar' // PathKey for the avatar image.
            // );
            $this->existingImageUrl = $collection->image_avatar;
        }

    }

    #[On('avatarImageRemove')]
    public function avatarImageRemove(){
        $this->removeImage();
    }

    /**
     * Save the uploaded avatar image to the storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        $collection = Collection::findOrFail($this->collectionId);

        // Verifica il permesso "update_collection"
        $this->hasPermission($collection, 'update_collection_image_header');


        try {
            // Check if an image has been uploaded.
            if (!$this->image_avatar) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the 'avatar_image_' prefix.
            $filename = 'avatar_image_' . uniqid() . '.' . $this->image_avatar->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_avatar, 'head.avatar')) {
                throw new \Exception('Error saving the avatar image.');
            }

            // Retrieve the collection and update the image_avatar field.
            $collection->image_avatar = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_avatar = null;

            // Flash a success message to the session.
            session()->flash('success', 'Avatar image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the avatar image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the avatar image.');
        }
    }

    /**
     * Remove the existing avatar image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an avatar image.
            if ($collection->image_avatar) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('avatar_image_', $this->collectionId, 'head.avatar');

                // Set the image_avatar field to null and save the collection.
                $collection->image_avatar = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_avatar = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Avatar image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the avatar image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the avatar image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the avatar image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_avatar instanceof TemporaryUploadedFile)
            ? $this->image_avatar->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.avatar-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/BannerImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class BannerImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * the banner image associated with a specific collection.
 */
class BannerImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The banner image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_banner;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing banner image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID.
     *
     * @param int $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $collectionId;

        // Load the existing banner image.
        $this->loadExistingImage();
    }

    /**
     * Load the existing banner image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has a banner image.
        if ($collection->image_banner) {
            // Retrieve the cached image path for the banner.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_banner,
                $collection->is_published,
                null,
                'head.banner' // PathKey for the banner image.
            );
            $this->existingImageUrl = $collection->image_banner;
        }

    }

    /**
     * Save the uploaded banner image to the storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        $collection = Collection::findOrFail($this->collectionId);

        // Verifica il permesso "update_collection"
        $this->hasPermission($collection, 'update_collection_image_header');

        try {
            // Check if an image has been uploaded.
            if (!$this->image_banner) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the 'banner_image_' prefix.
            $filename = 'banner_image_' . uniqid() . '.' . $this->image_banner->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_banner, 'head.banner')) {
                throw new \Exception('Error saving the banner image.');
            }

            // Retrieve the collection and update the image_banner field.
            $collection->image_banner = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_banner = null;

            // Flash a success message to the session.
            session()->flash('success', 'Banner image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the banner image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the banner image.');
        }
    }

    #[On('bannerImageRemove')]
    public function bannerImageRemove(){
        $this->removeImage();
    }

    /**
     * Remove the existing banner image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {

        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has a banner image.
            if ($collection->image_banner) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('banner_image_', $this->collectionId, 'head.banner');

                // Set the image_banner field to null and save the collection.
                $collection->image_banner = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_banner = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Banner image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the banner image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the banner image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the banner image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_banner instanceof TemporaryUploadedFile)
            ? $this->image_banner->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.banner-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/CardImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class ImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * different types of images (card, EGI asset, or default) associated with a collection.
 */
class CardImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_card;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID and image type.
     *
     * @param int    $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID and image type passed as parameters.
        $this->collectionId = $collectionId;

        // Load the existing image URL.
        $this->loadExistingImage();
    }

    /**
     * Load the existing image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an image for the specified field.
        if ($collection->image_card) {
            // Retrieve the cached image path using the EGIImageService.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_card,
                $collection->is_published,
                null,
                'head.card' // PathKey for the card image.
            );

            $this->existingImageUrl = $collection->image_card;
        }
    }

    /**
     * Save the uploaded image to storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        try {

            $collection = Collection::findOrFail($this->collectionId);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection_image_header');

            // Check if an image has been uploaded.
            if (!$this->image_card) {
                throw new \Exception('No image to save.');
            }

            $filename = 'card_image_' . uniqid() . '.' . $this->image_card->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_card, 'head.card')) {
                throw new \Exception("Error saving the card image.");
            }

            // Update the corresponding database field with the new filename.
            $collection->image_card = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_card = null;

            // Flash a success message to the session.
            session()->flash('success', 'card image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the card image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the card image.');
        }
    }

    #[On('cardImageRemove')]
    public function cardImageRemove(){

        $this->removeImage();
    }

    /**
     * Remove the existing image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an image to remove.
            if ($collection->image_card) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('card_image_', $this->collectionId, 'head.card');

                // Set the image field to null and save the collection.
                $collection->image_card = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_card = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'card image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the card image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the card image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_card instanceof TemporaryUploadedFile)
            ? $this->image_card->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.card-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/EgiImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class ImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * different types of images (card, EGI asset, or default) associated with a collection.
 */
class EgiImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_EGI;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID and image type.
     *
     * @param int    $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID and image type passed as parameters.
        $this->collectionId = $collectionId;

        // Load the existing image URL.
        $this->loadExistingImage();
    }

    /**
     * Load the existing image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an image for the specified field.
        if ($collection->image_EGI) {
            // Retrieve the cached image path using the EGIImageService.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_EGI,
                $collection->is_published,
                null,
                'head.EGI_asset' // PathKey for the EGI image.
            );

            $this->existingImageUrl = $collection->image_EGI;
        }

    }

    /**
     * Save the uploaded image to storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        Log::channel('florenceegi')->info('EgiImageUpload, saveImage');

        // Save the image using the EGIImageService.

        try {

            $collection = Collection::findOrFail($this->collectionId);

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['collection' => $collection]);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection_image_header');

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage after permission', ['image_EGI' => $this->image_EGI]);

            // Check if an image has been uploaded.
            if (!$this->image_EGI) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the appropriate prefix.
            $filename = 'EGI_asset_' . uniqid() . '.' . $this->image_EGI->getClientOriginalExtension();

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_EGI, 'head.EGI_asset')) {
                throw new \Exception("Error saving the EGI image.");
            }

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Update the corresponding database field with the new filename.
            $collection->image_EGI = $filename;
            $collection->save();

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_EGI = null;

            // Flash a success message to the session.
            session()->flash('success', 'EGI image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the EGI image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the EGI image.');
        }
    }

    #[On('egiImageRemove')]
    public function egiImageRemove(){


        $this->removeImage();
    }

    /**
     * Remove the existing image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an image to remove.
            if ($collection->image_EGI) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('EGI_asset_', $this->collectionId, 'head.EGI_asset');

                // Set the image field to null and save the collection.
                $collection->image_EGI = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_EGI = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Egi image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the EGI image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the EGI image.');
        }
    }


    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_EGI instanceof TemporaryUploadedFile)
            ? $this->image_EGI->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.egi-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/InviteUserToCollectionModal.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\CollectionInvitation;
use App\Models\Collection;
use App\Models\User;
use App\Notifications\CollectionInvitationNotification;
use Livewire\Component;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Notification;
use Livewire\Attributes\On;
use Spatie\Permission\Models\Role; // Importiamo i ruoli di Spatie

class InviteUserToCollectionModal extends Component
{
    public $email; // Email dell'utente da invitare
    public $role; // Ruolo dell'utente nella collection
    public $roles; // Ruoli disponibili
    public $collectionId; // ID della collection corrente
    public $show = false; // Gestisce la visibilità della modale

    public function mount($collectionId)
    {
        $this->collectionId = $collectionId;

        // Carica i ruoli disponibili da Spatie
        $this->roles = Role::pluck('name')->toArray(); // Recupera i nomi dei ruoli dalla tabella 'roles'
    }

    public function invite()
    {
        $this->validate([
            'email' => 'required|email',
            'role' => 'required|in:' . implode(',', $this->roles), // Validazione sui ruoli definiti
        ]);

        // Verifica se l'utente esiste già nel sistema
        $user = User::where('email', $this->email)->first();

        // Registra l'invito nella tabella `collection_invitations`
        $invitation = CollectionInvitation::create([
            'collection_id' => $this->collectionId,
            'email' => $this->email,
            'role' => $this->role,
            'status' => 'pending',
        ]);

        // Invia notifica all'utente, se esiste
        if ($user) {
            Notification::send($user, new CollectionInvitationNotification($invitation->id));
        }

        Log::channel('florenceegi')->info('Collection Invitation Sent', [
            'collection_id' => $this->collectionId,
            'email' => $this->email,
            'role' => $this->role,
        ]);

        $this->resetFields();
        $this->show = false;
        $this->dispatch('collection-member-updated'); // Aggiorna il genitore
    }

    #[On('openInviteModal')]
    public function showInviteModal()
    {
        $this->resetFields(); // Pulisce i campi
        $this->show = true; // Mostra la modale
    }

    public function resetFields()
    {
        $this->email = '';
        $this->role = '';
    }

    public function closeModal()
    {
        $this->show = false;
    }

    public function render()
    {
        return view('livewire.collections.invite-user-to-collection-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/RejectModal.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\WalletChangeApproval;

class RejectModal extends Component
{
    public $approvalId;
    public $rejectionReason;

    protected $listeners = ['openRejectModal'];

    public function openRejectModal($approvalId)
    {
        $this->approvalId = $approvalId;
        $this->rejectionReason = '';
    }

    public function reject()
    {
        $approval = WalletChangeApproval::findOrFail($this->approvalId);

        $approval->wallet->update(json_decode($approval->wallet->previous_values, true));
        $approval->wallet->update(['approval' => 'approved']);
        $approval->update([
            'status' => 'rejected',
            'rejection_reason' => $this->rejectionReason,
            'approved_at' => now(),
        ]);

        session()->flash('message', 'Modifica rifiutata.');
        $this->emit('changesRejected');
    }

    public function render()
    {
        return view('livewire.collections.reject-modal');
    }
}


#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Show.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Models\TeamWallet;
use Illuminate\Support\Facades\Auth;
use Livewire\Component;
use Illuminate\Support\Facades\Log;

class Show extends Component
{
    public $collection = [
        'user_id' => null,
        'team_id' => null,
        'type' => null,
        'is_published' => null,
        'collection_name' => null,
        'position' => null,
        'EGI_number '=> null,
        'floor_price' => null,
        'description' => null,
        'url_collection_site' => null,
        'image_banner' => '',
        'image_card' => '',
        'image_avatar' => '',
    ];

    public $collections;
    public $collectionId;

    public function render()
    {

        $user = Auth::user();

        // Recupera la collection selezionata
        $collection = Collection::find($this->collectionId);

        // estrapola tutti gli wallets relazionati al team
        $wallets = TeamWallet::where('team_id', $collection->team_id)->get();

        // Recupera tutte le collection dell'utente connesso
        $this->collections = Collection::where('user_id', $user->id)->get();
        return view('livewire.collections.collection-manager',[
            'wallets' => $wallets,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Dashboard.php ####

<?php

namespace App\Livewire;

use App\Models\CollectionInvitation;
use App\Services\Notifications\NotificationHandlerFactory;
use Livewire\Component;
use App\Models\Collection;
use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;
use Livewire\Attributes\On;
use Illuminate\Support\Facades\Log;

class Dashboard extends Component
{
    public $collectionsCount;
    public $collectionMembersCount;
    public $notifications;
    public $viewingHistoricalNotifications = false;

    public $showHistoricalNotifications = false;

    public $pendingNotifications = [];
    public $historicalNotifications = [];

    public function mount()
    {
        $this->loadStats();
        $this->loadNotifications();
    }

    public function loadStats()
    {
        $this->collectionsCount = Collection::where('creator_id', Auth::id())->count();

        $this->collectionMembersCount = CollectionUser::whereHas('collection', function ($query) {
            $query->where('creator_id', Auth::id());
        })
        ->where('user_id', '!=', Auth::id())
        ->count();
    }


/**
 * Questo metodo gestisce l'evento "proposal-declined" emesso dal metodo decline() del componente DeclineProposalModal.
 *
 * @return void
 */
    #[On('proposal-declined')]
    public function handleProposalDeclined()
    {
        // Log dell'evento per verifica
        Log::channel('florenceegi')->info('Dashboard: proposal-declined event received.');

        // Ricaricare le notifiche pendenti e storiche
        $this->loadNotifications();

        // Mostrare un messaggio di successo all'utente
        session()->flash('message', __('The proposal was declined successfully and a notification was sent to the proposer.'));
    }

    #[On('proposal-accepted')]
    public function handleProposalAccepted()
    {
        // Log dell'evento per verifica
        Log::channel('florenceegi')->info('Dashboard: proposal-accepted event received.');

        // Ricaricare le notifiche pendenti e storiche
        $this->loadNotifications();

        // Mostrare un messaggio di successo all'utente
        session()->flash('message', __('The proposal was accepted successfully and a notification was sent to the proposer.'));
    }

    public function openDeclineModal($notification)
    {
        Log::channel('florenceegi')->info('Dashboard: openDeclineModal', [
            'notification' => $notification,

        ]);

        // il listener si trova in app/Livewire/Proposals/DeclineProposalModal.php
        $this->dispatch('open-decline-modal', $notification);
    }

    public function openAcceptModal($notification)
    {
        Log::channel('florenceegi')->info('Dashboard: openAcceptModal', [
            'notification' => $notification,
        ]);

        // il listener si trova in app/Livewire/Proposals/AcceptProposalModal.php
        $this->dispatch('open-accept-modal', $notification);
    }

    public function notificationArchive($notificationId, $action)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $notification->update([
            'read_at' => now(),
            'outcome' => $action,
        ]);

        $this->loadNotifications();
    }

    public function deleteNotificationAction($notificationId)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $notification->delete();

        $this->loadNotifications();
    }

    public function loadNotifications()
    {
        $this->pendingNotifications = Auth::user()->notifications()
        ->where(function ($query) {
            $query->whereNull('read_at')
                  ->orWhere('outcome', 'pending');
        })
        ->orderBy('created_at', 'desc')
        ->get();

        $this->historicalNotifications = Auth::user()->notifications()
            ->whereIn('outcome', ['accepted', 'declined', 'done'])
            ->orderBy('created_at', 'desc')
            ->get();

        Log::channel('florenceegi')->info('Dashboard: loadNotifications', [
            'pendingNotifications' => $this->pendingNotifications,
            'historicalNotifications' => $this->historicalNotifications,
        ]);

    }

    public function handleNotificationAction($notificationId, $action)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $type = $notification->type;

        $handler = NotificationHandlerFactory::getHandler($type);
        $handler->handle($notification, $action);

        $this->loadStats();
        $this->loadNotifications();
    }

    public function toggleHistoricalNotifications()
    {
        $this->showHistoricalNotifications = !$this->showHistoricalNotifications;
    }

    public function getNotificationView($notification)
    {
        $notificationViews = [
            'App\Notifications\WalletChangeRequest' => 'notifications.wallet-change-request',
            'App\Notifications\CollectionInvitationNotification' => 'notifications.invitation',
            'App\Livewire\Proposals\ProposalDeclinedNotification' => 'notifications.proposa-declined-notification',
        ];

        return $notificationViews[$notification->type] ?? 'notifications.default';
    }

    public function render()
    {
        return view('livewire.dashboard', [
            'pendingNotifications' => $this->pendingNotifications,
            'historicalNotifications' => $this->historicalNotifications,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/LanguageSelector.php ####

<?php

namespace App\Livewire;

use App\Models\User;
use Livewire\Component;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;

class LanguageSelector extends Component
{
    public $currentLocale;
    public $languages;

    public function mount()
    {
        $this->languages = config('app.languages');

        // Segue la stessa logica del middleware SetLanguage
        if (Auth::check() && Auth::user()->language) {
            // Log::channel('florenceegi')->info('language from db');
            $this->currentLocale = trim(Auth::user()->language);
        } elseif (Cookie::has('language')) {
            // Log::channel('florenceegi')->info('language from cookie');
            $this->currentLocale = trim(Cookie::get('language'));
        } else {
            // Log::channel('florenceegi')->info('language from config');
            $this->currentLocale = trim(config('app.locale'));
        }
        // App::setLocale($this->currentLocale);
        // session(['language' => $this->currentLocale]);

        session(['language' => App::getLocale()]);
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.App::currentLocale());
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.App::getLocale());

    }

    public function updatedCurrentLocale($value)
    {
        Log::channel('florenceegi')->info('Attempting to update locale to: ' . $value);

        if (array_key_exists($value, $this->languages)) {
            $value = trim($value);
            // Log::channel('florenceegi')->info('Locale updated to: ' . $value);

            // Aggiorna il database se l'utente è autenticato
            if (Auth::check()) {
                /** @var User $user */
                $user = Auth::user();
                $user->language = $value;
                $user->save();
                // Log::channel('florenceegi')->info('User language updated in database: ' . $value);
            } else {
                Log::channel('florenceegi')->info('User is not authenticated, setting cookie for language: ' . $value);
            }

            // Imposta il cookie per gli utenti non autenticati
            Cookie::queue('language', $value, 60 * 24 * 365); // Cookie valido per un anno

            // Aggiorna la sessione e l'applicazione
            session(['language' => $value]);
            App::setLocale($value);

            Log::channel('florenceegi')->info('Language changed to: ' . App::currentLocale());

            // Ricarica la pagina per applicare la nuova lingua
            $this->dispatch('language-changed')->self();
            return redirect(request()->header('Referer'));
        } else {
            Log::channel('florenceegi')->warning('Invalid language value provided: ' . $value);
        }
    }

    public function render()
    {
        return view('livewire.language-selector');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Layout/Navigation.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Layout;

use Illuminate\Contracts\View\View;
use Illuminate\Support\Facades\Auth;
use Livewire\Component;

class Navigation extends Component
{

    public $currentTeam;

    public function render(): View
    {

        $this->currentTeam = Auth::user()->currentTeam?->name ?? NESSUN_TEAM;

        return view('livewire.layout.navigation', [
            'user' => Auth::user(),
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Layout/Sidebar.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Layout;

use Illuminate\Contracts\View\View;
use Livewire\Component;

use App\Models\ContextHasMenu;

class Sidebar extends Component
{

    public $context;
    public $menuItems;

    public function mount($context = 'general')
    {
        $this->context = $context;
        $this->menuItems = ContextHasMenu::with('barMenu')
            ->where('context', $this->context)
            ->get()
            ->pluck('barMenu');
    }
    public function render(): View
    {
        return view('livewire.sidebar');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/PhotoUploader.php ####

<?php

namespace App\Livewire;

use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Layout;

class PhotoUploader extends Component
{
    use WithFileUploads;

    public $photo;

    public function updatedPhoto()
    {
        Log::info('Foto caricata:', ['photo' => $this->photo]);
        Log::info('File caricato:', ['name' => $this->photo->getClientOriginalName()]);
        Log::info('Percorso temporaneo:', ['path' => $this->photo->getRealPath()]);
        Log::info('Temporary URL:', ['url' => $this->photo->temporaryUrl()]);


        if ($this->photo) {
            Log::info('Temporary URL:', ['url' => $this->photo->temporaryUrl()]);
        }
    }

    public function getTemporaryUrl()
    {
        try {
            return $this->photo->temporaryUrl();
        } catch (\Exception $e) {
            Log::error('Errore nel generare temporaryUrl:', ['error' => $e->getMessage()]);
            return null;
        }
    }

    public function save()
    {
        // Valida il file
        $this->validate([
            'photo' => 'image|max:2048', // Max 2MB
        ]);

        // Salva il file nel disco configurato (di default: "storage/app/livewire-tmp")
        $path = $this->photo->store('photos', 'public');

        Log::info('File salvato in:', ['path' => $path]);

        // Mostra un messaggio di successo (opzionale)
        session()->flash('message', 'Foto caricata con successo: ' . $path);
    }

    #[Layout('layouts.guest')]
    public function render()
    {
        return view('livewire.photo-uploader');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/AcceptProposalModal.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\WalletChangeApproval;

use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Livewire\Component;

class AcceptProposalModal extends Component
{
    public $isVisible = false;
    public $context;
    public $type;
    public $walletChangeApprovalId;
    public $reason = '';
    public $notification;

    protected $rules = [
        'reason' => 'required|string|max:500',
    ];

    #[On('open-accept-modal')]
    public function openAcceptModal($notification)
    {

        $this->notification = $notification;

        Log::channel('florenceegi')->info('AcceptProposalModal: openModal', [
            '$this->notification' => $notification,
        ]);

        $this->isVisible = true;

    }

    public function closeModal()
    {
        $this->isVisible = false;
    }


    public function accept()
    {

        Log::channel('florenceegi')->info('AcceptProposalModal: accept', [
            'notification' =>  json_encode($this->notification),
            'type' => $this->type,
            'reason' => $this->reason,
        ]);

        $this->validate();

        // Trova la proposta nel database
        $proposal = WalletChangeApproval::findOrFail($this->notification['data']['wallet_change_approvals_id']);

        // Aggiorna lo stato della proposta a "accepted" e salva la motivazione
        $proposal->update([
            'type' => $this->notification['data']['type'],
            'status' => 'accepted',
            'rejection_reason' => $this->reason,
            'read_at' => now(),
            'notification_id' => $this->notification['id']
        ]);

        // Aggiungo i dati alla notifica di risposta
        $this->notification['type'] = $proposal->type;
        $this->notification['reason'] = $this->reason;
        $this->notification['approver_user_id'] = $proposal->approver_user_id;


        // Crea la notifica di declino per il proponente
        $proposal->requestedBy->notify(new ProposalAcceptedNotification($this->notification));

        // Compensazione del wallet del proponente

        // Nasconde la modale
        $this->isVisible = false;

        // Invia l'evento per aggiornare la dashboard
        $this->dispatch('proposal-accepted');
    }




    public function render()
    {
        return view('livewire.proposals.decline-proposal-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/DeclineProposalModal.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\WalletChangeApproval;

use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Livewire\Component;

class DeclineProposalModal extends Component
{
    public $isVisible = false;
    public $context;
    public $type;
    public $walletChangeApprovalId;
    public $reason = '';
    public $notification;

    protected $rules = [
        'reason' => 'required|string|max:500',
    ];

    #[On('open-decline-modal')]
    public function openDeclineModal($notification)
    {

        $this->notification = $notification;

        Log::channel('florenceegi')->info('DeclineProposalModal: openModal', [
            '$this->notification_data' => $notification,
        ]);

        $this->isVisible = true;

    }

    public function closeModal()
    {
        $this->isVisible = false;
    }


    public function decline()
    {

        Log::channel('florenceegi')->info('DeclineProposalModal: decline', [
            'notification' =>  json_encode($this->notification),
            'type' => $this->type,
            'reason' => $this->reason,
        ]);

        $this->validate();

        // Trova la proposta nel database
        $proposal = WalletChangeApproval::findOrFail($this->notification['data']['wallet_change_approvals_id']);

        // Aggiorna lo stato della proposta a "declined" e salva la motivazione
        $proposal->update([
            'type' => $this->notification['data']['type'],
            'status' => 'declined',
            'rejection_reason' => $this->reason,
            'read_at' => now(),
            'notification_id' => $this->notification['id']
        ]);

        // Aggiungo i dati alla notifica di risposta
        $this->notification['type'] = $proposal->type;
        $this->notification['reason'] = $this->reason;
        $this->notification['approver_user_id'] = $proposal->approver_user_id;


        // Crea la notifica di declino per il proponente
        $proposal->requestedBy->notify(new ProposalDeclinedNotification($this->notification));

        // Nasconde la modale
        $this->isVisible = false;

        // Invia l'evento per aggiornare la dashboard
        $this->dispatch('proposal-declined');
    }




    public function render()
    {
        return view('livewire.proposals.decline-proposal-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/ProposalAcceptedNotification.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\Notification as NotificationModel;
use App\Models\User;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class ProposalAcceptedNotification extends Notification
{
    use Queueable;

    public $notification;
    public $reason;

    public function __construct(array $notification)
    {
        $this->notification = $notification;

    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        // Trova l'utente che ha richiesto la modifica per comporre il nominativo
        $approver = User::find($this->notification['notifiable_id']);
        $approver_name = $approver->name . ' ' . $approver->last_name;

        Log::channel('florenceegi')->info('ProposalAcceptedNotification:toDatabase', [
            'notification id' => $this->notification['id']
        ]);

        // Aggiorna la notifica di richiesta nel database per segnalarla come completata
        $updated_notification = NotificationModel::find($this->notification['id']);

        // Ottieni i dati JSON esistenti
        $data = $updated_notification->data;

        // Aggiungi una nuova chiave al JSON
        $data['reason'] = $this->notification['reason'];

        // Aggiorna il modello con i nuovi dati
        $updated_notification->update([
            'outcome' => 'accepted',
            'read_at' => now(),
            'data' => $data, // Salva i dati aggiornati
        ]);

        return [
            'message' => $this->notification['data']['type'] === 'create'
                ? __('notification.proposed_creation_new_wallet')
                : __('notification.proposed_change_to_a_wallet'),
            'type' => 'proposal_accepted',
            'reason' => $this->notification['reason'],
            'wallet_address' => $this->notification['data']['wallet_address'],
            'royalty_mint' => $this->notification['data']['royalty_mint'],
            'royalty_rebind' => $this->notification['data']['royalty_rebind'],
            'wallet_change_approvals_id' => $this->notification['data']['wallet_change_approvals_id'],
            'requested_by' => $this->notification['data']['requested_by'],
            'approver' => $approver_name,
            'status' => 'response', // Definisce questa notifica come una [risposta]
            'timestamp' => now(),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/ProposalDeclinedNotification.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\Notification as NotificationModel;
use App\Models\User;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class ProposalDeclinedNotification extends Notification
{
    use Queueable;

    public $notification;
    public $reason;

    public function __construct(array $notification)
    {
        $this->notification = $notification;

    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        // Trova l'utente che ha richiesto la modifica per comporre il nominativo
        $approver = User::find($this->notification['notifiable_id']);
        $approver_name = $approver->name . ' ' . $approver->last_name;

        Log::channel('florenceegi')->info('ProposalDeclinedNotification:toDatabase', [
            'notification id' => $this->notification['id']
        ]);

        // Aggiorna la notifica di richiesta nel database per segnalarla come completata
        $updated_notification = NotificationModel::find($this->notification['id']);

        // Ottieni i dati JSON esistenti
        $data = $updated_notification->data;

        // Aggiungi una nuova chiave al JSON
        $data['reason'] = $this->notification['reason'];

        // Aggiorna il modello con i nuovi dati
        $updated_notification->update([
            'outcome' => 'declined',
            'read_at' => now(),
            'data' => $data, // Salva i dati aggiornati
        ]);

        return [
            'message' => $this->notification['data']['type'] === 'create'
                ? __('notification.proposed_creation_new_wallet')
                : __('notification.proposed_change_to_a_wallet'),
            'type' => 'proposal_declined',
            'reason' => $this->notification['reason'],
            'wallet_address' => $this->notification['data']['wallet_address'],
            'royalty_mint' => $this->notification['data']['royalty_mint'],
            'royalty_rebind' => $this->notification['data']['royalty_rebind'],
            'wallet_change_approvals_id' => $this->notification['data']['wallet_change_approvals_id'],
            'requested_by' => $this->notification['data']['requested_by'],
            'approver' => $approver_name,
            'status' => 'response', // Definisce questa notifica come una [risposta]
            'timestamp' => now(),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Sidebar.php ####

<?php

namespace App\Livewire;

use Livewire\Component;
use Illuminate\Support\Facades\Route;
use App\Services\Menu\ContextMenus;
use App\Services\Menu\MenuConditionEvaluator;
use App\Repositories\IconRepository;

class Sidebar extends Component
{
    public $menus = [];
    public $contextTitle = '';
    protected $iconRepo;

    public function mount()
    {
        $evaluator = new MenuConditionEvaluator();
        $this->iconRepo = new IconRepository();

        // Determina il contesto dalla rotta corrente
        $currentRouteName = Route::currentRouteName();
        $context = explode('.', $currentRouteName)[0] ?? 'dashboard';

        // Imposta il titolo del contesto
        $this->contextTitle = ucfirst($context);

        // Ottieni i menu per il contesto corrente
        $allMenus = ContextMenus::getMenusForContext($context);

        // Filtra i menu in base ai permessi dell'utente
        foreach ($allMenus as $menu) {
            $filteredItems = array_filter($menu->items, function ($item) use ($evaluator) {
                return $evaluator->shouldDisplay($item);
            });

            if (!empty($filteredItems)) {
                // Converti il MenuGroup in un array associativo
                $menuArray = [
                    'name' => $menu->name,
                    'icon' => $menu->icon,
                    'permission' => $menu->permission ?? null,
                    'items' => [],
                ];

                foreach ($filteredItems as $item) {
                    $menuArray['items'][] = [
                        'name' => $item->name,
                        'route' => $item->route,
                        'icon' => $this->iconRepo->getDefaultIcon($item->icon),
                        'permission' => $item->permission ?? null,
                        'children' => $item->children ?? [],
                    ];
                }

                $this->menus[] = $menuArray;
            }
        }
    }

    public function render()
    {
        return view('livewire.sidebar');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/TeamManager.php ####

<?php

namespace App\Livewire;

use Livewire\Component;

class TeamManager extends Component
{
    public function render()
    {
        return view('livewire.team-manager');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Traits/HandlesCollectionUpdate.php ####

<?php

namespace App\Livewire\Traits;

use App\Services\FileStorageService;
use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Support\Facades\Auth;

trait HandlesCollectionUpdate
{

    public function collectionUpdate()
    {

        try {
            $this->validate();

            $collection = Collection::findOrFail($this->collectionId);

            Log::channel('florenceegi')->info('Current collection', [
                'collection' => json_encode($collection, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)
            ]);

            Log::channel('florenceegi')->info('Modified collection', [
                'collection' => json_encode($this->collection, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)
            ]);

            $collection->update($this->collection);

            session()->flash('message', __('collection.updated_successfully'));

        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->error('Validation error during update', $e->errors());
            session()->flash('error', __('collection.update.validation_error'));
            throw $e;

        } catch (ModelNotFoundException $e) {
            Log::channel('florenceegi')->error('Collection not found during update', ['collection_id' => $this->collectionId]);
            session()->flash('error', __('collection.not_found'));

        } catch (\Exception $e) {
            Log::channel('florenceegi')->error('Failed to update collection', [
                'error' => $e->getMessage(),
                'collection_data' => $this->collection,
                'stack_trace' => $e->getTraceAsString(),
            ]);
            session()->flash('error', __('collection.save_failed'));
        }
    }

}

#### Inizio File: /home/fabio/EGI/app/Livewire/Welcome/AuthForms.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Welcome;

use Illuminate\Contracts\View\View;
use Livewire\Component;

class AuthForms extends Component
{
    public bool $showLogin = true;

    public function toggleForm(): void
    {
        $this->showLogin = !$this->showLogin;
    }

    public function render(): View
    {
        return view('livewire.welcome.auth-forms');
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/Collection.php ####

<?php

namespace App\Models;

use App\Casts\EGIImageCast;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Collection extends Model
{
    use HasFactory;
    use SoftDeletes; // Gestione SoftDeletes

    /**
     * Gli attributi assegnabili in massa.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'creator_id',
        'owner_id',
        'collection_name',
        'description',
        'type',
        'status',
        'is_published',
        'image_banner',
        'image_card',
        'image_avatar',
        'image_egi',
        'url_collection_site',
        'position',
        'EGI_number',
        'EGI_asset_roles',
        'floor_price',
        'path_image_to_ipfs',
        'url_image_ipfs',
        'epp_id',
        'EGI_asset_id',
    ];

    /**
     * Gli attributi che devono essere castati.
     *
     * @var array
     */
    protected $casts = [
        'image_banner' => EGIImageCast::class,
        'image_card'   => EGIImageCast::class,
        'image_avatar' => EGIImageCast::class,
        'image_EGI'    => EGIImageCast::class,
        'is_published' => 'boolean',
    ];

    /**
     * Relazione con il creator.
     */
    public function creator()
    {
        return $this->belongsTo(User::class, 'creator_id');
    }

    /**
     * Relazione con l'owner.
     */
    public function owner()
    {
        return $this->belongsTo(User::class, 'owner_id');
    }

    /**
     * Relazione con gli EGI.
     */
    public function egis()
    {
        return $this->hasMany(Egi::class);
    }

    /**
     * Relazione con gli utenti tramite la tabella pivot collection_user.
     */
    public function users()
    {
        return $this->belongsToMany(User::class, 'collection_user')
                    ->withPivot('role')
                    ->withTimestamps();
    }

    /**
     * Relazione con i wallet.
     */
    public function wallets()
    {
        return $this->hasMany(Wallet::class);
    }

    /**
     * Verifica se la collection è pubblicata.
     *
     * @return bool
     */
    public function isPublished(): bool
    {
        return $this->status === 'published';
    }

    /**
     * Verifica se la collection può essere pubblicata.
     *
     * @return bool
     */
    public function canBePublished(): bool
    {
        $pendingApprovals = WalletChangeApproval::whereHas('wallet', function ($query) {
            $query->where('collection_id', $this->id);
        })->where('status', 'pending')->exists();

        return !$pendingApprovals && $this->status === 'draft';
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/CollectionInvitation.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class CollectionInvitation extends Model
{
    use HasFactory;

    /**
     * La tabella associata al modello.
     *
     * @var string
     */
    protected $table = 'collection_invitations';

    /**
     * I campi che possono essere assegnati in massa.
     *
     * @var array
     */
    protected $fillable = [
        'collection_id',
        'email',
        'role',
        'status',
    ];

    /**
     * Relazione con il modello Collection.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    /**
     * Determina se l'invito è in sospeso.
     *
     * @return bool
     */
    public function isPending()
    {
        return $this->status === 'pending';
    }

    /**
     * Determina se l'invito è stato accettato.
     *
     * @return bool
     */
    public function isAccepted()
    {
        return $this->status === 'accepted';
    }

    /**
     * Determina se l'invito è stato rifiutato.
     *
     * @return bool
     */
    public function isRejected()
    {
        return $this->status === 'rejected';
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/CollectionUser.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class CollectionUser extends Model
{
    use HasFactory;

    protected $table = 'collection_user';

    protected $fillable = [
        'collection_id',
        'user_id',
        'role',
        'is_owner',
        'joined_at',
        'removed_at',
        'metadata',
        'status',
    ];

    // const STATUS_PENDING = 'pending';
    // const STATUS_ACCEPTED = 'accepted';
    // const STATUS_REJECTED = 'rejected';

    // public static function statuses()
    // {
    //     return [
    //         self::STATUS_PENDING,
    //         self::STATUS_ACCEPTED,
    //         self::STATUS_REJECTED,
    //     ];
    // }

    protected $casts = [
        'is_owner' => 'boolean',
        'joined_at' => 'datetime',
        'removed_at' => 'datetime',
        'metadata' => 'array',
    ];

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * Relazione con il modello Wallet.
     * Supponendo che la tabella `wallets` abbia una colonna `collection_user_id`
     * per identificare il wallet associato al CollectionUser.
     */
    public function wallet()
    {
        return $this->hasOne(Wallet::class, 'user_id', 'id');
    }
}


#### Inizio File: /home/fabio/EGI/app/Models/Egi.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Egi extends Model
{

    use SoftDeletes;

    protected $fillable = [
        'collection_id', 'key_file', 'token_EGI', 'jsonMetadata', 'user_id',
        'auction_id', 'owner_id', 'drop_id', 'upload_id', 'creator', 'owner_wallet',
        'drop_title', 'title', 'description', 'extension', 'media', 'type', 'bind',
        'paired', 'price', 'floorDropPrice', 'position', 'creation_date', 'size',
        'dimension', 'is_published', 'mint', 'rebind', 'file_crypt', 'file_hash',
        'file_IPFS', 'file_mime', 'status', 'is_public', 'updated_by'
    ];

    public static function boot()
    {
        parent::boot();

        static::updated(function ($egi) {
            $egi->audits()->create([
                'user_id' => auth()->id(),
                'old_values' => $egi->getOriginal(),
                'new_values' => $egi->getChanges(),
                'action' => 'update',
            ]);
        });
    }

    public function audits()
    {
        return $this->hasMany(EgiAudit::class);
    }

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/EgiAudit.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class EgiAudit extends Model
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Models/Icon.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Icon extends Model
{
    use HasFactory;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'style',
        'type',
        'class',
        'html',
    ];

    /**
     * Accessor to get the full HTML for the icon.
     *
     * @return string
     */
    public function getFullHtmlAttribute(): string
    {
        return $this->html;
    }

    /**
     * Mutator to sanitize the HTML input.
     *
     * @param string $value
     */
    public function setHtmlAttribute(string $value): void
    {
        // Optional sanitization logic if needed
        $this->attributes['html'] = trim($value);
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/Membership.php ####

<?php

namespace App\Models;

use Laravel\Jetstream\Membership as JetstreamMembership;

class Membership extends JetstreamMembership
{
    /**
     * Indicates if the IDs are auto-incrementing.
     *
     * @var bool
     */
    public $incrementing = true;
}

#### Inizio File: /home/fabio/EGI/app/Models/Notification.php ####

<?php


namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Traits\UsesUuid;

class Notification extends Model
{
    use UsesUuid;

    protected $fillable = [
        'type',
        'notifiable_type',
        'notifiable_id',
        'outcome',
        'data',
        'read_at',
    ];

    protected $casts = [
        'data' => 'array', // Questo converte automaticamente il JSON in un array associativo
    ];

}

#### Inizio File: /home/fabio/EGI/app/Models/Permission.php ####

<?php

use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

Permission::findOrCreate('manage_roles');
Permission::findOrCreate('manage_icons');

$adminRole = Role::findOrCreate('admin');
$adminRole->givePermissionTo(['manage_roles', 'manage_icons']);

$editorRole = Role::findOrCreate('editor');
$editorRole->givePermissionTo(['manage_icons']); // L'editor può solo gestire le icone

#### Inizio File: /home/fabio/EGI/app/Models/User.php ####

<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use App\Traits\HasTeamRoles;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Fortify\TwoFactorAuthenticatable;
use Laravel\Jetstream\HasProfilePhoto;
use Laravel\Jetstream\HasTeams;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use HasApiTokens;
    use HasRoles;
    use Notifiable;


    /** @use HasFactory<\Database\Factories\UserFactory> */
    use HasFactory;
    use HasProfilePhoto;
    use HasTeams;
    use Notifiable;
    use TwoFactorAuthenticatable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'user_id',
        'name',
        'last_name',
        'email',
        'icon_style',
        'password',
        'language',
        'wallet',
        'wallet_balance',
        'consent',
        'bio_title',
        'bio_story',
        'title',
        'job_role',
        'username',
        'usertype',
        'street',
        'city',
        'region',
        'state',
        'zip',
        'home_phone',
        'cell_phone',
        'work_phone',
        'site_url',
        'facebook',
        'social_x',
        'tiktok',
        'instagram',
        'snapchat',
        'twitch',
        'linkedin',
        'discord',
        'telegram',
        'other',
        'birth_date',
        'fiscal_code',
        'tax_id_number',
        'doc_typo',
        'doc_num',
        'doc_issue_date',
        'doc_expired_date',
        'doc_issue_from',
        'doc_photo_path_f',
        'doc_photo_path_r',
        'org_name',
        'org_email',
        'org_street',
        'org_city',
        'org_region',
        'org_state',
        'org_zip',
        'org_site_url',
        'annotation',
        'org_phone_1',
        'org_phone_2',
        'org_phone_3',
        'rea',
        'org_fiscal_code',
        'org_vat_number',
        'current_team_id',
        'profile_photo_path',
    ];

    protected $casts = [
        'email_verified_at' => 'datetime',
        'birth_date' => 'date',
        'doc_issue_date' => 'date',
        'doc_expired_date' => 'date',
        'wallet_balance' => 'decimal:4',
        'consent' => 'boolean',
    ];


    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
        'two_factor_recovery_codes',
        'two_factor_secret',
    ];

    /**
     * The accessors to append to the model's array form.
     *
     * @var array<int, string>
     */
    protected $appends = [
        'profile_photo_url',
    ];

    public function getIconStyleAttribute(): string
    {
        // Ritorna l'icon_style dall'attributo o un valore di default
        return $this->attributes['icon_style'] ?? config('icons.default');
    }


    public function wallets()
    {
        return $this->hasMany(Wallet::class);
    }


    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    // protected function casts(): array
    // {
    //     return [
    //         'email_verified_at' => 'datetime',
    //         'password' => 'hashed',
    //     ];
    // }
}

#### Inizio File: /home/fabio/EGI/app/Models/Wallet.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Wallet extends Model
{
    use HasFactory;

    protected $fillable = [
        'collection_id',
        'user_id',
        'wallet',
        'royalty_mint',
        'royalty_rebind',
        'is_anonymous',
        'metadata',
    ];

    protected $casts = [
        'is_anonymous' => 'boolean',
        'metadata' => 'array',
    ];

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }


}

#### Inizio File: /home/fabio/EGI/app/Models/WalletChangeApproval.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class WalletChangeApproval extends Model
{
    use HasFactory;

    /**
     * La tabella associata al modello.
     *
     * @var string
     */
    protected $table = 'wallet_change_approvals';

    /**
     * Gli attributi assegnabili in massa.
     *
     * @var array
     */
    protected $fillable = [
        'id',
        'wallet_id',
        'requested_by_user_id',
        'approver_user_id',
        'change_type',
        'change_details',
        'status',
        'type', // Nuovo campo
        'rejection_reason',
    ];

        /**
     * The accessors to append to the model's array form.
     *
     * @var array<int, string>
     */
    protected $appends = [
        'notification_id',
    ];

    /**
     * Gli attributi che devono essere castati.
     *
     * @var array
     */
    protected $casts = [
        'change_details' => 'array', // Il campo JSON viene automaticamente convertito in array
    ];

    /**
     * Relazione con il modello Wallet.
     */
    public function wallet()
    {
        return $this->belongsTo(Wallet::class);
    }

    /**
     * Relazione con il modello User per l'utente che ha richiesto la modifica.
     */
    public function requestedBy()
    {
        return $this->belongsTo(User::class, 'requested_by_user_id');
    }

    /**
     * Relazione con il modello User per l'utente che approva la modifica.
     */
    public function approver()
    {
        return $this->belongsTo(User::class, 'approver_user_id');
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/CollectionInvitationNotification.php ####

<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class CollectionInvitationNotification extends Notification
{
    protected $invitationId;

    public function __construct($invitationId)
    {
        $this->invitationId = $invitationId;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {
        return [
            'message' => 'You have been invited to join a team.',
            'invitation_id' => $this->invitationId,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/WalletChangeRequest.php ####

<?php

namespace App\Notifications;

use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class WalletChangeRequest extends Notification
{
    private $approval;

    public function __construct($approval)
    {
        $this->approval = $approval;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        Log::channel('florenceegi')->info('WalletChangeRequest:toDatabase', [
            'notifiable' => $notifiable
        ]);

        return [
            'message' => $this->approval->change_type === 'create'
                ? __('A new wallet has been proposed for you.')
                : __('A change has been requested for your wallet.'),
            'wallet_address' => $this->approval->change_details['wallet_address'],
            'royalty_mint' => $this->approval->change_details['royalty_mint'],
            'royalty_rebind' => $this->approval->change_details['royalty_rebind'],
            'wallet_change_approvals_id' => $this->approval->id,
            'requested_by' => $this->approval->requested_by_user_id,
            'type' => $this->approval->change_type, // Aggiunto per distinguere i tipi di notifica
            'status' => 'proposal', // Definisce questa notifica come una [proposta]
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/WalletChangeResponse.php ####

<?php


namespace App\Notifications;

use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;

class WalletChangeResponse extends Notification
{
    private $approval;
    private $status;

    public function __construct($approval, $status)
    {
        $this->approval = $approval;
        $this->status = $status;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {
        return [
            'message' => $this->status === 'approved'
                ? __('Your wallet change has been approved.')
                : __('Your wallet change has been declined. Reason: ') . $this->approval->rejection_reason,
            'wallet_change_approvals_id' => $this->approval->id,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/CollectionPolicy.php ####

<?php

namespace App\Policies;

use App\Models\Collection;
use App\Models\User;
use Illuminate\Auth\Access\Response;

class CollectionPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Collection $collection): bool
    {
        return $user->can('read_collection');
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return $user->can('create_collection');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Collection $collection): bool
    {
        return $user->can('update_collection');
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Collection $collection): bool
    {
        return $user->can('delete_collection');
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, Collection $collection): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, Collection $collection): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/EgiPolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use Illuminate\Auth\Access\Response;

class EgiPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user): bool
    {
        return $user->can('read_egi');
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return $user->can('create_egi');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user): bool
    {
        return $user->can('update_egi');
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user): bool
    {
        return $user->can('delete_egi');
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/ProfilePolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use Illuminate\Auth\Access\Response;

class ProfilePolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, User $profileOwner)
    {
        return $user->id === $profileOwner->id;
    }
    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, User $model): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/TeamPolicy.php ####

<?php

namespace App\Policies;

use App\Models\Team;
use App\Models\User;
use Illuminate\Auth\Access\HandlesAuthorization;

class TeamPolicy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return true;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Team $team): bool
    {
        return $user->belongsToTeam($team);
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return true;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can add team members.
     */
    public function addTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can update team member permissions.
     */
    public function updateTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can remove team members.
     */
    public function removeTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/TeamWalletPolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\TeamWallet as Wallet;
use Illuminate\Auth\Access\Response;

class TeamWalletPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Wallet $wallet)
    {
        return $user->id === $wallet->user_id;
    }
    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, Wallet $wallet): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/AppServiceProvider.php ####

<?php

namespace App\Providers;


use App\Repositories\IconRepository;
use App\Services\FileStorageService;
use Illuminate\Support\ServiceProvider;


use App\Models\User;
use App\Models\TeamWallet as Wallet;
use App\Models\Collection;
use App\Models\Egi;
use App\Policies\ProfilePolicy;
use App\Policies\TeamWalletPolicy as WalletPolicy;
use App\Policies\CollectionPolicy;
use App\Policies\EgiPolicy;

class AppServiceProvider extends ServiceProvider
{

    protected $policies = [
        User::class => ProfilePolicy::class,
        Wallet::class => WalletPolicy::class,
        Collection::class => CollectionPolicy::class,
        // Egi::class => EgiPolicy::class,
    ];

    /**
     * Register any application services.
     */
    public function register(): void
    {
        $this->app->singleton(IconRepository::class);

        // Registra il servizio di storage dei file
        $this->app->singleton(FileStorageService::class, function () {
            return new FileStorageService();
        });
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/FileHelperServiceProvider.php ####

<?php


namespace App\Providers;

use App\Helpers\FileHelper;
use Illuminate\Support\ServiceProvider;

class FileHelperServiceProvider extends ServiceProvider
{
    public function register()
    {
        $this->app->singleton('file-helper', function () {
            return new FileHelper();
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/FortifyServiceProvider.php ####

<?php

namespace App\Providers;

use App\Actions\Fortify\CreateNewUser;
use App\Actions\Fortify\ResetUserPassword;
use App\Actions\Fortify\UpdateUserPassword;
use App\Actions\Fortify\UpdateUserProfileInformation;
use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Str;
use Laravel\Fortify\Fortify;

class FortifyServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        Fortify::createUsersUsing(CreateNewUser::class);
        Fortify::updateUserProfileInformationUsing(UpdateUserProfileInformation::class);
        Fortify::updateUserPasswordsUsing(UpdateUserPassword::class);
        Fortify::resetUserPasswordsUsing(ResetUserPassword::class);

        RateLimiter::for('login', function (Request $request) {
            $throttleKey = Str::transliterate(Str::lower($request->input(Fortify::username())).'|'.$request->ip());

            return Limit::perMinute(5)->by($throttleKey);
        });

        RateLimiter::for('two-factor', function (Request $request) {
            return Limit::perMinute(5)->by($request->session()->get('login.id'));
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/JetstreamServiceProvider.php ####

<?php

namespace App\Providers;

use App\Actions\Jetstream\AddTeamMember;
use App\Actions\Jetstream\CreateTeam;
use App\Actions\Jetstream\DeleteTeam;
use App\Actions\Jetstream\DeleteUser;
use App\Actions\Jetstream\InviteTeamMember;
use App\Actions\Jetstream\RemoveTeamMember;
use App\Actions\Jetstream\UpdateTeamName;
use Illuminate\Support\ServiceProvider;
use Laravel\Jetstream\Jetstream;

class JetstreamServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        $this->configurePermissions();

        Jetstream::createTeamsUsing(CreateTeam::class);
        Jetstream::updateTeamNamesUsing(UpdateTeamName::class);
        Jetstream::addTeamMembersUsing(AddTeamMember::class);
        Jetstream::inviteTeamMembersUsing(InviteTeamMember::class);
        Jetstream::removeTeamMembersUsing(RemoveTeamMember::class);
        Jetstream::deleteTeamsUsing(DeleteTeam::class);
        Jetstream::deleteUsersUsing(DeleteUser::class);
    }

    /**
     * Configure the roles and permissions that are available within the application.
     */
    protected function configurePermissions(): void
    {
        Jetstream::defaultApiTokenPermissions(['read']);

        Jetstream::role('admin', 'Administrator', [
            'create',
            'read',
            'update',
            'delete',
        ])->description('Administrator users can perform any action.');

        Jetstream::role('superadmin', 'SuperAdmin', [
            'read-config',
            'create-config',
            'update-config',
            'delete-config',
        ])->description('Ruolo amministrativo con accesso completo alle configurazioni.');

        Jetstream::role('editor', 'Editor', [
            'read',
            'create',
            'update',
        ])->description('Editor users have the ability to read, create, and update.');
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/ViewDebugServiceProvider.php ####

<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\View;

class ViewDebugServiceProvider extends ServiceProvider
{
    public function boot()
    {
        View::composer('*', function ($view) {
            $relativePath = str_replace(
                base_path('resources/views/') . '/',
                '',
                $view->getPath()
            );

            view()->share('__current_view_path', $relativePath);

            if (app()->environment('local')) {
                logger()->info('Current view: ' . $relativePath);
            }
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Repositories/IconRepository.php ####

<?php

namespace App\Repositories;

use App\Models\Icon;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Log;

class IconRepository
{
    /**
     * Recupera un'icona specifica dal database o dalla cache.
     *
     * @param string $name  Nome dell'icona.
     * @param string $style Stile dell'icona.
     * @param string|null $customClass Classe personalizzata (opzionale).
     * @return string|null  Contenuto HTML dell'icona.
     */
    public function getIcon(string $name, string $style, ?string $customClass = null): ?string
    {

        $this->clearCache($name, $style, $customClass);

        // Log::channel('florenceegi')->info( 'Class IconRepository. Method: getIcon. Action: customClass: (' . $customClass .  ') name: (' . $name .')');

        // Costruisce la chiave della cache
        $cacheKey = $this->buildCacheKey($name, $style, $customClass);
        // Log::channel('florenceegi')->info('Cache Key Generated', ['key' => $cacheKey, 'name' => $name, 'style' => $style, 'customClass' => $customClass]);

        // Controlla se l'elemento è già in cache
        $cachedValue = Cache::get($cacheKey);
        if ($cachedValue) {
            // Log::channel('florenceegi')->info('Cache Hit', ['key' => $cacheKey, 'cachedValue' => $cachedValue]);

            // Sostituisce il segnaposto %class% con la classe personalizzata o quella di default
            $finalClass = $customClass ?? 'default-class';
            $processedValue = str_replace('%class%', $finalClass, $cachedValue);
            // Log::channel('florenceegi')->info('Processed Cached Value', ['processedValue' => $processedValue, 'finalClass' => $finalClass]);

            return $processedValue;
        }

        // Cache miss: esegue la closure per calcolare il valore
        // Log::channel('florenceegi')->info('Class IconRepository. Method: getIcon. Action: Icon name', ['name' => $name]);

        return Cache::remember($cacheKey, 3600, function () use ($name, $style, $customClass) {
            // Log::channel('florenceegi')->info('Querying Database', ['name' => $name, 'style' => $style]);

            $query_icon = Icon::where('name', $name)->where('style', $style)->first();

            if (!$query_icon) {
                Log::channel('florenceegi')->warning('Class IconRepository. Method: getIcon. Action: Icon Not Found', ['name' => $name, 'style' => $style]);

                $fallback_icon = Icon::where('name', 'fallback')->where('style', $style)->first();

                if ($fallback_icon) {
                    return $fallback_icon->html;
                }

                return 'fallback'; // Puoi specificare un'icona di fallback
            }

            if ($customClass) {
                $finalClass = $customClass;
            } else {
                $finalClass = $query_icon->class;
            }

            // Log::channel('florenceegi')->info('Class IconRepository. Method: getIcon. Action: Processed', ['$finalClass' => $finalClass]);
            $processedHtml = str_replace('%class%', $finalClass, $query_icon->html);

            return $processedHtml;
        });
    }

    /**
     * Recupera un'icona con lo stile predefinito.
     *
     * @param string $name Nome dell'icona.
     * @return string      Contenuto HTML dell'icona (o fallback).
     */
    public function getDefaultIcon(string $name): string
    {
        $defaultStyle = config('icons.default');

        // Determina lo stile dell'utente autenticato
        if (Auth::check()) {
            $defaultStyle = Auth::user()->icon_style ?? $defaultStyle;
        }

        return $this->getIcon($name, $defaultStyle) ?? $this->getFallbackIcon();
    }


    /**
     * Recupera un'icona di fallback se quella richiesta non esiste.
     *
     * @return string Contenuto HTML dell'icona di fallback.
     */
    protected function getFallbackIcon(): string
    {
        return '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m2 0a2 2 0 00-2-2H9a2 2 0 00-2 2m8 0a2 2 0 01-2 2H9a2 2 0 01-2-2m6 0H9"></path>
                </svg>';
    }

    /**
     * Rimuove un'icona dalla cache.
     *
     * @param string|null $name  Nome dell'icona (opzionale).
     * @param string|null $style Stile dell'icona (opzionale).
     */
    public function clearCache(?string $name = null, ?string $style = null, ?string $customClass): void
    {
        if ($name && $style) {
            $cacheKey = $this->buildCacheKey($name, $style, $customClass);
            Cache::forget($cacheKey);
        } else {
            // Elimina tutte le icone dalla cache
            Cache::tags(['icons'])->flush();
        }
    }

    /**
     * Precarica tutte le icone in cache.
     */
    public function preloadIcons(): void
    {
        Icon::all()->each(function ($icon) {
            $cacheKey = $this->buildCacheKey($icon->name, $icon->style, $icon->customClass);
            Cache::put($cacheKey, $icon->html, 3600);
        });
    }

    /**
     * Costruisce la chiave della cache per un'icona.
     *
     * @param string $name  Nome dell'icona.
     * @param string $style Stile dell'icona.
     * @return string Chiave della cache.
     */
    protected function buildCacheKey(string $name, string $style, ?string $customClass = null): string
    {
        // Usa un hash per evitare che la chiave sia troppo lunga
        $rawKey = "icon:{$style}:{$name}:{$customClass}";
        return 'icon:' . md5($rawKey);
    }

}

#### Inizio File: /home/fabio/EGI/app/Services/EGIImageService.php ####

<?php

namespace App\Services;

use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class EGIImageService
{
    /**
     * Elimina tutti i file che iniziano con $prefix in $pathKey, su tutti i servizi attivi.
     */
    public static function removeOldImage(string $prefix, int $collectionId, string $pathKey): bool
    {
        $activeHostings = static::getActiveHostings();
        $folderPath = static::resolveFolderPath($pathKey, $collectionId);

        foreach ($activeHostings as $hostingName => $hostingConfig) {
            try {
                $disk = Storage::disk($hostingConfig['disk']);
                $files = $disk->files($folderPath);

                foreach ($files as $file) {
                    // Str::startsWith serve a controllare se il filename inizia col prefisso
                    if (Str::startsWith(basename($file), $prefix)) {
                        $disk->delete($file);
                    }
                }
            } catch (\Exception $e) {
                Log::channel('florenceegi')->error('Errore durante la rimozione del vecchio file', [
                    'error'        => $e->getMessage(),
                    'prefix'       => $prefix,
                    'collectionId' => $collectionId,
                    'pathKey'      => $pathKey,
                ]);
                return false;
            }
        }

        return true;
    }

    /**
     * Salva il file $filename sul disco di tutti i servizi attivi.
     * Ritorna true se almeno un caricamento va a buon fine.
     */
    public static function saveEGIImage(
        int $collectionId,
        string $filename,
        $file,
        string $pathKey
    ): bool {
        $activeHostings = static::getActiveHostings();
        $folderPath = static::resolveFolderPath($pathKey, $collectionId);

        $atLeastOneSuccess = false;

        foreach ($activeHostings as $hostingName => $hostingConfig) {
            try {
                $disk = Storage::disk($hostingConfig['disk']);
                // Invece di costruire manualmente il filePath e fare file_get_contents,
                // usiamo putFileAs(), che si occupa di caricare il file correttamente.
                $disk->putFileAs($folderPath, $file, $filename);

                $atLeastOneSuccess = true;
            } catch (\Exception $e) {
                Log::channel('florenceegi')->error('Errore salvataggio immagine EGI', [
                    'error'        => $e->getMessage(),
                    'filename'     => $filename,
                    'collectionId' => $collectionId,
                    'hosting'      => $hostingName,
                ]);
            }
        }

        return $atLeastOneSuccess;
    }


    /**
     * Ritorna l'URL (o percorso) dal caching; se non presente in cache, lo costruisce e lo salva.
     */
    public static function getCachedEGIImagePath(
        int $collectionId,
        string $filename,
        bool $isPublished,
        ?string $hostingService = null,
        string $pathKey = 'head.banner'
    ): ?string {
        if (!$filename) {
            return null;
        }

        // Creiamo una chiave univoca per la cache
        $cacheKey = "EGIImagePath_{$collectionId}_{$filename}_{$hostingService}";

        return Cache::remember($cacheKey, now()->addDay(), function () use (
            $collectionId, $filename, $pathKey, $hostingService, $isPublished
        ) {
            // Se non c'è hostingService, usa quello predefinito
            $hostingToUse = $hostingService ?: static::getDefaultHosting();

            // Ottieni i dettagli dell'hosting
            $hostingConfig = config("paths.hosting.$hostingToUse");
            if (!$hostingConfig) {
                return null;
            }

            $folderPath = static::resolveFolderPath($pathKey, $collectionId);

            $baseUrl = rtrim($hostingConfig['url'], '/');
            $fullUrl = "{$baseUrl}/{$folderPath}{$filename}";

            // Se l'EGI non è pubblicato, potresti gestire un placeholder o simile
            if (!$isPublished) {
                // Esempio, potresti loggare o ritornare un'immagine placeholder
            }

            return $fullUrl;
        });
    }

    /**
     * Invalida la cache per un certo file.
     */
    public static function invalidateEGIImageCache(
        int $collectionId,
        string $filename,
        ?string $hostingService = null
    ): void {
        $cacheKey = "EGIImagePath_{$collectionId}_{$filename}_{$hostingService}";
        Cache::forget($cacheKey);
    }


    /**
     * Recupera i soli hosting con 'is_active' => true
     */
    protected static function getActiveHostings(): array
    {
        $allHostings = config('paths.hosting', []);
        return array_filter($allHostings, fn($hosting) => $hosting['is_active'] === true);
    }

    /**
     * Restituisce il nome dell'hosting di default (es. "Local") o "Digital Ocean".
     */
    protected static function getDefaultHosting(): string
    {
        $default = config('paths.default_hosting', 'Local');
        return $default;
    }

    /**
     * Risolve la path prendendola da config('paths.paths') e sostituendo {collectionId}.
     */
    protected static function resolveFolderPath(string $pathKey, int $collectionId): string
    {
        $keys = explode('.', $pathKey);
        $pathsConfig = config('paths.paths', []);

        $current = $pathsConfig;
        foreach ($keys as $key) {
            if (!isset($current[$key])) {
                return '';
            }
            $current = $current[$key];
        }

        // Ora $current è una stringa che contiene "{collectionId}"
        return str_replace('{collectionId}', $collectionId, $current);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/FileStorageService.php ####

<?php

namespace App\Services;

use Illuminate\Support\Facades\Log;
use Livewire\WithFileUploads;
use Exception;
use Illuminate\Support\Facades\Storage;
use App\Models\Collection;

class FileStorageService
{
    use WithFileUploads; // Necessario per sfruttare le funzionalità di Livewire

    /**
     * Salva un file Livewire in una posizione specifica e aggiorna il percorso nel database.
     *
     * @param \Livewire\TemporaryUploadedFile $file
     * @param mixed $file
     * @param string $filename
     * @param string $disk
     * @param int $collectionId
     * @param string $imageType
     * @return string
     * @throws Exception
     */
    public function saveFile($file, string $path, ?string $filename = null, string $disk = 'public', int $collectionId, string $imageType): string
    {
        try {
            // Usa storeAs per salvare il file
            if ($filename) {
                $savedPath = $file->storeAs($path, $filename, $disk);
            } else {
                $savedPath = $file->store($path, $disk);
            }

            Log::channel('florenceegi')->info('File salvato:', ['path' => $savedPath]);

            // Verifica se il file esiste usando il disco passato
            if (!Storage::disk($disk)->exists($savedPath)) {
                Log::channel('florenceegi')->error('File non trovato dopo storeAs.', ['path' => $savedPath]);
                throw new Exception('Errore durante il salvataggio del file.');
            }

            // Aggiorna il percorso nel database
            $this->updateCollectionImagePath($collectionId, $savedPath, $imageType);

            return $savedPath; // Restituisce il percorso relativo
        } catch (Exception $e) {
            Log::channel('florenceegi')->error('Errore nel salvataggio del file:', ['message' => $e->getMessage()]);
            throw $e;
        }
    }

    /**
     * Aggiorna il percorso dell'immagine nella tabella collections.
     *
     * @param int $collectionId
     * @param string $savedPath
     * @param string $imageType
     * @throws Exception
     */
    protected function updateCollectionImagePath(int $collectionId, string $savedPath, string $imageType): void
    {
        $collection = Collection::findOrFail($collectionId);

        switch ($imageType) {
            case 'banner':
                $collection->path_image_banner = $savedPath;
                break;
            case 'card':
                $collection->path_image_card = $savedPath;
                break;
            case 'avatar':
                $collection->path_image_avatar = $savedPath;
                break;
            case 'EGI':
                $collection->path_image_EGI = $savedPath;
                break;
            default:
                throw new Exception("Tipo di immagine non supportato: $imageType");
        }

        $collection->save();

        Log::channel('florenceegi')->info('Percorso immagine aggiornato nel database.', [
            'collection_id' => $collectionId,
            'image_type' => $imageType,
            'path' => $savedPath,
        ]);
    }
}


#### Inizio File: /home/fabio/EGI/app/Services/Menu/ContextMenus.php ####

<?php

namespace App\Services\Menu;

use App\Services\Menu\Items\PermissionsRolesMenu;
use App\Services\Menu\Items\AssignRolesMenu;
use App\Services\Menu\Items\AssignPermissionsMenu;
use App\Services\Menu\Items\OpenCollectionMenu;
use App\Services\Menu\Items\NewCollectionMenu;

class ContextMenus
{
    public static function getMenusForContext(string $context): array
    {
        $menus = [];

        switch ($context) {
            case 'dashboard':
                $adminMenu = new MenuGroup('Admin Tools', '<i class="fas fa-tools"></i>', [
                    new PermissionsRolesMenu(),
                    new AssignRolesMenu(),
                    new AssignPermissionsMenu(),
                ]);
                $menus[] = $adminMenu;

                $collectionsMenu = new MenuGroup('Collections', '<i class="fas fa-folder-open"></i>', [
                    new OpenCollectionMenu(),
                    new NewCollectionMenu(),
                ]);
                $menus[] = $collectionsMenu;

                break;

            case 'collections':
                $collectionsMenu = new MenuGroup('Collections', '<i class="fas fa-folder-open"></i>', [
                    new OpenCollectionMenu(),
                    new NewCollectionMenu(),
                ]);
                $menus[] = $collectionsMenu;
                break;

            default:
                $defaultMenu = new MenuGroup('General', '<i class="fas fa-cogs"></i>', []);
                $menus[] = $defaultMenu;
                break;
        }

        return $menus;
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/AssignPermissionsMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class AssignPermissionsMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Assign Permissions', 'admin.assign.permissions.form', 'assign_permissions', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/AssignRolesMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class AssignRolesMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Assign Roles', 'admin.assign.role.form', 'assign_roles', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/BackToDashboardMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class BackToDashboardMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Back to Dashboard', 'dashboard', 'back', 'view_dashboard');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/NewCollectionMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class NewCollectionMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('New Collection', 'collections.create', 'new_collection', 'create_collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/OpenCollectionMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class OpenCollectionMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Open Collection', 'collections.open', 'open', 'view_collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/PermissionsRolesMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class PermissionsRolesMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Permissions & Roles', 'admin.roles.index', 'permissions_roles', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuConditionEvaluator.php ####

<?php

namespace App\Services\Menu;

use Illuminate\Support\Facades\Auth;

class MenuConditionEvaluator
{
    /**
     * Verifica se una voce di menu può essere visualizzata in base ai permessi dell'utente.
     *
     * @param MenuItem $menuItem
     * @return bool
     */
    public function shouldDisplay(MenuItem $menuItem): bool
    {

        // dump([
        //     'item' => $menuItem->name,
        //     'permission' => $menuItem->permission,
        //     'user' => Auth::check() ? Auth::user()->toArray() : null,
        //     'can' => Auth::check() && Auth::user()->can($menuItem->permission),
        // ]);

        // Se non è richiesto un permesso specifico, mostra la voce di menu
        if (empty($menuItem->permission)) {
            return true;
        }

        // Controlla se l'utente autenticato ha il permesso richiesto
        return Auth::check() && Auth::user()->can($menuItem->permission);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuGroup.php ####

<?php

namespace App\Services\Menu;

class MenuGroup
{
    public string $name;
    public ?string $icon;
    public array $items;

    public function __construct(string $name, ?string $icon = null, array $items = [])
    {
        $this->name = $name;
        $this->icon = $icon;
        $this->items = $items;
    }

    /**
     * Aggiunge un item al menu.
     *
     * @param MenuItem $item
     */
    public function addItem(MenuItem $item): void
    {
        $this->items[] = $item;
    }

    /**
     * Verifica se il menu ha item visibili.
     *
     * @return bool
     */
    public function hasVisibleItems(): bool
    {
        return !empty($this->items);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuItem.php ####

<?php

namespace App\Services\Menu;

class MenuItem
{
    public string $name;
    public string $route;
    public ?string $icon;
    public ?string $permission;
    /** @var MenuItem[]|null */
    public ?array $children;

    public function __construct(
        string $name,
        string $route,
        ?string $icon = null,
        ?string $permission = null,
        ?array $children = null
    ) {
        $this->name = $name;
        $this->route = $route;
        $this->icon = $icon;
        $this->permission = $permission;
        $this->children = $children;
    }

    public function hasChildren(): bool
    {
        return !empty($this->children);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuScanner.php ####

<?php

namespace App\Services\Menu;

use Illuminate\Support\Facades\File;

class MenuScanner
{
    protected string $itemsPath = 'app/Services/Menu/Items';

    /**
     * @return array<string, MenuItem[]>
     *
     * Restituisce un array associativo con chiave = contesto, valore = array di MenuItem
     */
    public function getMenuGroups(): array
    {
        // Supponiamo che le classi menu abbiano dei naming convention tipo: Admin*, Dashboard*, Collections*, ...
        // O che magari tu abbia un metodo più intelligente per capire il contesto.
        // Qui ipotizziamo di fare i raggruppamenti in base alle route: per esempio route 'admin.xxx' => 'admin'

        // Per semplicità, immaginiamo che il metodo seguente esista o lo implementi tu:
        // loadAllMenuItems(): ritorna un array di istanze MenuItem caricate dinamicamente
        $allItems = $this->loadAllMenuItems();

        $groups = [];
        foreach ($allItems as $item) {
            // Estraiamo il contesto dalla route
            $context = explode('.', $item->route)[0] ?? 'dashboard';
            $groups[$context][] = $item;
        }

        return $groups;
    }

    protected function loadAllMenuItems(): array
    {
        $items = [];
        // Carica tutte le classi in app/Services/Menu/Items
        $files = File::files(base_path($this->itemsPath));
        foreach ($files as $file) {
            $className = 'App\\Services\\Menu\\Items\\' . $file->getFilenameWithoutExtension();
            if (class_exists($className)) {
                $instance = new $className();
                if ($instance instanceof MenuItem) {
                    $items[] = $instance;
                }
            }
        }
        return $items;
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/InvitationNotificationHandler.php ####

<?php


namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;
use Illuminate\Notifications\DatabaseNotification;
use App\Models\CollectionInvitation;
use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;

class InvitationNotificationHandler implements NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action)
    {
        $invitationId = $notification->data['invitation_id'];

        if ($action === 'accept') {
            $invitation = CollectionInvitation::findOrFail($invitationId);
            $invitation->update(['status' => 'accepted']);

            CollectionUser::create([
                'collection_id' => $invitation->collection_id,
                'user_id' => Auth::id(),
                'role' => $invitation->role,
            ]);

            $notification->update(['outcome' => 'accepted']);
        } elseif ($action === 'decline') {
            $invitation = CollectionInvitation::findOrFail($invitationId);
            $invitation->update(['status' => 'declined']);

            $notification->update(['outcome' => 'declined']);
        } else {
            throw new \Exception("Azione '{$action}' non supportata per InvitationNotification.");
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/NotificationHandlerFactory.php ####

<?php

namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;

class NotificationHandlerFactory
{
    public static function getHandler(string $type): NotificationHandlerInterface
    {
        $handlers = [
            'App\Notifications\WalletChangeRequest' => WalletChangeRequestHandler::class,
            'App\Notifications\InvitationNotification' => InvitationNotificationHandler::class,
        ];

        if (!isset($handlers[$type])) {
            throw new \Exception("Gestore per il tipo '{$type}' non trovato.");
        }

        return app($handlers[$type]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/WalletChangeRequestHandler.php ####

<?php

namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;
use Illuminate\Notifications\DatabaseNotification;
use App\Models\WalletChangeApproval;

class WalletChangeRequestHandler implements NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action)
    {
        $approvalId = $notification->data['approval_id'];

        if ($action === 'accept') {
            // Logica per approvare
            WalletChangeApproval::findOrFail($approvalId)->update(['status' => 'approved']);
            $notification->update(['outcome' => 'accepted']);
        } elseif ($action === 'decline') {
            // Logica per declinare
            WalletChangeApproval::findOrFail($approvalId)->update(['status' => 'declined']);
            $notification->update(['outcome' => 'declined']);
        } else {
            throw new \Exception("Azione '{$action}' non supportata per WalletChangeRequest.");
        }
    }
}


#### Inizio File: /home/fabio/EGI/app/Services/Proposals/Handlers/WalletProposalHandler.php ####

<?php

namespace App\Services\Proposals\Handlers;

use App\Contracts\ProposalHandlerInterface;
use App\Models\WalletChangeApproval;
use App\Notifications\ProposalDeclinedNotification;
use Exception;

class WalletProposalHandler implements ProposalHandlerInterface
{
    /**
     * Gestisce il declino di una proposta di modifica del wallet.
     *
     * @param int $proposalId
     * @param string $reason
     * @return void
     * @throws Exception
     */
    public function decline(int $proposalId, string $reason): void
    {
        $proposal = WalletChangeApproval::findOrFail($proposalId);

        if ($proposal->status !== 'pending') {
            throw new Exception("The proposal is not in a pending state.");
        }

        // Aggiorna lo stato della proposta e aggiunge la motivazione
        $proposal->update([
            'status' => 'declined',
            'rejection_reason' => $reason,
        ]);

        // Invia una notifica al proponente
        $proposal->requestedBy->notify(
            new ProposalDeclinedNotification($proposal, $reason)
        );
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Proposals/ProposalHandlerFactory.php ####

<?php

namespace App\Services\Proposals;

use App\Contracts\ProposalHandlerInterface;
use Exception;

class ProposalHandlerFactory
{
    /**
     * Restituisce il gestore appropriato in base al contesto.
     *
     * @param string $context
     * @return ProposalHandlerInterface
     * @throws Exception
     */
    public function getHandler(string $context): ProposalHandlerInterface
    {
        $handlers = [
            'wallet' => \App\Services\Proposals\Handlers\WalletProposalHandler::class,
            'invitation' => \App\Services\Proposals\Handlers\InvitationProposalHandler::class,
            // Aggiungere altri handler qui
        ];

        if (!isset($handlers[$context])) {
            throw new Exception("Handler for context '{$context}' not found.");
        }

        return app($handlers[$context]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasCreateDefaultCollectionWallets.php ####

<?php

namespace App\Traits;

use App\Models\Collection;
use App\Models\Wallet;
use Illuminate\Support\Facades\DB;

trait HasCreateDefaultCollectionWallets
{
    /**
     * Genera i wallet di default per una collection.
     *
     * @param  Collection  $collection
     * @param  string  $wallet_creator
     */
    public function generateDefaultWallets(Collection $collection, string $wallet_creator, $creator_id): void
    {
        $natan_wallet_address = config('app.natan_wallet_address');
        $natan_royalty_mint = config('app.natan_royalty_mint');
        $natan_royalty_rebind = config('app.natan_royalty_rebind');
        $mediator_royalty_mint = config('app.mediator_royalty_mint');
        $mediator_royalty_rebind = config('app.mediator_royalty_rebind');
        $epp_wallet_address = config('app.epp_wallet_address');
        $epp_royalty_mint = config('app.epp_royalty_mint');
        $epp_royalty_rebind = config('app.epp_royalty_rebind');
        $creator_royalty_mint = config('app.creator_royalty_mint');
        $creator_royalty_rebind = config('app.creator_royalty_rebind');
        $natan_id = config('app.natan_id');
        $epp_id = config('app.epp_id');

        DB::transaction(function () use (
            $collection,
            $natan_wallet_address,
            $natan_royalty_mint,
            $natan_royalty_rebind,
            $mediator_royalty_mint,
            $mediator_royalty_rebind,
            $epp_wallet_address,
            $epp_royalty_mint,
            $epp_royalty_rebind,
            $wallet_creator,
            $creator_royalty_mint,
            $creator_royalty_rebind,
            $natan_id,
            $epp_id,
            $creator_id
        ) {
            // Wallet per natan
            $this->createWallet('natan', $natan_wallet_address, $natan_royalty_mint, $natan_royalty_rebind, $collection, $natan_id);

            // Wallet per il Mediator (di default uguale a natan)
            // PER IL MOMENTO NON GESTITO
            // $this->createWallet('Mediator', $natan_wallet_address, $mediator_royalty_mint, $mediator_royalty_rebind, $collection);

            // Wallet per EPP
            $this->createWallet('EPP', $epp_wallet_address, $epp_royalty_mint, $epp_royalty_rebind, $collection, $epp_id);

            // Wallet per il Creator
            $this->createWallet('Creator', $wallet_creator, $creator_royalty_mint, $creator_royalty_rebind, $collection, $creator_id);
        });
    }

    /**
     * Crea un wallet per una collection.
     *
     * @param  string  $role
     * @param  string  $address
     * @param  string  $royalty_mint
     * @param  string  $royalty_rebind
     * @param  Collection  $collection
     */
    protected function createWallet(string $role, string $address, string $royalty_mint, string $royalty_rebind, Collection $collection, $id): void
    {
        Wallet::create([
            'collection_id' => $collection->id,
            'user_id' => $id,
            'platform_role' => $role,
            'wallet' => $address,
            'royalty_mint' => $royalty_mint,
            'royalty_rebind' => $royalty_rebind,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasPermissionTrait.php ####

<?php

namespace App\Traits;

use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Spatie\Permission\Models\Role;

trait HasPermissionTrait
{
    /**
     * Verifica se l'utente autenticato ha il permesso specificato per una collezione.
     *
     * @param  $collection
     * @param  string  $permission
     * @return bool
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function hasPermission($collection, string $permission): bool
    {
        // Recupera l'utente autenticato
        $user = Auth::user();

        Log::channel('florenceegi')->info('HasPermissionTraits: User: ' . $user->id);

        // Leggi il ruolo dell'utente nella tabella collection_user
        $roleName = $collection->users()
            ->where('user_id', $user->id)
            ->pluck('role')
            ->first();

            Log::channel('florenceegi')->info('HasPermissionTraits: Debug Info', [
                'User ID' => $user->id,
                'Collection ID' => $collection->id,
                'Role Name' => $roleName
            ]);

        if (!$roleName) {
            // Lancia un'eccezione se l'utente non è associato alla collezione
            throw new \Illuminate\Auth\Access\AuthorizationException('user id: '. $user->name . ' '. $user->last_name.  ' Non sei associato a questa collezione.');
        }

        // Verifica se il ruolo dell'utente ha il permesso richiesto
        $hasPermission = Role::where('name', $roleName)
            ->whereHas('permissions', function ($query) use ($permission) {
                $query->where('name', $permission);
            })
            ->exists();

        if (!$hasPermission) {
            // Lancia un'eccezione se il permesso non è presente
            throw new \Illuminate\Auth\Access\AuthorizationException('Non hai i permessi necessari per eseguire questa azione.');
        }

        return true;
    }

    public function userHasPermissionInCollection($collectionId, $permission)
    {
        $userId = Auth::id();

        // Recupera il ruolo dell'utente nella collection
        $role = CollectionUser::where('collection_id', $collectionId)
            ->where('user_id', $userId)
            ->pluck('role')
            ->first();

        // Verifica se il ruolo ha il permesso specifico
        return Role::where('name', $role)
            ->whereHas('permissions', function ($query) use ($permission) {
                $query->where('name', $permission);
            })
            ->exists();
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasTeamRoles.php ####

<?php

namespace App\Traits;

use Spatie\Permission\Traits\HasRoles;

trait HasTeamRoles
{
    use HasRoles;

    /**
     * Assegna un ruolo all'utente in un contesto di team specifico.
     */
    public function assignRoleToTeam(string $role, $team)
    {
        $this->assignRole($role, $team);
    }

    /**
     * Verifica se l'utente ha un ruolo specifico in un team.
     */
    public function hasRoleInTeam(string $role, $team): bool
    {
        return $this->hasRole($role, $team);
    }

    /**
     * Relazione con i ruoli assegnati in un contesto di team.
     */
    public function roles()
    {
        return $this->morphToMany(
            config('permission.models.role'),
            'model',
            config('permission.table_names.model_has_roles'),
            'model_id',
            'role_id'
        )->withPivot('team_id');
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasTeams.php ####

<?php

namespace Laravel\Jetstream;

use Illuminate\Support\Str;
use Laravel\Sanctum\HasApiTokens;

trait HasTeams
{
    /**
     * Determine if the given team is the current team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function isCurrentTeam($team)
    {
        return $team->id === $this->currentTeam->id;
    }

    /**
     * Get the current team of the user's context.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function currentTeam()
    {
        if (is_null($this->current_team_id) && $this->id) {
            $this->switchTeam($this->personalTeam());
        }

        return $this->belongsTo(Jetstream::teamModel(), 'current_team_id');
    }

    /**
     * Switch the user's context to the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function switchTeam($team)
    {
        if (! $this->belongsToTeam($team)) {
            return false;
        }

        $this->forceFill([
            'current_team_id' => $team->id,
        ])->save();

        $this->setRelation('currentTeam', $team);

        return true;
    }

    /**
     * Get all of the teams the user owns or belongs to.
     *
     * @return \Illuminate\Support\Collection
     */
    public function allTeams()
    {
        return $this->ownedTeams->merge($this->teams)->sortBy('name');
    }

    /**
     * Get all of the teams the user owns.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function ownedTeams()
    {
        return $this->hasMany(Jetstream::teamModel());
    }

    /**
     * Get all of the teams the user belongs to.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function teams()
    {
        return $this->belongsToMany(Jetstream::teamModel(), Jetstream::membershipModel())
                        ->withPivot('role')
                        ->withTimestamps()
                        ->as('membership');
    }

    /**
     * Get the user's "personal" team.
     *
     * @return \App\Models\Team
     */
    public function personalTeam()
    {
        return $this->ownedTeams->where('personal_team', true)->first();
    }

    /**
     * Determine if the user owns the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function ownsTeam($team)
    {
        if (is_null($team)) {
            return false;
        }

        return $this->id == $team->{$this->getForeignKey()};
    }

    /**
     * Determine if the user belongs to the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function belongsToTeam($team)
    {
        if (is_null($team)) {
            return false;
        }

        return $this->ownsTeam($team) || $this->teams->contains(function ($t) use ($team) {
            return $t->id === $team->id;
        });
    }

    /**
     * Get the role that the user has on the team.
     *
     * @param  mixed  $team
     * @return \Laravel\Jetstream\Role|null
     */
    public function teamRole($team)
    {
        if ($this->ownsTeam($team)) {
            return new OwnerRole;
        }

        if (! $this->belongsToTeam($team)) {
            return;
        }

        $role = $team->users
            ->where('id', $this->id)
            ->first()
            ->membership
            ->role;

        return $role ? Jetstream::findRole($role) : null;
    }

    /**
     * Determine if the user has the given role on the given team.
     *
     * @param  mixed  $team
     * @param  string  $role
     * @return bool
     */
    public function hasTeamRole($team, string $role)
    {
        if ($this->ownsTeam($team)) {
            return true;
        }

        return $this->belongsToTeam($team) && optional(Jetstream::findRole($team->users->where(
            'id', $this->id
        )->first()->membership->role))->key === $role;
    }

    /**
     * Get the user's permissions for the given team.
     *
     * @param  mixed  $team
     * @return array
     */
    public function teamPermissions($team)
    {
        if ($this->ownsTeam($team)) {
            return ['*'];
        }

        if (! $this->belongsToTeam($team)) {
            return [];
        }

        return (array) optional($this->teamRole($team))->permissions;
    }

    /**
     * Determine if the user has the given permission on the given team.
     *
     * @param  mixed  $team
     * @param  string  $permission
     * @return bool
     */
    public function hasTeamPermission($team, string $permission)
    {
        if ($this->ownsTeam($team)) {
            return true;
        }

        if (! $this->belongsToTeam($team)) {
            return false;
        }

        if (in_array(HasApiTokens::class, class_uses_recursive($this)) &&
            ! $this->tokenCan($permission) &&
            $this->currentAccessToken() !== null) {
            return false;
        }

        $permissions = $this->teamPermissions($team);

        return in_array($permission, $permissions) ||
               in_array('*', $permissions) ||
               (Str::endsWith($permission, ':create') && in_array('*:create', $permissions)) ||
               (Str::endsWith($permission, ':update') && in_array('*:update', $permissions));
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasUtilitys.php ####

<?php

namespace App\Traits;

use App\Exceptions\ErrorDispatcher;
use App\Exceptions\ErrorResult;
use App\Mail\ErrorOccurredMailable;
use App\Services\TestingConditionsManager;
use Defuse\Crypto\Crypto;
use Defuse\Crypto\Exception\BadFormatException;
use Defuse\Crypto\Exception\EnvironmentIsBrokenException;
use Defuse\Crypto\Exception\WrongKeyOrModifiedCiphertextException;
use Defuse\Crypto\Key;
use Exception;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Storage;

trait HasUtilitys
{
    /**
     * Get the disk that profile photos should be stored on.
     */
    protected function folderRoot(): string
    {
        return isset($_ENV['FOLDER_ROOT']) ? $_ENV['FOLDER_ROOT'] : 'storage';
    }

    /**
     * Encrypt and decrypt
     *
     * @author Nazmul Ahsan <n.mukto@gmail.com>
     *
     * @link http://nazmulahsan.me/simple-two-way-function-encrypt-decrypt-string
     *
     * @param  string  $string  string to be encrypted/decrypted
     * @param  string  $action  what to do with this? e for encrypt, d for decrypt
     */
    public function my_simple_crypt($string, $action = 'e'): bool|string
    {
        // you may change these values to your own
        $secret_key = 'my_simple_secret_key';
        $secret_iv = 'my_simple_secret_iv';

        $output = false;
        $encrypt_method = 'AES-256-CBC';
        $key = hash('sha256', $secret_key);
        $iv = substr(hash('sha256', $secret_iv), 0, 16);

        if ($action == 'e') {
            $output = base64_encode(openssl_encrypt($string, $encrypt_method, $key, 0, $iv));
        } elseif ($action == 'd') {
            $output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
        }

        return $output;
    }

    /**
     * Cripta o decripta una stringa utilizzando la chiave di crittografia fornita.
     *
     * @param  string  $string  La stringa da criptare o decriptare.
     * @param  string  $action  L'azione da eseguire: 'e' per criptare, 'd' per decriptare.
     * @return bool|string Restituisce la stringa criptata/decriptata o false in caso di errore.
     *
     * @throws EnvironmentIsBrokenException Se l'ambiente di esecuzione non supporta la crittografia sicura.
     * @throws BadFormatException Se la chiave fornita ha un formato errato.
     * @throws WrongKeyOrModifiedCiphertextException Se la chiave fornita non è valida o se la stringa criptata è stata modificata.
     *
     * Note: Assicurarsi di non perdere la chiave di crittografia. Senza di essa, non sarà possibile decriptare i dati.
     */
    public function my_advanced_crypt($string, $action = 'e'): bool|string
    {

        if (empty($string) || empty($action) || $string == null || $action == null) {
            return false;
        }

        // Utilizza una chiave esistente dalla sua rappresentazione ASCII safe
        $key_ascii = config('app.data_crypto_key');  // Recupera questa chiave da un posto sicuro (es. .env)

        try {

            $key = Key::loadFromAsciiSafeString($key_ascii);

        } catch (BadFormatException $e) {

            $yourErrorDetails = [
                'Error' => 'Error n. 0001.',
                'Trait' => 'HasUtility',
                'Method' => 'my_advanced_crypt',
                'Situation' => $e->getMessage(),
                'SystemError' => $e->getCode(),
            ];

            Log::channel('upload')->error(json_encode($yourErrorDetails));

            return false;
        }

        if ($action == 'e') {

            try {

                return Crypto::encrypt($string, $key);

            } catch (EnvironmentIsBrokenException|Exception $e) {
                // Questa eccezione si verifica se l'ambiente di esecuzione non è sicuro.
                Log::channel('upload')->error(json_encode([
                    'message' => $e->getMessage(),
                    'code' => $e->getCode()
                ]));
                return false;
            }

        } elseif ($action == 'd') {

            try {

                return Crypto::decrypt($string, $key);

            } catch (WrongKeyOrModifiedCiphertextException|EnvironmentIsBrokenException|Exception $e) {
                Log::channel('upload')->error(json_encode([
                    'message' => $e->getMessage(),
                    'code' => $e->getCode()
                    ]));
                return false;
            }
        }

        return false;
    }

    /**
     * Get the disk that profile photos should be stored on.
     */
    protected function defProfilePhotoDisk(): string
    {
        return isset($_ENV['VAPOR_ARTIFACT_NAME']) ? 's3' : config('jetstream.profile_photo_disk', 'public');
    }

    public function formatPriceInAlgo(int $amount): string
    {
        return number_format($amount, 2, '.', ',').' Algo';
    }

    /**
     * Format the size in megabytes.
     *
     * @param  int  $sizeInBytes  The size in bytes to be formatted.
     * @return string The formatted size in megabytes.
     */
    public function formatSizeInMegabytes(int $sizeInBytes): string
    {
        $megabytes = $sizeInBytes / (1024 * 1024);

        return number_format($megabytes, 2).' MB';
    }

    /**
     * Gestisce e aggiorna la lingua dell'utente basata sulla lingua locale.
     *
     * 1. Legge la lingua locale.
     * 2. Aggiorna la lingua nella sessione.
     * 3. Imposta un cookie per conservare le preferenze di lingua dell'utente per 30 giorni.
     *
     * @return string Ritorna la lingua attualmente impostata.
     */
    public function languageHandling(): string
    {
        // 1. Legge la lingua locale.
        $language = App::getLocale();

        // 2. Aggiorna la lingua nella sessione.
        session()->put('locale', $language);

        // 3. Imposta un cookie per conservare le preferenze di lingua dell'utente.
        // (Nota: è importante gestire il consenso dell'utente per i cookie in conformità con il GDPR)
        Cookie::queue('language', $language, 60 * 24 * 30); // Il cookie scade dopo 30 giorni.

        return $language;
    }

    /**
     * Send an error email.
     *
     * @param  array  $yourErrorDetails  Details of the error to be sent.
     * @param  string|null  $emailAddress  Optional email address to send the error to.
     * @return bool Returns true if the email is sent successfully and false if not.
     */
    public function sendErrorEmail(array $yourErrorDetails, ?string $emailAddress = null): bool
    {
        if ($emailAddress === null) {
            $emailAddress = config('app.errors_email');
        }

        try {
            Mail::to($emailAddress)->send(new ErrorOccurredMailable($yourErrorDetails));

            // L'e-mail è stata inviata con successo
            return true;

        } catch (\Exception $e) {

            // L'e-mail non è stata inviata
            $yourErrorDetails = [
                'error' => 'Error n. 999.',
                'Trait' => 'HasUtility',
                'method' => 'sendErrorEmail',  // nome del metodo corretto
                'situation' => $e->getMessage(),
            ];
            Log::channel('nft_transaction')->error(json_encode($yourErrorDetails));

            return false;
        }
    }

    private function generateFakeAlgorandAddress(): string
    {
        $characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        $address = '';
        for ($i = 0; $i < 36; $i++) {
            $address .= $characters[rand(0, strlen($characters) - 1)];
        }

        return $address;
    }

    /**
     * Verifica l'esistenza di una directory e ne garantisce i permessi corretti.
     *
     * Questa funzione controlla se la directory specificata esiste; se non esiste, tenta di crearla
     * con i permessi forniti come argomento. In seguito, controlla i permessi attuali della directory
     * e, se necessario, li modifica. Se l'operazione fallisce (creazione o modifica dei permessi),
     * restituisce un codice di errore predefinito.
     *
     * @param string $directory           Il percorso della directory da verificare o creare.
     * @param int $requiredPermissions    I permessi da applicare alla directory (default: 0755).
     *
     * @return string                     Restituisce `NOT_ERROR` se la directory esiste o viene creata/modificata con successo,
     *                                    altrimenti un codice di errore (stringa) definito in 'error_constants'.
     *
     * Logica:
     * - Se la directory non esiste, tenta di crearla.
     * - Se i permessi della directory non corrispondono a quelli richiesti, tenta di modificarli.
     * - Se fallisce in una di queste operazioni, registra un errore nei log e restituisce un codice di errore.
     *
     * Logging:
     * - Registra nei log il successo o il fallimento di ogni azione, inclusi classe, metodo e azione specifica
     *   per un migliore debugging nei sistemi di log centralizzati.
     *
     * Esempio d'uso:
     * $result = ensureDirectoryPermissions('/path/to/directory');
     * if ($result !== true) {
     *     // Gestire l'errore basato sul codice restituito
     * }
     */

    function ensureDirectoryPermissions($directory, $requiredPermissions = 0755): string {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'ensureDirectoryPermissions',
        ];

        Log::channel('upload')->info(json_encode($logParams), [
            'Action' => 'Tentativo di creazione della directory',
            'directory' => $directory]);

        // Simula un errore durante la creazione della directory
        if (TestingConditionsManager::getInstance()->isTesting('UNABLE_TO_CREATE_DIRECTORY')) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Simulazione di errore durante la creazione della directory',
                'directory' => $directory]);

            return 'UNABLE_TO_CREATE_DIRECTORY';
        }

        // Verifica se la directory esiste
        if (!file_exists($directory)) {
            // La directory non esiste, tenta di crearla
            try {
                if (!mkdir($directory, $requiredPermissions, true)) {

                    Log::channel('upload')->error(json_encode($logParams), [
                        'Action' => 'Impossibile creare la directory',
                        'directory' => $directory]);

                    return 'UNABLE_TO_CREATE_DIRECTORY';

                }
            } catch (\Exception $e) {

                Log::channel('upload')->error(json_encode($logParams), [
                    'Action' => 'Impossibile creare la directory',
                    'directory' => $directory]);

                return 'UNABLE_TO_CREATE_DIRECTORY';

            }
        }

        // Simula un errore durante la modifica dei permessi della directory
        if (TestingConditionsManager::getInstance()->isTesting('UNABLE_TO_CHANGE_PERMISSIONS')) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Simulazione di errore durante la modifica dei permessi della directory',
                'directory' => $directory]);

            return 'UNABLE_TO_CHANGE_PERMISSIONS';

        }

        // Controlla i permessi attuali
        $currentPermissions = fileperms($directory) & 0777;
        if ($currentPermissions !== $requiredPermissions) {
            // I permessi della directory non corrispondono a quelli richiesti, tenta di modificarli
            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Modifica dei permessi della directory necessaria',
                'currentPermissions' => $currentPermissions,
                'directory' => $directory]);

            try {
                if (!chmod($directory, $requiredPermissions)) {

                    Log::channel('upload')->error(json_encode($logParams), [
                        'Action' => ' Impossibile cambiare i permessi della directory',
                        'currentPermissions' => $currentPermissions,
                        'directory' => $directory]);

                return 'UNABLE_TO_CHANGE_PERMISSIONS';

                }
            } catch (\Exception $e) {

                Log::channel('upload')->error(json_encode($logParams), [
                    'Action' => 'Errore durante la modifica dei permessi',
                    'error' => $e->getMessage(),
                    'directory' => $directory]);

                return 'UNABLE_TO_CHANGE_PERMISSIONS';
            }
        }

        Log::channel('upload')->info(json_encode($logParams), [
            'Action' => 'Directory esistente e permessi corretti',
            'directory' => $directory,
            'codeError' => 'NOT_ERROR']);

        return 'NOT_ERROR';
    }

    /**
    * Cambia i permessi di un file o di una directory.
    *
    * @param string $path
    * @param string $type ('file' o 'directory')
    * @return bool True se i permessi sono stati cambiati con successo, False altrimenti
    */
    private function changePermissions($path, $type)
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'changePermissions',
        ];

        try {
            chmod($path, $type === 'file' ? 0664 : 0775);

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Permessi cambiati con successo su ' . $type,
                'path' => $path]);

            return true;

        } catch (Exception $e) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore cambiando permessi su ' . $type,
                'error' => $e->getMessage(),
                'path' => $path]);

            return false;

        }
    }

    /**
     * Gestisce l'eliminazione e ricreazione della directory.
     *
     * @param string $path
     * @return void
     * @throws Exception
     */
    private function handleDirectoryError($path):void
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'handleDirectoryError',
        ];

        try {
            // Elimina la directory
            Storage::deleteDirectory($path);

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Directory eliminata con successo',
                'path' => $path]);

            // Ricrea la directory con permessi 0775
            Storage::makeDirectory($path, 0775, true);

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Directory ricreata con successo',
                'path' => $path]);

            // Prova a cambiare i permessi della nuova directory
            if (!$this->changePermissions($path, 'directory')) {
                throw new Exception("Impossibile cambiare i permessi della directory dopo la ricreazione: {$path}");
            }

        } catch (Exception $e) {

            $errorMessage = $e->getMessage();

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore durante la cancellazione e ricreazione della directory',
                'error' => $errorMessage,
                'path' => $path]);

            throw new Exception($errorMessage);
        }
    }

    /**
     * Crea una directory con permessi specifici.
     *
     * @param string $path
     * @return void
     * @throws Exception
     */
    private function createDirectory($path)
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'createDirectory',
        ];

        try {
            // Tentativo di creare la directory con permessi 0775
            if (!mkdir($path, 0775, true) && !is_dir($path)) {
                throw new Exception("Impossibile creare la directory temporanea: {$path}");
            }

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Directory creata con successo',
                'path' => $path]);


        } catch (Exception $e) {

            $errorMessage = $e->getMessage();
            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore durante la creazione della directory',
                'error' => $errorMessage,
                'path' => $path]);

            throw new Exception($errorMessage);
        }
    }

}

#### Inizio File: /home/fabio/EGI/app/Traits/SaveCollectionTraits.php ####

<?php

namespace App\Traits;

use App\Models\Collection;
use Illuminate\Support\Facades\Log;

trait SaveCollectionTraits
{

    use HasPermissionTrait;

    /**
     * Salva una nuova collezione nel database.
     */

    public function save($collectionId)
    {
        try {
            // Esegui la validazione basata sui decorator
            $this->validate();

            // Recupera la collection
            $collection = Collection::findOrFail($collectionId);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection');

            // Aggiorna la collection con i dati validati
            $collection->update([
                'collection_name' => $this->collection_name,
                'type' => $this->type,
                'position' => $this->position,
                'EGI_number' => $this->EGI_number,
                'floor_price' => $this->floor_price,
                'description' => $this->description,
                'is_published' => $this->is_published,
                'url_collection_site' => $this->url_collection_site,
            ]);

            // Ricarica i dati aggiornati dal database
            $this->collection = Collection::find($collectionId);

            // Flash del messaggio di successo
            session()->flash('message', 'Collezione aggiornata con successo!');

        } catch (\Illuminate\Database\Eloquent\ModelNotFoundException $e) {
            // Gestisci il caso in cui la collection non viene trovata
            Log::channel('florenceegi')->error('Collection not found: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Errore',
                'text' => 'La collezione specificata non esiste.',
            ]);
        } catch (\Illuminate\Auth\Access\AuthorizationException $e) {
            // Gestisci i problemi di autorizzazione
            Log::channel('florenceegi')->warning('Autorizzazione fallita: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Autorizzazione Negata',
                'text' => $e->getMessage(),
            ]);
        } catch (\Exception $e) {
            // Gestisci altre eccezioni generiche
            Log::channel('florenceegi')->error('Errore durante l\'aggiornamento della collezione: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Errore Inaspettato',
                'text' => 'Si è verificato un errore durante l\'aggiornamento della collezione. Riprova più tardi.',
            ]);
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/UsesUuid.php ####

<?php


namespace App\Traits;

use Illuminate\Support\Str;

trait UsesUuid
{
    protected static function bootUsesUuid()
    {
        static::creating(function ($model) {
            if (!$model->getKey()) {
                $model->{$model->getKeyName()} = (string) Str::uuid();
            }
        });
    }

    public function getIncrementing()
    {
        return false;
    }

    public function getKeyType()
    {
        return 'string';
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/AppLayout.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AppLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.app');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/AuthSessionStatus.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AuthSessionStatus extends Component
{
    public function __construct(
        public ?string $status = null
    ) {}

    public function render(): View
    {
        return view('components.auth-session-status');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/BackButton.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class BackButton extends Component
{
    public $label;

    /**
     * Create a new component instance.
     *
     * @param string $label
     */
    public function __construct($label = 'Torna Indietro')
    {
        $this->label = __('label.came_to_back');
    }

    /**
     * Get the view / contents that represent the component.
     *
     * @return \Illuminate\View\View|string
     */
    public function render()
    {
        return view('components.back-button');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/CollectionCard.php ####

<?php

namespace App\View\Components;

use App\Models\Collection;
use Closure;
use Illuminate\Contracts\View\View;
use Illuminate\View\Component;

class CollectionCard extends Component
{
    public $collection;
    public $id;

    /**
     * Create a new component instance.
     */
    public function __construct($id)
    {

        $this->id = $id;

        // Carica la collection usando l'ID
        $this->collection = Collection::findOrFail($id);
    }

    /**
     * Get the view / contents that represent the component.
     */
    public function render(): View|Closure|string
    {
        return view('components.collection-card', [
            'collection' => $this->collection,
            'id' => $this->id
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/FormButton.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;

class FormButton extends Component
{
    public function __construct(
        public string $type = 'button',
        public ?string $style = 'primary',
        public ?string $size = null,
        public ?string $class = '',
    ) {}

    public function render()
    {
        return view('components.form-button');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/FormInput.php ####

<?php

namespace App\View\Components;

use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Log;
use Illuminate\View\Component;

class FormInput extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $type,
        public string $label,
        public string $model,
        public string $id,
        public bool $required = false,
        public ?string $class = '',
        public ?string $placeholder = '',
        public ?string $icon = null, // Nome dell'icona da recuperare
        public ?string $iconClass = null, // Classe personalizzata per l'icona
        public string $datatip,
        public string $style = 'primary',
    ) {
        // Validate style
        $validStyles = ['primary', 'secondary', 'accent', 'info', 'success', 'warning', 'error'];
        if (! in_array($style, $validStyles)) {
            throw new \InvalidArgumentException('Style must be one of: '.implode(', ', $validStyles));
        }

        // Log::channel('florenceegi')->info( 'FormInput: iconClass: (' . $iconClass .  ') name: (' . $icon .')');

        // Recupera l'icona dal repository
        if ($icon) {
            $repository = app(IconRepository::class);
            $this->iconHtml = $repository->getIcon($icon, 'elegant', $iconClass);

        }
    }

    public function render()
    {
        return view('components.form-input');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/FormInputIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class FormInputIcon extends Component
{
    public function __construct(
        public string $type = 'text',
        public string $label = '',
        public string $model = '',
        public string $id = '',
        public bool $required = false,
        public string $class = '',
        public string $placeholder = '',
        public string $icon = '',
        public string $iconPosition = 'right', // 'left' o 'right'
        public string $value = ''
    ) {}

    public function render()
    {
        return view('components.form-input-icon');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/FormSelect.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class FormSelect extends Component
{
    /**
     * Create a new component instance.
     */
    public function __construct(
        public string $label,
        public string $model,
        public string $id,
        public bool $required = false,
        public string $class = '',
        public string $style = 'primary',
        public string $maxWidth = 'xs'
    ) {
        // Validate style
        $validStyles = ['primary', 'secondary', 'accent', 'info', 'success', 'warning', 'error'];
        if (!in_array($style, $validStyles)) {
            throw new \InvalidArgumentException("Style must be one of: " . implode(', ', $validStyles));
        }

        // Validate maxWidth
        $validWidths = ['xs', 'sm', 'md', 'lg', 'xl'];
        if (!in_array($maxWidth, $validWidths)) {
            throw new \InvalidArgumentException("MaxWidth must be one of: " . implode(', ', $validWidths));
        }
    }

    /**
     * Get the view / contents that represent the component.
     */
    public function render()
    {
        return view('components.form-select');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/GuestLayout.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class GuestLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.guest');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/GuestWelcomeLayout.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;

class GuestWelcomeLayout extends Component
{
    public function render()
    {
        return view('layouts.guest-welcome');
    }
} 
#### Inizio File: /home/fabio/EGI/app/View/Components/ImageUploader.php ####

<?php

namespace App\View\Components;

use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Illuminate\View\Component;
use App\Repositories\IconRepository;

class ImageUploader extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $model,
        public string $id,
        public string $label,
        public $image ='',
        public string $removeMethod = 'removeImage',
        public ?string $icon = null, // Nome dell'icona da recuperare
        public ?string $iconClass = null // Classe personalizzata per l'icona
    ) {

        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: iconClass: (' . $iconClass .  ') name: (' . $icon .')');
        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: model: (' . $model .  ')');
        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: image: (' . $image .  ')');

        // Recupera l'icona dal repository
        if ($icon) {

            $repository = app(IconRepository::class);
            $this->iconHtml = $repository->getIcon($icon, 'elegant', $iconClass);
        }
    }

    public function render()
    {

        return view('components.image-uploader');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/RepoIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use App\Repositories\IconRepository;

class RepoIcon extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $name,
        public ?string $class = null
    ) {
        $repository = app(IconRepository::class);
        $this->iconHtml = $repository->getIcon($name, 'elegant', $class);
    }

    public function render()
    {
        return view('components.repo-icon');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/Separator.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class Separator extends Component
{
    public $class;

    /**
     * Create a new component instance.
     *
     * @param string $class
     */
    public function __construct($class = 'border-gray-200 dark:border-gray-600')
    {
        $this->class = $class;
    }

    /**
     * Get the view / contents that represent the component.
     *
     * @return \Illuminate\View\View|string
     */
    public function render()
    {
        return view('components.separator');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/SuggestionIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class SuggestionIcon extends Component
{
    public string $tooltip;
    public string $iconColor;

    public function __construct(string $tooltip = 'Suggestion', string $iconColor = '#5f6368')
    {
        $this->tooltip = $tooltip;
        $this->iconColor = $iconColor;
    }

    public function render()
    {
        return view('components.suggestion-icon');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/auth-session-status.blade.php ####

@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'alert alert-success']) }}>
        {{ $status }}
    </div>
@endif

#### Inizio File: /home/fabio/EGI/bootstrap/app.php ####

<?php

use App\Http\Middleware\CheckCollectionPermission;
use App\Http\Middleware\SetLanguage;
use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use Spatie\Permission\Middleware\RoleOrPermissionMiddleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        api: __DIR__.'/../routes/api.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->alias([
            'collection_can' => CheckCollectionPermission::class,
            'role_or_permission' => RoleOrPermissionMiddleware::class,
        ]);

        // Middleware groups per le rotte web
        $middleware->appendToGroup('web',[SetLanguage::class]);


    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();

#### Inizio File: /home/fabio/EGI/bootstrap/cache/packages.php ####

<?php return array (
  'laravel/fortify' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Fortify\\FortifyServiceProvider',
    ),
  ),
  'laravel/jetstream' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    ),
  ),
  'laravel/pail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Pail\\PailServiceProvider',
    ),
  ),
  'laravel/sail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/sanctum' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    ),
  ),
  'laravel/tinker' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'livewire/flux' => 
  array (
    'aliases' => 
    array (
      'Flux' => 'Flux\\Flux',
    ),
    'providers' => 
    array (
      0 => 'Flux\\FluxServiceProvider',
    ),
  ),
  'livewire/livewire' => 
  array (
    'aliases' => 
    array (
      'Livewire' => 'Livewire\\Livewire',
    ),
    'providers' => 
    array (
      0 => 'Livewire\\LivewireServiceProvider',
    ),
  ),
  'nesbot/carbon' => 
  array (
    'providers' => 
    array (
      0 => 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' => 
  array (
    'providers' => 
    array (
      0 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' => 
  array (
    'providers' => 
    array (
      0 => 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'spatie/laravel-permission' => 
  array (
    'providers' => 
    array (
      0 => 'Spatie\\Permission\\PermissionServiceProvider',
    ),
  ),
);
#### Inizio File: /home/fabio/EGI/bootstrap/cache/services.php ####

<?php return array (
  'providers' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    2 => 'Illuminate\\Bus\\BusServiceProvider',
    3 => 'Illuminate\\Cache\\CacheServiceProvider',
    4 => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    5 => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    6 => 'Illuminate\\Cookie\\CookieServiceProvider',
    7 => 'Illuminate\\Database\\DatabaseServiceProvider',
    8 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    9 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    10 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    11 => 'Illuminate\\Hashing\\HashServiceProvider',
    12 => 'Illuminate\\Mail\\MailServiceProvider',
    13 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    14 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    15 => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    16 => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    17 => 'Illuminate\\Queue\\QueueServiceProvider',
    18 => 'Illuminate\\Redis\\RedisServiceProvider',
    19 => 'Illuminate\\Session\\SessionServiceProvider',
    20 => 'Illuminate\\Translation\\TranslationServiceProvider',
    21 => 'Illuminate\\Validation\\ValidationServiceProvider',
    22 => 'Illuminate\\View\\ViewServiceProvider',
    23 => 'Laravel\\Fortify\\FortifyServiceProvider',
    24 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    25 => 'Laravel\\Pail\\PailServiceProvider',
    26 => 'Laravel\\Sail\\SailServiceProvider',
    27 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    28 => 'Laravel\\Tinker\\TinkerServiceProvider',
    29 => 'Flux\\FluxServiceProvider',
    30 => 'Livewire\\LivewireServiceProvider',
    31 => 'Carbon\\Laravel\\ServiceProvider',
    32 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    33 => 'Termwind\\Laravel\\TermwindServiceProvider',
    34 => 'Spatie\\Permission\\PermissionServiceProvider',
    35 => 'App\\Providers\\AppServiceProvider',
    36 => 'App\\Providers\\FortifyServiceProvider',
    37 => 'App\\Providers\\JetstreamServiceProvider',
    38 => 'App\\Providers\\ViewDebugServiceProvider',
    39 => 'App\\Providers\\FileHelperServiceProvider',
  ),
  'eager' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Cookie\\CookieServiceProvider',
    2 => 'Illuminate\\Database\\DatabaseServiceProvider',
    3 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    4 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    5 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    6 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    7 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    8 => 'Illuminate\\Session\\SessionServiceProvider',
    9 => 'Illuminate\\View\\ViewServiceProvider',
    10 => 'Laravel\\Fortify\\FortifyServiceProvider',
    11 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    12 => 'Laravel\\Pail\\PailServiceProvider',
    13 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    14 => 'Flux\\FluxServiceProvider',
    15 => 'Livewire\\LivewireServiceProvider',
    16 => 'Carbon\\Laravel\\ServiceProvider',
    17 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    18 => 'Termwind\\Laravel\\TermwindServiceProvider',
    19 => 'Spatie\\Permission\\PermissionServiceProvider',
    20 => 'App\\Providers\\AppServiceProvider',
    21 => 'App\\Providers\\FortifyServiceProvider',
    22 => 'App\\Providers\\JetstreamServiceProvider',
    23 => 'App\\Providers\\ViewDebugServiceProvider',
    24 => 'App\\Providers\\FileHelperServiceProvider',
  ),
  'deferred' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastManager' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Factory' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Broadcaster' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\QueueingDispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\BatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\DatabaseBatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'cache' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.store' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.psr6' => 'Illuminate\\Cache\\CacheServiceProvider',
    'memcached.connector' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Cache\\RateLimiter' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Foundation\\Console\\AboutCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ForgetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClearCompiledCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Auth\\Console\\ClearResetsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DbCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\PruneCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\WipeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DownCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\Console\\InvokeSerializedClosureCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\KeyGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PackageDiscoverCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\PruneStaleTagsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FlushFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ForgetFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListenCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneBatchesCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneFailedJobsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RestartCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryBatchCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\WorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DumpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleFinishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleRunCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleTestCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleWorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleInterruptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowModelCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageLinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageUnlinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\UpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ApiInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\BroadcastingInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\CacheTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\CastMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClassMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ComponentMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConsoleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\ControllerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DocsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnumMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ExceptionMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\InterfaceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\LangPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ListenerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\MailMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\MiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ModelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\NotificationMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Notifications\\Console\\NotificationTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ObserverMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PolicyMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ProviderMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FailedTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\BatchesTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RequestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ResourceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RuleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ScopeMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Session\\Console\\SessionTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ServeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StubPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TraitMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\VendorPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.repository' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.creator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\FreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\InstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RefreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\ResetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RollbackCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\StatusCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'composer' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\ConcurrencyManager' => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    'hash' => 'Illuminate\\Hashing\\HashServiceProvider',
    'hash.driver' => 'Illuminate\\Hashing\\HashServiceProvider',
    'mail.manager' => 'Illuminate\\Mail\\MailServiceProvider',
    'mailer' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Mail\\Markdown' => 'Illuminate\\Mail\\MailServiceProvider',
    'auth.password' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'auth.password.broker' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'Illuminate\\Contracts\\Pipeline\\Hub' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'pipeline' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'queue' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.connection' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.failer' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.listener' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.worker' => 'Illuminate\\Queue\\QueueServiceProvider',
    'redis' => 'Illuminate\\Redis\\RedisServiceProvider',
    'redis.connection' => 'Illuminate\\Redis\\RedisServiceProvider',
    'translator' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'translation.loader' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'validator' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'validation.presence' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Illuminate\\Contracts\\Validation\\UncompromisedVerifier' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Laravel\\Sail\\Console\\InstallCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'Laravel\\Sail\\Console\\PublishCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'command.tinker' => 'Laravel\\Tinker\\TinkerServiceProvider',
  ),
  'when' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastServiceProvider' => 
    array (
    ),
    'Illuminate\\Bus\\BusServiceProvider' => 
    array (
    ),
    'Illuminate\\Cache\\CacheServiceProvider' => 
    array (
    ),
    'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider' => 
    array (
    ),
    'Illuminate\\Concurrency\\ConcurrencyServiceProvider' => 
    array (
    ),
    'Illuminate\\Hashing\\HashServiceProvider' => 
    array (
    ),
    'Illuminate\\Mail\\MailServiceProvider' => 
    array (
    ),
    'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider' => 
    array (
    ),
    'Illuminate\\Pipeline\\PipelineServiceProvider' => 
    array (
    ),
    'Illuminate\\Queue\\QueueServiceProvider' => 
    array (
    ),
    'Illuminate\\Redis\\RedisServiceProvider' => 
    array (
    ),
    'Illuminate\\Translation\\TranslationServiceProvider' => 
    array (
    ),
    'Illuminate\\Validation\\ValidationServiceProvider' => 
    array (
    ),
    'Laravel\\Sail\\SailServiceProvider' => 
    array (
    ),
    'Laravel\\Tinker\\TinkerServiceProvider' => 
    array (
    ),
  ),
);
#### Inizio File: /home/fabio/EGI/bootstrap/providers.php ####

<?php

return [
    App\Providers\AppServiceProvider::class,
    App\Providers\FortifyServiceProvider::class,
    App\Providers\JetstreamServiceProvider::class,
    App\Providers\ViewDebugServiceProvider::class,
    App\Providers\FileHelperServiceProvider::class,
];

#### Inizio File: /home/fabio/EGI/config/app.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Hosting Services Configuration
    |--------------------------------------------------------------------------
    |
    | This configuration option allows you to define multiple hosting services
    | that your application may use. Each service is defined with its name and
    | a flag indicating whether it is the default hosting provider. This setting
    | is useful for dynamically referencing the appropriate hosting service in
    | notifications or alerts, allowing you to easily scale the application
    | when switching between different hosting services without modifying the
    | application code.
    |
    |--------------------------------------------------------------------------
    */
    'hosting_services' => [
        ['name' => 'Digital Ocean', 'is_default' => true],
        ['name' => 'AWS', 'is_default' => false],
        ['name' => 'Google Cloud', 'is_default' => false],
        ['name' => 'IPFS', 'is_default' => false],
    ],



    /*
    |--------------------------------------------------------------------------
    | EGI Asset
    |--------------------------------------------------------------------------
    |
    | Questo parametro determina se gli EGI asset sono abilitati o meno.
    |
    */
    'egi_asset' => env('EGI_ASSET', false),

    /*
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application. This value is used when the
    | framework needs to place the application's name in a notification or
    | any other location as required by the application or its packages.
     */
    'natan' => env('NATAN'),
    'natan_webp' => env('NATAN_WEBP'),
    'natan_png' => env('NATAN_PNG'),
    'natan_tr' => env('NATAN_TR'),
    'natan_01' => env('NATAN_01'),
    'logo_tr' => env('LOGO_TR'),
    'logo_01' => env('LOGO_01'),
    'logo_02' => env('LOGO_02'),
    'logo_03' => env('LOGO_03'),
    'logo_04' => env('LOGO_04'),
    'favicon' => env('FAVICON'),
    'default_cover' => env('DEFAULT_COVER'),
    'welcome_background' => env('WELCOME_BACKGROUD'),

    'platform_slogan' => env('PLATFORM_SLOGAN', 'pazzia'),

     /*
    |--------------------------------------------------------------------------
    | Royalty di default per Frangette
    |--------------------------------------------------------------------------
    |
     */
    'natan_wallet_address' => env('NATAN_WALLET_ADDRESS'),
    'natan_royalty_mint' => env('NATAN_ROYALTY_MINT'),
    'natan_royalty_rebind' => env('NATAN_ROYALTY_REBIND'),
    'epp_wallet_address' => env('EPP_WALLET_ADDRESS'),
    'epp_royalty_mint' => env('EPP_ROYALTY_BIND'),
    'epp_royalty_rebind' => env('EPP_ROYALTY_REBIND'),
    'mediator_royalty_mint' => env('MEDIATOR_ROYALTY_MINT'),
    'mediator_royalty_rebind' => env('MEDIATOR_ROYALTY_REBIND'),
    'creator_royalty_mint' => env('CREATOR_ROYALTY_MINT'),
    'creator_royalty_rebind' => env('CREATOR_ROYALTY_REBIND'),

    /*
    |--------------------------------------------------------------------------
    | Bucket Path File Folder
    |--------------------------------------------------------------------------
    |
     */
    'bucket_folder_temp' => env('BUCKET_FOLDER_TEMP'),
    'bucket_temp_file_folder' => env('BUCKET_TMP_FILE_FOLDER'),
    'local_server' => env('LOCAL_SERVER'),
    'bucket_path_file_folder' => env('BUCKET_PATH_FILE_FOLDER'),
    'bucket_root_file_folder' => env('BUCKET_ROOT_FILE_FOLDER'),
    'bucket_root_utilities_files' => env('FOLDER_ROOT_UTILITY_FILES'),
    'bucket_uri_end_utilities_files' => env('FOLDER_URI_END_UTILITY_FILES'),
    'bucket_path_file_folder_metadata' => env('BUCKET_ROOT_FILE_FOLDER_METADATA'),
    'bucket_path_file_folder_read' => env('BUCKET_PATH_FILE_FOLDER_READ'),
    'do_access_key_id' => env('DO_ACCESS_KEY_ID'),
    'do_secret_access_key' => env('DO_SECRET_ACCESS_KEY'),
    'do_default_region' => env('DO_DEFAULT_REGION'),
    'do_bucket' => env('DO_BUCKET'),
    'do_use_path_style_endpoint' => env('DO_USE_PATH_STYLE_ENDPOINT'),
    'do_endpoint' => env('DO_ENDPOINT'),
    'do_bucket_folder' => env('DO_BUCKET_FOLDER'),


    /*
    |--------------------------------------------------------------------------
    | Wallet balance per la simulazione del minting e rebinding
    |--------------------------------------------------------------------------
    |
     */
    'virtual_wallet_balance' => 1000000,
    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' => env('APP_TIMEZONE', 'UTC'),

    /*
    |--------------------------------------------------------------------------
    | L'id dell'utente di sistema
    |--------------------------------------------------------------------------
     */
    'natan_id' => env('NATAN_ID', 1),

    /*
    |--------------------------------------------------------------------------
    | ID predefinito dell'utente EPP
    |--------------------------------------------------------------------------
     */
    'epp_id' => env('EPP_ID', 2),

    /*
    |--------------------------------------------------------------------------
    | Application build version
    |--------------------------------------------------------------------------
     */
    'version' => env('APP_VERSION'),

    /*
    |--------------------------------------------------------------------------
    | EMAIL DI SERVIZIO
    |--------------------------------------------------------------------------
    |
     */
    'errors_email' => env('MAIL_ERRORS'),

    /*
    |--------------------------------------------------------------------------
    | Chiave di crittografia
    |--------------------------------------------------------------------------
    |
     */
    'data_crypto_key' => env('DATA_CRYPTO_KEY'),

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' => env('APP_LOCALE', 'en'),
    'languages' => [
        'it' => 'Italiano',
        'en' => 'English',
        'es' => 'Español',
        'pt' => 'Português',
        'fr' => 'Français',
        'de' => 'Deutsch'
    ],



    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/auth.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];

#### Inizio File: /home/fabio/EGI/config/cache.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];

#### Inizio File: /home/fabio/EGI/config/context.php ####

<?php

return [
    'route_contexts' => [
        'dashboard' => 'general',
        'collections.index' => 'collection',
        'collections.create' => 'collection',
        'collections.edit' => 'collection',
        'egi.index' => 'egi',
        'admin.roles.index' => 'admin',
        'profile.is_published' => 'profile',
    ],
];

#### Inizio File: /home/fabio/EGI/config/database.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for database operations. This is
    | the connection which will be utilized unless another connection
    | is explicitly specified when you execute a query / statement.
    |
    */

    'default' => env('DB_CONNECTION', 'sqlite'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Below are all of the database connections defined for your application.
    | An example configuration is provided for each database system which
    | is supported by Laravel. You're free to add / remove connections.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DB_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
            'busy_timeout' => null,
            'journal_mode' => null,
            'synchronous' => null,
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'mariadb' => [
            'driver' => 'mariadb',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run on the database.
    |
    */

    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as Memcached. You may define your connection settings here.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

#### Inizio File: /home/fabio/EGI/config/filesystems.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app'),
            'permissions' => [
                'file' => [
                    'public' => 0644,
                    'private' => 0600,
                ],
                'dir' => [
                    'public' => 0755,
                    'private' => 0700,
                ],
            ],
            'throw' => false,
        ],


        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

        'do' => [
            'driver' => 's3',
            'key' => env('DO_ACCESS_KEY_ID'),
            'secret' => env('DO_SECRET_ACCESS_KEY'),
            'region' => env('DO_DEFAULT_REGION'),
            'bucket' => env('DO_BUCKET'),
            'url' => env('DO_URL'),
            'endpoint' => env('DO_ENDPOINT'),
            'use_path_style_endpoint' => env('DO_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/fortify.php ####

<?php

use Laravel\Fortify\Features;

return [

    /*
    |--------------------------------------------------------------------------
    | Fortify Guard
    |--------------------------------------------------------------------------
    |
    | Here you may specify which authentication guard Fortify will use while
    | authenticating users. This value should correspond with one of your
    | guards that is already present in your "auth" configuration file.
    |
    */

    'guard' => 'web',

    /*
    |--------------------------------------------------------------------------
    | Fortify Password Broker
    |--------------------------------------------------------------------------
    |
    | Here you may specify which password broker Fortify can use when a user
    | is resetting their password. This configured value should match one
    | of your password brokers setup in your "auth" configuration file.
    |
    */

    'passwords' => 'users',

    /*
    |--------------------------------------------------------------------------
    | Username / Email
    |--------------------------------------------------------------------------
    |
    | This value defines which model attribute should be considered as your
    | application's "username" field. Typically, this might be the email
    | address of the users but you are free to change this value here.
    |
    | Out of the box, Fortify expects forgot password and reset password
    | requests to have a field named 'email'. If the application uses
    | another name for the field you may define it below as needed.
    |
    */

    'username' => 'email',

    'email' => 'email',

    /*
    |--------------------------------------------------------------------------
    | Lowercase Usernames
    |--------------------------------------------------------------------------
    |
    | This value defines whether usernames should be lowercased before saving
    | them in the database, as some database system string fields are case
    | sensitive. You may disable this for your application if necessary.
    |
    */

    'lowercase_usernames' => true,

    /*
    |--------------------------------------------------------------------------
    | Home Path
    |--------------------------------------------------------------------------
    |
    | Here you may configure the path where users will get redirected during
    | authentication or password reset when the operations are successful
    | and the user is authenticated. You are free to change this value.
    |
    */

    'home' => '/dashboard',

    /*
    |--------------------------------------------------------------------------
    | Fortify Routes Prefix / Subdomain
    |--------------------------------------------------------------------------
    |
    | Here you may specify which prefix Fortify will assign to all the routes
    | that it registers with the application. If necessary, you may change
    | subdomain under which all of the Fortify routes will be available.
    |
    */

    'prefix' => '',

    'domain' => null,

    /*
    |--------------------------------------------------------------------------
    | Fortify Routes Middleware
    |--------------------------------------------------------------------------
    |
    | Here you may specify which middleware Fortify will assign to the routes
    | that it registers with the application. If necessary, you may change
    | these middleware but typically this provided default is preferred.
    |
    */

    'middleware' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | Rate Limiting
    |--------------------------------------------------------------------------
    |
    | By default, Fortify will throttle logins to five requests per minute for
    | every email and IP address combination. However, if you would like to
    | specify a custom rate limiter to call then you may specify it here.
    |
    */

    'limiters' => [
        'login' => 'login',
        'two-factor' => 'two-factor',
    ],

    /*
    |--------------------------------------------------------------------------
    | Register View Routes
    |--------------------------------------------------------------------------
    |
    | Here you may specify if the routes returning views should be disabled as
    | you may not need them when building your own application. This may be
    | especially true if you're writing a custom single-page application.
    |
    */

    'views' => true,

    /*
    |--------------------------------------------------------------------------
    | Features
    |--------------------------------------------------------------------------
    |
    | Some of the Fortify features are optional. You may disable the features
    | by removing them from this array. You're free to only remove some of
    | these features or you can even remove all of these if you need to.
    |
    */

    'features' => [
        Features::registration(),
        Features::resetPasswords(),
        Features::emailVerification(),
        Features::updateProfileInformation(),
        Features::updatePasswords(),
        Features::twoFactorAuthentication([
            'confirm' => true,
            'confirmPassword' => true,
            // 'window' => 0,
        ]),
    ],

];

#### Inizio File: /home/fabio/EGI/config/icons.php ####

<?php

return [
    'styles' => [
        'elegant' => [
            [
                'name' => 'fallback',
                'type' => 'solid',
                'class' => 'h-6 w-6',
                'host'=>'',
                'name_on_host'=>'',
                'html' => '
                    <svg xmns="http://www.w3.org/2000/svg" viewBox="0 0 123.01 120.38" width="40" height="40"><defs><style>.cls-1{fill:none;stroke:#333;stroke-linecap:round;stroke-miterlimit:10;stroke-width:4px}.cls-3{fill:#333}</style></defs><g id="Layer_2" data-name="Layer 2"><g id="General_-_Icon" data-name="General - Icon"><g id="General_-_Icon-2" data-name="General - Icon">
                        <path class="cls-1" d="m26.59 87.36 1.12-6.55A6.1 6.1 0 0 0 26 75.42L3.85 53.86a6.09 6.09 0 0 1 3.37-10.39L37.78 39a6.11 6.11 0 0 0 4.59-3.33L57.89 4.24a4 4 0 0 1 7.22 0l13.3 27M91.73 41.32 117.38 45c3.12.53 5.39 5.3 1.77 8.82L97 75.42a6.1 6.1 0 0 0-1.75 5.39l5.22 30.44a6.09 6.09 0 0 1-8.84 6.42L64.34 103.3a6.13 6.13 0 0 0-5.68 0l-27.33 14.37a6.09 6.09 0 0 1-8.84-6.42l1.33-7.77"/><path d="M66.79 33.5s4.46 13.5 7.83 15.86 16.59 4.23 16.59 4.23" style="stroke-linejoin:round;stroke-width:2px;fill:none;stroke:#333;stroke-linecap:round"/><circle class="cls-3" cx="97.5" cy="54.57" r="1"/><circle class="cls-3" cx="25.5" cy="94.57" r="2"/></g></g></g>
                    </svg>',
            ],
            [
                'name' => 'email',
                'type' => 'solid',
                'class' => 'h-4 w-4 opacity-70',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='%class%'>
                        <path d='M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z' />
                        <path d='M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z' />
                    </svg>",
            ],
            [
                'name' => 'camera',
                'type' => 'solid',
                'class' => 'w-6 h-6 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z'/>
                        <path d='M15 13a3 3 0 11-6 0 3 3 0 016 0z'/>
                    </svg>",
            ],
            [
                'name' => 'collection-name',
                'type' => 'solid',
                'class' => 'w-12 h-12 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path d='M3 3h6v6H3V3zm0 9h6v6H3v-6zm9-9h6v6h-6V3zm0 9h6v6h-6v-6z'></path>
                    </svg>",
            ],
            [
                'name' => 'url',
                'type' => 'solid',
                'class' => 'w-12 h-12 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path d='M10.59 13.41L9.17 12l2.83-2.83a3 3 0 014.24 4.24L14.83 15l1.42 1.41 2.83-2.83a5 5 0 00-7.07-7.07L7.76 10.24a5 5 0 007.07 7.07L13.41 15l-2.82 2.82a3 3 0 01-4.24-4.24l2.82-2.82z'/>
                    </svg>",
            ],
            [
                'name' => 'collection-number',
                'type' => 'material',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'pin',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>pin</span>",
            ],
            [
                'name' => 'collection-position',
                'type' => 'material-symbols-outlined',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'stacks',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>stacks</span>",
            ],

            [
                'name' => 'egi-base-price',
                'type' => 'material',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'payments',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>payments</span>",
            ],
            [
                'name' => 'permissions_roles',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Authorization Manager',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40"> xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M361.6 370s0 .1 0 0c0 .6.1 1.1.1 1.6v.4c0 .4.1.8.1 1.2 0 .2 0 .4.1.5 0 .4.1.8.2 1.1 0 .2 0 .3.1.5.1.5.2 1.1.3 1.6.1.5.2.9.3 1.4.2.9.5 1.8.8 2.7.1.4.3.9.4 1.3 2 5.6 5 10.2 8.6 13.2.8.7 1.7 1.3 2.5 1.8.6.4 1.2.7 1.8.9.6.3 1.2.5 1.8.7.6.2 1.2.3 1.8.4 1.9.3 3.7.2 5.6-.4l.9-.3c.1 0 .2-.1.3-.1.2-.1.4-.2.6-.2.1-.1.2-.1.3-.2.2-.1.3-.2.5-.3.1-.1.2-.1.4-.2s.3-.2.5-.3c.1-.1.2-.2.4-.2.1-.1.3-.2.4-.3.1 0 .1-.1.2-.1 15.4 40.6 46.9 75.5 83.4 75.5s68-34.9 83.4-75.5c.1 0 .1.1.2.1.1.1.3.2.4.3.1.1.2.2.4.2.1.1.3.2.5.3.1.1.2.1.4.2s.3.2.5.3c.1.1.2.1.3.2.2.1.4.2.6.2.1 0 .2.1.3.1l.9.3c1.9.6 3.7.7 5.6.4.6-.1 1.2-.2 1.8-.4s1.2-.4 1.8-.7l1.8-.9c.9-.5 1.7-1.1 2.5-1.8 4.7-3.9 8.4-10.5 10.1-18.6.1-.5.2-1.1.3-1.6 0-.2 0-.3.1-.5.1-.4.1-.8.2-1.2 0-.2 0-.3.1-.5 0-.4.1-.8.1-1.2v-.4c0-.5.1-1 .1-1.5v-3.7c0-.5 0-.9-.1-1.4v-.2c0-.5-.1-1-.2-1.5-1.2-9.6-6-17.4-12.8-19.4-1.9-.6-3.9-.7-5.8-.3.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2v.1c-1.9-.3-3.9-.2-5.8.3-6.9 2.1-11.6 9.8-12.8 19.4-.1.5-.1 1-.2 1.5v.2c0 .4-.1.9-.1 1.4V368.2c-.4.7-.4 1.2-.4 1.8zM735.1 567.4c-3.2-1.3-6.3-2.5-9.5-3.6v-30.3c0-48-39-87-87-87s-87 39-87 87v10.4c-2.5 7.9-5.4 15.6-8.4 23.2-.4.1-.7.3-1.1.4v2.3c-9.7 23.2-21.9 44.7-36.3 63.8L490.4 557l6.9-9.4 7.7-10.5c.3-.3.5-.6.7-1 .1-.1.1-.2.2-.3.2-.2.3-.5.4-.7.1-.1.2-.3.2-.4.1-.2.2-.4.3-.7.1-.2.2-.3.2-.5.1-.2.2-.4.3-.7.1-.2.1-.4.2-.5.1-.2.1-.4.2-.7.1-.2.1-.4.2-.6.1-.2.1-.4.2-.6l.3-1.5c0-.1 0-.2.1-.3 0-.3.1-.6.1-.9v-.4c0-.3 0-.6.1-.9v-1.6c0-.3 0-.7-.1-1v-.1c-.1-1.6-.5-3.1-1-4.6-.4-1-.8-1.9-1.3-2.8l-12.9-18.1c-2.3-3.8-5.8-6.1-9.5-6.1h-20.3c-3.7 0-7.2 2.3-9.5 6.1l-12.9 18.1c-.5.9-1 1.9-1.3 2.8-.5 1.5-.9 3-1 4.6v.1c0 .3 0 .7-.1 1v1.6c0 .3 0 .6.1.9v.4c0 .3.1.6.1.9 0 .1 0 .2.1.3l.3 1.5c0 .2.1.4.2.6.1.2.1.4.2.6.1.2.1.4.2.7.1.2.1.4.2.5.1.2.2.4.3.7.1.2.1.3.2.5s.2.4.3.7c.1.1.2.3.2.4.1.2.3.5.4.7.1.1.1.2.2.3.2.3.5.7.7 1l7.7 10.5 6.9 9.4-11.2 56-4.1 20.6c-25.5-33.7-44-74.9-54.1-119.7-1.5-6.7-6.8-10.6-12-9L297.6 530c-9.9 3.2-17.3 13.9-18.7 26.9l-13.3 124.2-.4 3.6c-.2 1.8-.3 3.6-.2 5.4.3 12.4 6 23.3 14.4 28.4 1.2.7 2.5 1.3 3.7 1.8.9.3 1.7.6 2.7.8 1.4.3 2.7.4 4.2.4h254.2c12.1 4.8 24.4 8.6 36.8 11.5h.1c7.9 1.8 15.8 3.3 23.8 4.4h.1c8 1.1 15.9 1.8 23.9 2.1 6.4.2 12.8.2 19.2 0 8-.3 16-1 23.9-2.1h.1c7.9-1.1 15.9-2.5 23.8-4.4h.1c6.3-1.5 12.6-3.2 18.9-5.2 6.8-2.1 13.5-4.5 20.2-7.2V567.4zM638.6 477c31.1 0 56.5 25.3 56.5 56.5v21.3c-9.2-2.1-18.4-3.7-27.6-4.7-2.8-9.8-9.3-17.4-17.4-20.1l-62.7-20.2c8.9-19.3 28.5-32.8 51.2-32.8z" />
                                        </g>
                                        <g>
                                            <path fill="#A44995"
                                                d="m504.9 517-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-4.5-5.4-5.1-14.3-1.4-20.6l12.9-18.1c2.3-3.8 5.8-6.1 9.5-6.1H484c3.7 0 7.2 2.3 9.5 6.1l12.9 18.1c3.7 6.3 3.1 15.2-1.5 20.6z" />
                                            <path fill="#952584"
                                                d="m504.9 504.1-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-1.2-1.4-2.1-3.1-2.7-4.9-2.1 6-1.1 13.2 2.7 17.8l23 31.4c4.6 5.5 11.6 5.5 16.2 0l23-31.4c3.9-4.6 4.9-11.8 2.7-17.8-.6 1.8-1.5 3.5-2.7 4.9z" />
                                            <path fill="#FFF"
                                                d="M398.4 346.1c3.1 15.2-2.3 30-12.3 33s-20.5-6.9-23.6-22.1c-3.1-15.2 2.3-30 12.3-33 9.8-3 20.4 6.8 23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M386.1 369c-9.9 3-20.5-6.9-23.6-22.1-.2-1.2-.4-2.4-.6-3.5-.5 4.3-.4 8.9.6 13.5 3.1 15.2 13.7 25.1 23.6 22.1 9.1-2.8 14.5-15.5 12.8-29.4-1.2 9.6-5.9 17.4-12.8 19.4z" />
                                            <path fill="#FFF"
                                                d="M549.3 346.1c-3.1 15.2 2.3 30 12.3 33 9.9 3 20.5-6.9 23.6-22.1 3.1-15.2-2.3-30-12.3-33-9.9-3-20.5 6.8-23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M585.2 346.9c-3.1 15.2-13.7 25.1-23.6 22.1-6.9-2.1-11.6-9.8-12.8-19.4-1.7 13.9 3.7 26.7 12.8 29.4 9.9 3 20.5-6.9 23.6-22.1 1-4.7 1.1-9.3.6-13.5-.2 1.2-.4 2.4-.6 3.5z" />
                                            <path fill="#FFF"
                                                d="M567.2 325.5c0 57-41.8 126.8-93.3 126.8s-93.3-69.7-93.3-126.8 41.8-103.2 93.3-103.2 93.3 46.2 93.3 103.2z" />
                                            <path fill="#DADADA"
                                                d="M473.8 432.3c-48.5 0-88.4-61.8-92.9-116.6-.3 3.3-.4 6.5-.4 9.9 0 57 41.8 126.8 93.3 126.8s93.3-69.7 93.3-126.8c0-3.3-.1-6.6-.4-9.9-4.5 54.8-44.4 116.6-92.9 116.6z" />
                                            <path fill="#A44995" d="M517.8 673.8h-88L462 513.3h23.6z" />
                                            <path fill="#952584"
                                                d="m517.8 673.8-16.2-80.9c-2.3 2.9-4.6 5.7-7 8.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 601.3c-2.4-2.7-4.7-5.6-7-8.4l-16.2 80.9h88z" />
                                            <path fill="#A44995"
                                                d="M448 276.3s13 24.3 50.4 36.7c20.2 6.7 47.7 9 68.7 10.6.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2 0 0 20.7-3.4 39.1-15.3 18.4-11.9 28.4-31.9 28.4-31.9z" />
                                            <path fill="#952584" d="M457.3 525.3h33.1v11.6h-33.1z" />
                                            <path fill="#36A9E1"
                                                d="M668.8 536.9c-1.4-13.1-8.8-23.7-18.7-26.9l-78.2-25.2c-5.2-1.7-10.5 2.3-12 9-11.5 51.1-33.9 97.5-65.2 133.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 627.2c-31.3-36-53.7-82.3-65.2-133.4-1.5-6.7-6.8-10.6-12-9L297.6 510c-9.9 3.2-17.3 13.9-18.7 26.9l-13.7 127.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-13.8-127.8z" />
                                            <path fill="#0091C5"
                                                d="M681.3 654c-3.4 12.5-12.6 21.7-23.6 21.7H289.9c-11 0-20.2-9.2-23.6-21.7l-1.2 10.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-1.2-10.8z" />
                                            <path fill="#0091C5"
                                                d="M657.7 701.5c15.2 0 26.8-17.3 24.8-36.8l-12.3-114.3c-29.3-3.7-59-2.3-88.1 4.4v-21.3c0-15.6 6.4-29.8 16.7-40l-26.9-8.7c-1.9-.6-3.8-.5-5.5.2-3.1 4.6-5.8 9.5-8 14.7-1.8 7.2-3.7 14.3-5.9 21.3-.6 4.1-.9 8.2-.9 12.4v30.3c-3.2 1.2-6.4 2.4-9.5 3.6v134.1h115.6z" />
                                            <g>
                                                <path fill="#FFF"
                                                    d="M725.6 615h-30.5V513.5c0-31.1-25.3-56.5-56.5-56.5-31.1 0-56.5 25.3-56.5 56.5V615h-30.5V513.5c0-48 39-87 87-87s87 39 87 87V615z" />
                                                <path fill="#DADADA"
                                                    d="M638.6 444.1c-38.1 0-69.1 27.4-69.1 61.1V615h12.6V513.5c0-31.1 25.3-56.5 56.5-56.5 31.1 0 56.5 25.3 56.5 56.5V615h12.6V505.2c-.1-33.7-31-61.1-69.1-61.1z" />
                                                <path fill="#952584"
                                                    d="M735.1 700.7c-62.8 25.4-130.2 25.4-193.1 0V547.4c58.8-23.8 121.7-25.3 181-4.5 4 1.4 8.1 2.9 12.1 4.5v153.3z" />
                                                <path fill="#A44995"
                                                    d="M562.3 540.2v167.7c50.1 15.7 102.5 15.7 152.6 0V540.2c-50.1-15.7-102.5-15.7-152.6 0z" />
                                                <circle fill="#36A9E1" cx="638.6" cy="601.7" r="26.1" />
                                                <path fill="#36A9E1"
                                                    d="M647.4 666.3h-17.6c-3.7 0-6.7-3-6.7-6.7v-58.2H654v58.2c0 3.7-2.9 6.7-6.6 6.7z" />
                                                <path fill="#2C3088"
                                                    d="M641.7 659.9h-6.3c-1.8 0-3.2-1.4-3.2-3.2v-47.9h12.7v47.9c0 1.7-1.4 3.2-3.2 3.2z" />
                                                <circle fill="#2C3088" cx="638.6" cy="601.7" r="15.5" />
                                                <path fill="#DADADA"
                                                    d="M735.1 561.3c-3.5-1.4-6.9-2.7-10.4-3.9-60.1-21-123.2-19.6-182.6 3.9v10.4c.6 0 1.3-.1 1.9-.4 57.7-23.3 119.1-24.9 177.5-4.5 4 1.4 7.9 2.9 11.8 4.5.6.2 1.2.4 1.9.4l-.1-10.4zM542 685.8c3.5 1.4 6.9 2.7 10.4 3.9 28.3 9.9 57.2 14.8 86.1 14.8 32.5 0 65-6.3 96.5-18.7v-10.4c-.6 0-1.3.1-1.9.4-57.7 23.3-119.1 24.9-177.5 4.5-4-1.4-7.9-2.9-11.8-4.5-.6-.2-1.2-.4-1.9-.4v10.4z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>',
            ],
            [
                'name' => 'assign_roles',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Protection',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48" width="40" height="40">
                                <defs>
                                    <linearGradient id="c" x1="19.5" y1="47.82" x2="19.5"
                                        y2="-42.52" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#273a9b" />
                                        <stop offset=".56" stop-color="#202f65" />
                                        <stop offset="1" stop-color="#021e2f" />
                                    </linearGradient>
                                    <linearGradient id="a" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#27e9de" />
                                        <stop offset=".52" stop-color="#03a4ec" />
                                        <stop offset="1" stop-color="#2547a8" />
                                    </linearGradient>
                                    <linearGradient id="e" x1="19.5" y1="33.53" x2="19.5"
                                        y2="15.56" xlink:href="#a" />
                                    <linearGradient id="f" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" xlink:href="#a" />
                                    <linearGradient id="b" x1="33" y1="33.92" x2="33"
                                        y2="15.04" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#fff" />
                                        <stop offset=".52" stop-color="#cce2e6" />
                                        <stop offset="1" stop-color="#8fa1bb" />
                                    </linearGradient>
                                    <linearGradient id="g" x1="27.88" y1="28.99" x2="20.63"
                                        y2="16.24" xlink:href="#b" />
                                    <linearGradient id="h" y1="26.44" y2="38.78" xlink:href="#b" />
                                    <linearGradient id="i" x1="33" y1="56.25" x2="33"
                                        y2="3.66" xlink:href="#c" />
                                    <linearGradient id="j" x1="33" y1="36.81" x2="33"
                                        y2="42.75" xlink:href="#c" />
                                    <linearGradient id="d" x1="33" y1="48.03" x2="33"
                                        y2="33.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#f3c57a" />
                                        <stop offset=".49" stop-color="#f39369" />
                                        <stop offset="1" stop-color="#e94867" />
                                    </linearGradient>
                                    <linearGradient id="k" x1="33" y1="41.5" x2="33"
                                        y2="34.55" xlink:href="#d" />
                                </defs>
                                <circle cx="19.5" cy="19.5" r="16.5" style="fill:url(#c)" />
                                <path
                                    d="M19.5 24.27a16.46 16.46 0 0 0-12.61 5.86 16.48 16.48 0 0 0 25.21 0 16.46 16.46 0 0 0-12.6-5.86z"
                                    style="fill:url(#a)" />
                                <path
                                    d="M19.5 24.27a16.37 16.37 0 0 0-6.06 1.18 6.6 6.6 0 0 0 12.12 0 16.37 16.37 0 0 0-6.06-1.18z"
                                    style="fill:url(#e)" />
                                <circle cx="19.5" cy="16.22" r="6.61" style="fill:url(#f)" />
                                <path d="M40.5 39h-15V28.5a7.5 7.5 0 0 1 15 0zm-12-3h9v-7.5a4.5 4.5 0 0 0-9 0z"
                                    style="fill:url(#b)" />
                                <path d="M31.5 36h-3v-7.5a4.49 4.49 0 0 1 3-4.22v-3.13a7.51 7.51 0 0 0-6 7.35V39h6z"
                                    style="fill:url(#g)" />
                                <path
                                    d="M40.5 30.12a2.17 2.17 0 0 0-.69-.12H37.5v6h-9v-6h-2.31a2.17 2.17 0 0 0-.69.12V39h15z"
                                    style="fill:url(#h)" />
                                <rect x="24" y="31.5" width="18" height="13.5" rx="2.19" ry="2.19"
                                    style="fill:url(#i)" />
                                <path d="M26.19 31.5a2.18 2.18 0 0 0-2.07 1.5h17.76a2.18 2.18 0 0 0-2.07-1.5z"
                                    style="fill:url(#j)" />
                                <path
                                    d="M35.16 38.16a2.16 2.16 0 0 0-4.26-.52 2.14 2.14 0 0 0 .42 1.87 1.15 1.15 0 0 1 .24.73v.32A1.44 1.44 0 0 0 33 42a1.44 1.44 0 0 0 1.44-1.44v-.32a1.18 1.18 0 0 1 .25-.74 2.13 2.13 0 0 0 .47-1.34z"
                                    style="fill:url(#d)" />
                                <path
                                    d="M35 38.92a2.16 2.16 0 0 0-2.59-1.35A2.13 2.13 0 0 0 31 38.91a2.16 2.16 0 0 0 .33.6 1.15 1.15 0 0 1 .24.73v.32a1.44 1.44 0 1 0 2.88 0v-.32a1.18 1.18 0 0 1 .25-.74 2.16 2.16 0 0 0 .3-.58z"
                                    style="fill:url(#k)" />
                            </svg>',
            ],
            [
                'name' => 'assign_permissions',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'System Protection',
                'html' => ' <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M690.9 656.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9v4.5c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-4.5c-.1-9.9-8.1-17.9-18-17.9zM708.8 601.9V393c0-13.8-11.2-25-25-25H612v-53.4c0-11.5-6.6-22-17-26.9-60.1-28.6-129.9-28.6-190 0-10.4 4.9-17 15.4-17 26.9V368h-71.8c-13.8 0-25 11.2-25 25v218.9c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10h-.1z" />
                                        </g>
                                        <g>
                                            <path fill="#952584"
                                                d="M683.8 684.3H316.2c-13.8 0-25-11.2-25-25v-4.5h417.7v4.5c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#A44995"
                                                d="M690.9 636.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9 0 9.9 8 17.9 17.9 17.9h381.8c9.9 0 17.9-8 17.9-17.9 0-9.9-8-17.9-17.9-17.9zM683.8 616.9H316.2c-13.8 0-25-11.2-25-25V373c0-13.8 11.2-25 25-25h367.7c13.8 0 25 11.2 25 25v218.9c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#952584"
                                                d="M683.8 606.9H316.2c-13.8 0-25-11.2-25-25v10c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#36A9E1"
                                                d="M669.1 581.9H330.9c-6.9 0-12.6-5.6-12.6-12.6V375.6c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v193.7c0 7-5.7 12.6-12.6 12.6z" />
                                            <path fill="#0091C5"
                                                d="M669.1 363H330.9c-6.9 0-12.6 5.6-12.6 12.6v10c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v-10c0-7-5.7-12.6-12.6-12.6z" />
                                            <path fill="#FFF"
                                                d="M364.7 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3s-2.8 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M364.7 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1 2.3-3.2 3.8-5.8 3.8z" />
                                            <path fill="#FFF"
                                                d="M672.1 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3-.1 3.5-2.9 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M672.1 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1.1 2.3-3.3 3.8-5.8 3.8z" />
                                            <circle fill="#36A9E1" cx="612.8" cy="654.8" r="6.2" />
                                            <path fill="#0091C5"
                                                d="M612.8 656c-2.5 0-4.7-1.5-5.6-3.7-.3.8-.5 1.6-.5 2.5 0 3.4 2.8 6.2 6.2 6.2 3.4 0 6.2-2.8 6.2-6.2 0-.9-.2-1.7-.5-2.5-1.1 2.2-3.3 3.7-5.8 3.7z" />
                                            <g>
                                                <path fill="#0091C5"
                                                    d="m589.1 485.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 470.7 388 451 388 430.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#FFF"
                                                    d="m589.1 465.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 450.7 388 431 388 410.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#DADADA"
                                                    d="M599.5 404.6V303.2c0-10-5.9-19.2-15.1-23.5-53.4-25-115.4-25-168.8 0-9.2 4.3-15.1 13.5-15.1 23.5v101.4c0 17.9 7.3 35.1 20.3 47.7l65.7 63.6c7.5 7.3 19.5 7.3 27 0l65.7-63.6c13-12.5 20.3-29.7 20.3-47.7z" />
                                                <path fill="#A44995"
                                                    d="m572.4 448-60.1 59.1c-6.9 6.7-17.9 6.7-24.7 0l-60-59.1a62.263 62.263 0 0 1-18.6-44.4v-94.3c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v94.3c0 16.8-6.7 32.7-18.6 44.4z" />
                                                <path fill="#952584"
                                                    d="M577.2 287.6c-48.8-23.3-105.6-23.3-154.4 0-8.4 4-13.8 12.5-13.8 21.9v13c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v-13c0-9.4-5.4-17.9-13.8-21.9z" />
                                            </g>
                                            <g>
                                                <path fill="#952584"
                                                    d="M489.6 447.5c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22l-61.4 79.2c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#FFF"
                                                    d="M489.6 433.8c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22L504.6 428c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#DADADA"
                                                    d="m563.4 326.9-71.1 91.8-39.4-53c-3.1-4.1-7.2-6.9-11.8-8.4-3.9 5.4-4.1 12.9.1 18.6l38.5 51.8c2.4 3.3 6 5.4 9.9 6.1.8.1 1.6.2 2.5.2 4.9.1 9.5-2.2 12.5-6.1l61.4-79.2c5.2-6.8 4-16.5-2.6-21.8z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>',
            ],
            [
                'name' => 'open',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Open Door',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" width="37.504" height="48">
                            <path fill="#c6c6c6" d="M4.129 6.375h29.25v38.532H4.129z"/><path d="M3 5.25v40.782h31.5V5.25zm29.25 38.532h-27V7.5h27z" fill="#7a8e9b"/>
                            <path fill="#525c6b" d="M37.504 46.032H0l3.001-3.282h31.503l3 3.282z"/><path fill="#e49a61" d="M24.128 2.829v42.342l2.25-.524V3.355l-2.25-.526zM34.504 5.25l-3.125-.728V43.48l3.125-.73V5.25zM12.004 0v48l10.375-2.421V2.421L12.004 0z"/>
                            <path fill="#f1bb6b" d="M26.378 3.355v41.292l5.001-1.167V4.522l-5.001-1.167zM22.379 2.421v43.158l1.749-.408V2.829l-1.749-.408z"/><ellipse cx="17.004" cy="25.157" rx="1.688" ry="2.25" fill="#525c6b"/><ellipse cx="17.754" cy="25.157" rx="1.688" ry="2.25" fill="#c6c6c6"/>
                           </svg>',
            ],
            [
                'name' => 'art_therapy',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Art Therapy',
                'html' => '
                    <svg version="1.1" id="Icon_Set" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 512 512" width="40" height="40" style="enable-background:new 0 0 512 512" xml:space="preserve"><style>.st1{fill:#fd919e}.st2{fill:#4c4372}.st3{fill:#d3e6f8}.st5{fill:#7babf1}.st6{fill:#fff}</style><g id="Art_Theraphy"><circle cx="256" cy="256" r="207" style="fill:#f0c48a"/><path class="st5" d="M316.468 394.034H132.605c-9.804 0-17.752-7.948-17.752-17.752V135.718c0-9.804 7.948-17.752 17.752-17.752h183.863c9.804 0 17.752 7.948 17.752 17.752v240.564c.001 9.804-7.947 17.752-17.752 17.752z"/>
                        <path class="st6" d="M141.233 143.654h166.609v224.692H141.233z"/>
                        <path class="st3" d="M141.233 286h166.609v82.346H141.233z"/><path class="st3" d="M284.743 143.654h23.099v224.692h-23.099z"/>
                        <path style="fill:#a4cff2" d="M284.743 286h23.099v82.346h-23.099z"/><path class="st6" d="M183.163 286h-27.841l13.921-24.111 13.92-24.11 13.92 24.11L211.004 286z"/>
                        <path class="st1" d="M252.377 286h-41.373l20.686-35.831 20.687-35.831 20.687 35.831L293.751 286z"/><circle class="st1" cx="202.568" cy="188.714" r="20.405"/>
                        <path class="st2" d="M316.468 400.034H132.605c-13.097 0-23.752-10.655-23.752-23.752V135.718c0-13.097 10.655-23.752 23.752-23.752h183.863c13.097 0 23.752 10.655 23.752 23.752v240.563c.001 13.098-10.655 23.753-23.752 23.753zM132.605 123.966c-6.48 0-11.752 5.272-11.752 11.752v240.563c0 6.48 5.272 11.752 11.752 11.752h183.863c6.48 0 11.752-5.272 11.752-11.752V135.718c0-6.48-5.272-11.752-11.752-11.752H132.605z"/><path class="st2" d="M307.841 374.346H141.232a6 6 0 0 1-6-6V143.654a6 6 0 0 1 6-6h166.609a6 6 0 0 1 6 6v224.692a6 6 0 0 1-6 6zm-160.609-12h154.609V149.654H147.232v212.692z"/><path class="st2" d="M307.841 374.346H141.232a6 6 0 0 1-6-6V286a6 6 0 0 1 6-6h166.609a6 6 0 0 1 6 6v82.346a6 6 0 0 1-6 6zm-160.609-12h154.609V292H147.232v70.346z"/><path class="st2" d="M211.003 292h-55.681a6 6 0 0 1-5.196-9l27.841-48.221a6.002 6.002 0 0 1 10.392 0L216.2 283a5.999 5.999 0 0 1-5.197 9zm-45.288-12h34.896l-17.448-30.221L165.715 280z"/><path class="st2" d="M293.751 292h-82.748a6 6 0 0 1-5.196-9l41.374-71.662a6.002 6.002 0 0 1 10.392 0L298.948 283a5.999 5.999 0 0 1-5.197 9zm-72.355-12h61.963l-30.981-53.662L221.396 280z"/><g><path class="st2" d="M202.568 215.12c-14.56 0-26.405-11.845-26.405-26.405s11.845-26.405 26.405-26.405 26.405 11.845 26.405 26.405-11.845 26.405-26.405 26.405zm0-40.811c-7.943 0-14.405 6.462-14.405 14.405s6.462 14.405 14.405 14.405 14.405-6.462 14.405-14.405-6.462-14.405-14.405-14.405z"/></g><g><path class="st1" d="m375.141 388.153-19.448-37.35c-7.458-14.323 2.218-31.953 18.35-32.68a23.535 23.535 0 0 1 2.196 0c16.132.727 25.808 18.357 18.35 32.68l-19.448 37.35z"/><path style="fill:#e8677d" d="M358.559 356.306h33.165l-16.583 31.847z"/><path class="st5" d="M375.141 318.098a14.182 14.182 0 0 1-14.095-12.614c-3.317-29.825-3.317-139.198 0-169.023a14.182 14.182 0 0 1 28.19 0c3.317 29.825 3.317 139.198 0 169.023a14.18 14.18 0 0 1-14.095 12.614z"/><path class="st2" d="M375.142 324.098a20.162 20.162 0 0 1-20.059-17.951c-3.363-30.249-3.363-140.1 0-170.349a20.162 20.162 0 0 1 20.058-17.951 20.162 20.162 0 0 1 20.059 17.951c3.363 30.25 3.363 140.101 0 170.35a20.162 20.162 0 0 1-20.058 17.95zm0-194.251a8.175 8.175 0 0 0-8.132 7.278c-3.224 28.994-3.224 138.702 0 167.696a8.173 8.173 0 0 0 8.131 7.277 8.173 8.173 0 0 0 8.131-7.277c3.224-28.994 3.224-138.703 0-167.697a8.171 8.171 0 0 0-8.13-7.277z"/><path class="st2" d="M375.141 394.153a6 6 0 0 1-5.322-3.229l-19.448-37.35c-4.527-8.693-4.296-18.973.617-27.496 4.788-8.308 13.306-13.522 22.785-13.949a30.145 30.145 0 0 1 2.739 0c9.476.427 17.994 5.641 22.782 13.949 4.913 8.523 5.144 18.803.617 27.496l-19.448 37.35a5.999 5.999 0 0 1-5.322 3.229zm.001-70.055c-.276 0-.551.006-.825.019-5.448.246-10.16 3.145-12.932 7.954-2.855 4.955-2.994 10.922-.37 15.962l14.126 27.129 14.126-27.129c2.625-5.04 2.486-11.007-.37-15.962-2.772-4.809-7.484-7.708-12.929-7.953a16.29 16.29 0 0 0-.826-.02z"/></g></g>
                    </svg>',
            ],
            [
                'name' => 'dahsboard',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Dashboard',
                'html' => '
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="40" height="40"><defs><style>.cls-1{fill:#7c7d7d}.cls-2{fill:#919191}.cls-3{fill:#dad7e5}.cls-4{fill:#edebf2}.cls-7{fill:#c6c3d8}.cls-9{fill:#fc6}.cls-10{fill:#ffde76}</style></defs><g id="Dashboard"><path class="cls-1" d="M6 31h36v16H6z"/>
                        <path class="cls-2" d="M42 31v14H11a3 3 0 0 1-3-3V31z"/>
                        <path class="cls-3" d="M18 36v3h-6v-3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z"/>
                        <path class="cls-4" d="M18 36v1h-2a2 2 0 0 1-2-2h3a1 1 0 0 1 1 1z"/>
                        <path class="cls-3" d="M18 39v3a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-3z"/>
                        <path class="cls-4" d="M18 39v2h-3a1 1 0 0 1-1-1v-1zM38 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM38 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM38 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/>
                        <path class="cls-1" d="M6 1h36v30H6z"/><path class="cls-2" d="M42 1v28H11a3 3 0 0 1-3-3V1z"/><path style="fill:#9fdbf3" d="M10 5h14v10H10z"/><path d="M24 5v8h-9a3 3 0 0 1-3-3V5z" style="fill:#b2e5fb"/><path class="cls-4" d="M29 15V5a1 1 0 0 1 2 0v10a1 1 0 0 1-2 0z"/><path class="cls-7" d="M31 14h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/><path class="cls-4" d="M35 15V5a1 1 0 0 1 2 0v10a1 1 0 0 1-2 0z"/>
                        <path class="cls-7" d="M37 10h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/><path d="M24 9.5v2c-2.08 0-2.17-1.7-3.62-.69a3.17 3.17 0 0 1-4 0 1.2 1.2 0 0 0-1.63 0 3.16 3.16 0 0 1-4 0 1.18 1.18 0 0 0-.75-.31v-2c1.67 0 1.93 1 2.8 1s1.15-1 2.8-1 1.94 1 2.79 1 1.15-1 2.81-1 1.94 1 2.8 1z" style="fill:#8bd1ea"/>
                        <path class="cls-9" d="M14 23a2 2 0 1 1-2.82-1.82A2 2 0 0 1 14 23z"/><path class="cls-10" d="M13.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64z"/><circle class="cls-9" cx="20" cy="23" r="2"/><circle class="cls-9" cx="28" cy="23" r="2"/><circle class="cls-9" cx="36" cy="23" r="2"/>
                        <path class="cls-10" d="M21.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64zM29.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64zM37.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64z"/></g>
                    </svg>',
            ],
            [
                'name' => 'back',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'back',
                'html' => '
                    <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" width="40" height="40" class="rounded-full" style="shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;fill-rule:evenodd;clip-rule:evenodd" viewBox="0 0 6.827 6.827">
                        <path style="fill:#424242" d="M0 0h6.827v6.827H0z"/>
                        <path d="M.853 3.413a2.56 2.56 0 1 1 5.12 0 2.56 2.56 0 0 1-5.12 0zM4.72 2.8H3.413a.08.08 0 0 1-.08-.08v-.5L2.14 3.413l1.193 1.194v-.5a.08.08 0 0 1 .08-.08H4.72V2.8zm-3.413.613a2.1 2.1 0 0 1 .617-1.49 2.1 2.1 0 0 1 1.49-.616 2.1 2.1 0 0 1 1.489.617 2.1 2.1 0 0 1 .617 1.49 2.1 2.1 0 0 1-.617 1.489 2.1 2.1 0 0 1-1.49.617 2.1 2.1 0 0 1-1.49-.617 2.1 2.1 0 0 1-.616-1.49zm.73-1.376a1.94 1.94 0 0 0-.57 1.376c0 .538.218 1.025.57 1.377.352.352.839.57 1.376.57a1.94 1.94 0 0 0 1.377-.57 1.94 1.94 0 0 0 .57-1.377 1.94 1.94 0 0 0-.57-1.376 1.94 1.94 0 0 0-1.377-.57 1.94 1.94 0 0 0-1.376.57z" style="fill:#fffffe"/>
                    </svg>',
            ],
            [
                'name' => 'new_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'new_collection',
                'html' => '<img src="/images/default/new_collection.webp" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],
            [
                'name' => 'open_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'open_collection',
                'html' => '<img src="/images/default/open_collection.webp" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],
            [
                'name' => 'manage_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'manage_collection',
                'html' => '<img src="/images/default/manage_collection.jpeg" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],

        ],

        // [
        //     'name' => 'description',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'type',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_banner',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_card',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_avatar',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'url_collection_site',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
    ],
    'default' => 'elegant',
];

#### Inizio File: /home/fabio/EGI/config/jetstream.php ####

<?php

use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Middleware\AuthenticateSession;

return [

    /*
    |--------------------------------------------------------------------------
    | Jetstream Stack
    |--------------------------------------------------------------------------
    |
    | This configuration value informs Jetstream which "stack" you will be
    | using for your application. In general, this value is set for you
    | during installation and will not need to be changed after that.
    |
    */

    'stack' => 'livewire',

    /*
    |--------------------------------------------------------------------------
    | Jetstream Route Middleware
    |--------------------------------------------------------------------------
    |
    | Here you may specify which middleware Jetstream will assign to the routes
    | that it registers with the application. When necessary, you may modify
    | these middleware; however, this default value is usually sufficient.
    |
    */

    'middleware' => ['web'],

    'auth_session' => AuthenticateSession::class,

    /*
    |--------------------------------------------------------------------------
    | Jetstream Guard
    |--------------------------------------------------------------------------
    |
    | Here you may specify the authentication guard Jetstream will use while
    | authenticating users. This value should correspond with one of your
    | guards that is already present in your "auth" configuration file.
    |
    */

    'guard' => 'sanctum',

    /*
    |--------------------------------------------------------------------------
    | Features
    |--------------------------------------------------------------------------
    |
    | Some of Jetstream's features are optional. You may disable the features
    | by removing them from this array. You're free to only remove some of
    | these features or you can even remove all of these if you need to.
    |
    */

    'features' => [
        Features::termsAndPrivacyPolicy(),
        Features::profilePhotos(),
        Features::api(),
        Features::teams(['invitations' => true]),
        Features::accountDeletion(),
    ],

    /*
    |--------------------------------------------------------------------------
    | Profile Photo Disk
    |--------------------------------------------------------------------------
    |
    | This configuration value determines the default disk that will be used
    | when storing profile photos for your application's users. Typically
    | this will be the "public" disk but you may adjust this if needed.
    |
    */

    'profile_photo_disk' => 'public',

];

#### Inizio File: /home/fabio/EGI/config/logging.php ####

<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'with' => [
                'stream' => 'php://stderr',
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'florenceegi' => [
            'driver' => 'daily',
            'path' => storage_path('logs/florenceegi.log'),
            'level' => 'debug',
            'days' => 7,  // Numero di giorni per cui conservare i log
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];

#### Inizio File: /home/fabio/EGI/config/mail.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/paths.php ####

<?php
// config/paths.php

return [
    'default_hosting' => env('DEFAULT_HOSTING', 'Local'),

    'hosting' => [
        'Local' => [
            'url' => '/storage/',
            'disk' => 'public',
            'is_default' => true,
            'is_active' => true,
        ],
        'Digital Ocean' => [
            'url' => env('BUCKET_PATH_FILE_FOLDER_READ', 'https://frangettediskspace.fra1.digitaloceanspaces.com'),
            'disk' => 'do',
            'is_default' => false,
            'is_active' => true,
        ],
        'AWS' => [
            'url' => env('AWS_URL', 'https://aws.example.com'),
            'disk' => 's3',
            'is_default' => false,
            'is_active' => false,
        ],
        'IPFS' => [
            'url' => 'https://ipfs.io/ipfs/',
            'disk' => 'ipfs',
            'is_default' => false,
            'is_active' => false,
        ],
    ],


    'paths' => [
        'collections' => 'users_files/collections_{collectionId}/',
        'head' => [
            'root' => 'users_files/collections_{collectionId}/head/',
            'banner' => 'users_files/collections_{collectionId}/head/banner/',
            'card' => 'users_files/collections_{collectionId}/head/card/',
            'avatar' => 'users_files/collections_{collectionId}/head/avatar/',
            'EGI_asset' => 'users_files/collections_{collectionId}/head/EGI_asset/',
        ],
        'EGIs' => 'users_files/collections_{collectionId}/EGIs/',
        'user_data' => [
            'root' => 'users_files/users-data/',
            'documents' => 'users_files/users-data/documents/',
        ],
        'icons' => env('PATH_ICONS', 'https://frangettediskspace.fra1.digitaloceanspaces.com/assets/images/icons/'),
        'temp' => env('BUCKET_TMP_FILE_FOLDER', 'temp'),
    ],
];

#### Inizio File: /home/fabio/EGI/config/permission.php ####

<?php

return [

    'models' => [

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your permissions. Of course, it
         * is often just the "Permission" model but you may use whatever you like.
         *
         * The model you want to use as a Permission model needs to implement the
         * `Spatie\Permission\Contracts\Permission` contract.
         */

        'permission' => Spatie\Permission\Models\Permission::class,

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your roles. Of course, it
         * is often just the "Role" model but you may use whatever you like.
         *
         * The model you want to use as a Role model needs to implement the
         * `Spatie\Permission\Contracts\Role` contract.
         */

        'role' => Spatie\Permission\Models\Role::class,

    ],

    'table_names' => [

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'roles' => 'roles',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your permissions. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'permissions' => 'permissions',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your models permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_permissions' => 'model_has_permissions',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your models roles. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_roles' => 'model_has_roles',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'role_has_permissions' => 'role_has_permissions',
    ],

    'column_names' => [
        /*
         * Change this if you want to name the related pivots other than defaults
         */
        'role_pivot_key' => null, //default 'role_id',
        'permission_pivot_key' => null, //default 'permission_id',

        /*
         * Change this if you want to name the related model primary key other than
         * `model_id`.
         *
         * For example, this would be nice if your primary keys are all UUIDs. In
         * that case, name this `model_uuid`.
         */

        'model_morph_key' => 'model_id',

        /*
         * Change this if you want to use the teams feature and your related model's
         * foreign key is other than `team_id`.
         */

        'team_foreign_key' => 'team_id',
    ],

    /*
     * When set to true, the method for checking permissions will be registered on the gate.
     * Set this to false if you want to implement custom logic for checking permissions.
     */

    'register_permission_check_method' => true,

    /*
     * When set to true, Laravel\Octane\Events\OperationTerminated event listener will be registered
     * this will refresh permissions on every TickTerminated, TaskTerminated and RequestTerminated
     * NOTE: This should not be needed in most cases, but an Octane/Vapor combination benefited from it.
     */
    'register_octane_reset_listener' => false,

    /*
     * Teams Feature.
     * When set to true the package implements teams using the 'team_foreign_key'.
     * If you want the migrations to register the 'team_foreign_key', you must
     * set this to true before doing the migration.
     * If you already did the migration then you must make a new migration to also
     * add 'team_foreign_key' to 'roles', 'model_has_roles', and 'model_has_permissions'
     * (view the latest version of this package's migration file)
     */

    'teams' => false,

    /*
     * Passport Client Credentials Grant
     * When set to true the package will use Passports Client to check permissions
     */

    'use_passport_client_credentials' => false,

    /*
     * When set to true, the required permission names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_permission_in_exception' => false,

    /*
     * When set to true, the required role names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_role_in_exception' => false,

    /*
     * By default wildcard permission lookups are disabled.
     * See documentation to understand supported syntax.
     */

    'enable_wildcard_permission' => false,

    /*
     * The class to use for interpreting wildcard permissions.
     * If you need to modify delimiters, override the class and specify its name here.
     */
    // 'permission.wildcard_permission' => Spatie\Permission\WildcardPermission::class,

    /* Cache-specific settings */

    'cache' => [

        /*
         * By default all permissions are cached for 24 hours to speed up performance.
         * When permissions or roles are updated the cache is flushed automatically.
         */

        'expiration_time' => \DateInterval::createFromDateString('24 hours'),

        /*
         * The cache key used to store all permissions.
         */

        'key' => 'spatie.permission.cache',

        /*
         * You may optionally indicate a specific cache driver to use for permission and
         * role caching using any of the `store` drivers listed in the cache.php config
         * file. Using 'default' here means to use the `default` set in cache.php.
         */

        'store' => 'default',
    ],
];

#### Inizio File: /home/fabio/EGI/config/queue.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];

#### Inizio File: /home/fabio/EGI/config/sanctum.php ####

<?php

use Laravel\Sanctum\Sanctum;

return [

    /*
    |--------------------------------------------------------------------------
    | Stateful Domains
    |--------------------------------------------------------------------------
    |
    | Requests from the following domains / hosts will receive stateful API
    | authentication cookies. Typically, these should include your local
    | and production domains which access your API via a frontend SPA.
    |
    */

    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
        '%s%s',
        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
        Sanctum::currentApplicationUrlWithPort()
    ))),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Guards
    |--------------------------------------------------------------------------
    |
    | This array contains the authentication guards that will be checked when
    | Sanctum is trying to authenticate a request. If none of these guards
    | are able to authenticate the request, Sanctum will use the bearer
    | token that's present on an incoming request for authentication.
    |
    */

    'guard' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | Expiration Minutes
    |--------------------------------------------------------------------------
    |
    | This value controls the number of minutes until an issued token will be
    | considered expired. This will override any values set in the token's
    | "expires_at" attribute, but first-party sessions are not affected.
    |
    */

    'expiration' => null,

    /*
    |--------------------------------------------------------------------------
    | Token Prefix
    |--------------------------------------------------------------------------
    |
    | Sanctum can prefix new tokens in order to take advantage of numerous
    | security scanning initiatives maintained by open source platforms
    | that notify developers if they commit tokens into repositories.
    |
    | See: https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning
    |
    */

    'token_prefix' => env('SANCTUM_TOKEN_PREFIX', ''),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Middleware
    |--------------------------------------------------------------------------
    |
    | When authenticating your first-party SPA with Sanctum you may need to
    | customize some of the middleware Sanctum uses while processing the
    | request. You may change the middleware listed below as required.
    |
    */

    'middleware' => [
        'authenticate_session' => Laravel\Sanctum\Http\Middleware\AuthenticateSession::class,
        'encrypt_cookies' => Illuminate\Cookie\Middleware\EncryptCookies::class,
        'validate_csrf_token' => Illuminate\Foundation\Http\Middleware\ValidateCsrfToken::class,
    ],

];

#### Inizio File: /home/fabio/EGI/config/services.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];

#### Inizio File: /home/fabio/EGI/config/session.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];

#### Inizio File: /home/fabio/EGI/database/factories/CollectionFactory.php ####

<?php

namespace Database\Factories;

use App\Models\Collection;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

class CollectionFactory extends Factory
{
    protected $model = Collection::class;

    public function definition()
    {
        return [
            'creator_id' => User::factory(), // Associa automaticamente un nuovo utente
            'owner_id' => null, // Sarà impostato manualmente
            'epp_id' => 2,
            'collection_name' => $this->faker->word . "'s Collection",
            'description' => $this->faker->sentence,
            'type' => 'image', // Default: standard collection
            'status' => 'draft', // Default: draft
            'is_published' => false,
            'position' => 1,
            'EGI_number' => $this->faker->randomDigit,
            'floor_price' => $this->faker->randomFloat(2, 0, 100), // Prezzo minimo casuale
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/TeamFactory.php ####

<?php

namespace Database\Factories;

use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Team>
 */
class TeamFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => $this->faker->unique()->company(),
            'user_id' => User::factory(),
            'personal_team' => true,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/UserFactory.php ####

<?php

namespace Database\Factories;

use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Spatie\Permission\Models\Role;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'), // Default password
            'two_factor_secret' => null,
            'two_factor_recovery_codes' => null,
            'remember_token' => Str::random(10),
            'profile_photo_path' => null,
            'wallet' => Str::random(42), // Genera un indirizzo wallet casuale
            'wallet_balance' => $this->faker->randomFloat(2, 0, 1000), // Saldo casuale
        ];
    }

    /**
     * Assegna il ruolo di creator all'utente dopo la creazione.
     */
    public function configure(): static
    {
        return $this->afterCreating(function (User $user) {
            // Recupera il ruolo di creator o crealo se non esiste
            $role = Role::find(7) ?? Role::firstOrCreate(['id' => 7, 'name' => 'creator']);

            // Assegna il ruolo all'utente
            $user->assignRole($role);
        });
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/WalletFactory.php ####

<?php

namespace Database\Factories;

use App\Models\Wallet;
use App\Models\Collection;
use Illuminate\Database\Eloquent\Factories\Factory;

class WalletFactory extends Factory
{
    protected $model = Wallet::class;

    public function definition()
    {
        return [
            'collection_id' => Collection::factory(),
            'platform_role' => $this->faker->randomElement(['Frangette', 'Mediator', 'Creator']),
            'wallet' => $this->faker->unique()->regexify('[a-zA-Z0-9]{42}'),
            'royalty_mint' => $this->faker->randomFloat(2, 0, 50),
            'royalty_rebind' => $this->faker->randomFloat(2, 0, 10),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000000_create_users_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->foreignId('current_team_id')->nullable();
            $table->string('profile_photo_path', 2048)->nullable();

            // Add last_name fields
            $table->string('last_name')->nullable();

            // Add language and wallet fields
            $table->string('language', 2)->nullable();
            $table->text('wallet')->nullable();
            $table->decimal('wallet_balance', 20, 4)->default(0.00)->nullable();
            $table->boolean('terms')->default(false)->nullable();

            $table->string('icon_style', 20)->nullable();

            // Biography fields
            $table->string('bio_title', 50)->nullable();
            $table->text('bio_story')->nullable();

            // Job fields
            $table->string('title', 50)->nullable();
            $table->string('job_role', 40)->nullable();
            $table->string('username', 40)->nullable()->unique();
            $table->string('usertype', 10)->default('creator');

            // Address fields
            $table->string('street')->nullable();
            $table->string('city', 100)->nullable();
            $table->string('region', 100)->nullable();
            $table->string('state', 20)->nullable();
            $table->string('zip', 20)->nullable();

            // Phone fields
            $table->string('home_phone', 20)->nullable();
            $table->string('cell_phone', 20)->nullable();
            $table->string('work_phone', 20)->nullable();

            // Social media fields
            $table->text('site_url')->nullable();
            $table->text('facebook')->nullable();
            $table->text('social_x')->nullable();
            $table->text('tiktok')->nullable();
            $table->text('instagram')->nullable();
            $table->text('snapchat')->nullable();
            $table->text('twitch')->nullable();
            $table->text('linkedin')->nullable();
            $table->text('discord')->nullable();
            $table->text('telegram')->nullable();
            $table->string('other')->nullable();

            // Personal info
            $table->date('birth_date')->nullable();

            // Tax and document fields
            $table->string('fiscal_code', 16)->nullable()->unique();
            $table->string('tax_id_number', 11)->nullable()->unique();
            $table->string('doc_typo', 30)->nullable();
            $table->string('doc_num', 30)->nullable()->unique();
            $table->date('doc_issue_date')->nullable();
            $table->date('doc_expired_date')->nullable();
            $table->string('doc_issue_from')->nullable();
            $table->string('doc_photo_path_f', 2048)->nullable();
            $table->string('doc_photo_path_r', 2048)->nullable();

            // Organization fields
            $table->string('org_name')->nullable();
            $table->string('org_email', 256)->nullable();
            $table->string('org_street')->nullable();
            $table->string('org_city', 100)->nullable();
            $table->string('org_region', 100)->nullable();
            $table->string('org_state', 20)->nullable();
            $table->string('org_zip', 20)->nullable();
            $table->string('org_site_url', 2048)->nullable();
            $table->text('annotation')->nullable();
            $table->string('org_phone_1', 20)->nullable();
            $table->string('org_phone_2', 20)->nullable();
            $table->string('org_phone_3', 20)->nullable();
            $table->string('rea', 30)->nullable()->unique();
            $table->string('org_fiscal_code', 20)->nullable()->unique();
            $table->string('org_vat_number', 20)->nullable()->unique();

            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000001_create_cache_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000002_create_jobs_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_063504_add_two_factor_columns_to_users_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Laravel\Fortify\Fortify;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->text('two_factor_secret')
                ->after('password')
                ->nullable();

            $table->text('two_factor_recovery_codes')
                ->after('two_factor_secret')
                ->nullable();

            if (Fortify::confirmsTwoFactorAuthentication()) {
                $table->timestamp('two_factor_confirmed_at')
                    ->after('two_factor_recovery_codes')
                    ->nullable();
            }
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(array_merge([
                'two_factor_secret',
                'two_factor_recovery_codes',
            ], Fortify::confirmsTwoFactorAuthentication() ? [
                'two_factor_confirmed_at',
            ] : []));
        });
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_163525_create_personal_access_tokens_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('personal_access_tokens', function (Blueprint $table) {
            $table->id();
            $table->morphs('tokenable');
            $table->string('name');
            $table->string('token', 64)->unique();
            $table->text('abilities')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('personal_access_tokens');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_165429_create_permission_tables.php ####

<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        $teams = config('permission.teams');
        $tableNames = config('permission.table_names');
        $columnNames = config('permission.column_names');
        $pivotRole = $columnNames['role_pivot_key'] ?? 'role_id';
        $pivotPermission = $columnNames['permission_pivot_key'] ?? 'permission_id';

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not loaded. Run [php artisan config:clear] and try again.');
        }
        if ($teams && empty($columnNames['team_foreign_key'] ?? null)) {
            throw new \Exception('Error: team_foreign_key on config/permission.php not loaded. Run [php artisan config:clear] and try again.');
        }

        Schema::create($tableNames['permissions'], function (Blueprint $table) {
            //$table->engine('InnoDB');
            $table->bigIncrements('id'); // permission id
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });

        Schema::create($tableNames['roles'], function (Blueprint $table) use ($teams, $columnNames) {
            //$table->engine('InnoDB');
            $table->bigIncrements('id'); // role id
            if ($teams || config('permission.testing')) { // permission.testing is a fix for sqlite testing
                $table->unsignedBigInteger($columnNames['team_foreign_key'])->nullable();
                $table->index($columnNames['team_foreign_key'], 'roles_team_foreign_key_index');
            }
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();
            if ($teams || config('permission.testing')) {
                $table->unique([$columnNames['team_foreign_key'], 'name', 'guard_name']);
            } else {
                $table->unique(['name', 'guard_name']);
            }
        });

        Schema::create($tableNames['model_has_permissions'], function (Blueprint $table) use ($tableNames, $columnNames, $pivotPermission, $teams) {
            $table->unsignedBigInteger($pivotPermission);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_permissions_model_id_model_type_index');

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_permissions_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            } else {
                $table->primary([$pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            }

        });

        Schema::create($tableNames['model_has_roles'], function (Blueprint $table) use ($tableNames, $columnNames, $pivotRole, $teams) {
            $table->unsignedBigInteger($pivotRole);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_roles_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            } else {
                $table->primary([$pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            }
        });

        Schema::create($tableNames['role_has_permissions'], function (Blueprint $table) use ($tableNames, $pivotRole, $pivotPermission) {
            $table->unsignedBigInteger($pivotPermission);
            $table->unsignedBigInteger($pivotRole);

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');

            $table->primary([$pivotPermission, $pivotRole], 'role_has_permissions_permission_id_role_id_primary');
        });

        app('cache')
            ->store(config('permission.cache.store') != 'default' ? config('permission.cache.store') : null)
            ->forget(config('permission.cache.key'));
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        $tableNames = config('permission.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['role_has_permissions']);
        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['model_has_permissions']);
        Schema::drop($tableNames['roles']);
        Schema::drop($tableNames['permissions']);
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_14_090414_create_collections_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
{
    Schema::create('collections', function (Blueprint $table) {
        $table->id();

        // Relazioni
        $table->foreignId('creator_id')->nullable()->constrained('users')->onDelete('cascade'); // Creator della collection
        $table->foreignId('owner_id')->nullable()->constrained('users')->onDelete('cascade');   // Owner della collection

        // Identificatori esterni
        $table->bigInteger('epp_id')->nullable()->index();          // ID del progetto EPP
        $table->bigInteger('EGI_asset_id')->nullable()->index();    // ID dell'asset EGI

        // Dati della collection
        $table->string('collection_name')->index()->nullable();     // Nome della collection
        $table->text('description')->nullable();                   // Descrizione
        $table->string('type', 10)->index()->nullable();           // Tipo (es. standard, single_egi)

        // Immagini e percorsi
        $table->string('image_banner', 1024)->nullable();          // Banner
        $table->string('image_card', 1024)->nullable();            // Card
        $table->string('image_avatar', 1024)->nullable();          // Avatar
        $table->string('path_image_to_ipfs')->nullable();          // Percorso immagine IPFS
        $table->string('url_image_ipfs')->nullable();              // URL immagine IPFS
        $table->string('url_collection_site')->nullable();         // URL del sito della collection

        // Stato e pubblicazione
        $table->string('status')->default('draft')->index();       // Stato: draft, pending_approval, published
        $table->boolean('is_published')->default(false)->index();  // Booleano per indicare se è pubblicata

        // Dati associati agli EGI
        $table->integer('position')->nullable();                  // Posizione della collection
        $table->integer('EGI_number')->nullable();                // Numero di EGI nella collection
        $table->float('floor_price')->nullable();                 // Prezzo minimo
        $table->text('EGI_asset_roles')->nullable();              // Ruoli relativi all'EGI

        // Timestamps
        $table->timestamps();
        $table->softDeletes(); // Soft delete per gestione più flessibile delle eliminazioni
    });


}


    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('collections');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_18_122016_create_icons_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('icons', function (Blueprint $table) {
            $table->id();
            $table->string('name'); // Nome dell'icona, es: 'camera', 'user'
            $table->string('style'); // Stile dell'icona, es: 'elegant', 'classic'
            $table->string('type'); // Tipo dell'icona, es: 'solid', 'regular', 'light', 'duotone', 'brands'
            $table->string('class'); // Altezza dell'icona, es: '448'
            $table->text('html'); // Contenuto HTML generico (SVG, tag <i>, ecc.)
            $table->string('host'); // Host di provenienza dell'icona, es: 'fontawesome.com'
            $table->string('name_on_host'); // Nome dell'icona sul host di provenienza, es: 'camera'
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('icons');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_10_171308_create_egi_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('egi', function (Blueprint $table) {
            $table->id();

            // Relazione con la tabella collections
            $table->foreignId('collection_id')
                  ->constrained('collections')
                  ->onUpdate('cascade')
                  ->onDelete('restrict');

            // Campi esistenti
            $table->unsignedBigInteger('key_file')->nullable()->index();
            $table->string('token_EGI', 255)->nullable();
            $table->json('jsonMetadata')->nullable();
            $table->unsignedBigInteger('user_id')->nullable()->index();
            $table->unsignedBigInteger('auction_id')->nullable()->index();
            $table->unsignedBigInteger('owner_id')->nullable()->index();
            $table->unsignedBigInteger('drop_id')->nullable()->index();
            $table->string('upload_id', 255)->nullable();
            $table->string('creator', 255)->nullable();
            $table->string('owner_wallet', 255)->nullable();
            $table->string('drop_title', 255)->nullable();
            $table->string('title', 60)->index()->nullable();
            $table->text('description')->nullable();
            $table->string('extension', 10)->nullable();
            $table->boolean('media')->default(false)->nullable();
            $table->string('type', 10)->nullable();
            $table->integer('bind')->nullable();
            $table->integer('paired')->nullable();
            $table->decimal('price', 20, 2)->nullable();
            $table->decimal('floorDropPrice', 20, 2)->nullable();
            $table->integer('position')->nullable();
            $table->date('creation_date')->nullable();
            $table->text('size')->nullable();
            $table->text('dimension')->nullable();
            $table->boolean('is_published')->default(false)->nullable();
            $table->boolean('mint')->default(false)->nullable();
            $table->boolean('rebind')->default(true)->nullable();
            $table->text('file_crypt')->nullable();
            $table->text('file_hash')->nullable();
            $table->text('file_IPFS')->nullable();
            $table->text('file_mime')->nullable();

            // Nuovi campi suggeriti
            $table->string('status', 20)->default('draft');
            $table->boolean('is_public')->default(true);
            $table->foreignId('updated_by')->nullable()->constrained('users');

            // Soft delete
            $table->softDeletes();

            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('egi');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_10_171834_create_egi_audits_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('egi_audits', function (Blueprint $table) {
            $table->id();
            $table->foreignId('egi_id')->constrained('egi')->onDelete('cascade');
            $table->foreignId('user_id')->constrained('users'); // Utente che ha effettuato la modifica
            $table->json('old_values')->nullable();
            $table->json('new_values')->nullable();
            $table->string('action'); // create, update, delete
            $table->timestamps();
        });

    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('egi_audits');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_23_143829_create_notifications_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('notifications', function (Blueprint $table) {
            $table->char('id', 36)->primary(); // Utilizza char(36) per l'UUID
            $table->string('type');
            $table->morphs('notifiable');
            $table->string('outcome')->nullable()->default('pending'); // Nuovo campo per l'esito
            $table->text('data');
            $table->timestamp('read_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('notifications');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_102951_create_collection_user_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('collection_user', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Relazione con collections
            $table->string('status')->default('pending')->index();
            $table->foreignId('user_id')->constrained()->onDelete('cascade'); // Relazione con users
            $table->string('role')->nullable(); // Ruolo (es. admin, editor, viewer)
            $table->boolean('is_owner')->default(false); // Indica il proprietario della collection
            $table->timestamp('joined_at')->nullable(); // Data di aggiunta
            $table->timestamp('removed_at')->nullable(); // Data di rimozione
            $table->json('metadata')->nullable(); // Eventuali dati dinamici
            $table->timestamps();
            $table->unique(['collection_id', 'user_id']); // Relazione unica per collection-user
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('collection_user');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_104339_create_wallets_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('wallets', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Relazione con collections
            $table->foreignId('user_id')->nullable()->constrained('users')->nullOnDelete(); // Nullable per wallet anonimi
            $table->string('wallet', 255)->nullable(); // Indirizzo del wallet
            $table->string('platform_role', 25)->nullable(); // Tipo di wallet (es. 'metamask', 'sollet')
            $table->float('royalty_mint')->nullable(); // Percentuale della prima vendita
            $table->float('royalty_rebind')->nullable(); // Percentuale del mercato secondario
            $table->boolean('is_anonymous')->default(true); // Indica se il wallet è anonimo
            $table->json('metadata')->nullable(); // Eventuali dati dinamici
            $table->timestamps();
        });


    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('wallets');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_104350_create_wallet_change_approvals_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('wallet_change_approvals', function (Blueprint $table) {
            $table->id();
            $table->foreignId('wallet_id')->constrained('wallets')->onDelete('cascade')->unsignedBigInteger(); // Relazione con il wallet
            $table->foreignId('requested_by_user_id')->constrained('users')->onDelete('cascade'); // Chi richiede la modifica
            $table->foreignId('approver_user_id')->nullable()->constrained('users')->onDelete('cascade'); // Chi approva (se esiste)
            $table->string('change_type'); // Esempi: 'creation', 'update', 'delete'
            // notification_id
            $table->string('notification_id')->nullable(); // ID della notifica associata
            $table->json('change_details'); // Dettagli della modifica (es. vecchi e nuovi valori)
            $table->string('status')->default('pending'); // Valori: 'pending', 'approved', 'rejected'
            $table->string('approval')->default('approved'); // Valori: 'pending', 'approved'
            $table->string('type')->default('update'); // Valori: 'update', 'create'
            $table->json('previous_values')->nullable(); // Per tenere traccia dei vecchi valori in caso di rifiuto
            $table->text('rejection_reason')->nullable(); // Motivo del rifiuto, se applicabile
            $table->timestamps();
        });

    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('wallet_change_approvals');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_28_131757_create_collection_invitations_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Esegui la migrazione.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('collection_invitations', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Associazione alla collection
            $table->string('email'); // Email dell'invitato
            $table->string('role'); // Ruolo proposto per l'invitato
            $table->enum('status', ['pending', 'accepted', 'rejected'])->default('pending'); // Stato dell'invito
            $table->timestamps();
        });
    }

    /**
     * Elimina la migrazione.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('collection_invitations');
    }
};

#### Inizio File: /home/fabio/EGI/database/seeders/AdminUserSeeder.php ####

<?php

declare(strict_types=1);

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;

class AdminUserSeeder extends Seeder
{
    public function run(): void
    {
        $adminEmail = 'fabiocherici@gmail.com';

        $user = User::where('email', $adminEmail)->first();

        if (!$user) {
            $this->command->error("Utente con email {$adminEmail} non trovato!");
            return;
        }

        $adminRole = Role::where('name', 'admin')->first();

        if (!$adminRole) {
            $this->command->error('Ruolo admin non trovato! Esegui prima il seeder dei ruoli.');
            return;
        }

        $user->assignRole($adminRole);
        $this->command->info("Ruolo admin assegnato con successo a {$adminEmail}!");
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/DatabaseSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        $this->call([
            InitialSetupSeeder::class,
            RolesAndPermissionsSeeder::class,
            IconSeeder::class,
            FakeUserSeeder::class,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/FakeUserSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Collection;
use App\Traits\HasCreateDefaultCollectionWallets;

class FakeUserSeeder extends Seeder
{
    use HasCreateDefaultCollectionWallets;

    public function run()
    {
        User::factory(5)->create()->each(function ($user) {
            // Creazione della collection
            $collection = Collection::factory()->create([
                'creator_id' => $user->id,
                'owner_id' => $user->id,
            ]);

            // Associazione nella tabella pivot collection_user
            $collection->users()->attach($user->id, ['role' => 'creator', 'is_owner' => true]);

            // Creazione dei wallet di default
            $this->generateDefaultWallets($collection, $user->wallet, $user->id);
        });

        $this->command->info('Creati 5 utenti con relative collection e wallet di default.');
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/IconSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Icon;

class IconSeeder extends Seeder
{
    public function run()
    {
        // Carica le icone dal file di configurazione
        $icons = config('icons.styles.elegant');

        foreach ($icons as $icon) {
            Icon::updateOrCreate(
                [
                    'name' => $icon['name'],
                    'style' => 'elegant', // Stile fisso (puoi modificarlo dinamicamente se necessario)
                ],
                [
                    'type' => $icon['type'],
                    'class' => $icon['class'],
                    'html' => $icon['html'],
                    'host' => $icon['host'],
                    'name_on_host' => $icon['name_on_host'],
                ]
            );
        }
    }
}


#### Inizio File: /home/fabio/EGI/database/seeders/InitialSetupSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Collection;
use Spatie\Permission\Models\Role;
use Illuminate\Support\Facades\Hash;

class InitialSetupSeeder extends Seeder
{
    public function run(): void
    {
        $this->createUserWithCollection([
            'id' => 1,
            'name' => 'Natan',
            'email' => 'natan@gmail.com',
            'password' => 'password',
            'role' => 'superadmin',
            'collection_name' => 'Natan\'s Collection',
        ]);

        $this->createUserWithCollection([
            'id' => 2,
            'name' => 'EPP',
            'email' => 'epp@gmail.com',
            'password' => 'password',
            'role' => 'admin',
            'collection_name' => 'EPP\'s Collection',
        ]);

        $this->createUserWithCollection([
            'id' => 3,
            'name' => 'Fabio',
            'email' => 'fabiocherici@gmail.com',
            'password' => 'password',
            'role' => 'creator',
            'collection_name' => 'Fabio\'s Collection',
        ]);

        $this->command->info('Tutti i primi account e relative collections creati con successo.');
    }

    private function createUserWithCollection(array $data): void
    {
        // Creazione o aggiornamento dell'utente
        $user = User::updateOrCreate(
            ['id' => $data['id']],
            [
                'name' => $data['name'],
                'email' => $data['email'],
                'password' => Hash::make($data['password']),
                'created_at' => now(),
                'updated_at' => now(),
            ]
        );

        // Creazione o aggiornamento del ruolo
        $role = Role::firstOrCreate(['name' => $data['role']]);

        if (!$user->hasRole($data['role'])) {
            $user->assignRole($role);
        }

        // Creazione della collection
        $collection = Collection::updateOrCreate(
            [
                'creator_id' => $user->id,
                'collection_name' => $data['collection_name'],
            ],
            [
                'owner_id' => $user->id,
                'description' => "{$data['collection_name']} - Default collection for {$data['name']}",
                'type' => 'standard',
                'status' => 'draft',
                'is_published' => false,
                'position' => 1,
                'EGI_number' => 0,
                'floor_price' => 0.0,
                'created_at' => now(),
                'updated_at' => now(),
            ]
        );

        // Associazione del ruolo di proprietario nella tabella pivot collection_user
        $collection->users()->attach($user->id, ['role' => 'creator', 'is_owner' => true]);
    }
}


#### Inizio File: /home/fabio/EGI/database/seeders/RolesAndPermissionsSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\PermissionRegistrar;

class RolesAndPermissionsSeeder extends Seeder
{
    /**
     * Permessi e ruoli predefiniti.
     */
    private $permissions = [
        // Permessi Generali

        'manage_roles',
        'manage_permissions',

        // Permessi per il Team
        'create_team',
        'update_team',
        'delete_team',
        'add_team_member',
        'remove_team_member',
        'modify_team_roles',

        // Permessi per le Collection
        'create_collection',
        'update_collection',
        'update_collection_image_header',
        'delete_collection',
        'read_collection_header',

        // Permessi per gli EGI
        'create_EGI',
        'update_EGI',
        'delete_EGI',

        // Permessi per i Wallet
        'create_wallet',
        'update_wallet',
        'approve_wallet',
        'reject_wallet',

        // Permessi per le views
        'view_dashboard',
        'view_team',
        'view_collection',
        'view_collection_header',
        'view_EGI',
        'view_user',
        'view_profile',
        'view_bio',
        'view_settings',
        'view_notifications',
        'view_logs',
    ];

    private $roles = [
        'superadmin' => ['all'],
        'creator' => [
            // Team
            'create_team', 'read_team', 'update_team', 'delete_team',
            'add_team_member', 'remove_team_member', 'modify_team_roles',

            // Collection
            'create_collection', 'update_collection', 'delete_collection','update_collection_image_header',

            // EGI
            'create_EGI', 'update_EGI', 'delete_EGI',

            // Wallet
            'create_wallet', 'update_wallet', 'approve_wallet', 'reject_wallet',

            // Views
            'view_user', 'view_profile', 'view_team', 'view_dashboard', 'view_bio', 'view_settings',
            'view_notifications', 'view_logs',  'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'admin' => [
            // Team
            'add_team_member', 'remove_team_member', 'modify_team_roles',

            // Collection
            'update_collection', 'update_collection_image_header',

            // EGI
            'create_EGI', 'update_EGI', 'delete_EGI',

            // Views
            'view_user', 'view_profile', 'view_team', 'view_dashboard', 'view_bio', 'view_settings',
            'view_notifications', 'view_logs',  'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'editor' => [

            // EGI
            'update_EGI',

            // Collection
            'update_collection_image_header',

            // Views
            'view_profile', 'view_team', 'view_dashboard', 'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'guest' => [
            // Collection
            'view_collection_header', 'view_dashboard',

            // EGI
            'view_EGI',
        ],
    ];

    public function run(): void
    {
        // Reset cached roles and permissions
        app()[PermissionRegistrar::class]->forgetCachedPermissions();

        // Creare tutti i permessi
        foreach ($this->permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
        }

        // Creare i ruoli e assegnare i permessi
        foreach ($this->roles as $roleName => $rolePermissions) {
            $role = Role::firstOrCreate(['name' => $roleName]);

            if (in_array('all', $rolePermissions)) {
                $role->givePermissionTo(Permission::all());
            } else {
                $role->givePermissionTo($rolePermissions);
            }
        }

        $this->command->info('Ruoli e permessi creati con successo.');
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/SuperAdminUserSeeder.php ####

<?php

declare(strict_types=1);

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;

class SuperAdminUserSeeder extends Seeder
{
    public function run(): void
    {
        $adminEmail = 'natan@gmail.com';

        $user = User::where('email', $adminEmail)->first();

        if (!$user) {
            $this->command->error("Utente con email {$adminEmail} non trovato!");
            return;
        }

        $adminRole = Role::where('name', 'superadmin')->first();

        if (!$adminRole) {
            $this->command->error('Ruolo admin non trovato! Esegui prima il seeder dei ruoli.');
            return;
        }

        $user->assignRole($adminRole);
        $this->command->info("Ruolo admin assegnato con successo a {$adminEmail}!");
    }
}

#### Inizio File: /home/fabio/EGI/helpers.php ####

<?php

use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

if (!function_exists('livewire_tmp_path')) {
    function livewire_tmp_path() {
        $disk = config('livewire.temporary_file_upload.disk', 'local');
        $directory = config('livewire.temporary_file_upload.directory', 'livewire-tmp');

        if (is_null($directory)) {
            $directory = 'livewire-tmp';
        }

        return Storage::disk($disk)->path($directory);
    }
}

if (!function_exists('getDynamicBucketUrl')) {
    /**
     * Determina dinamicamente l'URL del bucket tra Digital Ocean e CDN.
     *
     * @return string
     */
    function getDynamicBucketUrl(): string
    {
        $doUrl = config('paths.hosting.Digital_Ocean.url');
        $cdnUrl = config('paths.hosting.CDN.url');

        // Controlla la disponibilità di Digital Ocean
        if (checkUrlAvailability($doUrl)) {
            Log::info("Utilizzo di Digital Ocean: {$doUrl}");
            return $doUrl;
        }

        // Controlla la disponibilità della CDN
        if (checkUrlAvailability($cdnUrl)) {
            Log::info("Utilizzo della CDN: {$cdnUrl}");
            return $cdnUrl;
        }

        // Fallback su un valore di default
        $defaultUrl = '/storage/';
        Log::warning("Nessun servizio disponibile, uso il disco locale: {$defaultUrl}");
        return $defaultUrl;
    }

    /**
     * Verifica se un URL è disponibile.
     *
     * @param string $url
     * @return bool
     */
    function checkUrlAvailability(string $url): bool
    {
        try {
            $response = Http::head($url);
            return $response->successful();
        } catch (\Exception $e) {
            Log::error("Errore nella verifica dell'URL: {$url}", ['error' => $e->getMessage()]);
            return false;
        }
    }
}

#### Inizio File: /home/fabio/EGI/newOwner.php ####

<?php

use App\Models\Team;
use App\Models\User;

$teams = Team::all();

foreach ($teams as $team) {
    $team->users()->syncWithoutDetaching([$team->user_id => ['role' => 'creator']]);
}

#### Inizio File: /home/fabio/EGI/public/index.php ####

<?php

use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
(require_once __DIR__.'/../bootstrap/app.php')
    ->handleRequest(Request::capture());

#### Inizio File: /home/fabio/EGI/resources/lang/de/collection.php ####

<?php
/*
|--------------------------------------------------------------------------
| Traduzione in tedesco di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
|
 */

return [
    'invite_collection_member' => 'Mitglied zur Sammlung einladen',
    'came_back_to_collection' => 'Zurück zur Sammlung',
    'confirm_delete_title' => 'Sind Sie sicher?',
    'confirm_delete_text' => 'Diese Aktion löscht das :type dauerhaft!',
    'confirm_delete_button' => 'Ja, löschen!',
    'cancel_delete_button' => 'Abbrechen',
    'deleted_title' => 'Gelöscht!',
    'deleted_text' => 'Das Bannerbild wurde erfolgreich gelöscht.',
    'delete_card' => 'Karte löschen',
    'delete_banner' => 'Banner löschen',
    'delete_avatar' => 'Avatar löschen',
    'delete_EGI' => 'EGI löschen',
    'save_card' => 'Karte speichern',
    'save_banner' => 'Banner speichern',
    'save_avatar' => 'Avatar speichern',
    'save_EGI' => 'EGI speichern',
    'create_validation_error' => 'Validierungsfehler',
    'creation_failed' => 'Erstellung fehlgeschlagen',
    'collection_delete' => 'Sammlung löschen',
    'avatar_image' => 'Avatarbild',
    'card_image' => 'Kartenbild',
    'EGI_image' => 'EGI-Bild',
    'banner_image' => 'Bannerbild',
    'edit_collection_data' => 'Daten der Sammlung bearbeiten',
    'modifies_EGI' => 'EGI ändern',
    'new_collection' => 'Neue Sammlung',
    'open_collection' => 'Sammlung öffnen',
    'team_members_description' => 'Hier können Sie alle Teammitglieder sehen, die Zugriff auf diese Sammlung haben',
    'collection_members' => 'Sammlungsmitglieder',
    'manage_head_images' => 'Kopfbilder verwalten',
    'manage_collection' => 'Sammlung verwalten',
    'collection' => 'Sammlung',
    'collections' => 'Sammlungen',
    'collection_data' => 'Kopfdaten der Sammlung',
    'collection_name' => 'Name der Sammlung',
    'collection_id' => 'ID der Sammlung',
    'collection_description_placeholder' => 'Geben Sie eine Beschreibung der Sammlung ein',
    'collection_description_suggest' => 'Eine klare und ansprechende Beschreibung hilft Benutzern, Ihre Sammlung besser zu verstehen und erhöht ihre Attraktivität. Erzählen Sie, was sie einzigartig macht!',
    'collection_description' => 'Geben Sie alle Daten zur Sammlung ein, seien Sie sehr genau',
    'collection_image' => 'Bild der Sammlung',
    'collection_image_alt' => 'Alternativer Text des Sammlungsbildes',
    'add_epp' => 'EPP hinzufügen',
    'add_epp_placeholder' => 'Geben Sie ein EPP ein',
    'need_to_associate_epp' => 'Bis Sie Ihre Galerie mit einem EPP verknüpft haben, können Sie sie nicht veröffentlichen',
    'EGI_floor_price' => 'Mindestpreis EGI',
    'set_base_EcoNFT_price' => 'Legen Sie einen Basispreis fest, den Sie für jedes EGI dieser Sammlung berechnen möchten',
    'collection_site_URL' => 'URL der Sammlungsseite',
    'collection_site_URL_suggest' => 'Vorschlag: Geben Sie die URL der Sammlungsseite ein',
    'position_for_mor_than_one_collection' => 'Wenn Sie mehr als eine Sammlung haben, können Sie entscheiden, an welcher Stelle Sie diese platzieren möchten',
    'publish_collection' => 'Die Sammlung veröffentlichen',
    'image_for_EcoNFT_collection' => 'Bild für die EGI-Sammlung',
    'image_description' => 'Dies ist das Bild, das die gesamte Sammlung darstellt',
    'image_alt' => 'Bild, das die gesamte Sammlung darstellt',
    'image_title' => 'Bild, das die gesamte Sammlung darstellt',
    'select_new_EcoNFT_photo' => 'Wählen Sie ein neues Foto für das EGI aus',
    'switch_collection' => 'Sammlung wechseln',
    'goto_collection' => 'Zur Sammlung gehen',
    'type' => 'Typ',
    'select_content_type' => 'Wählen Sie den Inhaltstyp aus',
    'type_image' => 'Bild',
    'type_ebook' => 'E-Book',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'EGI-Nummer',
    'position' => 'Position',
    'updated_successfully' => 'Sammlung erfolgreich gespeichert',
    'save_failed' => 'Speichern fehlgeschlagen',
    'collection_not_found' => 'Sammlung nicht gefunden',
    'tips_to_optimize_your_collection' => 'Tipps zur Optimierung Ihrer Sammlung',
    'tips_for_your_collection_images' => 'Tipps für die Bilder Ihrer Sammlung',
    'image_section_title' => 'Bilder der Sammlung',
    'image_section_description' => 'Wählen Sie sorgfältig die Bilder aus, die Ihre Sammlung repräsentieren',
    'data_section_title' => 'Sammlungsdaten',
    'data_section_description' => 'Wählen Sie sorgfältig die Daten aus, die Ihre Sammlung repräsentieren',
    'this_is_default_collection_of_the_team' => 'Dies ist die Standardkollektion des Teams',
    'wallet' => [
        'write_royalty_mint' => 'Geben Sie den Prozentsatz der Royalties für Mint ein',
        'write_royalty_rebind' => 'Geben Sie den Prozentsatz der Royalties für Rebind ein',
        'user_role' => 'Rolle',
        'role_unknown' => 'Keine Rolle',
        'address' => 'Wallet-Adresse',
        'balance' => 'Wallet-Guthaben',
        'name' => 'Wallet-Name',
        'status' => 'Wallet-Status',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Mint-Royalties',
        'royalty_rebind' => 'Rebind-Royalties',
        'manage_wallet' => 'Wallet verwalten',
        'remove_photo' => 'Foto entfernen',
        'wallet' => 'Wallet',
        'cancellation' => 'Wallet-Stornierung',
        'select_a_wallet_connect' => 'Wählen Sie ein Wallet',
        'button_wallet_connect' => 'Ein Wallet verbinden',
        'button_wallet_disconnect' => 'Trennen',
        'create_the_wallet' => 'Erstellen Sie ein neues Wallet',
        'username' => 'Benutzername',
        'create' => 'Ein Wallet erstellen',
        'delete_wallet' => 'Sind Sie sicher, dass Sie dieses Wallet löschen möchten?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in tedesco di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Zugriff nicht autorisiert',
    'SCAN_ERROR' => 'Scan-Fehler',
    'VIRUS_FOUND' => 'Virus gefunden',
    'INVALID_FILE_EXTENSION' => 'Ungültige Dateierweiterung',
    'MAX_FILE_SIZE' => 'Die Datei darf :max Byte nicht überschreiten.',
    'INVALID_FILE_PDF' => 'Ungültige PDF-Datei',
    'MIME_TYPE_NOT_ALLOWED' => 'Dateityp nicht erlaubt.',
    'INVALID_IMAGE_STRUCTURE' => 'Ungültige Bildstruktur',
    'INVALID_FILE_NAME' => 'Ungültiger Dateiname',
    'ERROR_GETTING_PRESIGNED_URL' => 'Fehler beim Abrufen der vorab signierten URL',
    'ERROR_DURING_FILE_UPLOAD' => 'Fehler beim Hochladen der Datei',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Datei konnte nicht gespeichert werden',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Ordner konnte nicht erstellt werden',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Ordnerberechtigungen konnten nicht geändert werden',
    'IMPOSSIBLE_SAVE_FILE' => 'Datei konnte nicht gespeichert werden',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Internes Problem, der Support wurde bereits benachrichtigt',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Fehler bei der Verschlüsselung des Dateinamens',
    'IMAGICK_NOT_AVAILABLE' => 'Internes Problem, der Support wurde bereits benachrichtigt',
    'JSON_ERROR_IN_DISPATCHER' => 'JSON-Fehler im Dispatcher',
    'GENERIC_SERVER_ERROR' => 'Generischer Serverfehler, das technische Team wurde informiert',
    'FILE_NOT_FOUND' => 'Datei nicht gefunden',
    'UNEXPECTED_ERROR' => 'Generischer Serverfehler, das technische Team wurde informiert',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Fehler beim Löschen der lokalen temporären Datei',

    'unexpected_error' => 'Unerwarteter Fehler',
    'scan_error' => 'Fehler beim Scannen',
    'virus_found' => 'Virus gefunden',
    'required' => 'Das Feld ist erforderlich.',
    'file' => 'Beim Hochladen der Datei ist ein Fehler aufgetreten.',
    'file_extension_not_valid' => 'Dateierweiterung ungültig',
    'mimes' => 'Die Datei muss vom Typ sein: :values.',
    'max_file_size' => 'Die Datei darf :max Byte nicht überschreiten.',
    'invalid_pdf_file' => 'Ungültige PDF-Datei',
    'mime_type_not_allowed' => 'Dateityp nicht erlaubt.',
    'invalid_image_structure' => 'Ungültige Bildstruktur',
    'invalid_file_name' => 'Ungültiger Dateiname',
    'error_getting_presigned_URL' => 'Fehler beim Abrufen der vorab signierten URL',
    'error_getting_presigned_URL_for_user' => 'Fehler beim Abrufen der vorab signierten URL für Benutzer',
    'error_during_file_upload' => 'Fehler beim Hochladen der Datei',
    'error_deleting_file' => 'Fehler beim Löschen der Datei',
    'upload_finished' => 'Hochladen',
    'some_errors' => 'einige Fehler',
    'upload_failed' => 'Hochladen fehlgeschlagen',
    'error_creating_folder' => 'Fehler beim Erstellen des Ordners',
    'error_changing_folder_permissions' => 'Fehler beim Ändern der Ordnerberechtigungen',
    'local_save_failed_file_saved_to_external_disk_only' => 'Lokales Speichern fehlgeschlagen, Datei nur auf externer Festplatte gespeichert',
    'external_save_failed_file_saved_to_local_disk_only' => 'Externe Speicherung fehlgeschlagen, Datei nur auf lokaler Festplatte gespeichert',
    'file_scanning_may_take_a_long_time_for_each_file' => 'Das Scannen von Dateien kann für jede Datei viel Zeit in Anspruch nehmen',
    'all_files_are_saved' => 'Alle Dateien sind gespeichert',
    'loading_finished_you_can_proceed_with_saving' => 'Das Laden ist abgeschlossen, Sie können mit dem Speichern fortfahren',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Das Laden ist abgeschlossen, Sie können mit dem Speichern und Scannen fortfahren',
    'im_uploading_the_file' => 'Ich lade die Datei hoch',


    'exception' => [
        'NotAllowedTermException' => 'Nicht erlaubter Begriff',
        'MissingCategory' => 'Sie müssen eine Kategorie eingeben.',
        'DatabaseException' => 'Ein Datenbankfehler ist aufgetreten',
        'ValidationException' => 'Ein Validierungsfehler ist aufgetreten',
        'HttpException' => 'Ein HTTP-Fehler ist aufgetreten',
        'ModelNotFoundException' => 'Modell nicht gefunden',
        'QueryException' => 'Abfragefehler',
        'MintingException' => 'Fehler beim Prägen',
        'FileNotFoundException' => 'Datei nicht gefunden',
        'InvalidArgumentException' => 'Ungültiges Argument',
        'UnexpectedValueException' => 'Unerwarteter Wert',
        'ItemNotFoundException' => 'Element nicht gefunden',
        'MultipleItemsFoundException' => 'Mehrere Elemente gefunden',
        'LogicException' => 'Logikfehler',
        'EntryNotFoundException' => 'Eintrag nicht gefunden',
        'RuntimeException' => 'Laufzeitfehler',
        'BadMethodCallException' => 'Ungültiger Methodenaufruf',
        'LockTimeoutException' => 'Sperrzeitüberschreitung',
        'InvalidIntervalException' => 'Ungültiges Intervall',
        'InvalidPeriodParameterException' => 'Ungültiger Periodenparameter',
        'EndLessPeriodException' => 'Endloses Zeitintervall',
        'UnreachableException' => 'Nicht erreichbare Ausnahme',
        'InvalidTimeZoneException' => 'Ungültige Zeitzone',
        'ImmutableException' => 'Unveränderliche Ausnahme',
        'InvalidFormatException' => 'Ungültiges Format',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Lieber Benutzer,</p>
            </br>
            <p>Der von Ihnen eingegebene Text verstößt gegen unsere Gemeinschaftsrichtlinien und -normen. Bitte ändern Sie den Inhalt und versuchen Sie es erneut.</p>
            </br>
            <p>Wenn Sie nicht verstehen, warum dieser Begriff verboten ist, lesen Sie bitte die Klauseln der Vereinbarung, die Sie zum Zeitpunkt der Registrierung akzeptiert haben.
            <p>Wir danken Ihnen für Ihr Verständnis und Ihre Mitarbeit.</p>
            </br>
            <p>Mit freundlichen Grüßen,
            <br>
            Das Frangette-Team</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Siehe die Seite mit den Gemeinschaftsregeln.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'Der ForbiddenTermChecker wurde nicht korrekt initialisiert',
    'table_not_exist' => 'Die Tabelle existiert nicht',
    'unique' => 'Dieser Wert ist bereits in Ihrer Traits-Bibliothek vorhanden.',
    'the_category_name_cannot_be_empty' => 'Der Kategoriename darf nicht leer sein',
    'nathing_to_save' => 'Nichts zu speichern',
    'an_error_occurred' => 'Hoppla! Entschuldigung, ein Fehler ist aufgetreten!',
    'error_number' => 'Fehlernummer:',
    'reason' => [
        'reason' => 'Grund',
        'wallet_not_valid' => 'Ungültige Brieftasche',
        'something_went_wrong' => 'Etwas ist schief gelaufen',
    ],
    'solution' => [
        'solution' => 'Lösung',
        'create_a_new_wallet_and_try_again' => 'Erstellen Sie eine neue Brieftasche und versuchen Sie es erneut',
        'we_are_already_working_on_solving_the_problem' => 'Wir arbeiten bereits daran, das Problem zu lösen',
    ],
    'min' => [
        'string' => 'Das Feld muss mindestens :min Zeichen lang sein.',
    ],
    'max' => [
        'string' => 'Das Feld darf maximal :max Zeichen lang sein.',
    ],
    'id_epp_not_found' => 'ID EPP nicht gefunden',
    'minting' => [
        'error_generating_token' => 'Fehler beim Generieren des Tokens',
        'insufficient_wallet_balance' => 'Unzureichendes Guthaben in der Brieftasche, um dieses EcoNFT zu kaufen',
        'error_during_save_the_metadataFile' => 'Fehler beim Speichern der Metadaten in der Datei',
        'error_during_save_the_metadata_on_database' => 'Fehler beim Speichern der Metadaten in der Datenbank',
        'error_during_create_metadata_file' => 'Fehler beim Erstellen der Metadatendatei',
        'error_during_save_the_buyer' => 'Fehler beim Speichern des Käufers',
        'buyer_not_exist' => 'Käufer existiert nicht',
        'this_wallet_does_not_belong_to_any_buyer' => 'Diese Brieftasche gehört zu keinem Käufer',
        'seller_not_exist' => 'Verkäufer existiert nicht',
        'seller_owner_not_found' => 'Verkäuferbesitzer nicht gefunden',
        'seller_wallet_address_not_found' => 'Adresse der Verkäuferbrieftasche nicht gefunden',
        'error_during_save_the_seller' => 'Fehler beim Speichern des Verkäufers',
        'error_during_save_the_buyer_transaction' => 'Fehler beim Speichern der Käufertransaktion',
        'error_during_the_saving_of_the_payment' => 'Fehler beim Speichern der Zahlung',
        'error_during_save_the_natan' => 'Fehler beim Speichern der Daten', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Fehler beim Speichern der Transaktion',
        'seller_not_found' => 'Verkäufer nicht gefunden',
        'error_during_the_minting' => 'Fehler beim Prägen',
        'error_uploading_file' => 'Fehler beim Hochladen der Datei',
        'insufficient_balance' => 'Unzureichendes Guthaben',
        'eco_nft_not_found' => 'EcoNFT nicht gefunden',
        'no_traits_found' => 'Keine Merkmale gefunden',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in tedesco
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Zurück',
    "file_deleted_successfully" => "Datei erfolgreich gelöscht",
    'extension_not_allowed' => 'Erweiterung nicht erlaubt!',
    'title_file_type_not_allowed' => 'Dateityp nicht erlaubt!',
    'title_file_size_exceeds' => 'Dateigröße überschreitet das Limit!',
    'title_invalid_file_name' => 'Ungültiger Dateiname!',
    'file_extension_not_allowed' => 'Dateityp nicht erlaubt: :extension. Erlaubte Dateitypen haben die folgenden Erweiterungen: :extensions.',
    'file_type_not_allowed' => 'Dateityp nicht erlaubt: :type. Erlaubte MIME-Typen sind: :mimetypes.',
    'file_size_exceeds' => 'Die Dateigröße überschreitet die maximal zulässige Größe von :size MB.',
    'invalid_file_name' => 'Ungültiger Dateiname: :filename. Der Dateiname enthält ungültige Zeichen.',
    'allowed_extensions' => 'Erlaubte Erweiterungen sind: :extensions.',
    'allowed_mime_types' => 'Erlaubte MIME-Typen sind: :mimetypes.',
    "file_infected" => "Datei infiziert",
    "scan_error" => "Scan-Fehler",
    "starting_scan" => "Scan starten",
    "error_uploading_file" => "Fehler beim Hochladen der Datei",
    "error_getting_presigned_url" => "Fehler beim Abrufen der vorab signierten URL",
    "error_deleting_file" => "Fehler beim Löschen der Datei",
    "upload_finished" => "Hochladen abgeschlossen",
    "some_errors" => "einige Fehler",
    "upload_failed" => "Hochladen fehlgeschlagen",
    "file_scanning_may_take_a_long_time_for_each_file" => "Die Dateiscan kann für jede Datei viel Zeit in Anspruch nehmen",
    "all_files_are_saved" => "Alle Dateien sind gespeichert",
    "loading_finished_you_can_proceed_with_saving" => "Laden abgeschlossen, Sie können mit dem Speichern fortfahren",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Laden abgeschlossen, Sie können mit dem Speichern und Scannen fortfahren",
    "im_uploading_the_file" => "Ich lade die Datei hoch",
    "virus_scan_disabled" => "Virenscan deaktiviert",
    "virus_scan_enabled" => "Virenscan aktiviert",
    "file_is_clean" => "Die Datei ist sauber",
    "the_uploaded_file_was_detected_as_infected" => "Die hochgeladene Datei wurde als infiziert erkannt",
    "antivirus_scan_in_progress" => "Antivirus-Scan läuft",
    'scanning_stopped' => 'Scannen gestoppt',
    "emogy_sad" => "Emogy traurig",
    "emogy_happy" => 'Emogy glücklich',
    "emogy_angry" => 'Emogy wütend',
    "im_checking_the_validity_of_the_file" => 'Ich überprüfe die Gültigkeit der Datei',
    "im_recording_the_information_in_the_database" => 'Ich nehme die Informationen in der Datenbank auf',
    "im_saving_the_image" => 'Ich speichere das Bild',
    "file_saved_successfully" => 'Datei: :fileCaricato erfolgreich gespeichert',
    "all_files_were_scanned_no_infected_files" => 'Alle Dateien wurden gescannt, keine infizierten Dateien',
    "one_or_more_files_were_found_infected" => 'Eine oder mehrere Dateien wurden als infiziert erkannt, sie wurden vom Hochladen ausgeschlossen',
    "file_scanned_successfully" => 'Datei: :fileCaricato erfolgreich gescannt',
    "file_uploaded_successfully" => 'Datei: :fileCaricato erfolgreich hochgeladen',
    "no_file_uploaded" => "Keine Datei hochgeladen",
    "error_during_file_upload" => "Fehler beim Hochladen der Datei",
    'starting_uplad' => 'Upload starten',
    'uploaded' => 'Hochgeladen',
    'successfully' => 'erfolgreich',
    'starting_upload' => 'Upload starten',
    "starting_saving" => "Speichern beginnen",
    'waiting' => 'Warten...',
    'upload_status' => 'Upload-Status',
    'return_to_collection' => 'Zurück zur Sammlung',
    'EGI_image' =>'EGI-Bild',
    'error_in_the_files' => 'Fehler in den Dateien',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'EGI-Vorschau',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Ziehen Sie Ihre Dateien hierher oder klicken Sie, um auszuwählen',
    'upload_your_EGI_Files' => 'Laden Sie Ihre EGI-Dateien hoch',
    'wait_for_the_files_to_load' => 'Warten Sie, bis die Dateien geladen sind',
    'access_the_control_panel' => 'Zugriff auf das Kontrollfeld',
    'of' => 'von',
    'errors_in_the_files' => 'Fehler in den Dateien',
    'loading' => 'Laden...',
    'utilities_image_file' => 'Dienstprogramme, Bild- und Datei-Upload',
    'file_upload' => 'Datei-Upload',
    'select_files' => 'Dateien auswählen',
    'max_file_size_reminder' => 'Denken Sie daran: Die maximale Größe für jede Datei beträgt 100 MB. Für Dateien über 30 MB empfehlen wir den Einzelupload, um Netzwerkprobleme zu vermeiden.',
    'upload_your_files' => 'Laden Sie Ihre Dateien hoch',
    'file_format_not_supported_for_viewing' => 'Dateiformat zum Anzeigen nicht unterstützt',
    'cancel_upload' => 'Hochladen abbrechen',
    'save_the_files' => 'Dateien speichern',
    'open' => 'Öffnen',
    'user_management' => 'Benutzerverwaltung',
    'sign_in' => 'Anmelden',
    'sign_out' => 'Abmelden',
    "who_is_natan_frangette" => "Wer ist Natan Frangette",
    'home' => 'Zuhause',
    'remove_photo' => 'Foto entfernen',
    'username' => 'Nutzername',
    'bind' => 'Binden',
    'value' => 'Wert',
    'title' => 'Titel',
    'dimension' => 'Dimension',
    'size' => 'Größe: ',
    'description' => 'Beschreibung',
    'name' => 'Name',
    'date_start' => 'Startdatum',
    'date_end' => 'Enddatum',
    'unknown' => 'Unbekannt',
    'active' => 'Aktiv',
    'inactive' => 'Inaktiv',
    'existing' => 'Bestehend',
    'welcome' => 'Willkommen im Natan-Hub',
    'done' => 'Fertig',
    'create' => 'Erstellen',
    'saving'=> 'Ich speichere...',
    'save' => 'Speichern',
    'saved' => 'Gespeichert!',
    'remember_to_save' => 'Denken Sie daran, zu speichern',
    'cancel' => 'Stornieren',
    'update' => 'Aktualisieren',
    'cancelled' => 'Abgebrochen',
    'delete' => 'Löschen',
    'deleted' => 'Gelöscht',
    'edit' => 'Bearbeiten',
    'add' => 'Hinzufügen',
    'confirm' => 'Bestätigen',
    'disable' => 'Deaktivieren',
    'close' => 'Schließen',
    'delete_confirm' => 'Möchten Sie diesen Datensatz wirklich löschen?',
    'whoops_something_went_wrong' => 'Hoppla! Etwas ist schief gelaufen!',
    'action_confirm' => 'Operation erfolgreich abgeschlossen!',
    'search' => 'Suche',
    'traits' => 'Eigenschaften',
    'utility' => 'Dienstprogramm',
    'zoom' => 'Zoom',
    'product_image' => 'Produktbild',
    'micro_logo' => 'Mikrologo, Gleichgewichtsmolekül',
    'logo' => 'Logo, Gleichgewichtsmolekül',
    'manage_utility' => 'Dienstprogramm verwalten',
    'item_zoom' => 'Originalgröße',
    'esternal_transfert' => 'externe Übertragung',
    'internal_transfert' => 'interne Übertragung',
    'back_to_item' => 'Zurück zum Element',
    'position' => 'Position',
    'head_photo_page' => 'Foto-Seite',
    'handle_collection_data' => 'Sammlungsdaten bearbeiten',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Titelbild',
    'edit_item' => [
        'title' => 'Element bearbeiten',
        'description' => 'Elementinformationen bearbeiten',
        'back_to_collection' => 'Zurück zur Sammlung',
        'this_item_cannot_be_transfered' => 'Dieser Artikel kann nicht übertragen werden',
        'are_you_sure_you_want_to_transfer_this_item' => 'Möchten Sie diesen Artikel von <span class="font-bold"> :collectionNameFrom </span> nach <span class="font-bold"> :collectionNameTo </span> übertragen?',
        'personal_collection_for_this_user_not_exists' => 'Die persönliche Sammlung für diesen Benutzer existiert nicht, Übertragung unmöglich',
        'not_exist_user_width_this_email' => 'Der Benutzer mit der E-Mail :emailExternalTransfer existiert nicht.',
        'transfer' => 'Transfer',
        'internal_transfer' => 'Interne Übertragung',
        'external_transfer' => 'Externe Übertragung',
        'max_25_char' => 'Maximal 25 Zeichen',
        'max_1000_char' => 'Maximal 1000 Zeichen',
        'write_the_description' => 'Beschreibung schreiben',
        'date_of_creation' => 'Erstellungsdatum',
        'publish' => 'Veröffentlichen',
        'unpublish' => 'Veröffentlichung aufheben',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Dieser Artikel kann nicht gelöscht werden, da damit keine Dateien verknüpft sind',
    ],
    'bio' => [
        'your_biography' => 'Ihre Biografie',
        'bio_title' => 'Biografietitel',
        'manage_biography' => 'Biografie verwalten',
        'manage_chapter' => 'Kapitel verwalten',
        'back_to_biography' => 'Zurück zur Biografie',
        'back_to_profile' => 'Zurück zum Profil',
        'chapter' => 'Kapitel',
        'chapter_start_date' => 'Beginndatum des Kapitels',
        'chapter_end_date' => 'Enddatum des Kapitels',
        'chapter_title' => 'Kapiteltitel',
        'chapter_biography' => 'Kapitelbiografie',
        'remove_biography' => 'Biografie entfernen',
        'remove_chapter' => 'Kapitel entfernen',
        'removed_chapter' => 'Kapitel entfernt',
        'add_chapter' => 'Kapitel hinzufügen',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Sind Sie sicher, dass Sie dieses Kapitel entfernen möchten?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Sind Sie sicher, dass Sie diese Biografie entfernen möchten?',
    ],

    'drop' => [
        'remove_from_drop' => 'Aus der Drop entfernen',
        'add_to_drop' => 'Zur Drop hinzufügen',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Sind Sie sicher, dass Sie :itemremoved aus dem Drop entfernen möchten?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: tedesco
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Bitte melden Sie sich bei Ihrem Konto an',
    'email' => 'E-Mail-Addresse',
    'password' => 'Passwort',
    'remember_me' => 'Erinnere dich an mich',
    'forgot_your_password' => 'Passwort vergessen?',
    'login' => 'Anmeldung',
    'register' => 'Registrieren',
    'please_register_now' => 'Bitte registrieren Sie sich jetzt',
    'name' => 'Name',
    'first_name' => 'Vorname',
    'last_name' => 'Nachname',
    'confirm_password' => 'Passwort bestätigen',
    'reset_password' => 'Passwort zurücksetzen',
    'current_password' => 'Aktuelles Passwort',
    'new_password' => 'Neues Kennwort',
    'have_an_account' => 'Haben Sie ein Konto?',
    'dont_have_an_account' => 'Haben Sie kein Konto?',
    'i_agree_to' => 'Ich stimme den',
    'terms_of_service' => 'Servicebedingungen',
    'and' => 'und',
    'privacy_policy' => 'Datenschutz-Bestimmungen',
    'welcome_to_the_natan_site' => 'Willkommen auf der Natan-Website',
    'welcome_to_the_first_artist_business_builder' => 'Willkommen im Portal von Natan Frangette, dem ersten und einzigen Business Builder für Künstler',
    'join_us' => 'Schließen Sie sich einem Team an, das den Unterschied macht!',
    'express_your_creativity' => 'Drücken Sie Ihre Kreativität mit Ihren EcoNFTs aus',
    'change_the_world_with_every_sale' => 'Ändern Sie die Welt mit jedem Verkauf',
    'innovative_partnerships' => 'Innovative Partnerschaften',
    'bring_your_artistic_biography_to_life' => 'Bringen Sie Ihre künstlerische Biografie zum Leben',
    'impact_community' => 'Auswirkungsgemeinschaft',
    'register_now' => 'Registrieren Sie sich noch heute und werden Sie Teil einer künstlerischen Revolution mit positiven Auswirkungen auf Gesellschaft und Umwelt!',
    'change_language' => 'Sprache ändern',
    'for_your_security_please_confirm_your_password_to_continue' => 'Zu Ihrer Sicherheit bestätigen Sie bitte Ihr Passwort, um fortzufahren.',
    'two_factor' => [
        'title' => 'Zwei-Faktor-Authentifizierung',
        'description' => 'Fügen Sie Ihrem Konto zusätzliche Sicherheit hinzu, indem Sie die Zwei-Faktor-Authentifizierung verwenden.',
        'finish_enabled' => 'Beenden Sie die Aktivierung der Zwei-Faktor-Authentifizierung.',
        'enabled' => 'Die Zwei-Faktor-Authentifizierung wurde für Ihr Konto aktiviert!',
        'not_enabled' => 'Sie haben die Zwei-Faktor-Authentifizierung nicht aktiviert.',
        'prompt' => 'Wenn die Zwei-Faktor-Authentifizierung aktiviert ist, werden Sie während der Authentifizierung nach einem sicheren, zufälligen Token gefragt. Diesen Token können Sie aus Ihrer Google Authenticator App auf Ihrem Telefon abrufen.',
        'QRCode' => [
            'title' => 'Scannen Sie den untenstehenden QR-Code in Ihre Telefon-Authentifizierungs-App.',
            'alt' => 'QR-Code',
            'finish_enabled' => 'Um die Aktivierung der Zwei-Faktor-Authentifizierung abzuschließen, scannen Sie den folgenden QR-Code mit Ihrer Telefon-Authentifizierungs-App oder geben Sie den Einrichtungsschlüssel ein und geben Sie den generierten OTP-Code ein.',
            'enabled' => 'Die Zwei-Faktor-Authentifizierung ist jetzt aktiviert. Scannen Sie den folgenden QR-Code mit Ihrer Telefon-Authentifizierungs-App oder geben Sie den Einrichtungsschlüssel ein.',
            'setup_key' => 'Einrichtungsschlüssel',
            'code' => 'Code',
            'showing_recovery_codes' => 'Speichern Sie diese Wiederherstellungscodes in einem sicheren Passwort-Manager. Sie können verwendet werden, um den Zugriff auf Ihr Konto wiederherzustellen, wenn Ihr Zwei-Faktor-Authentifizierungsgerät verloren geht.',
            'regenerate_recory_codes' => 'Wiederherstellungscodes regenerieren',
            'show_recory_codes' => 'Wiederherstellungscodes anzeigen',
        ],
    ],
    'browser_session' => [
        'title' => 'Browsersitzung',
        'description' => 'Verwalten und abmelden Ihrer aktiven Sitzungen auf anderen Browsern und Geräten.',
        'prompt' => 'Bei Bedarf können Sie sich von allen anderen Browsersitzungen auf all Ihren Geräten abmelden. Einige Ihrer letzten Sitzungen sind unten aufgeführt; diese Liste ist jedoch möglicherweise nicht vollständig. Wenn Sie glauben, dass Ihr Konto gefährdet ist, sollten Sie auch Ihr Passwort aktualisieren.',
        'this_device' => 'Dieses Gerät',
        'last_active' => 'Zuletzt Aktiv',
        'log_out_other_browser_sessions' => 'Andere Browsersitzungen abmelden',
        'please_enter_your_password_to_confirm' => 'Bitte geben Sie Ihr Passwort ein, um zu bestätigen, dass Sie sich von anderen Browsersitzungen auf all Ihren Geräten abmelden möchten.',
    ],
    'delete_account' => [
        'title' => 'Konto Löschen',
        'description' => 'Löschen Sie Ihr Konto dauerhaft.',
        'prompt' => 'Sind Sie sicher, dass Sie Ihr Konto löschen möchten? Einmal gelöscht, werden alle Ihre Daten und Ressourcen dauerhaft gelöscht. Bitte geben Sie Ihr Passwort ein, um zu bestätigen, dass Sie Ihr Konto dauerhaft löschen möchten.',
        'once_your_account_is_deleted' => 'Wenn Ihr Konto gelöscht wird, werden alle Ihre Daten und Ressourcen dauerhaft gelöscht. Bevor Sie Ihr Konto löschen, laden Sie alle Daten oder Informationen herunter, die Sie behalten möchten.',
        'delete_account' => 'Konto Löschen',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/de/profile.php ####

<?php
/*
|
|    Traduzione in tedesco per la pagina di profilo dell'utente
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografie',
    'account' => 'Konto',
    'first_name' => 'Vorname',
    'last_name' => 'Nachname',
    'email' => 'E-Mail',
    'wallet' => 'Brieftasche',
    'your_email_address_is_unverified' => 'Ihre E-Mail-Adresse ist nicht verifiziert',
    'click_here_to_re-send_the_verification_email' => 'Klicken Sie hier, um die Bestätigungs-E-Mail erneut zu senden',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Ein neuer Bestätigungslink wurde an Ihre E-Mail-Adresse gesendet.',
    'language' => 'Sprache',
    'creator' => 'Ersteller',
    'email_verified_at' => 'E-Mail bestätigt am',
    'password' => 'Passwort',
    'remember_token' => 'Erinnerungstoken',
    'current_team_id' => 'Aktuelle Team-ID',
    'profile_photo_path' => 'Profilbildpfad',
    'consent' => 'Einverständnis',
    'bio_title' => 'Bio-Titel',
    'bio_story' => 'Bio-Geschichte',
    'title' => 'Titel',
    'mr_miss_dott' => 'Herr / Frau / Dr.',
    'job_role' => 'Berufsbezeichnung',
    'user_name' => 'Benutzername',
    'user_type' => 'Benutzertyp',
    'street' => 'Straße',
    'city' => 'Stadt',
    'region' => 'Region',
    'state' => 'Bundesland',
    'zip' => 'Postleitzahl',
    'home_phone' => 'Festnetznummer',
    'cell_phone' => 'Handynummer',
    'work_phone' => 'Arbeitstelefon',
    'site_url' => 'Website',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Andere',
    'birth_date' => 'Geburtsdatum',
    'fiscal_code' => 'Steuernummer',
    'tax_id_number' => 'Steueridentifikationsnummer',
    'doc_typo' => 'Dokumenttyp',
    'doc_num' => 'Dokumentnummer',
    'doc_issue_date' => 'Ausstellungsdatum des Dokuments',
    'doc_expired_date' => 'Ablaufdatum des Dokuments',
    'doc_issue_from' => 'Dokument ausgestellt von',
    'doc_photo_path_f' => 'Dokumentfoto-Pfad vorne',
    'doc_photo_path_r' => 'Dokumentfoto-Pfad hinten',
    'org_data_sheet' => 'Organisationsdatenblatt',
    'please_update_your_company_information' => 'Bitte aktualisieren Sie Ihre Unternehmensdaten',
    'insert_a_valid_url' => 'Geben Sie eine gültige URL ein',
    'enter_annotation' => 'Geben Sie eine Anmerkung ein',
    'org_name' => 'Organisationsname',
    'org_email' => 'Organisations-E-Mail',
    'org_street' => 'Organisationsstraße',
    'org_city' => 'Organisationsstadt',
    'org_region' => 'Organisationsregion',
    'org_state' => 'Organisationsbundesland',
    'org_zip' => 'Organisationspostleitzahl',
    'org_site_url' => 'Organisationswebsite',
    'annotation' => 'Anmerkung',
    'org_phone_1' => 'Organisationstelefon 1',
    'org_phone_2' => 'Organisationstelefon 2',
    'org_phone_3' => 'Organisationstelefon 3',
    'rea' => 'Unternehmensregister', // Tradotto come da tua indicazione
    'org_fiscal_code' => 'Organisations-Steuernummer',
    'org_vat_number' => 'Organisations-USt-IdNr.',
    'select_a_photo' => 'Wählen Sie ein Foto',
    'upload_a_photo' => 'Ein Foto hochladen',
    'remove_photo' => 'Foto entfernen',
    'select_a_language' => 'Wählen Sie eine Sprache',
    'photo' => 'Foto',
    'profile_information' => 'Profilinformation',
    'update_your_profile_data' => 'Aktualisieren Sie Ihre Profildaten',
    'biography' => 'Biografie',
    'document_data' => 'Dokumentendaten',
    'please_enter_your_ID_details' => 'Bitte geben Sie Ihre Ausweisdaten ein',
    'document_type' => 'Dokumententyp',
    'drive_licenze' => 'Führerschein',
    'passport' => 'Reisepass',
    'identity_card' => 'Personalausweis',
    'front_photograph_of_the_document' => 'Vorderseite des Dokuments',
    'back_photograph_of_the_document' => 'Rückseite des Dokuments',
    'social_media' => 'Soziale Medien',
    'please_enter_your_social_media_details' => 'Bitte geben Sie Ihre Social-Media-Daten ein',
    'update_password' => 'Passwort aktualisieren',
    'ensure_your_account' => 'Stellen Sie sicher, dass Ihr Konto über ein langes, zufälliges Passwort verfügt, um sicherzustellen, dass es sicher ist.',
    'enter_your_new_password' => 'Geben Sie Ihr neues Passwort ein',
    'confirm_your_new_password' => 'Bestätigen Sie Ihr neues Passwort',
    'two_factor_authentication' => 'Zwei-Faktor-Authentifizierung',
    'two_factor_authentication_add_additional_security' => 'Fügen Sie Ihrem Konto zusätzliche Sicherheit hinzu, indem Sie die Zwei-Faktor-Authentifizierung verwenden.',
    'You have not enabled two_factor_authentication.' => 'Sie haben die Zwei-Faktor-Authentifizierung nicht aktiviert.',
    'text_for_two_factor_authentication' => 'Wenn die Zwei-Faktor-Authentifizierung aktiviert ist, werden Sie während der Authentifizierung nach einem sicheren, zufälligen Token gefragt. Sie können dieses Token aus der Google Authenticator-App auf Ihrem Handy abrufen.',
    'browser_sessions' => 'Browsersitzungen',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Verwalten und melden Sie sich von Ihren aktiven Sitzungen auf anderen Browsern und Geräten ab.',
    'text_for_sessione' => 'Wenn nötig, können Sie sich von allen anderen Browsersitzungen auf all Ihren Geräten abmelden. Einige Ihrer letzten Sitzungen sind unten aufgeführt; diese Liste ist jedoch möglicherweise nicht vollständig. Wenn Sie glauben, dass Ihr Konto gefährdet ist, sollten Sie auch Ihr Passwort aktualisieren.',
    'log_out_other_browser_sessions' => 'Andere Browsersitzungen abmelden',
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Übersetzung auf Deutsch für alle Daten der Sidebar und der Navigationsleiste
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Sammlungen Verwalten',
        'collections' => 'Sammlungen',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Berechtigungen',
    ],

    'open_collection' => 'Sammlung Öffnen',
    'new_collection' => 'Neue Sammlung',
    'permissions_roles' => 'Rollen und Berechtigungen',
    'assign_roles' => 'Rollen Zuweisen',
    'assign_permissions' => 'Berechtigungen Zuweisen',
    'manage_roles' => 'Rollen Verwalten',

];


#### Inizio File: /home/fabio/EGI/resources/lang/de/traits.php ####

<?php

/*
|
|    Traduzione in tedesco per i dati dei traits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Sind Sie sicher, dass Sie dieses Merkmal zuordnen möchten?',
    'yes_match_it' => 'Ja, passen Sie es an',
    'the_trait_was_matched' => 'Das Merkmal wurde zugeordnet',
    'trait_added' => 'Merkmal hinzugefügt',
    'category_added' => 'Kategorie hinzugefügt',
    'key_added' => 'Schlüssel hinzugefügt',
    'value_added' => 'Wert hinzugefügt',
    'new_category' => 'Neue Kategorie',
    'new_key' => 'Neuer Schlüssel',
    'key_deletion_error' => 'Dieser Schlüssel ist mit einigen Merkmalen verknüpft und kann nicht entfernt werden. Wenn Sie ihn löschen möchten, müssen Sie zuerst die zugehörigen Merkmale löschen.',
    'create_a_new_trait_for_this_key' => 'Erstellen Sie ein neues Merkmal für diesen Schlüssel',
    'click_for_selected' => 'Klicken Sie, um auszuwählen',
    'trait_icon' => 'Eigenschaftssymbol',
    'EGI_with_traits' => 'EGI mit Eigenschaften',
    'traits_library' => 'Eigenschaftsbibliothek',
    'collection' => 'Sammlung',
    'manage_traits' => 'Eigenschaften verwalten',
    'manage_key' => 'Schlüssel verwalten',
    'manage_category' => 'Kategorien verwalten',
    'delete_traits' => 'Eigenschaften löschen',
    'applyTraits' => 'Zurück zu Eigenschaften anwenden',
    'open_manage' => 'Verwaltung öffnen',
    'close_manage' => 'Verwaltung schließen',
    'apply_traits' => 'Eigenschaften anwenden',
    'create_new_key' => 'Erstellen Sie einen neuen Schlüssel',
    'key_deletion' => 'Schlüssellöschung',
    'key_deletion_confirm' => 'Sind Sie sicher, dass Sie diesen Schlüssel löschen möchten: :key?',
    'key_not_possible_delete' => 'Es ist nicht möglich, diesen Schlüssel zu löschen',
    'key_deleted' => 'Schlüssel gelöscht',
    'key_search' => 'Schlüssel suchen',
    'make_a_new_key' => 'Einen neuen Schlüssel erstellen',
    'key_created' => 'Schlüssel erstellt',
    'key_updated' => 'Schlüssel aktualisiert',
    'key_not_possible_update' => 'Es ist nicht möglich, diesen Schlüssel zu aktualisieren',
    'key_not_found' => 'Schlüssel nicht gefunden',
    'key_not_possible_create' => 'Es ist nicht möglich, diesen Schlüssel zu erstellen',
    'key_not_possible_find' => 'Es ist nicht möglich, diesen Schlüssel zu finden',
    'bind' => 'Binden',
    'unbind' => 'Entbinden',
    'binded' => 'Gebundene Schlüssel',
    'unbinded' => 'Zu bindende Schlüssel',
    'make' => 'Erstellen',
    'create_a_new_category' => 'Eine neue Kategorie erstellen',
    'category_created' => 'Kategorie erstellt',
    'create_a_new_key' => 'Einen neuen Schlüssel erstellen',
    'select_a_category' => 'Eine Kategorie auswählen',
    'category' => 'Kategorie',
    'select_a_key' => 'Einen Schlüssel auswählen',
    'key' => 'Schlüssel',
    'value_for_key' => 'Wert für den Schlüssel',
    'select_all' => 'Alles auswählen',
    'select_one_or_more_EGI' => 'Wählen Sie ein oder mehrere EGI aus',
    'unselect_all' => 'Alles abwählen',
    'many_to_many' => 'Viele zu viele',
    'one_to_many' => 'Eins zu viele',
    'zoom_in' => 'Vergrößern',
    'zoom_out' => 'Verkleinern',
    'traits_on :numberItems items_in_this_collection' => 'Eigenschaften von :numberItems Artikeln in dieser Sammlung',
    'are_you_sure_remove :traitKey' => 'Sind Sie sicher, dass Sie <span class="font-bold"> :traitKey<span> entfernen möchten?',
    'all_the_traits_you_created' => 'Alle von Ihnen erstellten Eigenschaften',
    'traits_categories' => 'Eigenschaften Kategorien',
    'traits' => 'Eigenschaften',
    'update_category' => 'Kategorie aktualisieren',
    'update_key' => 'Schlüssel aktualisieren',
    'category' => 'Kategorie',
    'explanation_apply_traits' => 'Weisen Sie die Merkmale zu, die Sie den einzelnen Elementen Ihrer Sammlung zuordnen möchten',
    'explanation_manage_category' => 'Verwalten Sie die Eigenschaftskategorien. In diesem Abschnitt können Sie neue Kategorien erstellen, vorhandene aktualisieren oder löschen. Sie können dasselbe mit Schlüsseln tun und sie auch Kategorien zuordnen. Sie können alle Schlüssel sehen, die bereits zugeordnet wurden, und sie bei Bedarf durch Rechtsklick auf die entsprechende Karte entbinden. Sie können auch alle Schlüssel sehen, die noch zugeordnet werden müssen: Sie können einen oder mehrere auswählen (beachten Sie, dass der Schlüssel beim Auswählen rot werden sollte, sonst wurde er nicht korrekt ausgewählt) und beim Rechtsklick wird eine Liste der verfügbaren Kategorien angezeigt. Durch Auswahl einer Kategorie wird die Zuordnung erstellt.',
    'trait_value' => 'Eigenschaftswert',
    'view_your_all_traits' => 'Alle Ihre Eigenschaften anzeigen',
    'view_your_traits_this_collection' => 'Sehen Sie Ihre Eigenschaften nur für diese Sammlung',
    'back_to_apply_traits' => 'Zurück zu Eigenschaften anwenden',
    'back_to_gallery' => 'Zurück zur Galerie',
    'this_traits_non_cannot_be_removed' => 'Diese Eigenschaften können nicht entfernt werden',
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/auth.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are used during authentication for various
    | messages that we need to display to the user. You are free to modify
    | these language lines according to your application's requirements.
    |
    */

    'failed' => 'These credentials do not match our records.',
    'password' => 'The provided password is incorrect.',
    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invite a member to the collection',
    'came_back_to_collection' => 'Back to the collection',
    'confirm_delete_title' => 'Are you sure?',
    'confirm_delete_text' => 'This action will permanently delete the :type image!',
    'confirm_delete_button' => 'Yes, delete!',
    'cancel_delete_button' => 'Cancel',
    'deleted_title' => 'Deleted!',
    'deleted_text' => 'The banner image has been successfully deleted.',
    'delete_card' => 'Delete card',
    'delete_banner' => 'Delete banner',
    'delete_avatar' => 'Delete avatar',
    'delete_EGI' => 'Delete EGI',
    'save_card' => 'Save card',
    'save_banner' => 'Save banner',
    'save_avatar' => 'Save avatar',
    'save_EGI' => 'Save EGI',
    'create_validation_error' => 'Validation error',
    'creation_failed' => 'Creation failed',
    'collection_delete' => 'Delete collection',
    'avatar_image' => 'Avatar image',
    'card_image' => 'Card image',
    'EGI_image' => 'EGI image',
    'banner_image' => 'Banner image',
    'edit_collection_data' => 'Edit collection data',
    'modifies_EGI' => 'Modifies EGI',
    'new_collection' => 'New collection',
    'open_collection' => 'Open collection',
    'team_members_description' => 'Here you can see all the team members who have access to this collection',
    'collection_members' => 'Collection members',
    'manage_head_images' => 'Manage head images',
    'manage_collection' => 'Manage collection',
    'collection' => 'Collection',
    'collections' => 'Collections',
    'collection_data' => 'Header data of the collection',
    'collection_name' => 'Name of the collection',
    'collection_id' => 'ID of the collection',
    'collection_description_placeholder' => 'Enter a description of the collection',
    'collection_description_suggest' => 'A clear and engaging description helps users better understand your collection and increases its appeal. Tell what makes it unique!',
    'collection_description' => 'Enter all the data pertaining to the collection, be very accurate',
    'collection_image' => 'Image of the collection',
    'collection_image_alt' => 'Alternative text of the collection image',
    'add_epp' => 'Add an EPP',
    'add_epp_placeholder' => 'Enter an EPP',
    'need_to_associate_epp' => 'Until you have associated your gallery to an EPP, you will not be able to publish it',
    'EGI_floor_price' => 'Minimum EGI price',
    'set_base_EcoNFT_price' => 'Set a base price you wish to charge for each EGI of this collection',
    'collection_site_URL' => 'URL of the collection site',
    'collection_site_URL_suggest' => 'Suggestion: enter the URL of the collection site',
    'position_for_mor_than_one_collection' => 'If you have more than one collection, you can decide where to put this one',
    'publish_collection' => 'Publish the collection',
    'image_for_EcoNFT_collection' => 'Image for the EGI collection',
    'image_description' => 'This is the image that represents the entire collection',
    'image_alt' => 'Image representing the entire collection',
    'image_title' => 'Image representing the entire collection',
    'select_new_EcoNFT_photo' => 'Select a new photo for the EGI',
    'switch_collection' => 'Switch collection',
    'goto_collection' => 'Go to the collection',
    'type' => 'Type',
    'select_content_type' => 'Select the content type',
    'type_image' => 'Image',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'EGI Number',
    'position' => 'Position',
    'updated_successfully' => 'Collection saved successfully',
    'save_failed' => 'Save failed',
    'collection_not_found' => 'Collection not found',
    'tips_to_optimize_your_collection' => 'Tips to optimize your collection',
    'tips_for_your_collection_images' => 'Tips for your collection images',
    'image_section_title' => 'Collection images',
    'image_section_description' => 'Choose carefully the images that represent your collection',
    'data_section_title' => 'Collection data',
    'data_section_description' => 'Choose carefully the data that represent your collection',
    'this_is_default_collection_of_the_team' => 'This is the default collection of the team',
    'wallet' => [
        'write_royalty_mint' => 'Enter the royalty percentage for minting',
        'write_royalty_rebind' => 'Enter the royalty percentage for rebind',
        'user_role' => 'Role',
        'role_unknown' => 'No role',
        'address' => 'Wallet address',
        'balance' => 'Wallet balance',
        'name' => 'Wallet name',
        'status' => 'Wallet status',
        'royalty' => 'Royalty',
        'royalty_mint' => 'Mint royalty',
        'royalty_rebind' => 'Rebind royalty',
        'manage_wallet' => 'Manage wallet',
        'remove_photo' => 'Remove photo',
        'wallet' => 'Wallet',
        'cancellation' => 'Wallet cancellation',
        'select_a_wallet_connect' => 'Select a wallet',
        'button_wallet_connect' => 'Connect a wallet',
        'button_wallet_disconnect' => 'Disconnect',
        'create_the_wallet' => 'Create a new wallet',
        'username' => 'Username',
        'create' => 'Create a wallet',
        'delete_wallet' => 'Are you sure you want to delete this wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Unauthorized access',
    'SCAN_ERROR' => 'Scan error',
    'VIRUS_FOUND' => 'Virus found',
    'INVALID_FILE_EXTENSION' => 'Invalid file extension',
    'MAX_FILE_SIZE' => 'The file cannot exceed :max byte.',
    'INVALID_FILE_PDF' => 'Invalid PDF file',
    'MIME_TYPE_NOT_ALLOWED' => 'File type not allowed.',
    'INVALID_IMAGE_STRUCTURE' => 'Invalid image structure',
    'INVALID_FILE_NAME' => 'Invalid file name',
    'ERROR_GETTING_PRESIGNED_URL' => 'Error getting presigned URL',
    'ERROR_DURING_FILE_UPLOAD' => 'Error during file upload',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossible save file.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Unable to create folder',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Unable to change folder permissions',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossible save file',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Internal problem, support has already been alerted',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Error during file name encryption',
    'IMAGICK_NOT_AVAILABLE' => 'Internal problem, support has already been alerted',
    'JSON_ERROR_IN_DISPATCHER' => 'JSON error in dispatcher',
    'GENERIC_SERVER_ERROR' => 'Generic server error, technical team has been informed',
    'FILE_NOT_FOUND' => 'File not found',
    'UNEXPECTED_ERROR' => 'Generic server error, technical team has been informed',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Error deleting local temporary file',

    'scan_error' => 'Scan error',
    'virus_found' => 'Virus found',
    'required' => 'The field is required.',
    'file' => 'An error occurred while uploading the file.',
    'file_extension_not_valid' => 'File extension not valid',
    'mimes' => 'The file must be of type: :values.',
    'max_file_size' => 'The file cannot exceed :max byte.',
    'invalid_pdf_file' => 'Invalid PDF file',
    'mime_type_not_allowed' => 'File type not allowed.',
    'invalid_image_structure' => 'Invalid image structure',
    'invalid_file_name' =>  'Invalid file name',
    'error_getting_presigned_URL' => 'Error getting presigned URL',
    'error_getting_presigned_URL_for_user' => 'Error getting presigned URL for user',
    'error_during_file_upload' => 'Error during file upload',
    'error_deleting_file' => 'Error deleting file',
    'upload_finished' => 'Upload finished',
    'some_errors' => 'some errors',
    'upload_failed' => 'upload failed',
    'error_creating_folder' => 'Error creating folder',
    'error_changing_folder_permissions' => 'Error changing folder permissions',
    'local_save_failed_file_saved_to_external_disk_only' => 'Local save failed, file saved to external disk only',
    'external_save_failed_file_saved_to_local_disk_only' => 'External save failed, file saved to local disk only',
    'file_scanning_may_take_a_long_time_for_each_file' => 'File scanning may take a long time for each file',
    'all_files_are_saved' => 'All files are saved',
    'loading_finished_you_can_proceed_with_saving' => 'Loading finished, you can proceed with saving',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Loading finished, you can proceed with saving and scan',
    'im_uploading_the_file' => 'I\'m uploading the file',


    'exception' => [
        'NotAllowedTermException' => 'Term not allowed',
        'MissingCategory' => 'You must enter a category.',
        'DatabaseException' => 'A database error occurred',
        'ValidationException' => 'A validation error occurred',
        'HttpException' => 'An HTTP error occurred',
        'ModelNotFoundException' => 'Model not found',
        'QueryException' => 'Query error',
        'MintingException' => 'Error during minting',
        'FileNotFoundException' => 'File not found',
        'InvalidArgumentException' => 'Invalid argument',
        'UnexpectedValueException' => 'Unexpected value',
        'ItemNotFoundException' => 'Item not found',
        'MultipleItemsFoundException' => 'Multiple items found',
        'LogicException' => 'Logic exception',
        'EntryNotFoundException' => 'Entry not found',
        'RuntimeException' => 'Runtime error',
        'BadMethodCallException' => 'Invalid method call',
        'LockTimeoutException' => 'Lock timeout',
        'InvalidIntervalException' => 'Invalid interval',
        'InvalidPeriodParameterException' => 'Invalid period parameter',
        'EndLessPeriodException' => 'Endless period',
        'UnreachableException' => 'Unreachable exception',
        'InvalidTimeZoneException' => 'Invalid time zone',
        'ImmutableException' => 'Immutable exception',
        'InvalidFormatException' => 'Invalid format',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Dear User,</p>
            </br>
            <p>The text you entered violates our community guidelines and norms. Please modify the content and try again.</p>
            </br>
            <p>If you do not understand why this term is prohibited, please refer to the clauses of the agreement you accepted at the time of registration.
            <p>We appreciate your understanding and cooperation.</p>
            </br>
            <p>Best regards,
            <br>
            The Frangette Team</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            See the community rules page.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker was not initialized correctly',
    'table_not_exist' => 'The table does not exist',
    'unique' => 'This value is already present in your traits library.',
    'the_category_name_cannot_be_empty' => 'The category name cannot be empty',
    'nathing_to_save' => 'Nothing to save',
    'an_error_occurred' => 'Oops! Sorry, an error occurred!',
    'error_number' => 'Error number:',
    'reason' => [
        'reason' => 'reason',
        'wallet_not_valid' => 'Wallet not valid',
        'something_went_wrong' => 'Something went wrong',
    ],
    'solution' => [
        'solution' => 'solution',
        'create_a_new_wallet_and_try_again' => 'Create a new wallet and try again',
        'we_are_already_working_on_solving_the_problem' => 'We are already working on solving the problem',
    ],
    'min' => [
        'string' => 'The field must be at least :min characters.',
    ],
    'max' => [
        'string' => 'The field must be at most :max characters.',
    ],
    'id_epp_not_found' => 'ID EPP not found',
    'minting' => [
        'error_generating_token' => 'Error generating token',
        'insufficient_wallet_balance' => 'Insufficient balance in wallet to purchase this EcoNFT',
        'error_during_save_the_metadataFile' => 'Error saving metadata to file',
        'error_during_save_the_metadata_on_database' => 'Error saving metadata to database',
        'error_during_create_metadata_file' => 'Error creating metadata file',
        'error_during_save_the_buyer' => 'Error saving buyer',
        'buyer_not_exist' => 'Buyer does not exist',
        'this_wallet_does_not_belong_to_any_buyer' => 'This wallet does not belong to any buyer',
        'seller_not_exist' => 'Seller does not exist',
        'seller_owner_not_found' => 'Seller owner not found',
        'seller_wallet_address_not_found' => 'Seller wallet address not found',
        'error_during_save_the_seller' => 'Error saving seller',
        'error_during_save_the_buyer_transaction' => 'Error saving buyer transaction',
        'error_during_the_saving_of_the_payment' => 'Error saving payment',
        'error_during_save_the_natan' => 'Error saving data', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Error saving transaction',
        'seller_not_found' => 'Seller not found',
        'error_during_the_minting' => 'Error during minting',
        'error_uploading_file' => 'Error uploading file',
        'insufficient_balance' => 'Insufficient balance',
        'eco_nft_not_found' => 'EcoNFT not found',
        'no_traits_found' => 'No traits found',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in inglese
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Back',
    "file_deleted_successfully" => "File deleted successfully",
    'extension_not_allowed' => 'Extension not allowed!',
    'title_file_type_not_allowed' => 'File type not allowed!',
    'title_file_size_exceeds' => 'File size exceeds the limit!',
    'title_invalid_file_name' => 'Invalid file name!',
    'file_extension_not_allowed' => 'File type not allowed: :extension. Allowed file types have the following extensions: :extensions.',
    'file_type_not_allowed' => 'File type not allowed: :type. Allowed MIME types are: :mimetypes.',
    'file_size_exceeds' => 'File size exceeds the maximum allowed size of :size MB.',
    'invalid_file_name' => 'Invalid file name: :fileName. The file name contains invalid characters.',
    'allowed_extensions' => 'Allowed extensions are: :extensions.',
    'allowed_mime_types' => 'Allowed MIME types are: :mimetypes.',
    "scan_error" => "Scan error",
    "file_infected" => "File infected",
    "starting_scan" => "Starting scan",
    "error_uploading_file" => "Error uploading file",
    "error_getting_presigned_url" => "Error getting presigned URL",
    "error_deleting_file" => "Error deleting file",
    "upload_finished" => "Upload finished",
    "some_errors" => "some errors",
    "upload_failed" => "upload failed",
    "file_scanning_may_take_a_long_time_for_each_file" => "File scanning may take a long time for each file",
    "all_files_are_saved" => "All files are saved",
    "loading_finished_you_can_proceed_with_saving" => "Loading finished, you can proceed with saving",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Loading finished, you can proceed with saving and scan",
    "im_uploading_the_file" => "I'm uploading the file",
    "virus_scan_disabled" => "Virus scan disabled",
    "virus_scan_enabled" => "Virus scan enabled",
    "file_is_clean" => "The file is clean",
    "the_uploaded_file_was_detected_as_infected" => "The uploaded file was detected as infected",
    "antivirus_scan_in_progress" => "Antivirus scan in progress",
    'scanning_stopped' => 'Scanning stopped',
    "emogy_sad" => "Emogy sad",
    "emogy_happy" => 'Emogy happy',
    "emogy_angry" => 'Emogy angry',
    "im_checking_the_validity_of_the_file" => 'I\'m checking the validity of the file',
    "im_recording_the_information_in_the_database" => 'I\'m recording the information in the database',
    "im_saving_the_image" => 'I\'m saving the image',
    "file_saved_successfully" => 'File: :fileCaricato saved successfully',
    "file_scanned_successfully" => 'File: :fileCaricato scanned successfully',
    "all_files_were_scanned_no_infected_files" => 'All files were scanned, no infected files',
    "one_or_more_files_were_found_infected" => 'One or more files were found infected, they have been excluded from uploading',
    "file_uploaded_successfully" => 'File: :fileCaricato uploaded successfully',
    "no_file_uploaded" => "No file uploaded",
    "error_during_file_upload" => "Error during file upload",
    'starting_uplad' => 'Starting upload',
    "starting_saving" => "Starting saving",
    'uploaded' => 'Uploaded',
    'successfully' => 'successfully',
    'starting_upload' => 'Starting upload',
    'waiting' => 'Waiting...',
    'upload_status' => 'Upload status',
    'return_to_collection' => 'Return to collection',
    'EGI_image' =>'EGI image',
    'error_in_the_files' => 'Error in the files',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'EGI preview',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Drag and drop your files here or click to select',
    'upload_your_EGI_Files' => 'Upload your EGI files',
    'wait_for_the_files_to_load' => 'Wait for the files to load',
    'access_the_control_panel' => 'Access the control panel',
    'of' => 'of',
    'errors_in_the_files' => 'Errors in the files',
    'loading' => 'Loading...',
    'utilities_image_file' => 'Utilities, image and file upload',
    'file_upload' => 'File upload',
    'select_files' => 'Select files',
    'max_file_size_reminder' => 'Remember: the maximum size for each file is 100MB. For files over 30MB, we recommend uploading them individually to avoid network issues.',
    'upload_your_files' => 'Upload your files',
    'file_format_not_supported_for_viewing' => 'File format not supported for viewing',
    'cancel_upload' => 'Cancel upload',
    'save_the_files' => 'Save the files',
    'open' => 'Open',
    'user_management' => 'User management',
    'sign_in' => 'Sign in',
    'sign_out' => 'Sign out',
    "who_is_natan_frangette" => "Who is Natan Frangette?",
    'home' => 'Home',
    'remove_photo' => 'Remove photo',
    'username' => 'Username',
    'bind' => 'Bind',
    'value' => 'Value',
    'title' => 'title',
    'dimension' => 'dimension',
    'size' => 'size: ',
    'description' => 'description',
    'name' => 'name',
    'date_start' => 'start date',
    'date_end' => 'end date',
    'unknown' => 'Unknown',
    'active' => 'Active',
    'inactive' => 'Inactive',
    'existing' => 'Existing',
    'welcome' => 'Welcome to Natan hub',
    'done' => 'Done',
    'create' => 'Create',
    'saving' => 'I\'m saving...',
    'save' => 'Save',
    'saved' => 'Saved!',
    'remember_to_save' => 'Remember to save',
    'cancel' => 'Cancel',
    'update' => 'Update',
    'cancelled' => 'Cancelled',
    'delete' => 'Delete',
    'deleted' => 'Deleted',
    'edit' => 'Edit',
    'add' => 'Add',
    'confirm' => 'Confirm',
    'disable' => 'Disable',
    'close' => 'Close',
    'delete_confirm' => 'Are you sure you want to delete this item?',
    'whoops_something_went_wrong' => 'Whoops, something went wrong',
    'action_confirm' => 'Operation completed successfully!',
    'search' => 'Search',
    'traits' => 'traits',
    'utility' => 'Utility',
    'zoom' => 'Zoom',
    'product_image' => 'Product image',
    'micro_logo' => 'Micro logo, Equilibrium molecule',
    'logo' => 'Logo, Equilibrium molecule',
    'manage_utility' => 'Manage utility',
    'item_zoom' => 'Original size',
    'esternal_transfert' => 'external transfer',
    'internal_transfert' => 'internal transfer',
    'back_to_item' => 'Back to item',
    'position' => 'Position',
    'head_photo_page' => 'Page header photo',
    'handle_collection_data' => 'Edit collection data',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'This item cannot be deleted because there are any files associated with it',
    'edit_item' => [
        'title' => 'Edit item',
        'description' => 'Edit item information',
        'back_to_collection' => 'Back to collection',
        'this_item_cannot_be_transfered' => 'This item cannot be transferred',
        'are_you_sure_you_want_to_transfer_this_item' => 'Are you sure you want to transfer this item from <span class="font-bold"> :collectionNameFrom </span> to <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'Personal collection for this user does not exist, impossible to transfer',
        'not_exist_user_width_this_email' => 'The user with email :emailExternalTransfer does not exist.',
        'transfer' => 'Transfer',
        'internal_transfer' => 'Internal transfer',
        'external_transfer' => 'External transfer',
        'max_25_char' => 'Maximum 25 characters',
        'max_1000_char' => 'Maximum 1000 characters',
        'write_the_description' => 'Write the description',
        'date_of_creation' => 'Date of creation',
        'publish' => 'Publish',
        'unpublish' => 'Unpublish',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'This item cannot be deleted because there are any files associated with it',
    ],
    'bio' => [
        'your_biography' => 'Your biography',
        'bio_title' => 'Biography title',
        'manage_biography' => 'Manage biography',
        'manage_chapter' => 'Manage chapters',
        'back_to_biography' => 'Back to biography',
        'back_to_profile' => 'Back to profile',
        'chapter' => 'Chapter',
        'chapter_start_date' => 'Chapter start date',
        'chapter_end_date' => 'Chapter end date',
        'chapter_title' => 'Chapter title',
        'chapter_biography' => 'Chapter biography',
        'remove_biography' => 'Remove biography',
        'remove_chapter' => 'Remove chapter',
        'removed_chapter' => 'Chapter removed',
        'add_chapter' => 'Add chapter',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Are you sure you would like to remove this chapter?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Are you sure you would like to remove this biography?',
    ],

    'drop' => [
        'remove_from_drop' => 'Remove from the Drop',
        'add_to_drop' => 'Add to the Drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Are you sure you would like to remove :itemremoved from the drop?',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: INGLESE
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Please login to your account',
    'email' => 'Email address',
    'password' => 'Password',
    'remember_me' => 'Remember me',
    'forgot_your_password' => 'Forgot your password?',
    'login' => 'Login',
    'register' => 'Register',
    'please_register_now' => 'Please register now to join our community',
    'first_name' => 'First Name',
    'last_name' => 'Last Name',
    'confirm_password' => 'Confirm Password',
    'reset_password' => 'Reset Password',
    'current_password' => 'Current Password',
    'new_password' => 'New Password',
    'have_an_account' => 'Already have an account?',
    'dont_have_an_account' => 'Don\'t have an account?',
    'logout' => 'Logout',
    'i_agree_to' => 'I agree to the',
    'terms_of_service' => 'Terms of Service',
    'and' => 'and',
    'privacy_policy' => 'Privacy Policy',
    'welcome_to_the_first_artist_business_builder' => 'Welcome to the portal of Natan Frangette, the first and only Business Builder for Artists',
    'welcome_to_the_natan_site' => 'Welcome to the Natan site',
    'join_us' => 'Join a team that will make the difference!',
    'express_your_creativity' => 'Express your creativity with your EcoNFTs',
    'change_the_world_with_every_sale' => 'Change the World with Every Sale',
    'innovative_partnerships' => 'Innovative Partnerships',
    'bring_your_artistic_biography_to_life' => 'Bring your artistic biography to life',
    'impact_community' => 'Impact community',
    'register_now' => 'Register today and become part of an artistic revolution with a positive impact on society and the environment!',
    'change_language' => 'Change language',
    'for_your_security_please_confirm_your_password_to_continue' => 'For your security, please confirm your password to continue.',
    'two_factor' => [
        'title' => 'Two Factor Authentication',
        'description' => 'Add additional security to your account using two factor authentication.',
        'finish_enabled' => 'Finish enabling two factor authentication.',
        'enabled' => 'Two factor authentication has been enabled for your account!',
        'not_enabled' => 'You have not enabled two factor authentication.',
        'prompt' => 'When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone\'s Google Authenticator application.',
        'QRCode' => [
            'title' => 'Scan the QR code below into your phones authenticator application.',
            'alt' => 'QR Code',
            'finish_enabled' => 'To finish enabling two factor authentication, scan the following QR code using your phone\'s authenticator application or enter the setup key and provide the generated OTP code.',
            'enabled' => 'Two factor authentication is now enabled. Scan the following QR code using your phone\'s authenticator application or enter the setup key.',
            'setup_key' => 'Setup Key',
            'code' => 'Code',
            'showing_recovery_codes' => 'Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.',
            'enable' => 'Enable',
            'disable' => 'Disable',
            'regenerate_recory_codes' => 'Regenerate Recovery Codes',
            'confirm' => 'Confirm',
            'cancel' => 'Cancel',
            'show_recory_codes' => 'Show Recovery Codes',
        ],
    ],
    'browser_session' => [
        'title' => 'Browser Session',
        'description' => 'Manage and log out your active sessions on other browsers and devices.',
        'prompt' => 'If needed, you can log out of all other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list might not be exhaustive. If you believe your account has been compromised, you should also update your password.',
        'this_device' => 'This Device',
        'last_active' => 'Last Active',
        'log_out_other_browser_sessions' => 'Log Out Other Browser Sessions',
        'please_enter_your_password_to_confirm' => 'Please enter your password to confirm you wish to log out of other browser sessions on all your devices.',
    ],
    'delete_account' => [
        'title' => 'Delete Account',
        'description' => 'Permanently delete your account.',
        'prompt' => 'Are you sure you want to delete your account? Once deleted, all of your data and resources will be permanently deleted. Please enter your password to confirm that you wish to permanently delete your account.',
        'once_your_account_is_deleted' => 'Once your account is deleted, all of your data and resources will be permanently deleted. Before deleting your account, download any data or information you wish to retain.',
        'delete_account' => 'Delete Account',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/notification.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i dati delle notifiche
|--------------------------------------------------------------------------
|
 */

// English
return [
    'proposal_declined_subject' => 'Your proposal has been declined',
    'proposal_declined_line' => 'Your proposal has been declined.',
    'proposal_declined_reason' => 'Reason:',
    'proposal_declined_id' => 'Proposal ID:',
    'view_details' => 'View details',
    'thank_you' => 'Thank you for using our platform.',
    'proposal_declined' => 'Proposal declined',
    'proposal_declined_message' => 'Your proposal has been declined.',
    'reply' => 'Reply',
    'wallet_changes_approved' => 'Wallet changes have been approved',
    'no_pending_notifications' => 'No pending notifications available.',
    'hide_processed_notifications' => 'Hide Processed Notifications.',
    'show_processed_notifications' => 'Show Processed Notifications.',
    'confirm_delete' => 'Are you sure you want to delete this notification?',
    'proposer' => 'Proposer',
    'receiver' => 'Receiver',
    'proposed_creation_new_wallet' => 'You have proposed the creation of a new wallet',
    'proposed_change_to_a_wallet' => 'You have proposed a change to a wallet',
];


#### Inizio File: /home/fabio/EGI/resources/lang/en/pagination.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Pagination Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are used by the paginator library to build
    | the simple pagination links. You are free to change them to anything
    | you want to customize your views to better match your application.
    |
    */

    'previous' => '&laquo; Previous',
    'next' => 'Next &raquo;',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/passwords.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Password Reset Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are the default lines which match reasons
    | that are given by the password broker for a password update attempt
    | has failed, such as for an invalid token or invalid new password.
    |
    */

    'reset' => 'Your password has been reset!',
    'sent' => 'We have emailed your password reset link!',
    'throttled' => 'Please wait before retrying.',
    'token' => 'This password reset token is invalid.',
    'user' => "We can't find a user with that email address.",

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/profile.php ####

<?php
/*
|
|    Traduzione in inglese per la pagina di profilo dell'utente
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biography',
    'account' => 'Account',
    'first_name' => 'First Name',
    'last_name' => 'Last Name',
    'email' => 'Email',
    'wallet' => 'Wallet',
    'your_email_address_is_unverified' => 'Your email address is unverified.',
    'click_here_to_re-send_the_verification_email' => 'Click here to re-send the verification email.',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'A new verification link has been sent to your email address.',
    'language' => 'Language',
    'creator' => 'Creator',
    'email_verified_at' => 'Email Verified On',
    'password' => 'Password',
    'remember_token' => 'Remember Token',
    'current_team_id' => 'Current Team ID',
    'profile_photo_path' => 'Profile Photo Path',
    'consent' => 'Consent',
    'bio_title' => 'Bio Title',
    'bio_story' => 'Bio Story',
    'title' => 'Title',
    'mr_miss_dott' => 'Mr. / Miss / Dott.',
    'job_role' => 'Job Role',
    'user_name' => 'Username',
    'user_type' => 'User Type',
    'street' => 'Street',
    'city' => 'City',
    'region' => 'Country',
    'state' => 'State',
    'zip' => 'Postal Code',
    'home_phone' => 'Home Phone',
    'cell_phone' => 'Mobile Phone',
    'work_phone' => 'Work Phone',
    'site_url' => 'Website',
    'facebook' => 'Facebook',
    'social_x' => 'Social_X',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Other',
    'birth_date' => 'Birth Date',
    'fiscal_code' => 'Tax Code',
    'tax_id_number' => 'Tax ID Number',
    'doc_typo' => 'Document Type',
    'doc_num' => 'Document Number',
    'doc_issue_date' => 'Document Issue Date',
    'doc_expired_date' => 'Document Expiry Date',
    'doc_issue_from' => 'Document Issued By',
    'doc_photo_path_f' => 'Front Document Photo Path',
    'doc_photo_path_r' => 'Back Document Photo Path',
    'org_data_sheet' => 'Company Data Sheet',
    'please_update_your_company_information' => 'Please Update Your Company Information',
    'insert_a_valid_url' => 'Insert a valid URL',
    'enter_annotation' => 'Enter Annotation',
    'org_email' => 'Organization Email',
    'org_street' => 'Organization Street',
    'org_city' => 'Organization City',
    'org_region' => 'Organization Region',
    'org_state' => 'Organization State',
    'org_zip' => 'Organization Postal Code',
    'org_site_url' => 'Organization Website',
    'annotation' => 'Annotation',
    'org_phone_1' => 'Organization Phone 1',
    'org_phone_2' => 'Organization Phone 2',
    'org_phone_3' => 'Organization Phone 3',
    'rea' => 'Administrative Economic Repertoire (REA)', // Translated REA based on your information
    'org_fiscal_code' => 'Organization Tax Code',
    'org_vat_number' => 'Organization VAT Number',
    'select_a_photo' => 'Select a Photo',
    'upload_a_photo' => 'Upload a Photo',
    'remove_photo' => 'Remove Photo',
    'select_a_language' => 'Select a Language',
    'photo' => 'Photo',
    'profile_information' => 'Profile Information',
    'update_your_profile_data' => 'Update Your Profile Data',
    'biography' => 'Biography',
    'document_data' => 'Document Data',
    'please_enter_your_ID_details' => 'Please Enter Your ID Details',
    'document_type' => 'Document Type',
    'drive_licenze' => 'Driving License',
    'passport' => 'Passport',
    'identity_card' => 'Identity Card',
    'front_photograph_of_the_document' => 'Front Photograph of the Document',
    'back_photograph_of_the_document' => 'Back Photograph of the Document',
    'social_media' => 'Social Media',
    'please_enter_your_social_media_details' => 'Please Enter Your Social Media Details',
    'update_password' => 'Update Password',
    'ensure_your_account' => 'Ensure your account is using a long, random password to stay secure.',
    'enter_your_new_password' => 'Enter Your New Password',
    'confirm_your_new_password' => 'Confirm Your New Password',
    'two_factor_authentication' => 'Two-Factor Authentication',
    'two factor authentication_add_additional_security' => 'Add additional security to your account by using two-factor authentication.',
    'You have not enabled two factor authentication.' => 'You have not enabled two-factor authentication.',
    'text_for_two_factor_authentication' => 'When two-factor authentication is enabled, you will be asked for a secure, random token during authentication. You can retrieve this token from the Google Authenticator app on your phone.',
    'browser_sessions' => 'Browser Sessions',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Manage and log out your active sessions on other browsers and devices.',
    'text_for_sessione' => 'If needed, you can log out of all other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list might not be exhaustive. If you believe your account has been compromised, you should also update your password.',
    'log out other browser sessions' => 'Log Out Other Browser Sessions',
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| English translation of all sidebar and navbar data
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Manage Collections',
        'collections' => 'Collections',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Authorizations',
    ],

    'open_collection' => 'Open Collection',
    'new_collection' => 'New Collection',
    'permissions_roles' => 'Roles and Permissions',
    'assign_roles' => 'Assign Roles',
    'assign_permissions' => 'Assign Permissions',
    'manage_roles' => 'Manage Roles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/traits.php ####

<?php

/*
|
|    Traduzione Inglese per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Are you sure you want to match this trait?',
    'yes_match_it' => 'Yes, Match It',
    'the_trait_was_matched' => 'The Trait Was Matched',
    'trait_added' => 'Trait Added',
    'category_added' => 'Category Added',
    'key_added' => 'Key Added',
    'value_added' => 'Value Added',
    'new_category' => 'New Category',
    'new_key' => 'New Key',
    'key_deletion_error' => 'This key is linked to some traits and cannot be removed. If you wish to delete it, you must first delete the associated traits.',
    'create_a_new_trait_for_this_key' => 'Create a New Trait for This Key',
    'click_for_selected' => 'Click for Selected',
    'trait_icon' => 'Trait Icon',
    'EGI_with_traits' => 'EGI with Traits',
    'traits_library' => 'Traits Library',
    'collection' => 'Collection',
    'manage_traits' => 'Manage Traits',
    'manage_key' => 'Manage Keys',
    'manage_category' => 'Manage Categories',
    'delete_traits' => 'Delete Traits',
    'applyTraits' => 'Return to Apply Traits',
    'open_manage' => 'Open Management',
    'close_manage' => 'Close Management',
    'apply_traits' => 'Apply Traits',
    'create_new_key' => 'Create a New Key',
    'key_deletion' => 'Key Deletion',
    'key_deletion_confirm' => 'Are you sure you want to delete this key: :key?',
    'key_not_possible_delete' => 'It is not possible to delete this key',
    'key_deleted' => 'Key Deleted',
    'key_search' => 'Search Key',
    'make_a_new_key' => 'Make a New Key',
    'key_created' => 'Key Created',
    'key_updated' => 'Key Updated',
    'key_not_possible_update' => 'It is not possible to update this key',
    'key_not_found' => 'Key Not Found',
    'key_not_possible_create' => 'It is not possible to create this key',
    'key_not_possible_find' => 'It is not possible to find this key',
    'bind' => 'Bind',
    'unbind' => 'Unbind',
    'binded' => 'Keys Bound',
    'unbinded' => 'Keys to Bind',
    'make' => 'Make',
    'create_a_new_category' => 'Create a New Category',
    'category_created' => 'Category Created',
    'create_a_new_key' => 'Create a New Key',
    'select_a_category' => 'Select a Category',
    'select_one_or_more_EGI' => 'Select One or More EGI',
    'category' => 'Category',
    'select_a_key' => 'Select a Key',
    'key' => 'Key',
    'value_for_key' => 'Value for Key',
    'select_all' => 'Select All',
    'unselect_all' => 'Unselect All',
    'many_to_many' => 'Many to Many',
    'one_to_many' => 'One to Many',
    'zoom_in' => 'Zoom In',
    'zoom_out' => 'Zoom Out',
    'traits_on :numberItems items_in_this_collection' => 'Traits on :numberItems Items in This Collection',
    'are_you_sure_remove :traitKey' => 'Are you sure you want to remove <span class="font-bold">:traitKey</span>?',
    'all_the_traits_you_created' => 'All the Traits You Created',
    'traits_categories' => 'Traits Categories',
    'traits' => 'Traits',
    'update_category' => 'Update Category',
    'update_key' => 'Update Key',
    'explanation_apply_traits' => 'Assign the traits you want to apply to individual items in your collection',
    'explanation_manage_category' => 'Manage the categories of traits. From this section, you can create new categories, update or delete existing ones. You can do the same with keys and also associate them with categories. You can view all the keys that have already been associated and, if necessary, disassociate them by right-clicking on the corresponding card. In addition, you can view all the keys that have yet to be associated: you can select one or more (note that when you select the key it must turn red, otherwise it means it has not been selected correctly) and, by right-clicking, you will be shown the list of available categories. By choosing a category, you will create the association.',
    'trait_value' => 'Trait Value',
    'view_your_all_traits' => 'View All Your Traits',
    'view_your_traits_this_collection' => 'View Your Traits of This Collection Only',
    'back_to_apply_traits' => 'Return to Apply Traits',
    'back_to_gallery' => 'Return to Gallery',
    'this_traits_non_cannot_be_removed' => 'These Traits Cannot Be Removed',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/validation.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Validation Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines contain the default error messages used by
    | the validator class. Some of these rules have multiple versions such
    | as the size rules. Feel free to tweak each of these messages here.
    |
    */

    'accepted' => 'The :attribute must be accepted.',
    'accepted_if' => 'The :attribute must be accepted when :other is :value.',
    'active_url' => 'The :attribute is not a valid URL.',
    'after' => 'The :attribute must be a date after :date.',
    'after_or_equal' => 'The :attribute must be a date after or equal to :date.',
    'alpha' => 'The :attribute must only contain letters.',
    'alpha_dash' => 'The :attribute must only contain letters, numbers, dashes and underscores.',
    'alpha_num' => 'The :attribute must only contain letters and numbers.',
    'array' => 'The :attribute must be an array.',
    'before' => 'The :attribute must be a date before :date.',
    'before_or_equal' => 'The :attribute must be a date before or equal to :date.',
    'between' => [
        'array' => 'The :attribute must have between :min and :max items.',
        'file' => 'The :attribute must be between :min and :max kilobytes.',
        'numeric' => 'The :attribute must be between :min and :max.',
        'string' => 'The :attribute must be between :min and :max characters.',
    ],
    'boolean' => 'The :attribute field must be true or false.',
    'confirmed' => 'The :attribute confirmation does not match.',
    'current_password' => 'The password is incorrect.',
    'date' => 'The :attribute is not a valid date.',
    'date_equals' => 'The :attribute must be a date equal to :date.',
    'date_format' => 'The :attribute does not match the format :format.',
    'declined' => 'The :attribute must be declined.',
    'declined_if' => 'The :attribute must be declined when :other is :value.',
    'different' => 'The :attribute and :other must be different.',
    'digits' => 'The :attribute must be :digits digits.',
    'digits_between' => 'The :attribute must be between :min and :max digits.',
    'dimensions' => 'The :attribute has invalid image dimensions.',
    'distinct' => 'The :attribute field has a duplicate value.',
    'doesnt_end_with' => 'The :attribute may not end with one of the following: :values.',
    'doesnt_start_with' => 'The :attribute may not start with one of the following: :values.',
    'email' => 'The :attribute must be a valid email address.',
    'ends_with' => 'The :attribute must end with one of the following: :values.',
    'enum' => 'The selected :attribute is invalid.',
    'exists' => 'The selected :attribute is invalid.',
    'file' => 'The :attribute must be a file.',
    'filled' => 'The :attribute field must have a value.',
    'gt' => [
        'array' => 'The :attribute must have more than :value items.',
        'file' => 'The :attribute must be greater than :value kilobytes.',
        'numeric' => 'The :attribute must be greater than :value.',
        'string' => 'The :attribute must be greater than :value characters.',
    ],
    'gte' => [
        'array' => 'The :attribute must have :value items or more.',
        'file' => 'The :attribute must be greater than or equal to :value kilobytes.',
        'numeric' => 'The :attribute must be greater than or equal to :value.',
        'string' => 'The :attribute must be greater than or equal to :value characters.',
    ],
    'image' => 'The :attribute must be an image.',
    'in' => 'The selected :attribute is invalid.',
    'in_array' => 'The :attribute field does not exist in :other.',
    'integer' => 'The :attribute must be an integer.',
    'ip' => 'The :attribute must be a valid IP address.',
    'ipv4' => 'The :attribute must be a valid IPv4 address.',
    'ipv6' => 'The :attribute must be a valid IPv6 address.',
    'json' => 'The :attribute must be a valid JSON string.',
    'lowercase' => 'The :attribute must be lowercase.',
    'lt' => [
        'array' => 'The :attribute must have less than :value items.',
        'file' => 'The :attribute must be less than :value kilobytes.',
        'numeric' => 'The :attribute must be less than :value.',
        'string' => 'The :attribute must be less than :value characters.',
    ],
    'lte' => [
        'array' => 'The :attribute must not have more than :value items.',
        'file' => 'The :attribute must be less than or equal to :value kilobytes.',
        'numeric' => 'The :attribute must be less than or equal to :value.',
        'string' => 'The :attribute must be less than or equal to :value characters.',
    ],
    'mac_address' => 'The :attribute must be a valid MAC address.',
    'max' => [
        'array' => 'The :attribute must not have more than :max items.',
        'file' => 'The :attribute must not be greater than :max kilobytes.',
        'numeric' => 'The :attribute must not be greater than :max.',
        'string' => 'The :attribute must not be greater than :max characters.',
    ],
    'max_digits' => 'The :attribute must not have more than :max digits.',
    'mimes' => 'The :attribute must be a file of type: :values.',
    'mimetypes' => 'The :attribute must be a file of type: :values.',
    'min' => [
        'array' => 'The :attribute must have at least :min items.',
        'file' => 'The :attribute must be at least :min kilobytes.',
        'numeric' => 'The :attribute must be at least :min.',
        'string' => 'The :attribute must be at least :min characters.',
    ],
    'min_digits' => 'The :attribute must have at least :min digits.',
    'multiple_of' => 'The :attribute must be a multiple of :value.',
    'not_in' => 'The selected :attribute is invalid.',
    'not_regex' => 'The :attribute format is invalid.',
    'numeric' => 'The :attribute must be a number.',
    'password' => [
        'letters' => 'The :attribute must contain at least one letter.',
        'mixed' => 'The :attribute must contain at least one uppercase and one lowercase letter.',
        'numbers' => 'The :attribute must contain at least one number.',
        'symbols' => 'The :attribute must contain at least one symbol.',
        'uncompromised' => 'The given :attribute has appeared in a data leak. Please choose a different :attribute.',
    ],
    'present' => 'The :attribute field must be present.',
    'prohibited' => 'The :attribute field is prohibited.',
    'prohibited_if' => 'The :attribute field is prohibited when :other is :value.',
    'prohibited_unless' => 'The :attribute field is prohibited unless :other is in :values.',
    'prohibits' => 'The :attribute field prohibits :other from being present.',
    'regex' => 'The :attribute format is invalid.',
    'required' => 'The :attribute field is required.',
    'required_array_keys' => 'The :attribute field must contain entries for: :values.',
    'required_if' => 'The :attribute field is required when :other is :value.',
    'required_if_accepted' => 'The :attribute field is required when :other is accepted.',
    'required_unless' => 'The :attribute field is required unless :other is in :values.',
    'required_with' => 'The :attribute field is required when :values is present.',
    'required_with_all' => 'The :attribute field is required when :values are present.',
    'required_without' => 'The :attribute field is required when :values is not present.',
    'required_without_all' => 'The :attribute field is required when none of :values are present.',
    'same' => 'The :attribute and :other must match.',
    'size' => [
        'array' => 'The :attribute must contain :size items.',
        'file' => 'The :attribute must be :size kilobytes.',
        'numeric' => 'The :attribute must be :size.',
        'string' => 'The :attribute must be :size characters.',
    ],
    'starts_with' => 'The :attribute must start with one of the following: :values.',
    'string' => 'The :attribute must be a string.',
    'timezone' => 'The :attribute must be a valid timezone.',
    'unique' => 'The :attribute has already been taken.',
    'uploaded' => 'The :attribute failed to upload.',
    'uppercase' => 'The :attribute must be uppercase.',
    'url' => 'The :attribute must be a valid URL.',
    'uuid' => 'The :attribute must be a valid UUID.',

    /*
    |--------------------------------------------------------------------------
    | Custom Validation Language Lines
    |--------------------------------------------------------------------------
    |
    | Here you may specify custom validation messages for attributes using the
    | convention "attribute.rule" to name the lines. This makes it quick to
    | specify a specific custom language line for a given attribute rule.
    |
    */

    'custom' => [
        'attribute-name' => [
            'rule-name' => 'custom-message',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Custom Validation Attributes
    |--------------------------------------------------------------------------
    |
    | The following language lines are used to swap our attribute placeholder
    | with something more reader friendly such as "E-Mail Address" instead
    | of "email". This simply helps us make our message more expressive.
    |
    */

    'attributes' => [],

];

#### Inizio File: /home/fabio/EGI/resources/lang/es/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in spagnolo di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invitar a un miembro a la colección',
    'came_back_to_collection' => 'Volver a la colección',
    'confirm_delete_title' => '¿Estás seguro?',
    'confirm_delete_text' => '¡Esta acción eliminará la imagen del :type de forma permanente!',
    'confirm_delete_button' => '¡Sí, eliminar!',
    'cancel_delete_button' => 'Cancelar',
    'deleted_title' => '¡Eliminado!',
    'deleted_text' => '¡La imagen del banner se ha eliminado correctamente!',
    'delete_card' => 'Eliminar tarjeta',
    'delete_banner' => 'Eliminar banner',
    'delete_avatar' => 'Eliminar avatar',
    'delete_EGI' => 'Eliminar EGI',
    'save_card' => 'Guardar tarjeta',
    'save_banner' => 'Guardar banner',
    'save_avatar' => 'Guardar avatar',
    'save_EGI' => 'Guardar EGI',
    'create_validation_error' => 'Error de validación',
    'creation_failed' => 'Creación fallida',
    'collection_delete' => 'Eliminar colección',
    'avatar_image' => 'Imagen de avatar',
    'card_image' => 'Imagen de la tarjeta',
    'EGI_image' => 'Imagen de EGI',
    'banner_image' => 'Imagen del banner',
    'edit_collection_data' => 'Editar datos de la colección',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nueva colección',
    'open_collection' => 'Abrir colección',
    'team_members_description' => 'Aquí puedes ver todos los miembros del equipo que tienen acceso a esta colección',
    'collection_members' => 'Miembros de la colección',
    'manage_head_images' => 'Gestionar imágenes de cabecera',
    'manage_collection' => 'Gestionar colección',
    'collection' => 'Colección',
    'collections' => 'Colecciones',
    'collection_data' => 'Datos de encabezado de la colección',
    'collection_name' => 'Nombre de la colección',
    'collection_id' => 'ID de la colección',
    'collection_description_placeholder' => 'Ingrese una descripción de la colección',
    'collection_description_suggest' => 'Una descripción clara y atractiva ayuda a los usuarios a comprender mejor su colección y aumenta su atractivo. ¡Cuéntanos qué la hace única!',
    'collection_description' => 'Ingrese todos los datos relacionados con la colección, sea muy preciso',
    'collection_image' => 'Imagen de la colección',
    'collection_image_alt' => 'Texto alternativo de la imagen de la colección',
    'add_epp' => 'Agregar un EPP',
    'add_epp_placeholder' => 'Ingrese un EPP',
    'need_to_associate_epp' => 'Hasta que asocie su galería a un EPP, no podrá publicarla',
    'EGI_floor_price' => 'Precio mínimo EGI',
    'set_base_EcoNFT_price' => 'Establezca un precio base que desee cobrar por cada EGI de esta colección',
    'collection_site_URL' => 'URL del sitio de la colección',
    'collection_site_URL_suggest' => 'Sugerencia: ingrese la URL del sitio de la colección',
    'position_for_mor_than_one_collection' => 'Si tiene más de una colección, puede decidir en qué posición colocar esta',
    'publish_collection' => 'Publicar colección',
    'image_for_EcoNFT_collection' => 'Imagen para la colección EGI',
    'image_description' => 'Esta es la imagen que representa toda la colección',
    'image_alt' => 'Imagen que representa toda la colección',
    'image_title' => 'Imagen que representa toda la colección',
    'select_new_EcoNFT_photo' => 'Seleccione una nueva foto para el EGI',
    'switch_collection' => 'Cambiar colección',
    'goto_collection' => 'Ir a la colección',
    'type' => 'Tipo',
    'select_content_type' => 'Seleccione el tipo de contenido',
    'type_image' => 'Imagen',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'Número EGI',
    'position' => 'Posición',
    'updated_successfully' => 'Colección guardada con éxito',
    'save_failed' => 'Error al guardar',
    'collection_not_found' => 'Colección no encontrada',
    'tips_to_optimize_your_collection' => 'Consejos para optimizar tu colección',
    'tips_for_your_collection_images' => 'Consejos para las imágenes de tu colección',
    'image_section_title' => 'Imágenes de la colección',
    'image_section_description' => 'Elige cuidadosamente las imágenes que representan tu colección',
    'data_section_title' => 'Datos de la colección',
    'data_section_description' => 'Elige cuidadosamente los datos que representan tu colección',
    'this_is_default_collection_of_the_team' => 'Esta es la colección predeterminada del equipo',
    'wallet' => [
        'write_royalty_mint' => 'Ingresa el porcentaje de regalías para el mint',
        'write_royalty_rebind' => 'Ingresa el porcentaje de regalías para el rebind',
        'user_role' => 'Rol',
        'role_unknown' => 'Sin rol',
        'address' => 'Dirección del wallet',
        'balance' => 'Saldo del wallet',
        'name' => 'Nombre del wallet',
        'status' => 'Estado del wallet',
        'royalty' => 'Regalías',
        'royalty_mint' => 'Regalías del mint',
        'royalty_rebind' => 'Regalías del rebind',
        'manage_wallet' => 'Gestionar wallet',
        'remove_photo' => 'Eliminar foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancelación del wallet',
        'select_a_wallet_connect' => 'Selecciona un wallet',
        'button_wallet_connect' => 'Conectar un wallet',
        'button_wallet_disconnect' => 'Desconectar',
        'create_the_wallet' => 'Crear un nuevo wallet',
        'username' => 'Nombre de usuario',
        'create' => 'Crear un wallet',
        'delete_wallet' => '¿Estás seguro de que deseas eliminar este wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in spagnolo di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Acceso no autorizado',
    'SCAN_ERROR' => 'Error de escaneo',
    'VIRUS_FOUND' => 'Virus encontrado',
    'INVALID_FILE_EXTENSION' => 'Extensión de archivo no válida',
    'MAX_FILE_SIZE' => 'El archivo no puede exceder :max byte.',
    'INVALID_FILE_PDF' => 'Archivo PDF no válido',
    'MIME_TYPE_NOT_ALLOWED' => 'Tipo de archivo no permitido.',
    'INVALID_IMAGE_STRUCTURE' => 'Estructura de imagen no válida',
    'INVALID_FILE_NAME' => 'Nombre de archivo no válido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Error al obtener la URL prefirmada',
    'ERROR_DURING_FILE_UPLOAD' => 'Error durante la carga del archivo',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Imposible guardar el archivo.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Imposible crear la carpeta',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Imposible cambiar los permisos de la carpeta',
    'IMPOSSIBLE_SAVE_FILE' => 'Imposible guardar el archivo',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Error durante la creación del registro EGI en la base de datos',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Error durante la encriptación del nombre del archivo',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, el soporte ya ha sido alertado',
    'JSON_ERROR_IN_DISPATCHER' => 'Error JSON en el despachador',
    'GENERIC_SERVER_ERROR' => 'Error genérico del servidor, el equipo técnico ha sido informado',
    'FILE_NOT_FOUND' => 'Archivo no encontrado',
    'UNEXPECTED_ERROR' => 'Error genérico del servidor, el equipo técnico ha sido informado',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Error al eliminar el archivo temporal local',

    'scan_error' => 'Error de escaneo',
    'virus_found' => 'Virus encontrado',
    'required' => 'El campo es obligatorio.',
    'file' => 'Se produjo un error al cargar el archivo.',
    'file_extension_not_valid' => 'Extensión de archivo no válida',
    'mimes' => 'El archivo debe ser de tipo: :values.',
    'max_file_size' => 'El archivo no puede exceder :max byte.',
    'invalid_pdf_file' => 'Archivo PDF no válido',
    'mime_type_not_allowed' => 'Tipo de archivo no permitido.',
    'invalid_image_structure' => 'Estructura de imagen no válida',
    'invalid_file_name' => 'Nombre de archivo no válido',
    'error_getting_presigned_URL' => 'Error al obtener la URL prefirmada',
    'error_getting_presigned_URL_for_user' => 'Error al cargar el archivo',
    'error_during_file_upload' => 'Error durante la carga del archivo',
    'error_deleting_file' => 'Error al eliminar el archivo',
    'upload_finished' => 'Carga final',
    'some_errors' => 'algunos errores',
    'upload_failed' => 'carga fallida',
    'error_creating_folder' => 'Error al crear la carpeta',
    'error_changing_folder_permissions' => 'Error al cambiar los permisos de la carpeta',
    'local_save_failed_file_saved_to_external_disk_only' => 'El guardado local falló, archivo guardado solo en el disco externo',
    'external_save_failed_file_saved_to_local_disk_only' => 'El guardado externo falló, archivo guardado solo en el disco local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'El escaneo de archivos puede llevar mucho tiempo para cada archivo',
    'all_files_are_saved' => 'Todos los archivos están guardados',
    'loading_finished_you_can_proceed_with_saving' => 'Carga finalizada, puede proceder con el guardado',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Carga finalizada, puede proceder con el guardado y el escaneo',
    'im_uploading_the_file' => 'Estoy subiendo el archivo',


    'exception' => [
        'NotAllowedTermException' => 'Término no permitido',
        'MissingCategory' => 'Es necesario insertar una categoría.',
        'DatabaseException' => 'Se produjo un error de base de datos',
        'ValidationException' => 'Se produjo un error de validación',
        'HttpException' => 'Se produjo un error HTTP',
        'ModelNotFoundException' => 'Modelo no encontrado',
        'QueryException' => 'Error de consulta',
        'MintingException' => 'Error durante el minting',
        'FileNotFoundException' => 'Archivo no encontrado',
        'InvalidArgumentException' => 'Argumento no válido',
        'UnexpectedValueException' => 'Valor inesperado',
        'ItemNotFoundException' => 'Elemento no encontrado',
        'MultipleItemsFoundException' => 'Múltiples elementos encontrados',
        'LogicException' => 'Excepción lógica',
        'EntryNotFoundException' => 'Entrada no encontrada',
        'RuntimeException' => 'Error de tiempo de ejecución',
        'BadMethodCallException' => 'Llamada de método incorrecta',
        'LockTimeoutException' => 'Tiempo de espera de bloqueo',
        'InvalidIntervalException' => 'Intervalo no válido',
        'InvalidPeriodParameterException' => 'Parámetro de período no válido',
        'EndLessPeriodException' => 'Período sin fin',
        'UnreachableException' => 'Excepción inalcanzable',
        'InvalidTimeZoneException' => 'Zona horaria no válida',
        'ImmutableException' => 'Excepción inmutable',
        'InvalidFormatException' => 'Formato no válido',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Estimado usuario,</p>
            </br>
            <p>El texto que ha introducido viola nuestras normas y directrices de la comunidad. Por favor, modifique el contenido e inténtelo de nuevo.</p>
            </br>
            <p>Si no entiende por qué este término está prohibido, consulte las cláusulas del acuerdo que aceptó en el momento del registro.
            <p>Agradecemos su comprensión y colaboración.</p>
            </br>
            <p>Atentamente,
            <br>
            El equipo de Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulte la página de normas de la comunidad.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker no se inicializó correctamente',
    'table_not_exist' => 'La tabla no existe',
    'unique' => 'Este valor ya está presente en su biblioteca de traits.',
    'the_category_name_cannot_be_empty' => 'El nombre de la categoría no puede estar vacío',
    'nathing_to_save' => 'Nada que guardar',
    'an_error_occurred' => '¡Ups! Lo siento, ¡se produjo un error!',
    'error_number' => 'Número de error:',
    'reason' => [
        'reason' => 'razón',
        'wallet_not_valid' => 'Cartera no válida',
        'something_went_wrong' => 'Algo salió mal',
    ],
    'solution' => [
        'solution' => 'solución',
        'create_a_new_wallet_and_try_again' => 'Crea una nueva cartera y vuelve a intentarlo',
        'we_are_already_working_on_solving_the_problem' => 'Ya estamos trabajando en resolver el problema',
    ],
    'min' => [
        'string' => 'El campo debe tener al menos :min caracteres.',
    ],
    'max' => [
        'string' => 'El campo debe tener como máximo :max caracteres.',
    ],
    'id_epp_not_found' => 'ID EPP no encontrado',
    'minting' => [
        'error_generating_token' => 'Error al generar el token',
        'insufficient_wallet_balance' => 'Saldo insuficiente en la cartera para comprar este EcoNFT',
        'error_during_save_the_metadataFile' => 'Error al guardar los metadatos en el archivo',
        'error_during_save_the_metadata_on_database' => 'Error al guardar los metadatos en la base de datos',
        'error_during_create_metadata_file' => 'Error al crear el archivo de metadatos',
        'error_during_save_the_buyer' => 'Error al guardar el comprador',
        'buyer_not_exist' => 'El comprador no existe',
        'this_wallet_does_not_belong_to_any_buyer' => 'Esta cartera no pertenece a ningún comprador',
        'seller_not_exist' => 'El vendedor no existe',
        'seller_owner_not_found' => 'No se encuentra el propietario del vendedor',
        'seller_wallet_address_not_found' => 'No se encontró la dirección de la cartera del vendedor',
        'error_during_save_the_seller' => 'Error al guardar el vendedor',
        'error_during_save_the_buyer_transaction' => 'Error al guardar la transacción del comprador',
        'error_during_the_saving_of_the_payment' => 'Error al guardar el pago',
        'error_during_save_the_natan' => 'Error al guardar los datos', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Error al guardar la transacción',
        'seller_not_found' => 'Vendedor no encontrado',
        'error_during_the_minting' => 'Error durante la creación',
        'error_uploading_file' => 'Error al subir el archivo',
        'insufficient_balance' => 'Saldo insuficiente',
        'eco_nft_not_found' => 'EcoNFT no encontrado',
        'no_traits_found' => 'No se encontraron rasgos',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in spagnolo
|--------------------------------------------------------------------------
|
 */

return [
    'came_to_back' => 'Volver',
    "file_deleted_successfully" => "Archivo eliminado con éxito",
    'extension_not_allowed' => '¡Extensión no permitida!',
    'title_file_type_not_allowed' => '¡Tipo de archivo no permitido!',
    'title_file_size_exceeds' => '¡Tamaño de archivo excesivo!',
    'title_invalid_file_name' => '¡Nombre de archivo no válido!',
    'file_extension_not_allowed' => 'Tipo de archivo no permitido: :extension. Los tipos de archivo permitidos tienen las siguientes extensiones: :extensions.',
    'file_type_not_allowed' => 'Tipo de archivo no permitido: :type. Los tipos MIME permitidos son: :mimetypes.',
    'file_size_exceeds' => 'El tamaño del archivo supera el tamaño máximo permitido de :size MB.',
    'invalid_file_name' => 'Nombre de archivo no válido: :filename. El nombre del archivo contiene caracteres no permitidos.',
    'allowed_extensions' => 'Las extensiones permitidas son: :extensions.',
    'allowed_mime_types' => 'Los tipos MIME permitidos son: :mimetypes.',
    "file_infected" => "Archivo infectado",
    "scan_error" => "Error de escaneo",
    "starting_scan" => "Iniciando escaneo",
    "error_uploading_file" => "Error al subir el archivo",
    "error_getting_presigned_url" => "Error al obtener la URL prefirmada",
    "error_deleting_file" => "Error al eliminar el archivo",
    "upload_finished" => "Carga completada",
    "some_errors" => "algunos errores",
    "upload_failed" => "carga fallida",
    "file_scanning_may_take_a_long_time_for_each_file" => "La exploración de archivos puede llevar mucho tiempo para cada archivo",
    "all_files_are_saved" => "Todos los archivos están guardados",
    "loading_finished_you_can_proceed_with_saving" => "Carga finalizada, puedes proceder con el guardado",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Carga finalizada, puedes proceder con el guardado y el escaneo",
    "im_uploading_the_file" => "Estoy subiendo el archivo",
    "virus_scan_disabled" => "Escaneo de virus desactivado",
    "virus_scan_enabled" => "Escaneo de virus habilitado",
    "file_is_clean" => "El archivo está limpio",
    "the_uploaded_file_was_detected_as_infected" => "El archivo subido fue detectado como infectado",
    "antivirus_scan_in_progress" => "Escaneo de antivirus en progreso",
    'scanning_stopped' => 'Escaneo detenido',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy feliz',
    "emogy_angry" => 'Emogy enojado',
    "im_checking_the_validity_of_the_file" => 'Estoy comprobando la validez del archivo',
    "im_recording_the_information_in_the_database" => 'Estoy registrando la información en la base de datos',
    "im_saving_the_image" => 'Estoy guardando la imagen',
    "file_saved_successfully" => 'Archivo: :fileCaricato guardado con éxito',
    "file_scanned_successfully" => 'Archivo: :fileCaricato escaneado con éxito',
    "file_uploaded_successfully" => 'Archivo: :fileCaricato subido con éxito',
    "all_files_were_scanned_no_infected_files" => 'Todos los archivos fueron escaneados, no hay archivos infectados',
    "one_or_more_files_were_found_infected" => 'Se encontró uno o más archivos infectados, se han excluido de la carga',
    "no_file_uploaded" => "Ningún archivo subido",
    "error_during_file_upload" => "Error durante la carga del archivo",
    'starting_uplad' => 'Iniciando carga',
    'uploaded' => 'Subido',
    'successfully' => 'con éxito',
    'starting_upload' => 'Iniciando carga',
    "starting_saving" => "Iniciando guardado",
    'waiting' => 'Esperando...',
    'upload_status' => 'Estado de carga',
    'return_to_collection' => 'Volver a la colección',
    'EGI_image' =>'Imagen EGI',
    'error_in_the_files' => 'Error en los archivos',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Vista previa de EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Arrastra y suelta tus archivos aquí o haz clic para seleccionar',
    'upload_your_EGI_Files' => 'Sube tus archivos EGI',
    'wait_for_the_files_to_load' => 'Espera a que se carguen los archivos',
    'access_the_control_panel' => 'Accede al panel de control',
    'of' => 'de',
    'errors_in_the_files' => 'Errores en los archivos',
    'loading' => 'Cargando...',
    'utilities_image_file' => 'Utilidades, imagen y carga de archivos',
    'file_upload' => 'Carga de archivos',
    'select_files' => 'Selecciona los archivos',
    'max_file_size_reminder' => 'Recuerda: el tamaño máximo para cada archivo es de 100MB. Para archivos mayores de 30MB, recomendamos la carga individual para evitar problemas de red',
    'upload_your_files' => 'Sube tus archivos',
    'file_format_not_supported_for_viewing' => 'Formato de archivo no compatible para ver',
    'cancel_upload' => 'Cancelar la carga',
    'save_the_files' => 'Guardar los archivos',
    'open' => 'Abrir',
    'user_management' => 'Gestión de usuarios',
    'sign_in' => 'Iniciar sesión',
    'sign_out' => 'Cerrar sesión',
    "who_is_natan_frangette" => "¿Quién es Natan Frangette?",
    'home' => 'Inicio',
    'remove_photo' => 'Eliminar foto',
    'username' => 'Nombre de usuario',
    'bind' => 'Enlazar',
    'value' => 'Valor',
    'title' => 'Título',
    'dimension' => 'Dimensión',
    'size' => 'Tamaño: ',
    'description' => 'Descripción',
    'name' => 'Nombre',
    'date_start' => 'Fecha de inicio',
    'date_end' => 'Fecha de finalización',
    'unknown' => 'Desconocido',
    'active' => 'Activo',
    'inactive' => 'Inactivo',
    'existing' => 'Existente',
    'welcome' => 'Bienvenido al hub Natan',
    'done' => 'Hecho',
    'create' => 'Crear',
    'saving' => 'Guardando...',
    'save' => 'Guardar',
    'saved' => 'Guardado!',
    'remember_to_save' => 'Recuerda guardar',
    'cancel' => 'Cancelar',
    'delete' => 'Eliminar',
    'deleted' => 'Eliminado',
    'edit' => 'Editar',
    'update' => 'Actualizar',
    'cancelled' => 'Cancelado',
    'add' => 'Añadir',
    'confirm' => 'Confirmar',
    'disable' => 'Desactivar',
    'close' => 'Cerrar',
    'delete_confirm' => '¿Estás seguro de que quieres eliminar este elemento?',
    'search' => 'Buscar',
    'whoops_something_went_wrong' => 'Whoops, algo salió mal',
    'action_confirm' => 'Operación completada con éxito!',
    'traits' => 'Rasgos',
    'utility' => 'Utilidad',
    'zoom' => 'Zoom',
    'product_image' => 'Imagen del producto',
    'micro_logo' => 'Micro logo, molécula de Equilibrium',
    'logo' => 'Logo, molécula de Equilibrium',
    'manage_utility' => 'Gestionar utilidad',
    'item_zoom' => 'Tamaño original',
    'esternal_transfert' => 'Transferencia externa',
    'internal_transfert' => 'Transferencia interna',
    'back_to_item' => 'Volver al elemento',
    'position' => 'Posición',
    'head_photo_page' => 'Foto de cabecera de la página',
    'handle_collection_data' => 'Editar datos de la colección',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este elemento no se puede eliminar porque hay archivos asociados con él',
    'edit_item' => [
        'title' => 'Editar elemento',
        'description' => 'Editar la información del elemento',
        'back_to_collection' => 'Volver a la colección',
        'write_the_buyers_email' => 'Escriba el correo electrónico del comprador',
        'this_item_cannot_be_transfered' => 'Este elemento no se puede transferir',
        'are_you_sure_you_want_to_transfer_this_item' => '¿Estás seguro de que quieres transferir este elemento de <span class="font-bold"> :collectionNameFrom </span> a <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'La colección personal para este usuario no existe, no se puede realizar la transferencia',
        'not_exist_user_width_this_email' => 'El usuario con el correo electrónico :emailExternalTransfer no existe.',
        'transfer' => 'Transferir',
        'internal_transfer' => 'Transferencia interna',
        'external_transfer' => 'Transferencia externa',
        'max_25_char' => 'Máximo 25 caracteres',
        'max_1000_char' => 'Máximo 1000 caracteres',
        'write_the_description' => 'Escriba la descripción',
        'date_of_creation' => 'Fecha de creación',
        'publish' => 'Publicar',
        'unpublish' => 'Despublicar',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este elemento no se puede eliminar porque hay archivos asociados con él',
    ],
    'bio' => [
        'your_biography' => 'Tu biografía',
        'bio_title' => 'Título de la biografía',
        'manage_biography' => 'Gestionar biografía',
        'manage_chapter' => 'Gestionar capítulos',
        'back_to_biography' => 'Volver a la biografía',
        'back_to_profile' => 'Volver al perfil',
        'chapter' => 'Capítulo',
        'chapter_start_date' => 'Fecha de inicio del capítulo',
        'chapter_end_date' => 'Fecha de finalización del capítulo',
        'chapter_title' => 'Título del capítulo',
        'chapter_biography' => 'Biografía del capítulo',
        'remove_biography' => 'Eliminar biografía',
        'remove_chapter' => 'Eliminar capítulo',
        'removed_chapter' => 'Capítulo eliminado',
        'add_chapter' => 'Agregar capítulo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => '¿Estás seguro de que deseas eliminar este capítulo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => '¿Estás seguro de que deseas eliminar esta biografía?',
    ],

    'drop' => [
        'remove_from_drop' => 'Eliminar de la Drop',
        'add_to_drop' => 'Añadir a la Drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => '¿Estás seguro de que quieres eliminar :itemremoved del drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: spagnolo
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Por favor, inicie sesión en su cuenta',
    'email' => 'Dirección de correo electrónico',
    'password' => 'Contraseña',
    'remember_me' => 'Recuérdame',
    'forgot_your_password' => '¿Olvidaste tu contraseña?',
    'login' => 'Iniciar sesión',
    'register' => 'Registrarse',
    'please_register_now' => 'Por favor, regístrese ahora',
    'first_name' => 'Nombre',
    'last_name' => 'Apellido',
    'confirm_password' => 'Confirmar contraseña',
    'reset_password' => 'Restablecer la contraseña',
    'current_password' => 'Contraseña actual',
    'new_password' => 'Nueva contraseña',
    'have_an_account' => '¿Tienes una cuenta?',
    'dont_have_an_account' => '¿No tienes una cuenta?',
    'logout' => 'Cerrar sesión',
    'i_agree_to' => 'Estoy de acuerdo con',
    'terms_of_service' => 'Términos de servicio',
    'and' => 'y',
    'privacy_policy' => 'Política de privacidad',
    'welcome_to_the_first_artist_business_builder' => 'Bienvenido al portal de Natan Frangette, el primer y único Generador de Negocios para Artistas',
    'welcome_to_the_natan_site' => 'Bienvenido al sitio de Natan',
    'join_us' => '¡Únete a un equipo que hará la diferencia!',
    'express_your_creativity' => 'Expresa tu creatividad con tus EcoNFT',
    'change_the_world_with_every_sale' => 'Cambia el mundo con cada compra',
    'innovative_partnerships' => 'Asociaciones innovadoras',
    'bring_your_artistic_biography_to_life' => 'Trae tu biografía artística a la vida',
    'impact_community' => 'Comunidad de impacto',
    'register_now' => '¡Regístrese hoy y sea parte de una revolución artística con un impacto positivo en la sociedad y el medio ambiente!',
    'change_language' => 'Cambiar idioma',
    'for_your_security_please_confirm_your_password_to_continue' => 'Por su seguridad, confirme su contraseña para continuar.',
    'two_factor' => [
        'title' => 'Autenticación de Dos Factores',
        'description' => 'Agrega seguridad adicional a tu cuenta usando la autenticación de dos factores.',
        'finish_enabled' => 'Finaliza la activación de la autenticación de dos factores.',
        'enabled' => 'La autenticación de dos factores ha sido activada para tu cuenta.',
        'not_enabled' => 'No has activado la autenticación de dos factores.',
        'prompt' => 'Cuando se activa la autenticación de dos factores, se te pedirá un token seguro y aleatorio durante la autenticación. Puedes obtener este token desde la aplicación Google Authenticator en tu teléfono.',
        'QRCode' => [
            'title' => 'Escanea el código QR abajo en tu aplicación de autenticación del teléfono.',
            'alt' => 'Código QR',
            'finish_enabled' => 'Para finalizar la activación de la autenticación de dos factores, escanea el código QR siguiente con la aplicación de autenticación de tu teléfono o ingresa la clave de configuración y proporciona el código OTP generado.',
            'enabled' => 'La autenticación de dos factores está activada. Escanea el siguiente código QR con la aplicación de autenticación de tu teléfono o introduce la clave de configuración.',
            'setup_key' => 'Clave de Configuración',
            'code' => 'Código',
            'showing_recovery_codes' => 'Guarda estos códigos de recuperación en un gestor de contraseñas seguro. Se pueden usar para recuperar el acceso a tu cuenta si pierdes tu dispositivo de autenticación de dos factores.',
            'enable' => 'Activar',
            'disable' => 'Desactivar',
            'regenerate_recory_codes' => 'Regenerar Códigos de Recuperación',
            'confirm' => 'Confirmar',
            'cancel' => 'Cancelar',
            'show_recory_codes' => 'Mostrar Códigos de Recuperación',
            'confirm_password' => 'Confirmar Contraseña',
        ],
    ],
    'browser_session' => [
        'title' => 'Sesión del Navegador',
        'description' => 'Gestiona y desconecta sesiones activas en otros navegadores y dispositivos.',
        'prompt' => 'Si es necesario, puedes desconectar todas las demás sesiones del navegador en todos tus dispositivos. Algunas de tus sesiones recientes están listadas a continuación; sin embargo, esta lista puede no ser exhaustiva. Si crees que tu cuenta ha sido comprometida, también deberías actualizar tu contraseña.',
        'this_device' => 'Este Dispositivo',
        'last_active' => 'Última Actividad',
        'log_out_other_browser_sessions' => 'Desconectar otras sesiones del navegador',
        'please_enter_your_password_to_confirm' => 'Por favor, introduce tu contraseña para confirmar que deseas desconectar las demás sesiones del navegador en todos tus dispositivos.',
    ],
    'delete_account' => [
        'title' => 'Eliminar Cuenta',
        'description' => 'Elimina tu cuenta permanentemente.',
        'prompt' => '¿Estás seguro de que deseas eliminar tu cuenta? Una vez eliminada, todos tus datos y recursos serán eliminados permanentemente. Introduce tu contraseña para confirmar que deseas eliminar tu cuenta de forma permanente.',
        'once_your_account_is_deleted' => 'Una vez que tu cuenta sea eliminada, todos tus datos y recursos serán eliminados permanentemente. Antes de eliminar tu cuenta, descarga cualquier dato o información que quieras conservar.',
        'delete_account' => 'Eliminar Cuenta',
    ],

];
#### Inizio File: /home/fabio/EGI/resources/lang/es/profile.php ####

<?php
/*
|
|    Traduzione in spagnolo
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografía',
    'account' => 'Cuenta',
    'first_name' => 'Nombre',
    'last_name' => 'Apellido',
    'email' => 'Correo electrónico',
    'wallet' => 'Billetera',
    'your_email_address_is_unverified' => 'Tu dirección de correo electrónico no está verificada',
    'click_here_to_re-send_the_verification_email' => 'Haz clic aquí para reenviar el correo de verificación',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Se ha enviado un nuevo enlace de verificación a tu dirección de correo electrónico.',
    'language' => 'Idioma',
    'creator' => 'Creador',
    'email_verified_at' => 'Correo verificado el',
    'password' => 'Contraseña',
    'remember_token' => 'Recordar token',
    'current_team_id' => 'ID del equipo actual',
    'profile_photo_path' => 'Ruta de la foto de perfil',
    'consent' => 'Consentimiento',
    'bio_title' => 'Título de biografía',
    'bio_story' => 'Historia biográfica',
    'title' => 'Título',
    'mr_miss_dott' => 'Sr. / Sra. / Dr.',
    'job_role' => 'Puesto de trabajo',
    'user_name' => 'Nombre de usuario',
    'user_type' => 'Tipo de usuario',
    'street' => 'Calle',
    'city' => 'Ciudad',
    'region' => 'Región',
    'state' => 'Estado',
    'zip' => 'Código postal',
    'home_phone' => 'Teléfono de casa',
    'cell_phone' => 'Teléfono móvil',
    'work_phone' => 'Teléfono de trabajo',
    'site_url' => 'Sitio web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch', // Asumo que "Twich" fue un error tipográfico
    'Other' => 'Otro',
    'birth_date' => 'Fecha de nacimiento',
    'fiscal_code' => 'Código fiscal',
    'tax_id_number' => 'Número de identificación fiscal',
    'doc_typo' => 'Tipo de documento',
    'doc_num' => 'Número de documento',
    'doc_issue_date' => 'Fecha de emisión del documento',
    'doc_expired_date' => 'Fecha de caducidad del documento',
    'doc_issue_from' => 'Documento emitido por',
    'doc_photo_path_f' => 'Ruta de la foto frontal del documento',
    'doc_photo_path_r' => 'Ruta de la foto trasera del documento',
    'org_data_sheet' => 'Hoja de datos de la organización',
    'please_update_your_company_information' => 'Actualiza la información de tu empresa',
    'insert_a_valid_url' => 'Introduce una URL válida',
    'enter_annotation' => 'Introduce una anotación',
    'org_name' => 'Nombre de la organización',
    'org_email' => 'Correo de la organización',
    'org_street' => 'Calle de la organización',
    'org_city' => 'Ciudad de la organización',
    'org_region' => 'Región de la organización',
    'org_state' => 'Estado de la organización',
    'org_zip' => 'Código postal de la organización',
    'org_site_url' => 'Sitio web de la organización',
    'annotation' => 'Anotación',
    'org_phone_1' => 'Teléfono de la organización 1',
    'org_phone_2' => 'Teléfono de la organización 2',
    'org_phone_3' => 'Teléfono de la organización 3',
    'rea' => 'REA', // No traducido ya que no estoy seguro del contexto
    'org_fiscal_code' => 'Código fiscal de la organización',
    'org_vat_number' => 'Número de IVA de la organización',
    'select_a_photo' => 'Selecciona una foto',
    'upload_a_photo' => 'Subir una foto',
    'remove_photo' => 'Eliminar foto',
    'select_a_language' => 'Selecciona un idioma',
    'photo' => 'Foto',
    'profile_information' => 'Información del perfil',
    'update_your_profile_data' => 'Actualiza tus datos de perfil',
    'biography' => 'Biografía',
    'document_data' => 'Datos del documento',
    'please_enter_your_ID_details' => 'Introduce los detalles de tu identificación',
    'document_type' => 'Tipo de documento',
    'drive_licenze' => 'Licencia de conducir',
    'passport' => 'Pasaporte',
    'identity_card' => 'Tarjeta de identidad',
    'front_photograph_of_the_document' => 'Fotografía frontal del documento',
    'back_photograph_of_the_document' => 'Fotografía trasera del documento',
    'social_media' => 'Redes sociales',
    'please_enter_your_social_media_details' => 'Introduce los detalles de tus redes sociales',
    'update_password' => 'Actualizar contraseña',
    'ensure_your_account' => 'Asegura tu cuenta usando una contraseña larga y aleatoria',
    'enter_your_new_password' => 'Introduce tu nueva contraseña',
    'confirm_your_new_password' => 'Confirma tu nueva contraseña',
    'two_factor_authentication' => 'Autenticación de dos factores',
    'two_factor_authentication_add_additional_security' => 'Agrega seguridad adicional a tu cuenta usando la autenticación de dos factores',
    'You_have_not_enabled_two_factor_authentication.' => 'No has habilitado la autenticación de dos factores.',
    'text_for_two_factor_authentication' => 'Cuando está habilitada la autenticación de dos factores, se te solicitará un token seguro y aleatorio al autenticarte. Puedes obtener este token desde la aplicación Google Authenticator en tu teléfono.',
    'browser_sessions' => 'Sesiones del navegador',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Administra y cierra tus sesiones activas en otros navegadores y dispositivos.',
    'text_for_sessione' => 'Si es necesario, puedes cerrar sesión en todas las otras sesiones del navegador en todos tus dispositivos. Algunas de tus sesiones recientes están listadas abajo; sin embargo, esta lista podría no ser completa. Si crees que tu cuenta ha sido comprometida, también deberías actualizar tu contraseña.',
    'log_out_other_browser_sessions' => 'Cerrar las demás sesiones del navegador',
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traducción en español de todos los datos de la barra lateral y de la barra de navegación
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gestionar Colecciones',
        'collections' => 'Colecciones',
        'dashboard' => 'Panel de Control',
        'admin' => 'Admin',
        'authorizations' => 'Autorizaciones',
    ],

    'open_collection' => 'Abrir Colección',
    'new_collection' => 'Nueva Colección',
    'permissions_roles' => 'Roles y Permisos',
    'assign_roles' => 'Asignar Roles',
    'assign_permissions' => 'Asignar Permisos',
    'manage_roles' => 'Gestionar Roles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/es/traits.php ####

<?php

/*
|
|    Traduzione spagnolo per i dati dei traits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => '¿Estás seguro de que quieres combinar este rasgo?',
    'yes_match_it' => 'Sí, combínalo',
    'the_trait_was_matched' => 'El rasgo fue combinado',
    'trait_added' => 'Rasgo añadido',
    'category_added' => 'Categoría añadida',
    'key_added' => 'Clave añadida',
    'value_added' => 'Valor añadido',
    'new_category' => 'Nueva categoría',
    'new_key' => 'Nueva clave',
    'key_deletion_error' => 'Esta clave está vinculada a algunos rasgos y no se puede eliminar. Si deseas eliminarla, primero debes eliminar los rasgos asociados.',
    'create_a_new_trait_for_this_key' => 'Crear un nuevo rasgo para esta clave',
    'click_for_selected' => 'Haz clic para seleccionar',
    'trait_icon' => 'Icono de rasgo',
    'EGI_with_traits' => 'EGI con rasgos',
    'traits_library' => 'Librería de rasgos',
    'collection' => 'Colección',
    'manage_traits' => 'Gestionar rasgos',
    'manage_key' => 'Gestionar claves',
    'manage_category' => 'Gestionar categorías',
    'delete_traits' => 'Eliminar rasgos',
    'applyTraits' => 'Regresar a Aplicar Rasgos',
    'open_manage' => 'Abrir gestión',
    'close_manage' => 'Cerrar gestión',
    'apply_traits' => 'Aplicar rasgos',
    'create_new_key' => 'Crear nueva clave',
    'key_deletion' => 'Eliminación de clave',
    'key_deletion_confirm' => '¿Estás seguro de que quieres eliminar esta clave: :key?',
    'key_not_possible_delete' => 'No es posible eliminar esta clave',
    'key_deleted' => 'Clave eliminada',
    'key_search' => 'Buscar clave',
    'make_a_new_key' => 'Crear una nueva clave',
    'key_created' => 'Clave creada',
    'key_updated' => 'Clave actualizada',
    'key_not_possible_update' => 'No es posible actualizar esta clave',
    'key_not_found' => 'Clave no encontrada',
    'key_not_possible_create' => 'No es posible crear esta clave',
    'key_not_possible_find' => 'No es posible encontrar esta clave',
    'bind' => 'Vincular',
    'unbind' => 'Desvincular',
    'binded' => 'Claves vinculadas',
    'unbinded' => 'Claves por vincular',
    'make' => 'Crear',
    'create_a_new_category' => 'Crear una nueva categoría',
    'category_created' => 'Categoría creada',
    'create_a_new_key' => 'Crear una nueva clave',
    'select_a_category' => 'Seleccionar una categoría',
    'category' => 'Categoría',
    'select_a_key' => 'Seleccionar una clave',
    'key' => 'Clave',
    'value_for_key' => 'Valor para la clave',
    'select_all' => 'Seleccionar todo',
    'select_one_or_more_EGI' => 'Seleccionar uno o más EGI',
    'unselect_all' => 'Deseleccionar todo',
    'many_to_many' => 'Muchos a muchos',
    'one_to_many' => 'Uno a muchos',
    'zoom_in' => 'Aumentar zoom',
    'zoom_out' => 'Reducir zoom',
    'traits_on :numberItems items_in_this_collection' => 'Rasgos en :numberItems elementos de esta colección',
    'are_you_sure_remove :traitKey' => '¿Estás seguro de que quieres eliminar <span class="font-bold"> :traitKey<span>?',
    'all_the_traits_you_created' => 'Todos los rasgos que has creado',
    'traits_categories' => 'Categorías de rasgos',
    'traits' => 'Rasgos',
    'update_category' => 'Actualizar categoría',
    'update_key' => 'Actualizar clave',
    'category' => 'Categoría',
    'explanation_apply_traits' => 'Asigna las características que deseas aplicar a los elementos individuales de tu colección',
    'explanation_manage_category' => 'Gestiona las categorías de rasgos. Desde esta sección puedes crear nuevas categorías, actualizar o eliminar las existentes. Puedes hacer lo mismo con las claves y también asociarlas a categorías. Puedes ver todas las claves que ya han sido asociadas y, si es necesario, desvincularlas haciendo clic derecho en la tarjeta correspondiente. Además, puedes ver todas las claves que aún deben ser asociadas: puedes seleccionar una o más (nota que cuando seleccionas la clave debe volverse roja, de lo contrario significa que no fue seleccionada correctamente) y, al hacer clic derecho, se te mostrará una lista de categorías disponibles. Al elegir una categoría, crearás la asociación.',
    'trait_value' => 'Valor del rasgo',
    'view_your_all_traits' => 'Ver todos tus rasgos',
    'view_your_traits_this_collection' => 'Ver tus rasgos solo de esta colección',
    'back_to_apply_traits' => 'Volver a aplicar rasgos',
    'back_to_gallery' => 'Volver a la galería',
    'this_traits_non_cannot_be_removed' => 'Estos rasgos no pueden ser eliminados',
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in francese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Inviter un membre à la collection',
    'came_back_to_collection' => 'Retour à la collection',
    'confirm_delete_title' => 'Êtes-vous sûr?',
    'confirm_delete_text' => 'Cette action supprimera l\'image de la :type de façon permanente!',
    'confirm_delete_button' => 'Oui, supprimer!',
    'cancel_delete_button' => 'Annuler',
    'deleted_title' => 'Supprimé!',
    'deleted_text' => 'L\'image de la bannière a été supprimée avec succès.',
    'delete_card' => 'Supprimer la carte',
    'delete_banner' => 'Supprimer la bannière',
    'delete_avatar' => 'Supprimer l\'avatar',
    'delete_EGI' => 'Supprimer l\'EGI',
    'save_card' => 'Enregistrer la carte',
    'save_banner' => 'Enregistrer la bannière',
    'save_avatar' => 'Enregistrer l\'avatar',
    'save_EGI' => 'Enregistrer l\'EGI',
    'create_validation_error' => 'Erreur de validation',
    'creation_failed' => 'Création échouée',
    'collection_delete' => 'Supprimer la collection',
    'avatar_image' => 'Image d\'avatar',
    'card_image' => 'Image de la carte',
    'EGI_image' => 'Image EGI',
    'banner_image' => 'Image de la bannière',
    'edit_collection_data' => 'Modifier les données de la collection',
    'modifies_EGI' => 'Modifie EGI',
    'new_collection' => 'Nouvelle collection',
    'open_collection' => 'Ouvrir la collection',
    'team_members_description' => 'Ici, vous pouvez voir tous les membres de l\'équipe qui ont accès à cette collection',
    'collection_members' => 'Membres de la collection',
    'manage_head_images' => 'Gérer les images d\'en-tête',
    'manage_collection' => 'Gérer la collection',
    'collection' => 'Collection',
    'collections' => 'Collections',
    'collection_data' => 'Données d\'en-tête de la collection',
    'collection_name' => 'Nom de la collection',
    'collection_id' => 'ID de la collection',
    'collection_description_placeholder' => 'Entrez une description de la collection',
    'collection_description_suggest' => 'Une description claire et attrayante aide les utilisateurs à mieux comprendre votre collection et augmente son attrait. Dites ce qui la rend unique!',
    'collection_description' => 'Entrez toutes les données relatives à la collection, soyez très précis',
    'collection_image' => 'Image de la collection',
    'collection_image_alt' => 'Texte alternatif de l\'image de la collection',
    'add_epp' => 'Ajouter un EPP',
    'add_epp_placeholder' => 'Entrez un EPP',
    'need_to_associate_epp' => 'Tant que vous n\'aurez pas associé votre galerie à un EPP, vous ne pourrez pas la publier',
    'EGI_floor_price' => 'Prix minimum EGI',
    'set_base_EcoNFT_price' => 'Définissez un prix de base que vous souhaitez facturer pour chaque EGI de cette collection',
    'collection_site_URL' => 'URL du site de la collection',
    'collection_site_URL_suggest' => 'Suggestion : entrez l\'URL du site de la collection',
    'position_for_mor_than_one_collection' => 'Si vous avez plus d\'une collection, vous pouvez décider où placer celle-ci',
    'publish_collection' => 'Publier la collection',
    'image_for_EcoNFT_collection' => 'Image pour la collection EGI',
    'image_description' => 'Ceci est l\'image qui représente toute la collection',
    'image_alt' => 'Image représentant toute la collection',
    'image_title' => 'Image représentant toute la collection',
    'select_new_EcoNFT_photo' => 'Sélectionnez une nouvelle photo pour l\'EGI',
    'switch_collection' => 'Changer de collection',
    'goto_collection' => 'Aller à la collection',
    'type' => 'Type',
    'select_content_type' => 'Sélectionnez le type de contenu',
    'type_image' => 'Image',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Vidéo',
    'EGI_number' => 'Numéro EGI',
    'position' => 'Posição',
    'updated_successfully' => 'Collection enregistrée avec succès',
    'save_failed' => 'Échec de l\'enregistrement',
    'collection_not_found' => 'Collection non trouvée',
    'tips_to_optimize_your_collection' => 'Conseils pour optimiser votre collection',
    'tips_for_your_collection_images' => 'Conseils pour les images de votre collection',
    'image_section_title' => 'Images de la collection',
    'image_section_description' => 'Choisissez soigneusement les images qui représentent votre collection',
    'data_section_title' => 'Données de la collection',
    'data_section_description' => 'Choisissez soigneusement les données qui représentent votre collection',
    'this_is_default_collection_of_the_team' => 'Ceci est la collection par défaut de l\'équipe',
    'wallet' => [
        'write_royalty_mint' => 'Entrez le pourcentage de royalties pour le mint',
        'write_royalty_rebind' => 'Entrez le pourcentage de royalties pour le rebind',
        'user_role' => 'Rôle',
        'role_unknown' => 'Aucun rôle',
        'address' => 'Adresse du wallet',
        'balance' => 'Solde du wallet',
        'name' => 'Nom du wallet',
        'status' => 'Statut du wallet',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Royalties pour le mint',
        'royalty_rebind' => 'Royalties pour le rebind',
        'manage_wallet' => 'Gérer le wallet',
        'remove_photo' => 'Supprimer la photo',
        'wallet' => 'Wallet',
        'cancellation' => 'Annulation du wallet',
        'select_a_wallet_connect' => 'Sélectionnez un wallet',
        'button_wallet_connect' => 'Connecter un wallet',
        'button_wallet_disconnect' => 'Déconnecter',
        'create_the_wallet' => 'Créer un nouveau wallet',
        'username' => "Nom d'utilisateur",
        'create' => 'Créer un wallet',
        'delete_wallet' => 'Êtes-vous sûr de vouloir supprimer ce wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in francese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Accès non autorisé',
    'SCAN_ERROR' => 'Erreur de scan',
    'VIRUS_FOUND' => 'Virus trouvé',
    'INVALID_FILE_EXTENSION' => 'Extension de fichier non valide',
    'MAX_FILE_SIZE' => 'Le fichier ne peut pas dépasser :max octets.',
    'INVALID_FILE_PDF' => 'Fichier PDF invalide',
    'MIME_TYPE_NOT_ALLOWED' => 'Type de fichier non autorisé.',
    'INVALID_IMAGE_STRUCTURE' => 'Structure d\'image invalide',
    'INVALID_FILE_NAME' => 'Nom de fichier invalide',
    'ERROR_GETTING_PRESIGNED_URL' => 'Erreur lors de l\'obtention de l\'URL pré-signée',
    'ERROR_DURING_FILE_UPLOAD' => 'Erreur lors du téléchargement du fichier',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossible d\'enregistrer le fichier',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Erreur lors de la création du dossier',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Erreur lors de la modification des autorisations du dossier',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossible d\'enregistrer le fichier',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problème interne, l\'assistance a déjà été alertée',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Erreur lors du cryptage du nom de fichier',
    'IMAGICK_NOT_AVAILABLE' => 'Problème interne, l\'assistance a déjà été alertée',
    'JSON_ERROR_IN_DISPATCHER' => 'Erreur JSON dans le dispatcher',
    'GENERIC_SERVER_ERROR' => 'Erreur générique du serveur, l\'équipe technique a été informée',
    'FILE_NOT_FOUND' => 'Fichier non trouvé',
    'UNEXPECTED_ERROR' => 'Erreur générique du serveur, l\'équipe technique a été informée',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Erreur lors de la suppression du fichier temporaire local',

    'scan_error' => 'Erreur de scan',
    'virus_found' => 'Virus trouvé',
    'required' => 'Le champ est obligatoire.',
    'file' => 'Une erreur s\'est produite lors du téléchargement du fichier.',
    'file_extension_not_valid' => 'Extension de fichier non valide',
    'mimes' => 'Le fichier doit être de type : :values.',
    'max_file_size' => 'Le fichier ne peut pas dépasser :max octets.',
    'invalid_pdf_file' => 'Fichier PDF invalide',
    'mime_type_not_allowed' => 'Type de fichier non autorisé.',
    'invalid_image_structure' => 'Structure d\'image invalide',
    'invalid_file_name' => 'Nom de fichier invalide',
    'error_getting_presigned_URL' => 'Erreur lors de l\'obtention de l\'URL pré-signée',
    'error_getting_presigned_URL_for_user' => 'Erreur lors du chargement du fichier',
    'error_during_file_upload' => 'Erreur lors du téléchargement du fichier',
    'error_deleting_file' => 'Erreur lors de la suppression du fichier',
    'upload_finished' => 'Téléchargement terminé',
    'some_errors' => 'quelques erreurs',
    'upload_failed' => 'échec du téléchargement',
    'error_creating_folder' => 'Erreur lors de la création du dossier',
    'error_changing_folder_permissions' => 'Erreur lors de la modification des autorisations du dossier',
    'local_save_failed_file_saved_to_external_disk_only' => 'L\'enregistrement local a échoué, le fichier a été enregistré uniquement sur le disque externe',
    'external_save_failed_file_saved_to_local_disk_only' => 'L\'enregistrement externe a échoué, le fichier a été enregistré uniquement sur le disque local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'L\'analyse des fichiers peut prendre beaucoup de temps pour chaque fichier',
    'all_files_are_saved' => 'Tous les fichiers sont enregistrés',
    'loading_finished_you_can_proceed_with_saving' => 'Le chargement est terminé, vous pouvez procéder à l\'enregistrement',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Le chargement est terminé, vous pouvez procéder à l\'enregistrement et à l\'analyse',
    'im_uploading_the_file' => 'Je télécharge le fichier',

    'exception' => [
        'NotAllowedTermException' => 'Terme non autorisé',
        'MissingCategory' => 'Vous devez entrer une catégorie.',
        'DatabaseException' => 'Une erreur de base de données s\'est produite',
        'ValidationException' => 'Une erreur de validation s\'est produite',
        'HttpException' => 'Une erreur HTTP s\'est produite',
        'ModelNotFoundException' => 'Modèle non trouvé',
        'QueryException' => 'Erreur de requête',
        'MintingException' => 'Erreur lors du minting',
        'FileNotFoundException' => 'Fichier non trouvé',
        'InvalidArgumentException' => 'Argument invalide',
        'UnexpectedValueException' => 'Valeur inattendue',
        'ItemNotFoundException' => 'Élément non trouvé',
        'MultipleItemsFoundException' => 'Plusieurs éléments trouvés',
        'LogicException' => 'Exception logique',
        'EntryNotFoundException' => 'Entrée non trouvée',
        'RuntimeException' => 'Erreur d\'exécution',
        'BadMethodCallException' => 'Appel de méthode incorrect',
        'LockTimeoutException' => 'Délai d\'attente de verrouillage',
        'InvalidIntervalException' => 'Intervalle invalide',
        'InvalidPeriodParameterException' => 'Paramètre de période invalide',
        'EndLessPeriodException' => 'Période sans fin',
        'UnreachableException' => 'Exception inatteignable',
        'InvalidTimeZoneException' => 'Fuseau horaire invalide',
        'ImmutableException' => 'Exception immuable',
        'InvalidFormatException' => 'Format invalide',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Cher utilisateur,</p>
            </br>
            <p>Le texte que vous avez saisi viole nos règles et directives de la communauté. Veuillez modifier le contenu et réessayer.</p>
            </br>
            <p>Si vous ne comprenez pas pourquoi ce terme est interdit, veuillez vous référer aux clauses de l'accord que vous avez accepté lors de votre inscription.
            <p>Nous vous remercions de votre compréhension et de votre collaboration.</p>
            </br>
            <p>Cordialement,
            <br>
            L\'équipe de Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consultez la page des règles de la communauté.
        </a>.',
    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker n\'a pas été initialisé correctement',
    'table_not_exist' => 'La table n\'existe pas',
    'unique' => 'Cette valeur est déjà présente dans votre bibliothèque de traits.',
    'the_category_name_cannot_be_empty' => 'Le nom de la catégorie ne peut pas être vide',
    'nathing_to_save' => 'Rien à sauvegarder',
    'an_error_occurred' => 'Oops ! Désolé, une erreur s\'est produite !',
    'error_number' => 'Numéro d\'erreur :',
    'reason' => [
        'reason' => 'raison',
        'wallet_not_valid' => 'Portefeuille non valide',
        'something_went_wrong' => 'Quelque chose s\'est mal passé',
    ],
    'solution' => [
        'solution' => 'solution',
        'create_a_new_wallet_and_try_again' => 'Créez un nouveau portefeuille et réessayez',
        'we_are_already_working_on_solving_the_problem' => 'Nous travaillons déjà à résoudre le problème',
    ],
    'min' => [
        'string' => 'Le champ doit comporter au moins :min caractères.',
    ],
    'max' => [
        'string' => 'Le champ doit comporter au maximum :max caractères.',
    ],
    'id_epp_not_found' => 'ID EPP non trouvé',
    'minting' => [
        'error_generating_token' => 'Erreur lors de la génération du jeton',
        'insufficient_wallet_balance' => 'Solde insuffisant dans le portefeuille pour acheter cet EcoNFT',
        'error_during_save_the_metadataFile' => 'Erreur lors de l\'enregistrement des métadonnées dans le fichier',
        'error_during_save_the_metadata_on_database' => 'Erreur lors de l\'enregistrement des métadonnées dans la base de données',
        'error_during_create_metadata_file' => 'Erreur lors de la création du fichier de métadonnées',
        'error_during_save_the_buyer' => 'Erreur lors de l\'enregistrement de l\'acheteur',
        'buyer_not_exist' => 'L\'acheteur n\'existe pas',
        'this_wallet_does_not_belong_to_any_buyer' => 'Ce portefeuille n\'appartient à aucun acheteur',
        'seller_not_exist' => 'Le vendeur n\'existe pas',
        'seller_owner_not_found' => 'Le propriétaire du vendeur est introuvable',
        'seller_wallet_address_not_found' => 'L\'adresse du portefeuille du vendeur est introuvable',
        'error_during_save_the_seller' => 'Erreur lors de l\'enregistrement du vendeur',
        'error_during_save_the_buyer_transaction' => 'Erreur lors de l\'enregistrement de la transaction de l\'acheteur',
        'error_during_the_saving_of_the_payment' => 'Erreur lors de l\'enregistrement du paiement',
        'error_during_save_the_natan' => 'Erreur lors de l\'enregistrement des données', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Erreur lors de l\'enregistrement de la transaction',
        'seller_not_found' => 'Vendeur non trouvé',
        'error_during_the_minting' => 'Erreur lors de la création',
        'error_uploading_file' => 'Erreur lors du téléchargement du fichier',
        'insufficient_balance' => 'Solde insuffisant',
        'eco_nft_not_found' => 'EcoNFT non trouvé',
        'no_traits_found' => 'Aucun trait trouvé',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in francese
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Retour',
    "file_deleted_successfully" => "Fichier supprimé avec succès",
    'extension_not_allowed' => 'Extension non autorisée!',
    'title_file_type_not_allowed' => 'Type de fichier non autorisé!',
    'title_file_size_exceeds' => 'Taille de fichier excessive!',
    'title_invalid_file_name' => 'Nom de fichier invalide!',
    'file_extension_not_allowed' => 'Type de fichier non autorisé: :extension. Les types de fichiers autorisés ont les extensions suivantes : :extensions.',
    'file_type_not_allowed' => 'Type de fichier non autorisé : :type. Les types MIME autorisés sont : :mimetypes.',
    'file_size_exceeds' => 'La taille du fichier dépasse la taille maximale autorisée de :size Mo.',
    'invalid_file_name' => 'Nom de fichier invalide : :filename. Le nom du fichier contient des caractères non autorisés.',
    'allowed_extensions' => 'Les extensions autorisées sont : :extensions.',
    'allowed_mime_types' => 'Les types MIME autorisés sont : :mimetypes.',
    "file_infected" => "Fichier infecté",
    "scan_error" => "Erreur de scan",
    "starting_scan" => "Démarrage de l'analyse",
    "error_uploading_file" => "Erreur lors du téléchargement du fichier",
    "error_getting_presigned_url" => "Erreur lors de l'obtention de l'URL pré-signée",
    "error_deleting_file" => "Erreur lors de la suppression du fichier",
    "upload_finished" => "Téléchargement terminé",
    "some_errors" => "quelques erreurs",
    "upload_failed" => "échec du téléchargement",
    "file_scanning_may_take_a_long_time_for_each_file" => "L'analyse des fichiers peut prendre beaucoup de temps pour chaque fichier",
    "all_files_are_saved" => "Tous les fichiers sont enregistrés",
    "loading_finished_you_can_proceed_with_saving" => "Chargement terminé, vous pouvez procéder à l'enregistrement",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Chargement terminé, vous pouvez procéder à l'enregistrement et à l'analyse",
    "im_uploading_the_file" => "Je télécharge le fichier",
    "virus_scan_disabled" => "Analyse antivirus désactivée",
    "virus_scan_enabled" => "Analyse antivirus activée",
    "file_is_clean" => "Le fichier est propre",
    "the_uploaded_file_was_detected_as_infected" => "Le fichier téléchargé a été détecté comme infecté",
    "antivirus_scan_in_progress" => "Analyse antivirus en cours",
    'scanning_stopped' => 'Analyse arrêtée',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy heureux',
    "emogy_angry" => 'Emogy en colère',
    "im_checking_the_validity_of_the_file" => 'Je vérifie la validité du fichier',
    "im_recording_the_information_in_the_database" => 'J\'enregistre les informations dans la base de données',
    "im_saving_the_image" => 'Je sauvegarde l\'image',
    "file_saved_successfully" => 'Fichier: :fileCaricato enregistré avec succès',
    "all_files_were_scanned_no_infected_files" => 'Tous les fichiers ont été scannés, aucun fichier infecté',
    "one_or_more_files_were_found_infected" => 'Un ou plusieurs fichiers ont été trouvés infectés, ils ont été exclus du téléchargement',
    "file_scanned_successfully" => 'Fichier: :fileCaricato scanné avec succès',
    "file_uploaded_successfully" => 'Fichier: :fileCaricato téléchargé avec succès',
    "no_file_uploaded" => "Aucun fichier téléchargé",
    "error_during_file_upload" => "Erreur lors du téléchargement du fichier",
    'starting_uplad' => 'Démarrage du téléchargement',
    'uploaded' => 'Téléchargé',
    'successfully' => 'avec succès',
    'starting_upload' => 'Démarrage du téléchargement',
    "starting_saving" => "Démarrage de l'enregistrement",
    'waiting' => 'Attendez...',
    'upload_status' => 'Statut du téléchargement',
    'return_to_collection' => 'Retour à la collection',
    'EGI_image' => 'Image EGI',
    'error_in_the_files' => 'Erreur dans les fichiers',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Aperçu EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Glissez-déposez vos fichiers ici ou cliquez pour sélectionner',
    'upload_your_EGI_Files' => 'Téléchargez vos fichiers EGI',
    'wait_for_the_files_to_load' => 'Attendez le chargement des fichiers',
    'access_the_control_panel' => 'Accéder au panneau de contrôle',
    'of' => 'de',
    'errors_in_the_files' => 'Erreurs dans les fichiers',
    'loading' => 'Chargement...',
    'utilities_image_file' => 'Utilitaires, image et téléchargement de fichiers',
    'file_upload' => 'Téléchargement de fichiers',
    'select_files' => 'Sélectionnez les fichiers',
    'max_file_size_reminder' => 'Rappelez-vous : la taille maximale pour chaque fichier est de 100 Mo. Pour les fichiers de plus de 30 Mo, nous recommandons un téléchargement individuel pour éviter les problèmes de réseau.',
    'upload_your_files' => 'Téléchargez vos fichiers',
    'file_format_not_supported_for_viewing' => 'Format de fichier non pris en charge pour la visualisation',
    'cancel_upload' => 'Annuler le téléchargement',
    'save_the_files' => 'Enregistrer les fichiers',
    'open' => 'Ouvrir',
    'user_management' => 'Gestion des utilisateurs',
    'sign_in' => 'Se connecter',
    'sign_out' => 'Déconnexion',
    "who_is_natan_frangette" => "Qui est Natan Frangette",
    'home' => 'Accueil',
    'remove_photo' => 'Supprimer la photo',
    'username' => 'Nom d\'utilisateur',
    'bind' => 'Lier',
    'value' => 'Valeur',
    'title' => 'Titre',
    'dimension' => 'Dimension',
    'size' => 'Taille: ',
    'description' => 'Description',
    'name' => 'Nom',
    'date_start' => 'Date de début',
    'date_end' => 'Date de fin',
    'unknown' => 'Inconnu',
    'active' => 'Actif',
    'inactive' => 'Inactif',
    'existing' => 'Existant',
    'welcome' => 'Bienvenue sur le hub Natan',
    'done' => 'Fait',
    'create' => 'Créer',
    'saving' => 'Je sauvegarde...',
    'save' => 'Sauvegarder',
    'saved' => 'Sauvegardé!',
    'remember_to_save' => 'N\'oubliez pas de sauvegarder',
    'cancel' => 'Annuler',
    'update' => 'Mettre à jour',
    'cancelled' => 'Annulé',
    'delete' => 'Supprimer',
    'deleted' => 'Supprimé',
    'edit' => 'Modifier',
    'add' => 'Ajouter',
    'confirm' => 'Confirmer',
    'disable' => 'Désactiver',
    'close' => 'Fermer',
    'delete_confirm' => 'Êtes-vous sûr de vouloir supprimer?',
    'whoops_something_went_wrong' => 'Oups! Quelque chose s\'est mal passé!',
    'action_confirm' => 'Opération réussie!',
    'search' => 'Recherche',
    'traits' => 'Traits',
    'utility' => 'Utilité',
    'zoom' => 'Zoom',
    'product_image' => 'Image du produit',
    'micro_logo' => 'Micro logo, molécule d\'équilibre',
    'logo' => 'Logo, molécule d\'équilibre',
    'manage_utility' => 'Gérer les utilitaires',
    'item_zoom' => 'Taille d\'origine',
    'esternal_transfert' => 'Transfert externe',
    'internal_transfert' => 'Transfert interne',
    'back_to_item' => 'Retour à l\'élément',
    'position' => 'Position',
    'head_photo_page' => 'Photo de couverture de la page',
    'handle_collection_data' => 'Gérer les données de la collection',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Cet élément ne peut pas être supprimé car il existe des fichiers associés',
    'edit_item' => [
        'title' => 'Modifier l\'élément',
        'description' => 'Modifiez les informations de l\'élément',
        'back_to_collection' => 'Retour à la collection',
        'this_item_cannot_be_transfered' => 'Cet élément ne peut pas être transféré',
        'are_you_sure_you_want_to_transfer_this_item' => 'Êtes-vous sûr de vouloir transférer cet élément de <span class="font-bold"> :collectionNameFrom </span> à <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'La collection personnelle pour cet utilisateur n\'existe pas, impossible de transférer',
        'not_exist_user_width_this_email' => 'L\'utilisateur avec l\'e-mail :emailExternalTransfer n\'existe pas.',
        'transfer' => 'Transfert',
        'internal_trasfer' => 'Transfert interne',
        'external_trasfer' => 'Transfert externe',
        'max_25_char' => 'Maximum 25 caractères',
        'max_1000_char' => 'Maximum 1000 caractères',
        'write_the_description' => 'Écrivez la description',
        'date_of_creation' => 'Date de création',
        'publish' => 'Publier',
        'unpublish' => 'Dépublier',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Cet élément ne peut pas être supprimé car il existe des fichiers associés',
    ],
    'bio' => [
        'your_biography' => 'Votre biographie',
        'bio_title' => 'Titre de la biographie',
        'manage_biography' => 'Gérer la biographie',
        'manage_chapter' => 'Gérer les chapitres',
        'back_to_biography' => 'Retour à la biographie',
        'back_to_profile' => 'Retour au profil',
        'chapter' => 'Chapitre',
        'chapter_start_date' => 'Date de début du chapitre',
        'chapter_end_date' => 'Date de fin du chapitre',
        'chapter_title' => 'Titre du chapitre',
        'chapter_biography' => 'Biographie du chapitre',
        'remove_biography' => 'Supprimer la biographie',
        'remove_chapter' => 'Supprimer le chapitre',
        'removed_chapter' => 'Chapitre supprimé',
        'add_chapter' => 'Ajouter un chapitre',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Êtes-vous sûr de vouloir supprimer ce chapitre ?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Êtes-vous sûr de vouloir supprimer cette biographie ?',
    ],

    'drop' => [
        'remove_from_drop' => 'Supprimer de la drop',
        'add_to_drop' => 'Ajouter à la drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Êtes-vous sûr de vouloir supprimer :itemremoved de la drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: francese
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'S\'il vous plaît, connectez-vous à votre compte',
    'email' => 'Adresse e-mail',
    'password' => 'Mot de passe',
    'remember_me' => 'Souviens-toi de moi',
    'forgot_your_password' => 'Mot de passe oublié?',
    'login' => 'Connexion',
    'register' => 'S\'inscrire',
    'please_register_now' => 'S\'il vous plaît, inscrivez-vous maintenant',
    'first_name' => 'Prénom',
    'last_name' => 'Nom de famille',
    'confirm_password' => 'Confirmez le mot de passe',
    'reset_password' => 'Réinitialiser le mot de passe',
    'current_password' => 'Mot de passe actuel',
    'new_password' => 'Nouveau mot de passe',
    'have_an_account' => 'Vous avez déjà un compte?',
    'dont_have_an_account' => 'Vous n\'avez pas de compte?',
    'logout' => 'Se déconnecter',
    'i_agree_to' => 'Je suis d\'accord avec',
    'terms_of_service' => 'les conditions d\'utilisation',
    'and' => 'et',
    'privacy_policy' => 'la politique de confidentialité',
    'welcome_to_the_first_artist_business_builder' => 'Bienvenue sur le portail de Natan Frangette, le premier et unique générateur d\'entreprise pour artistes',
    'join_us' => 'Rejoignez l\'équipe qui fera la différence!',
    'express_your_creativity' => 'Exprimez votre créativité avec vos EcoNFT',
    'change_the_world_with_every_sale' => 'Changez le monde à chaque vente',
    'innovative_partnerships' => 'Partenariats innovants',
    'bring_your_artistic_biography_to_life' => 'Donnez vie à votre biographie artistique',
    'impact_community' => 'Communauté d\'impact',
    'register_now' => 'Inscrivez-vous aujourd\'hui et faites partie d\'une révolution artistique ayant un impact positif sur la société et l\'environnement!',
    'change_language' => 'Changer de langue',
    'for_your_security_please_confirm_your_password_to_continue' => 'Pour votre sécurité, veuillez confirmer votre mot de passe pour continuer.',
    'two_factor' => [
        'title' => 'Authentification à Deux Facteurs',
        'description' => 'Ajoutez une sécurité supplémentaire à votre compte en utilisant l’authentification à deux facteurs.',
        'finish_enabled' => 'Terminez l’activation de l’authentification à deux facteurs.',
        'enabled' => 'L’authentification à deux facteurs a été activée pour votre compte!',
        'not_enabled' => 'Vous n’avez pas activé l’authentification à deux facteurs.',
        'prompt' => 'Lorsque l’authentification à deux facteurs est activée, un token sécurisé et aléatoire vous sera demandé lors de l’authentification. Vous pouvez récupérer ce token depuis l’application Google Authenticator sur votre téléphone.',
        'QRCode' => [
            'title' => 'Scannez le code QR ci-dessous dans l’application d’authentification de votre téléphone.',
            'alt' => 'Code QR',
            'finish_enabled' => 'Pour terminer l’activation de l’authentification à deux facteurs, scannez le code QR suivant à l’aide de l’application d’authentification de votre téléphone ou entrez la clé de configuration et fournissez le code OTP généré.',
            'enabled' => 'L’authentification à deux facteurs est maintenant activée. Scannez le code QR suivant avec l’application d’authentification de votre téléphone ou entrez la clé de configuration.',
            'setup_key' => 'Clé de Configuration',
            'code' => 'Code',
            'showing_recovery_codes' => 'Conservez ces codes de récupération dans un gestionnaire de mots de passe sécurisé. Ils peuvent être utilisés pour récupérer l’accès à votre compte si vous perdez votre dispositif d’authentification à deux facteurs.',
            'enable' => 'Activer',
            'disable' => 'Désactiver',
            'regenerate_recory_codes' => 'Régénérer les Codes de Récupération',
            'confirm' => 'Confirmer',
            'cancel' => 'Annuler',
            'show_recory_codes' => 'Afficher les Codes de Récupération',
        ],
    ],
    'browser_session' => [
        'title' => 'Session du Navigateur',
        'description' => 'Gérez et déconnectez les sessions actives sur d’autres navigateurs et appareils.',
        'prompt' => 'Si nécessaire, vous pouvez déconnecter toutes les autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont listées ci-dessous; cependant, cette liste pourrait ne pas être exhaustive. Si vous pensez que votre compte a été compromis, vous devriez également mettre à jour votre mot de passe.',
        'this_device' => 'Cet Appareil',
        'last_active' => 'Dernière Activité',
        'log_out_other_browser_sessions' => 'Déconnecter les autres sessions du navigateur',
        'please_enter_your_password_to_confirm' => 'Veuillez entrer votre mot de passe pour confirmer que vous souhaitez déconnecter les autres sessions de navigateur sur tous vos appareils.',
    ],
    'delete_account' => [
        'title' => 'Supprimer le Compte',
        'description' => 'Supprimez définitivement votre compte.',
        'prompt' => 'Êtes-vous sûr de vouloir supprimer votre compte? Une fois supprimé, toutes vos données et ressources seront définitivement supprimées. Veuillez entrer votre mot de passe pour confirmer que vous souhaitez supprimer votre compte de façon permanente.',
        'once_your_account_is_deleted' => 'Une fois votre compte supprimé, toutes vos données et ressources seront définitivement supprimées. Avant de supprimer votre compte, téléchargez toutes les données ou informations que vous souhaitez conserver.',
        'delete_account' => 'Supprimer le Compte',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/profile.php ####

<?php
/*
|
|    Traduzione in francese per la pagina di profilo
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biographie',
    'first_name' => 'Prénom',
    'last_name' => 'Nom',
    'email' => 'Email',
    'wallet' => 'Portefeuille',
    'your_email_address_is_unverified' => 'Votre adresse email n\'est pas vérifiée',
    'click_here_to_re-send_the_verification_email' => 'Cliquez ici pour renvoyer l\'email de vérification',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Un nouveau lien de vérification a été envoyé à votre adresse email',
    'language' => 'Langue',
    'creator' => 'Créateur',
    'email_verified_at' => 'Email vérifiée le',
    'password' => 'Mot de passe',
    'remember_token' => 'Se souvenir du jeton',
    'current_team_id' => 'ID de l\'équipe actuelle',
    'profile_photo_path' => 'Chemin de la photo de profil',
    'consent' => 'Consentement',
    'bio_title' => 'Titre de la biographie',
    'bio_story' => 'Histoire biographique',
    'title' => 'Titre',
    'mr_miss_dott' => 'Monsieur/Madame/Docteur',
    'job_role' => 'Poste',
    'user_name' => 'Nom d\'utilisateur',
    'user_type' => 'Type d\'utilisateur',
    'street' => 'Rue',
    'city' => 'Ville',
    'region' => 'Région',
    'state' => 'État',
    'zip' => 'Code postal',
    'home_phone' => 'Téléphone fixe',
    'cell_phone' => 'Portable',
    'work_phone' => 'Téléphone professionnel',
    'site_url' => 'Site web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Autre',
    'birth_date' => 'Date de naissance',
    'fiscal_code' => 'Code fiscal',
    'tax_id_number' => 'Numéro d\'identification fiscale',
    'doc_typo' => 'Type de document',
    'doc_num' => 'Numéro de document',
    'doc_issue_date' => 'Date de délivrance du document',
    'doc_expired_date' => 'Date d\'expiration du document',
    'doc_issue_from' => 'Document délivré par',
    'doc_photo_path_f' => 'Chemin de la photo avant du document',
    'doc_photo_path_r' => 'Chemin de la photo arrière du document',
    'org_data_sheet' => 'Fiche d\'information de l\'organisation',
    'please_update_your_company_information' => 'Veuillez mettre à jour les informations de votre organisation',
    'insert_a_valid_url' => 'Insérez une URL valide',
    'enter_annotation' => 'Entrez une annotation',
    'org_name' => 'Nom de l\'organisation',
    'org_email' => 'Email de l\'organisation',
    'org_street' => 'Rue de l\'organisation',
    'org_city' => 'Ville de l\'organisation',
    'org_region' => 'Région de l\'organisation',
    'org_state' => 'État de l\'organisation',
    'org_zip' => 'Code postal de l\'organisation',
    'org_site_url' => 'Site web de l\'organisation',
    'annotation' => 'Annotation',
    'org_phone_1' => 'Téléphone de l\'organisation 1',
    'org_phone_2' => 'Téléphone de l\'organisation 2',
    'org_phone_3' => 'Téléphone de l\'organisation 3',
    'rea' => 'Numéro RCS',
    'org_fiscal_code' => 'Code fiscal de l\'organisation',
    'org_vat_number' => 'Numéro de TVA de l\'organisation',
    'select_a_photo' => 'Sélectionner une photo',
    'upload_a_photo' => 'Télécharger une photo',
    'remove_photo' => 'Supprimer la photo',
    'select_a_language' => 'Choisir une langue',
    'photo' => 'Photo',
    'profile_information' => 'Informations du profil',
    'update_your_profile_data' => 'Mettez à jour vos données de profil',
    'biography' => 'Biographie',
    'document_data' => 'Données du document',
    'please_enter_your_ID_details' => 'Veuillez entrer vos informations d\'identité',
    'document_type' => 'Type de document',
    'drive_licenze' => 'Permis de conduire',
    'passport' => 'Passeport',
    'identity_card' => 'Carte d\'identité',
    'front_photograph_of_the_document' => 'Photographie avant du document',
    'back_photograph_of_the_document' => 'Photographie arrière du document',
    'social_media' => 'Réseaux sociaux',
    'please_enter_your_social_media_details' => 'Veuillez entrer vos informations sur les réseaux sociaux',
    'update_password' => 'Mettre à jour le mot de passe',
    'ensure_your_account' => 'Assurez la sécurité de votre compte en utilisant un mot de passe long et complexe',
    'enter_your_new_password' => 'Entrez votre nouveau mot de passe',
    'confirm_your_new_password' => 'Confirmez votre nouveau mot de passe',
    'two_factor_authentication' => 'Authentification à deux facteurs',
    'two_factor_authentication_add_additional_security' => 'Ajoutez une sécurité supplémentaire à votre compte en utilisant l\'authentification à deux facteurs',
    'You have not enabled two_factor_authentication.' => 'Vous n\'avez pas activé l\'authentification à deux facteurs.',
    'text_for_two_factor_authentication' => 'Lorsque l\'authentification à deux facteurs est activée, un jeton aléatoire et sécurisé vous sera demandé lors de l\'authentification. Vous pouvez récupérer ce jeton via l\'application Google Authenticator sur votre téléphone.',
    'browser_sessions' => 'Sessions du navigateur',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gérez et déconnectez vos sessions actives sur d\'autres navigateurs et appareils.',
    'text_for_sessione' => 'Si nécessaire, vous pouvez vous déconnecter de toutes les autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont listées ci-dessous; cependant, cette liste pourrait ne pas être exhaustive. Si vous pensez que votre compte a été compromis, vous devriez également mettre à jour votre mot de passe.',
    'log_out_other_browser_sessions' => 'Déconnecter les autres sessions du navigateur',
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduction en français de tous les éléments de la barre latérale et de la barre de navigation
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gérer les Collections',
        'collections' => 'Collections',
        'dashboard' => 'Tableau de Bord',
        'admin' => 'Admin',
        'authorizations' => 'Autorisations',
    ],

    'open_collection' => 'Ouvrir la Collection',
    'new_collection' => 'Nouvelle Collection',
    'permissions_roles' => 'Rôles et Permissions',
    'assign_roles' => 'Attribuer des Rôles',
    'assign_permissions' => 'Attribuer des Permissions',
    'manage_roles' => 'Gérer les Rôles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/traits.php ####

<?php

/*
|
|    Traduzione francese per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Êtes-vous sûr de vouloir associer ce trait?',
    'yes_match_it' => 'Oui, associez-le',
    'the_trait_was_matched' => 'Le trait a été associé',
    'trait_added' => 'Trait ajouté',
    'category_added' => 'Catégorie ajoutée',
    'key_added' => 'Clé ajoutée',
    'value_added' => 'Valeur ajoutée',
    'new_category' => 'Nouvelle catégorie',
    'new_key' => 'Nouvelle clé',
    'key_deletion_error' => 'Cette clé est liée à certains traits et ne peut pas être supprimée. Si vous souhaitez la supprimer, vous devez d\'abord supprimer les traits associés.',
    'create_a_new_trait_for_this_key' => 'Créer un nouveau trait pour cette clé',
    'click_for_selected' => 'Cliquez pour sélectionner',
    'trait_icon' => 'Icône de trait',
    'EGI_with_traits' => 'EGI com traços',
    'traits_library' => 'Bibliothèque de traits',
    'collection' => 'Collection',
    'manage_traits' => 'Gérer les traits',
    'manage_key' => 'Gérer les clés',
    'manage_category' => 'Gérer les catégories',
    'delete_traits' => 'Supprimer les traits',
    'applyTraits' => 'Revenir à Appliquer les traits',
    'create_new_key' => 'Créer une nouvelle clé',
    'open_manage' => 'Ouvrir la gestion',
    'close_manage' => 'Fermer la gestion',
    'apply_traits' => 'Appliquer les traits',
    'key_deletion' => 'Suppression de clé',
    'key_deletion_confirm' => 'Êtes-vous sûr de vouloir supprimer cette clé : :key?',
    'key_not_possible_delete' => 'Il n\'est pas possible de supprimer cette clé',
    'key_deleted' => 'Clé supprimée',
    'key_search' => 'Rechercher une clé',
    'make_a_new_key' => 'Créer une nouvelle clé',
    'key_created' => 'Clé créée',
    'key_updated' => 'Clé mise à jour',
    'key_not_possible_update' => 'Il n\'est pas possible de mettre à jour cette clé',
    'key_not_found' => 'Clé non trouvée',
    'key_not_possible_create' => 'Il n\'est pas possible de créer cette clé',
    'key_not_possible_find' => 'Il n\'est pas possible de trouver cette clé',
    'bind' => 'Lier',
    'unbind' => 'Dissocier',
    'binded' => 'Clés liées',
    'unbinded' => 'Clés à lier',
    'make' => 'Créer',
    'create_a_new_category' => 'Créer une nouvelle catégorie',
    'category_created' => 'Catégorie créée',
    'create_a_new_key' => 'Créer une nouvelle clé',
    'select_a_category' => 'Sélectionnez une catégorie',
    'category' => 'Catégorie',
    'select_a_key' => 'Sélectionnez une clé',
    'key' => 'Clé',
    'value_for_key' => 'Valeur pour la clé',
    'select_all' => 'Tout sélectionner',
    'select_one_or_more_EGI' => 'Sélectionnez un ou plusieurs EGI',
    'unselect_all' => 'Tout désélectionner',
    'many_to_many' => 'Plusieurs à plusieurs',
    'one_to_many' => 'Un à plusieurs',
    'zoom_in' => 'Zoom avant',
    'zoom_out' => 'Zoom arrière',
    'traits_on :numberItems items_in_this_collection' => 'Traits sur :numberItems éléments de cette collection',
    'are_you_sure_remove :traitKey' => 'Êtes-vous sûr de vouloir supprimer <span class="font-bold"> :traitKey<span>?',
    'all_the_traits_you_created' => 'Tous les traits que vous avez créés',
    'traits_categories' => 'Catégories de traits',
    'traits' => 'Traits',
    'update_category' => 'Mettre à jour la catégorie',
    'update_key' => 'Mettre à jour la clé',
    'category' => 'Catégorie',
    'explanation_apply_traits' => 'Attribuez les caractéristiques que vous souhaitez appliquer aux éléments individuels de votre collection',
    'explanation_manage_category' => 'Gérez les catégories de traits. Dans cette section, vous pouvez créer de nouvelles catégories, mettre à jour ou supprimer celles existantes. Vous pouvez en faire autant avec les clés et aussi les associer aux catégories. Vous pouvez voir toutes les clés qui ont déjà été associées et, si nécessaire, les dissocier en faisant un clic droit sur la carte correspondante. De plus, vous pouvez voir toutes les clés qui doivent encore être associées : vous pouvez en sélectionner une ou plusieurs (veuillez noter que lorsque vous sélectionnez la clé, elle doit devenir rouge, sinon cela signifie qu\'elle n\'a pas été correctement sélectionnée) et, en faisant un clic droit, une liste de catégories disponibles vous sera montrée. En choisissant une catégorie, vous créerez l\'association.',
    'trait_value' => 'Valeur du trait',
    'view_your_all_traits' => 'Voir tous vos traits',
    'view_your_traits_this_collection' => 'Voir vos traits uniquement pour cette collection',
    'back_to_apply_traits' => 'Revenir à appliquer les traits',
    'back_to_gallery' => 'Retour à la galerie',
    'this_traits_non_cannot_be_removed' => 'Ces traits ne peuvent pas être supprimés',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invita un membro alla collection',
    'came_back_to_collection' => 'Torna alla collection',
    'confirm_delete_title' => 'Sei sicuro?',
    'confirm_delete_text' => 'Questa azione eliminerà l\'immagine :type definitivamente!',
    'confirm_delete_button' => 'Sì, elimina!',
    'cancel_delete_button' => 'Annulla',
    'deleted_title' => 'Eliminata!',
    'deleted_text' => 'L\'immagine del banner è stata eliminata con successo.',
    'delete_card' => 'Elimina la card',
    'delete_banner' => 'Elimina il banner',
    'delete_avatar' => 'Elimina l\'avatar',
    'delete_EGI' => 'Elimina l\'EGI',
    'save_card' => 'Salva la card',
    'save_banner' => 'Salva il banner',
    'save_avatar' => 'Salva l\'avatar',
    'save_EGI' => 'Salva l\'EGI',
    'create_validation_error' => 'Errore di validazione',
    'creation_failed' => 'Creazione fallita',
    'collection_delete' => 'Elimina la collezione',
    'avatar_image' => 'Immagine dell\'avatar',
    'card_image' => 'Immagine della card',
    'EGI_image' => 'Immagine EGI',
    'banner_image' => 'Immagine del banner',
    'edit_collection_data' => 'Modifica i dati della collezione',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nuova collection',
    'open_collection' => 'Apri la collezione',
    'collection_members' => 'Membri della collection',
    'team_members_description' => 'Qui puoi vedere tutti i membri del team che hanno accesso a questa collection',
    'manage_collection' => 'Gestisci le collection',
    'manage_head_images' => 'Gestisci le immagini di testata',
    'collection' => 'Collezione',
    'collections' => 'Collezioni',
    'collection_data' => 'Dati di testata delle collection',
    'collection_name' => 'Nome della collection',
    'collection_id' => 'ID della collection',
    'collection_description_placeholder' => 'Inserisci una descrizione della collection',
    'collection_description_suggest' => 'Una descrizione chiara e accattivante aiuta gli utenti a capire meglio la tua collezione e ne aumenta l\'attrattiva. Racconta cosa la rende unica!',
    'collection_description' => 'Inserisci tutti i dati inerenti alla collection, sii molto accurato',
    'collection_image' => 'Immagine della collection',
    'collection_image_alt' => 'Testo alternativo dell\'immagine della collection',
    'add_epp' => 'Aggiungi un EPP',
    'add_epp_placeholder' => 'Inserisci un EPP',
    'need_to_associate_epp' => 'Fino a quando non avrai associato la tua galleria ad un EPP non potrai pubblicarla',
    'EGI_floor_price' => 'Prezzo minimo EGI',
    'set_base_EcoNFT_price' => 'Imposta un prezzo base che desideri scrivere per ogni EGI di questa collezione',
    'collection_site_URL' => 'URL del sito della collection',
    'collection_site_URL_suggest' => 'Suggerimento: inserisci l\'URL del sito della collection',
    'position_for_mor_than_one_collection' => 'Se hai più di una collection puoi decidere in quale posizione inserire questa',
    'publish_collection' => 'Pubblica la collection',
    'image_for_EcoNFT_collection' => 'Immagine per la collection di EGI',
    'image_description' => 'Questa è l\'immagine che rappresenta l\'intera collezione',
    'image_alt' => 'Immagine che rappresenta l\'intera collezione',
    'image_title' => 'Immagine che rappresenta l\'intera collezione',
    'select_new_EcoNFT_photo' => 'Seleziona una nuova foto per l\'EGI',
    'switch_collection' => 'Cambia collection',
    'goto_collection' => 'Vai alla collection',
    'type' => 'Tipo',
    'select_content_type' => 'Seleziona il tipo di contenuto',
    'type_image' => 'Immagine',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'Numero EGI',
    'position' => 'Posizione',
    'updated_successfully' => 'Collezione salvata con successo',
    'save_failed' => 'Salvataggio fallito',
    'collection_not_found' => 'Collection non trovata',
    'tips_to_optimize_your_collection' => 'Suggerimenti per ottimizzare la tua collection',
    'tips_for_your_collection_images' => 'Suggerimenti per le immagini della tua collection',
    'image_section_title' => 'Immagini della collezione',
    'image_section_description' => 'Scegli con cura le immagini che rappresentano la tua collezione',
    'data_section_title' => 'Anagrafica della collection',
    'data_section_description' => 'Scegli con cura i dati che rappresentano la tua collection',
    'this_is_default_collection_of_the_team' => 'Questa è la collection predefinita del team',
    'wallet' => [
        'write_royalty_mint' => 'Inserisci la percentuale di royalty da applicare al mint',
        'write_royalty_rebind' => 'Inserisci la percentuale di royalty da applicare al rebind',
        'user_role' => 'Ruolo',
        'role_unknown' => 'No role',
        'address' => 'Indirizzo wallet',
        'balance' => 'Saldo wallet',
        'name' => 'Nome wallet',
        'status' => 'Stato wallet',
        'royalty' => 'Royalty',
        'royalty_mint' => 'Royalty mint',
        'royalty_rebind' => 'Royalty rebind',
        'manage_wallet' => 'Gestisci wallet',
        'remove_photo' => 'Rimuovi foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancellazione wallet',
        'select_a_wallet_connect' => 'Scegli un wallet',
        'button_wallet_connect' => 'Connetti un wallet',
        'button_wallet_disconnect' => 'Disconnetti',
        'create_the_wallet' => 'Crea un nuovo wallet',
        'username' => 'Username',
        'create' => 'Crea un wallet',
        'delete_wallet' => 'Are you sure you want to delete this wallet',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [

    'AUTHENTICATION_ERROR' => 'Accesso non autorizzato',
    'SCAN_ERROR' => 'Errore di scansione',
    'VIRUS_FOUND' => 'Virus trovato',
    'INVALID_FILE_EXTENSION' => 'Estensione del file non valida',
    'MAX_FILE_SIZE' => 'Il file non può superare :max byte.',
    'INVALID_FILE_PDF' => 'File PDF non valido',
    'MIME_TYPE_NOT_ALLOWED' => 'Il tipo di file non è consentito.',
    'INVALID_IMAGE_STRUCTURE' => 'Struttura dell\'immagine non valida',
    'INVALID_FILE_NAME' => 'Nome del file non valido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Errore durante il caricamento del file',
    'ERROR_DURING_FILE_UPLOAD' => 'Errore durante il caricamento del file',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossibile salvare il file.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Impossibile creare la cartella',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Impossibile cambiare i permessi della cartella',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossibile salvare il file',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problema interno, l\'assistenza è già allertata',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Errore durante la crittografia del nome del file',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, l\'assistenza è già allertata',
    'JSON_ERROR_IN_DISPATCHER' => 'Errore JSON nel dispatcher',
    'GENERIC_SERVER_ERROR' => 'Errore generico del server, il team tecnico è stato informato',
    'FILE_NOT_FOUND' => 'File non trovato',
    'UNEXPECTED_ERROR' => 'Problema interno, l\'assistenza è già allertata',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Errore durante l\'eliminazione del file temporaneo locale',

    'required' => 'Il campo è obbligatorio.',
    'file' => 'Si è verificato un errore durante il caricamento del file.',
    'mimes' => 'Il file deve essere di tipo: :values.',
    'error_getting_presigned_URL' => 'Errore durante il recupero dell\'URL prefirmato',
    'error_deleting_file' => 'Errore durante l\'eliminazione del file',
    'upload_finished' => 'Caricamento completato',
    'some_errors' => 'alcuni errori',
    'upload_failed' => 'caricamento fallito',
    'error_creating_folder' => 'Errore durante la creazione della cartella',
    'error_changing_folder_permissions' => 'Errore durante la modifica dei permessi della cartella',
    'local_save_failed_file_saved_to_external_disk_only' => 'Salvataggio locale fallito, file salvato solo sul disco esterno',
    'external_save_failed_file_saved_to_local_disk_only' => 'Salvataggio esterno fallito, file salvato solo sul disco locale',
    'file_scanning_may_take_a_long_time_for_each_file' => 'La scansione dei file potrebbe richiedere molto tempo per ciascun file',
    'all_files_are_saved' => 'Tutti i file sono salvati',
    'loading_finished_you_can_proceed_with_saving' => 'Caricamento completato, puoi procedere con il salvataggio',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Caricamento completato, puoi procedere con il salvataggio e la scansione',
    'im_uploading_the_file' => 'Sto caricando il file',

    'exception' => [
        'NotAllowedTermException' => 'Termine non consentito',
        'MissingCategory' => 'E\' necessario inserire una categoria.',
        'DatabaseException' => 'Si è verificato un errore del database',
        'ValidationException' => 'Si è verificato un errore di validazione',
        'HttpException' => 'Si è verificato un errore HTTP',
        'ModelNotFoundException' => 'Modello non trovato',
        'QueryException' => 'Errore di query',
        'MintingException' => 'Errore durante il minting',
        'FileNotFoundException' => 'File non trovato',
        'InvalidArgumentException' => 'Argomento non valido',
        'UnexpectedValueException' => 'Valore inaspettato',
        'ItemNotFoundException' => 'Elemento non trovato',
        'MultipleItemsFoundException' => 'Trovati più elementi',
        'LogicException' => 'Eccezione logica',
        'EntryNotFoundException' => 'Voce non trovata',
        'RuntimeException' => 'Errore di runtime',
        'BadMethodCallException' => 'Chiamata a metodo non valida',
        'LockTimeoutException' => 'Timeout del blocco',
        'InvalidIntervalException' => 'Intervallo non valido',
        'InvalidPeriodParameterException' => 'Parametro di periodo non valido',
        'EndLessPeriodException' => 'Periodo senza fine',
        'UnreachableException' => 'Eccezione irraggiungibile',
        'InvalidTimeZoneException' => 'Fuso orario non valido',
        'ImmutableException' => 'Eccezione immutabile',
        'InvalidFormatException' => 'Formato non valido',

    ],
    'the_input_must_be_a_string' => 'Il valore deve essere una stringa.',
    'forbidden_term_warning' =>"
        <div style=\"text-align: left;\">
            <p>Gentile Utente,</p>
            </br>
            <p>Il testo che hai inserito viola le nostre norme e linee guida sulla comunità. Ti invitiamo a modificare il contenuto e riprovare.</p>
            </br>
            <p>Se non ti è chiaro il motivo per cui questo termine è vietato, ti preghiamo di fare riferimento alle clausole dell'accordo che hai accettato al momento della registrazione.
            <p>Grazie per la tua comprensione e collaborazione.</p>
            </br>
            <p>Cordiali saluti,
            <br>
            Il Team di Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulta la pagina delle norme della comunità.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker non è stato inizializzato correttamente',
    'table_not_exist' => 'La tabella non esiste',
    'unique' => 'Questo valore è già presente nella tua libreira dei traits',
    'the_category_name_cannot_be_empty' => 'Il nome della categoria non può essere vuoto',
    'nathing_to_save' => 'Niente da salvare',
    'an_error_occurred' => 'Urgh! ci dispiace, si è verificato un errore!',
    'error_number' => 'Numero di errore:',
    'reason' => [
        'reason' => 'motivo',
        'wallet_not_valid' => 'Wallet non valido',
        'something_went_wrong' => 'Qualcosa è andato storto',

    ],
    'solution' => [
        'solution' => 'soluzione',
        'create_a_new_wallet_and_try_again' => 'Crea un nuovo wallet e prova di nuovo',
        'we_are_already_working_on_solving_the_problem' => 'Stiamo già lavorando per risolvere il problema',

    ],

    'min' => [
        'string' => 'Il campo deve essere di almeno :min caratteri.',
    ],
    'max' => [
        'string' => 'Il campo deve essere di al massimo :max caratteri.',
    ],

    'id_epp_not_found' => 'Id EPP non trovato',

    'minting' => [
        'error_generating_token' => 'Errore durante la generazione del token',
        'insufficient_wallet_balance' => 'Non hai fondi sufficenti per acquistare questo EcoNFT',
        'error_during_save_the_metadataFile' => 'Errore durante il salvataggio dei metadata nel file',
        'error_during_save_the_metadata_on_database' => 'Errore durante il salvataggio dei metadata nel database',
        'error_during_create_metadata_file' => 'Errore durante la creazione del file metadata',
        'error_during_save_the_buyer' => 'Errore durante il salvataggio del buyer',
        'buyer_not_exist' => 'Il buyer non esiste',
        'this_wallet_does_not_belong_to_any_buyer' => 'Questo wallet non appartiene a nessun buyer',
        'seller_not_exist' => 'Il seller non esiste',
        'seller_owner_not_found' => 'Il seller owner non esiste',
        'seller_wallet_address_not_found' => 'L\'indirizzo del wallet del seller non esiste',
        'error_during_save_the_seller' => 'Errore durante il salvataggio del seller',
        'error_during_save_the_buyer_transaction' => 'Errore durante il salvataggio della transazione per il buyer',
        'error_during_the_saving_of_the_payment' => 'Errore durante il salvataggio del pagamento',
        'error_during_save_the_natan' => 'Errore durante il salvataggio dei dati', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Errore durante il salvataggio della transazione',
        'seller_not_found' => 'Seller non trovato',
        'error_during_the_minting' => 'Errore durante il minting',
        'error_uploading_file' => 'Errore durante il caricamento del file',
        'insufficient_balance' => 'Saldo insufficiente',
        'eco_nft_not_found' => 'EcoNFT non trovato',
        'no_traits_found' => 'Nessun trait trovato',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati delle etichette generiche
|--------------------------------------------------------------------------

 */

return [
    'came_to_back' => 'Torna indietro',
    "file_deleted_successfully" => "File eliminato con successo",
    'title_extension_not_allowed' => 'Estensione non consentita!',
    'title_file_type_not_allowed' => 'Tipo di file non consentito!',
    'title_file_size_exceeds' => 'Dimensione del file eccessiva!',
    'title_invalid_file_name' => 'Nome del file non valido!',
    'file_extension_not_allowed' => 'Tipo di file non consentito: :extension. I tipi di file consentiti sono quelli con le seguenti estensioni: :extensions.',
    'file_type_not_allowed' => 'Tipo di file non consentito: :type. I tipi MIME consentiti sono: :mimetypes.',
    'file_size_exceeds' => 'Le dimensioni del file superano il limite massimo consentito di :size MB.',
    'invalid_file_name' => 'Nome del file non valido: :filename. Il nome del file contiene caratteri non consentiti.',
    'allowed_extensions' => 'Le estensioni consentite sono: :extensions.',
    'allowed_mime_types' => 'I tipi MIME consentiti sono: :mimetypes.',
    "file_infected" => "File infetto",
    "scan_error" => "Errore di scansione",
    "starting_scan" => "Inizio scansione",
    "error_uploading_file" => "Errore durante il caricamento del file",
    "error_getting_presigned_url" => "Errore durante l'ottenimento della presigned URL",
    "error_deleting_file" => "Errore durante l'eliminazione del file",
    "upload_finished" => "Caricamento completato",
    "some_errors" => "alcuni errori",
    "upload_failed" => "caricamento fallito",
    "file_scanning_may_take_a_long_time_for_each_file" => "La scansione dei file potrebbe richiedere molto tempo per ciascun file",
    "all_files_are_saved" => "Tutti i file sono salvati",
    "loading_finished_you_can_proceed_with_saving" => "Caricamento completato puoi procedere con il salvataggio",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Caricamento completato puoi procedere con il salvataggio e la scansione",
    "im_uploading_the_file" => "Sto caricando il file",
    "virus_scan_disabled" => "Scansione antivirus disabilitata",
    "virus_scan_enabled" => "Scansione antivirus abilitata",
    "file_is_clean" => "Il file è pulito",
    "the_uploaded_file_was_detected_as_infected" => "Il file caricato è stato rilevato come infetto",
    "antivirus_scan_in_progress" => "Scansione antivirus in corso",
    'scanning_stopped' => 'Scansione interrotta',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy felice',
    "emogy_angry" => 'Emogy arrabbiato',
    "im_checking_the_validity_of_the_file" => 'Sto controllando la validità del file',
    "im_recording_the_information_in_the_database" => 'Sto registrando le informazioni nel database',
    "im_saving_the_image" => 'Sto salvando l\'immagine',
    "file_saved_successfully" => 'File: :fileCaricato salvato con successo',
    "all_files_were_scanned_no_infected_files" => 'Tutti i file sono stati scansionati, nessun file infetto',
    "one_or_more_files_were_found_infected" => 'Uno o più file sono stati trovati infetti, sono stati esclusi dal caricamento',
    "file_scanned_successfully" => 'File: :fileCaricato scansionato con successo',
    "file_uploaded_successfully" => 'File: :fileCaricato caricato con successo',
    "no_file_uploaded" => "Nessun file caricato",
    "error_during_file_upload" => "Errore durante il caricamento del file",
    'starting_uplad' => 'Inizio caricamento',
    "starting_saving" => "Inizio salvataggio",
    'uploaded' => 'caricato',
    'successfully' => 'con successo',
    'starting_upload' => 'Inizio caricamento',
    'waiting' => 'In attesa...',
    'upload_status' => 'Stato caricamento',
    'return_to_collection' => 'Torna alla collezione',
    'EGI_image' => 'Immagine EGI',
    'error_in_the_files' => 'Errori nei file',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Anteprima EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Trascina e rilascia i tuoi file qui o fai clic per selezionare',
    'upload_your_EGI_Files' => 'Carica i tuoi file EGI',
    'wait_for_the_files_to_load' => 'Attendi il caricamento dei file',
    'access_the_control_panel' => 'Accedi al pannello di controllo',
    'of' => 'di',
    'errors_in_the_files' => 'Errori nei file',
    'loading' => 'Caricamento...',
    'utilities_image_file' => 'Utility, immagine e caricamento file',
    'file_upload' => 'Caricamento file',
    'select_files' => 'Seleziona i file',
    'max_file_size_reminder' => 'Ricorda: la dimensione massima per ogni file è di 100MB. Per file superiori a 30MB, ti consigliamo di caricarli singolarmente per evitare problemi di rete.',
    'save_the_files' => 'Salva i file',
    'file_format_not_supported_for_viewing' => 'Formato del file non supportato per la visualizzazione',
    'cancel_upload' => 'Annulla il caricamento',
    'upload_your_files' => 'Carica i tuoi file',
    'open' => 'Apri',
    'user_management' => 'Gestione utenti',
    'sign_in' => 'Accedi',
    'sign_out' => 'Esci',
    "who_is_natan_frangette" => "Chi è Natan Frangette",
    'home' => 'Home',
    'remove_photo' => 'Rimuovi foto',
    'username' => 'Username',
    'bind' => 'Associa',
    'value' => 'Valore',
    'title' => 'Titolo',
    'dimension' => 'Dimensioni',
    'size' => 'Peso: ',
    'description' => 'Descrizione',
    'name' => 'Nome',
    'date_start' => 'Data inizio',
    'date_end' => 'Data fine',
    'unknown' => 'Sconosciuto',
    'active' => 'Attivo',
    'inactive' => 'Inattivo',
    'existing' => 'Esistente',
    'welcome' => 'Benvenuto nel hub di Natan',
    'done' => 'Fatto',
    'create' => 'Crea',
    'saving' => 'Sto salvando...',
    'save' => 'Salva',
    'saved' => 'Salvato!',
    'remember_to_save' => 'Ricordati di salvare',
    'cancel' => 'Annulla',
    'update' => 'Aggiorna',
    'cancelled' => 'Cancellato',
    'delete' => 'Elimina',
    'deleted' => 'Eliminato',
    'edit' => 'Modifica',
    'add' => 'Aggiungi',
    'confirm' => 'Conferma',
    'disable' => 'Disabilita',
    'close' => 'Chiudi',
    'delete_confirm' => 'Sei sicuro di voler eliminare questo elemento?',
    'whoops_something_went_wrong' => 'Ops, qualcosa è andato storto!',
    'action_confirm' => 'Operazione avvenuta con successo!',
    'search' => 'Cerca',
    'traits' => 'Traits',
    'utility' => 'Utility',
    'zoom' => 'Zoom',
    'product_image' => 'Immagine prodotto',
    'micro_logo' => 'Micro logo, molecola di Equilibrium',
    'logo' => 'Logo, molecola di Equilibrium',
    'manage_utility' => 'Gestisci utility',
    'item_zoom' => 'Dimensioni originali',
    'esternal_transfert' => 'Trasferimento esterno',
    'internal_transfert' => 'Trasferimento interno',
    'back_to_item' => 'Torna all\'elemento',
    'position' => 'Posizione',
    'head_photo_page' => 'Foto di testa della pagina',
    'handle_collection_data' => 'Gestisci i dati della collezione',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Questo elemento non può essere eliminato perché ci sono file associati',
    'edit_item' => [
        'title' => 'Modifica elemento',
        'description' => 'Modifica le informazioni dell\'elemento',
        'back_to_collection' => 'Torna alla collezione',
        'write_the_buyers_email' => 'Inserisci l\'email dell\'acquirente',
        'this_item_cannot_be_transfered' => 'Questo elemento non può essere trasferito',
        'are_you_sure_you_want_to_transfer_this_item' => "Sei sicuro di voler trasferire questo elemento da <span class=font-bold'> :collectionNameFrom </span> a <span class='font-bold'> :collectionNameTo </span> ?",
        'personal_collection_for_this_user_not_exists' => 'La collezione personale per questo utente non esiste, impossibile effettuare il trasferimento',
        'not_exist_user_width_this_email' => 'L\'utente con l\'email :emailExternalTransfer non esiste.',
        'transfer' => 'Trasferisci',
        'internal_trasfer' => 'Trasferimento interno',
        'external_trasfer' => 'Trasferimento esterno',
        'max_25_char' => 'Massimo 25 caratteri',
        'max_1000_char' => 'Massimo 1000 caratteri',
        'write_the_description' => 'Inserisci la descrizione',
        'date_of_creation' => 'Data di creazione',
        'publish' => 'Pubblica',
        'unpublish' => 'Non pubblicare',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Questo elemento non può essere eliminato perché ci sono file associati',
        'remove_biography' => 'Rimuovi biografia',
    ],
    'bio' => [
        'your_biography' => 'La tua biografia',
        'bio_title' => 'Titolo biografia',
        'manage_biography' => 'Gestisci biografia',
        'manage_chapter' => 'Gestisci capitoli',
        'back_to_biography' => 'Torna alla biografia',
        'back_to_profile' => 'Torna al profilo',
        'chapter' => 'Capitolo',
        'chapter_start_date' => 'Data inizio capitolo',
        'chapter_end_date' => 'Data fine capitolo',
        'chapter_title' => 'Titolo capitolo',
        'chapter_biography' => 'Biografia capitolo',
        'remove_biography' => 'Rimuovi biografia',
        'remove_chapter' => 'Rimuovi capitolo',
        'removed_chapter' => 'Capitolo rimosso',
        'add_chapter' => 'Aggiungi capitolo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Sei sicuro di voler rimuovere questo capitolo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Sei sicuro di voler rimuovere questa biografia?',
    ],
    'drop' => [
        'remove_from_drop' => 'Rimuovi da drop',
        'add_to_drop' => 'Aggiungi a drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Sei sicuro di voler rimuovere :itemremoved dalla drop?',
    ],
    'utilities' => [
        'utilities' => 'Utility',
        'upload_file' => 'Carica file',

    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/login.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Per favore, accedi al tuo account',
    'email' => 'Indirizzo email',
    'password' => 'Password',
    'remember_me' => 'Ricordami',
    'forgot_your_password' => 'Hai dimenticato la password?',
    'login' => 'Accesso',
    'register' => 'Registrati',
    'please_register_now' => 'Per favore, registrati ora',
    'first_name' => 'Nome',
    'last_name' => 'Cognome',
    'confirm_password' => 'Conferma password',
    'reset_password' => 'Reimposta la password',
    'current_password' => 'Password attuale',
    'new_password' => 'Nuova password',
    'have_an_account' => 'Hai già un account?',
    'dont_have_an_account' => 'Non hai ancora un account?',
    'logout' => 'Esci',
    'i_agree_to' => 'Accetto',
    'terms_of_service' => 'i termini di servizio',
    'and' => 'e',
    'privacy_policy' => 'della privacy',
    'welcome_to_the_first_artist_business_builder' => 'Benvenuto nell\'hub di Natan Frangette, il primo e unico Generatore di Business per Artisti',
    'welcome_to_the_natan_site' => 'Benvenuto nell\'hub di Natan Frangette',
    'join_us' => 'Unisciti a team che creerà la differenza!',
    'express_your_creativity' => 'Esprimi la tua creatività con i tuoi EcoNFT',
    'change_the_world_with_every_sale' => 'Cambia il Mondo con Ogni Vendita',
    'innovative_partnerships' => 'Partnership innovative',
    'bring_your_artistic_biography_to_life' => 'Porta in vita la tua biografia artistica',
    'impact_community' => 'Comunità di impatto',
    'register_now' => 'Registrati oggi e diventa parte di una parte di una rivoluzione artistica con un impatto positivo sulla società e sull\'ambiente!',
    'change_language' => 'Cambia lingua',
    'for_your_security_please_confirm_your_password_to_continue' => 'Per la tua sicurezza, conferma la tua password per continuare.',
    'two_factor' => [
        'title' => 'Autenticazione a Due Fattori',
        'description' => 'Aggiungi una sicurezza aggiuntiva al tuo account utilizzando l’autenticazione a due fattori.',
        'finish_enabled' => 'Completa l’attivazione dell’autenticazione a due fattori.',
        'enabled' => 'L’autenticazione a due fattori è stata attivata per il tuo account!',
        'not_enabled' => 'Non hai attivato l’autenticazione a due fattori.',
        'prompt' => 'Quando l’autenticazione a due fattori è attiva, ti verrà chiesto un token sicuro e casuale durante l’autenticazione. Puoi recuperare questo token dalla tua applicazione Google Authenticator sul telefono.',
        'QRCode' => [
            'title' => 'Scansiona il codice QR sottostante con l’applicazione autenticatore del tuo telefono.',
            'alt' => 'Codice QR',
            'finish_enabled' => 'Per completare l’attivazione dell’autenticazione a due fattori, scansiona il seguente codice QR usando l’applicazione autenticatore del tuo telefono o inserisci la chiave di configurazione e fornisci il codice OTP generato.',
            'enabled' => 'L’autenticazione a due fattori è ora attivata. Scansiona il seguente codice QR usando l’applicazione autenticatore del tuo telefono o inserisci la chiave di configurazione.',
            'setup_key' => 'Chiave di Configurazione',
            'code' => 'Codice',
            'showing_recovery_codes' => 'Conserva questi codici di recupero in un gestore di password sicuro. Possono essere usati per recuperare l’accesso al tuo account se perdi il tuo dispositivo di autenticazione a due fattori.',
            'regenerate_recory_codes' => 'Rigenera i Codici di Recupero',
            'show_recory_codes' => 'Mostra Codici di Recupero',
        ],
    ],
    'browser_session' => [
        'title' => 'Sessione del Browser',
        'description' => 'Gestisci e disconnetti le sessioni attive su altri browser e dispositivi.',
        'prompt' => 'Se necessario, puoi disconnettere tutte le altre sessioni del browser su tutti i tuoi dispositivi. Alcune delle tue sessioni recenti sono elencate di seguito; tuttavia, questa lista potrebbe non essere esaustiva. Se ritieni che il tuo account sia stato compromesso, dovresti anche aggiornare la tua password.',
        'this_device' => 'Questo Dispositivo',
        'last_active' => 'Ultima Attività',
        'log_out_other_browser_sessions' => 'Disconnetti le altre sessioni del browser',
        'please_enter_your_password_to_confirm' => 'Inserisci la tua password per confermare che desideri disconnetterti dalle altre sessioni del browser su tutti i tuoi dispositivi.',
    ],
    'delete_account' => [
        'title' => 'Elimina Account',
        'description' => 'Elimina in modo permanente il tuo account.',
        'prompt' => 'Sei sicuro di voler eliminare il tuo account? Una volta eliminato il tuo account, tutti i suoi dati e risorse saranno eliminati in modo permanente. Inserisci la tua password per confermare che desideri eliminare permanentemente il tuo account.',
        'once_your_account_is_deleted' => 'Una volta eliminato il tuo account, tutti i suoi dati e risorse saranno eliminati in modo permanente. Prima di eliminare il tuo account, scarica qualsiasi dato o informazione che desideri conservare.',
        'delete_account' => 'Elimina Account',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/it/notification.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati delle notifiche
|--------------------------------------------------------------------------
|
 */

return [
    'proposal_declined_subject' => 'La tua proposta è stata rifiutata',
    'proposal_declined_line' => 'La tua proposta è stata rifiutata.',
    'proposal_declined_reason' => 'Motivo:',
    'proposal_declined_id' => 'ID della proposta:',
    'view_details' => 'Visualizza dettagli',
    'thank_you' => 'Grazie per aver utilizzato la nostra piattaforma.',
    'proposal_declined' => 'Proposta rifiutata',
    'proposal_declined_message' => 'La tua proposta è stata rifiutata.',
    'reply' => 'Risposta',
    'wallet_changes_approved' => 'Le modifiche al portafoglio sono state approvate',
    'no_pending_notifications' => 'Nessuna notifica in sospeso disponibile.',
    'hide_processed_notifications' => 'Hide Processed Notifications.',
    'show_processed_notifications' => 'Show Processed Notifications.',
    'confirm_delete' => 'Sei sicuro di voler eliminare questa notifica?',
    'proposer' => 'Proponente',
    'receiver' => 'Destinatario',
    'proposed_creation_new_wallet' => 'Hai proposto la creazione di un nuovo portafoglio',
    'proposed_change_to_a_wallet' => 'Hai proposto la modifica a un portafoglio',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/profile.php ####

<?php

/*
|
|    Traduzione Italiana per i dati del profilo dell'user
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'biography' => 'Biografia',
    'account' => 'Account',
    'first_name' => 'Nome',
    'last_name' => 'Cognome',
    'email' => 'Email',
    'wallet' => 'Portafoglio',
    'your_email_address_is_unverified' => 'Il tuo indirizzo email non è verificato',
    'click_here_to_re-send_the_verification_email' => 'Clicca qui per inviare nuovamente l\'email di verifica',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Un nuovo link di verifica è stato inviato al tuo indirizzo email',
    'language' => 'Lingua',
    'creator' => 'Creatore',
    'email_verified_at' => 'Email verificata il',
    'password' => 'Password',
    'remember_token' => 'Ricorda token',
    'current_team_id' => 'ID del team corrente',
    'profile_photo_path' => 'Percorso della foto del profilo',
    'consent' => 'Consenso',
    'bio_title' => 'Titolo della biografia',
    'bio_story' => 'Storia della biografia',
    'title' => 'Titolo',
    'mr_miss_dott' => 'Mr. / Miss / Dott.',
    'job_role' => 'Ruolo lavorativo',
    'user_name' => 'Nome utente',
    'user_type' => 'Tipo di utente',
    'street' => 'Via',
    'city' => 'Città',
    'region' => 'Regione',
    'state' => 'Stato',
    'zip' => 'CAP',
    'home_phone' => 'Telefono di casa',
    'cell_phone' => 'Cellulare',
    'work_phone' => 'Telefono del lavoro',
    'site_url' => 'Sito web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twich',
    'Other' => 'Altro',
    'birth_date' => 'Data di nascita',
    'fiscal_code' => 'Codice fiscale',
    'tax_id_number' => 'Numero di identificazione fiscale',
    'doc_typo' => 'Tipo di documento',
    'doc_num' => 'Numero di documento',
    'doc_issue_date' => 'Data di rilascio del documento',
    'doc_expired_date' => 'Data di scadenza del documento',
    'doc_issue_from' => 'Documento rilasciato da',
    'doc_photo_path_f' => 'Percorso della foto del documento frontale',
    'doc_photo_path_r' => 'Percorso della foto del documento posteriore',
    'org_data_sheet' => 'Scheda dati dell\'organizzazione, azienda, ente...',
    'org_name' => 'Nome dell\'organizzazione, azienda, ente',
    'org_email' => 'Email dell\'organizzazione, azienda, ente',
    'please_update_your_company_information' => 'Aggiorna le informazioni della tua organizzazione',
    'org_street' => 'Via dell\'organizzazione, azienda, ente',
    'org_city' => 'Città dell\'organizzazione, azienda, ente',
    'org_region' => 'Regione dell\'organizzazione, azienda, ente',
    'org_state' => 'Stato dell\'organizzazione, azienda, ente',
    'org_zip' => 'CAP dell\'organizzazione, azienda, ente',
    'org_site_url' => 'Sito dell\'organizzazione, azienda, ente',
    'insert_a_valid_url' => 'Inserisci una URL valida',
    'enter_annotation' => 'Inserisci annotazione',
    'annotation' => 'Annotazione',
    'org_phone_1' => 'Telefono 1',
    'org_phone_2' => 'Telefono 2',
    'org_phone_3' => 'Telefono 3',
    'rea' => 'REA',
    'org_fiscal_code' => 'Codice fiscale dell\'organizzazione, azienda, ente',
    'org_vat_number' => 'Numero di partita IVA dell\'organizzazione, azienda, ente',
    'select_a_photo' => 'Seleziona una foto',
    'upload_a_photo' => 'Carica una foto',
    'remove_photo' => 'Rimuovi foto',
    'select_a_language' => 'Seleziona una lingua',
    'photo' => 'Foto',
    'profile_information' => 'Informazioni sul profilo',
    'update_your_profile_data' => 'Aggiorna i tuoi dati di profilo',
    'document_data' => 'Dati del documento',
    'please_enter_your_ID_details' => 'Inserisci i tuoi dati d\'identità',
    'document_type' => 'Tipo di documento',
    'drive_licenze' => 'Patente di guida',
    'passport' => 'Passaporto',
    'identity_card' => 'Carta d\'identità',
    'front_photograph_of_the_document' => 'Foto frontale del documento',
    'back_photograph_of_the_document' => 'Foto posteriore del documento',
    'social_media' => 'Social media',
    'please_enter_your_social_media_details' => 'Inserisci i tuoi dati sui social media',
    'update_password' => 'Aggiorna password',
    'ensure_your_account' => 'Assicurati che il tuo account utilizzi una password lunga e casuale per rimanere sicuro',
    'enter_your_new_password' => 'Inserisci la tua nuova password',
    'confirm_your_new_password' => 'Conferma la tua nuova password',
    'two_factor_authentication' => 'Autenticazione a due fattori',
    'two factor authentication_add_additional_security' => 'Aggiungi sicurezza aggiuntiva al tuo account utilizzando autenticazione a due fattori',
    'You have not enabled two factor authentication.' => 'Non hai abilitato autenticazione a due fattori.',
    'text_for_two_factor_authentication' => 'Quando autenticazione a due fattori è abilitata, ti verrà richiesto un token casuale e sicuro durante autenticazione. Puoi recuperare questo token per applicazione Google Authenticator del tuo telefono.',
    'browser_sessions' => 'Sessioni del browser',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gestisci ed esci dalle tue sessioni attive su altri browser e dispositivi.',
    'text_for_sessione' => 'Se necessario, puoi disconnetterti da tutte le altre sessioni del browser su tutti i tuoi dispositivi. Alcune delle tue sessioni recenti sono elencate di seguito; tuttavia, questo elenco potrebbe non essere esaustivo. Se ritieni che il tuo account sia stato compromesso, dovresti anche aggiornare la tua password.',
    'log out other browser sessions' => 'Disconnetti altre sessioni del browser',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati della sidebar e della navbar
|--------------------------------------------------------------------------
|
 */

 return [

    'title' => [
        'collection_handling' => 'Gestisci Collezioni',
        'collections' => 'Collezioni',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Autorizzazioni',
    ],

    'open_collection' => 'Apri Collezione',
    'new_collection' => 'Nuova Collezione',
    'permissions_roles' => 'Ruoli e Permessi',
    'assign_roles' => 'Assegna Ruoli',
    'assign_permissions' => 'Assegna Permessi',
    'manage_roles' => 'Gestisci Ruoli',

];


#### Inizio File: /home/fabio/EGI/resources/lang/it/traits.php ####

<?php

/*
|
|    Traduzione Italiana per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Sei sicuro di voler abbinare questo tratto?',
    'yes_match_it' => 'Sì, abbinalo',
    'the_trait_was_matched' => 'Il tratto è stato abbinato',
    'trait_added' => 'Tratto aggiunto',
    'category_added' => 'Categoria aggiunta',
    'key_added' => 'Chiave aggiunta',
    'value_added' => 'Valore aggiunto',
    'new_key' => 'Nuova chiave',
    'new_category' => 'Nuova categoria',
    'key_deletion_error' => 'Questa chiave è collegata ad alcuni tratti e non può essere rimossa. Se desideri eliminarla, devi prima eliminare i tratti associati.',
    'create_a_new_trait_for_this_key' => 'Crea un nuovo tratto per questa chiave',
    'click_for_selected' => 'Clicca per selezionare',
    'trait_icon' => 'Icona tratti',
    'EGI_with_traits' => 'EGI con tratti',
    'traits_library' => 'Libreria dei tratti',
    'collection' => 'Collezione',
    'manage_traits' => 'Gestisci tratti',
    'manage_key' => 'Gestisci le chiavi',
    'manage_category' => 'Gestisci le categorie',
    'delete_traits' => 'Elimina tratti',
    'applyTraits' => 'Torna ad Applicare i tratti',
    'open_manage' => 'Apri gestione',
    'close_manage' => 'Chiudi gestione',
    'apply_traits' => 'Applica tratti',
    'create_new_key' => 'Crea una nuova chiave',
    'key_deletion' => 'Eliminazione chiave',
    'key_deletion_confirm' => 'Sei sicuro di voler eliminare questa chiave: :key ?',
    'key_not_possible_delete' => 'Non è possibile eliminare questa chiave',
    'key_deleted' => 'Chiave eliminata',
    'key_search' => 'Cerca chiave',
    'make_a_new_key' => 'Crea una nuova chiave',
    'key_created' => 'Chiave creata',
    'key_updated' => 'Chiave aggiornata',
    'key_not_possible_update' => 'Non è possibile aggiornare questa chiave',
    'key_not_found' => 'Chiave non trovata',
    'key_not_possible_create' => 'Non è possibile creare questa chiave',
    'key_not_possible_find' => 'Non è possibile trovare questa chiave',
    'bind' => 'Associa',
    'unbind' => 'Dissocia',
    'binded' => 'Chiavi associate',
    'unbinded' => 'Chiavi da associare',
    'make' => 'Crea',
    'create_a_new_category' => 'Crea una nuova categoria',
    'category_created' => 'Categoria creata',
    'create_a_new_key' => 'Crea una nuova chiave',
    'select_a_category' => 'Seleziona una categoria',
    'category' => 'Categoria',
    'select_a_key' => 'Seleziona una chiave',
    'key' => 'Chiave',
    'value_for_key' => 'Valore per la chiave',
    'select_all' => 'Seleziona tutti',
    'select_one_or_more_EGI' => 'Seleziona uno o più EGI',
    'unselect_all' => 'Deseleziona tutti',
    'many_to_many' => 'Molti a molti',
    'one_to_many' => 'Uno a molti',
    'zoom_in' => 'Ingrandisci',
    'zoom_out' => 'Riduci',
    'traits_on :numberItems items_in_this_collection' => 'Tratti sui :numberItems elementi di questa collezione',
    'are_you_sure_remove :traitKey' => 'Sei sicuro di voler rimuovere <span class="font-bold"> :traitKey </span> ?',
    'all_the_traits_you_created' => 'Tutti i tratti che hai creato',
    'traits_categories' => 'Categorie dei tratti',
    'traits' => 'Tratti',
    'update_category' => 'Aggiorna categoria',
    'update_key' => 'Aggiorna chiave',
    'explanation_apply_traits' => 'Assegna le caratteristiche che vuoi applicare ai singoli elementi della tua collection',
    'explanation_manage_category' => 'Gestisci le categorie dei tratti. Da questa sezione puoi creare nuove categorie, aggiornare o eliminare quelle già esistenti. Puoi fare lo stesso con le chiavi e anche associarle alle categorie. Puoi visualizzare tutte le chiavi che sono già state associate e, se necessario, disassociarle cliccando con il tasto destro del mouse sulla scheda corrispondente. Inoltre, puoi visualizzare tutte le chiavi che devono ancora essere associate: puoi selezionarne una o più (nota bene che quando selezioni la chiave questa si deve colorare di rosso, altrimenti significa che non è stata selezionata correttamente) e, cliccando con il tasto destro del mouse, ti verrà mostrato l\elenco delle categorie disponibili. Scegliendo una categoria, creerai l\associazione.',
    'trait_value' => 'Valore caratteristica',
    'view_your_all_traits' => 'Visualizza tutti i tuoi tratti',
    'view_your_traits_this_collection' => 'Visualizza i tuoi tratti solo di questa collezione',
    'back_to_apply_traits' => 'Torna ad applicare i tratti',
    'back_to_gallery' => 'Torna alla collezione',
    'this_traits_non_cannot_be_removed' => 'Questi tratti non possono essere rimossi',
    'associated_traits' => 'Tratti associati',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/utilities.php ####

<?php

return [

    'forms' => [
        'utility_name ' => 'Nome dell\'utility',
        'description' => 'Descrizione',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in portoghese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|

 */
return [
    'invite_collection_member' => 'Convidar um membro para a coleção',
    'came_back_to_collection' => 'Voltar para a coleção',
    'confirm_delete_title' => 'Tem certeza?',
    'confirm_delete_text' => 'Esta ação excluirá permanentemente a imagem :type!',
    'confirm_delete_button' => 'Sim, exclua!',
    'cancel_delete_button' => 'Cancelar',
    'deleted_title' => 'Excluído!',
    'deleted_text' => 'A imagem do banner foi excluída com sucesso.',
    'delete_card' => 'Excluir cartão',
    'delete_banner' => 'Excluir banner',
    'delete_avatar' => 'Excluir avatar',
    'delete_EGI' => 'Excluir EGI',
    'save_card' => 'Salvar cartão',
    'save_banner' => 'Salvar banner',
    'save_avatar' => 'Salvar avatar',
    'save_EGI' => 'Salvar EGI',
    'create_validation_error' => 'Erro de validação',
    'creation_failed' => 'Criação falhou',
    'collection_delete' => 'Excluir coleção',
    'avatar_image' => 'Imagem do avatar',
    'card_image' => 'Imagem do cartão',
    'EGI_image' => 'Imagem EGI',
    'banner_image' => 'Imagem do banner',
    'edit_collection_data' => 'Editar dados da coleção',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nova coleção',
    'open_collection' => 'Abrir coleção',
    'collection_members' => 'Membros da coleção',
    'team_members_description' => 'Aqui você pode ver todos os membros da equipe que têm acesso a esta coleção',
    'manage_head_images' => 'Gerenciar imagens de cabeçalho',
    'manage_collection' => 'Gerenciar coleção',
    'collection' => 'Coleção',
    'collections' => 'Coleções',
    'collection_data' => 'Dados de cabeçalho da coleção',
    'collection_name' => 'Nome da coleção',
    'collection_id' => 'ID da coleção',
    'collection_description_placeholder' => 'Insira uma descrição da coleção',
    'collection_description_suggest' => 'Uma descrição clara e atraente ajuda os usuários a entender melhor sua coleção e aumenta seu apelo. Conte o que a torna única!',
    'collection_description' => 'Insira todos os dados relacionados à coleção, seja muito preciso',
    'collection_image' => 'Imagem da coleção',
    'collection_image_alt' => 'Texto alternativo da imagem da coleção',
    'add_epp' => 'Adicionar um EPP',
    'add_epp_placeholder' => 'Insira um EPP',
    'need_to_associate_epp' => 'Até associar sua galeria a um EPP, você não poderá publicá-la',
    'EGI_floor_price' => 'Preço mínimo EGI',
    'set_base_EcoNFT_price' => 'Defina um preço base que deseja cobrar por cada EGI desta coleção',
    'collection_site_URL' => 'URL do site da coleção',
    'collection_site_URL_suggest' => 'Sugestão: insira o URL do site da coleção',
    'position_for_mor_than_one_collection' => 'Se você tem mais de uma coleção, pode decidir onde colocar esta',
    'publish_collection' => 'Publicar coleção',
    'image_for_EcoNFT_collection' => 'Imagem para a coleção EGI',
    'image_description' => 'Esta é a imagem que representa toda a coleção',
    'image_alt' => 'Imagem que representa toda a coleção',
    'image_title' => 'Imagem que representa toda a coleção',
    'select_new_EcoNFT_photo' => 'Selecione uma nova foto para o EGI',
    'switch_collection' => 'Trocar coleção',
    'goto_collection' => 'Ir para a coleção',
    'type' => 'Tipo',
    'select_content_type' => 'Selecione o tipo de conteúdo',
    'type_image' => 'Imagem',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Áudio',
    'type_video' => 'Vídeo',
    'EGI_number' => 'Número EGI',
    'position' => 'Posição',
    'updated_successfully' => 'Coleção salva com sucesso',
    'save_failed' => 'Falha ao salvar',
    'collection_not_found' => 'Coleção não encontrada',
    'tips_to_optimize_your_collection' => 'Dicas para otimizar sua coleção',
    'tips_for_your_collection_images' => 'Dicas para as imagens da sua coleção',
    'image_section_title' => 'Imagens da coleção',
    'image_section_description' => 'Escolha cuidadosamente as imagens que representam sua coleção',
    'data_section_title' => 'Dados da coleção',
    'data_section_description' => 'Escolha cuidadosamente os dados que representam sua coleção',
    'this_is_default_collection_of_the_team' => 'Esta é a coleção padrão da equipe',
    'wallet' => [
        'write_royalty_mint' => 'Insira a porcentagem de royalties para o mint',
        'write_royalty_rebind' => 'Insira a porcentagem de royalties para o rebind',
        'user_role' => 'Função',
        'role_unknown' => 'Sem função',
        'address' => 'Endereço da wallet',
        'balance' => 'Saldo da wallet',
        'name' => 'Nome da wallet',
        'status' => 'Status da wallet',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Royalties do mint',
        'royalty_rebind' => 'Royalties do rebind',
        'manage_wallet' => 'Gerenciar wallet',
        'remove_photo' => 'Remover foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancelamento da wallet',
        'select_a_wallet_connect' => 'Selecione uma wallet',
        'button_wallet_connect' => 'Conectar uma wallet',
        'button_wallet_disconnect' => 'Desconectar',
        'create_the_wallet' => 'Criar uma nova wallet',
        'username' => 'Nome de usuário',
        'create' => 'Criar uma wallet',
        'delete_wallet' => 'Tem certeza de que deseja excluir esta wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in portoghese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Acesso não autorizado',
    'SCAN_ERROR' => 'Erro de digitalização',
    'VIRUS_FOUND' => 'Vírus encontrado',
    'INVALID_FILE_EXTENSION' => 'Extensão de arquivo inválida',
    'MAX_FILE_SIZE' => 'O arquivo não pode exceder :max byte.',
    'INVALID_FILE_PDF' => 'Arquivo PDF inválido',
    'MIME_TYPE_NOT_ALLOWED' => 'Tipo de arquivo não permitido.',
    'INVALID_IMAGE_STRUCTURE' => 'Estrutura de imagem inválida',
    'INVALID_FILE_NAME' => 'Nome de arquivo inválido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Erro ao obter URL pré-assinado',
    'ERROR_DURING_FILE_UPLOAD' => 'Erro durante o envio do arquivo',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossível salvar arquivo.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Impossível criar pasta',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Impossível alterar permissões da pasta',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossível salvar o arquivo',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problema interno, assistência já foi alertada',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Erro durante a criptografia do nome do arquivo',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, assistência já foi alertada',
    'JSON_ERROR_IN_DISPATCHER' => 'Erro JSON no dispatcher',
    'GENERIC_SERVER_ERROR' => 'Erro genérico do servidor, a equipe técnica foi informada',
    'FILE_NOT_FOUND' => 'Arquivo não encontrado',
    'UNEXPECTED_ERROR' => 'Erro inesperado',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Erro ao excluir o arquivo temporário local',

    'scan_error' => 'Erro de digitalização',
    'virus_found' => 'Vírus encontrado',
    'required' => 'O campo é obrigatório.',
    'file' => 'Ocorreu um erro ao enviar o arquivo.',
    'file_extension_not_valid' => 'Extensão de arquivo inválida',
    'mimes' => 'O arquivo deve ser do tipo: :values.',
    'max_file_size' => 'O arquivo não pode exceder :max byte.',
    'invalid_pdf_file' => 'Arquivo PDF inválido',
    'mime_type_not_allowed' => 'Tipo de arquivo não permitido.',
    'invalid_image_structure' => 'Estrutura de imagem inválida',
    'invalid_file_name' => 'Nome de arquivo inválido',
    'error_getting_presigned_URL' => 'Erro ao obter URL pré-assinado',
    'error_getting_presigned_URL_for_user' => 'Erro ao carregar arquivo',
    'error_during_file_upload' => 'Erro durante o envio do arquivo',
    'error_deleting_file' => 'Erro ao excluir arquivo',
    'upload_finished' => 'Upload finalizado',
    'some_errors' => 'alguns erros',
    'upload_failed' => 'upload falhou',
    'error_creating_folder' => 'Erro ao criar pasta',
    'error_changing_folder_permissions' => 'Erro ao alterar permissões da pasta',
    'local_save_failed_file_saved_to_external_disk_only' => 'Salvamento local falhou, arquivo salvo apenas no disco externo',
    'external_save_failed_file_saved_to_local_disk_only' => 'Salvamento externo falhou, arquivo salvo apenas no disco local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'A verificação de arquivos pode levar muito tempo para cada arquivo',
    'all_files_are_saved' => 'Todos os arquivos estão salvos',
    'loading_finished_you_can_proceed_with_saving' => 'Carregamento concluído, você pode prosseguir com a gravação',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Carregamento concluído, você pode prosseguir com a gravação e a verificação',
    'im_uploading_the_file' => 'Estou enviando o arquivo',


    'exception' => [
        'NotAllowedTermException' => 'Termo não permitido',
        'MissingCategory' => 'É necessário inserir uma categoria.',
        'DatabaseException' => 'Ocorreu um erro de banco de dados',
        'ValidationException' => 'Ocorreu um erro de validação',
        'HttpException' => 'Ocorreu um erro HTTP',
        'ModelNotFoundException' => 'Modelo não encontrado',
        'QueryException' => 'Erro de consulta',
        'MintingException' => 'Erro durante o minting',
        'FileNotFoundException' => 'Arquivo não encontrado',
        'InvalidArgumentException' => 'Argumento inválido',
        'UnexpectedValueException' => 'Valor inesperado',
        'ItemNotFoundException' => 'Item não encontrado',
        'MultipleItemsFoundException' => 'Múltiplos itens encontrados',
        'LogicException' => 'Exceção lógica',
        'EntryNotFoundException' => 'Entrada não encontrada',
        'RuntimeException' => 'Erro de tempo de execução',
        'BadMethodCallException' => 'Chamada de método inválida',
        'LockTimeoutException' => 'Tempo limite de bloqueio',
        'InvalidIntervalException' => 'Intervalo inválido',
        'InvalidPeriodParameterException' => 'Parâmetro de período inválido',
        'EndLessPeriodException' => 'Período sem fim',
        'UnreachableException' => 'Exceção inalcançável',
        'InvalidTimeZoneException' => 'Fuso horário inválido',
        'ImmutableException' => 'Exceção imutável',
        'InvalidFormatException' => 'Formato inválido',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Caro usuário,</p>
            </br>
            <p>O texto que você inseriu viola nossas normas e diretrizes da comunidade. Por favor, modifique o conteúdo e tente novamente.</p>
            </br>
            <p>Se você não entender o motivo pelo qual este termo é proibido, consulte as cláusulas do acordo que você aceitou no momento do registro.
            <p>Agradecemos sua compreensão e colaboração.</p>
            </br>
            <p>Atenciosamente,
            <br>
            A Equipe Frangette</p>
        </div>
    ",
    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulte a página de regras da comunidade.
        </a>.',
    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker não foi inicializado corretamente',
    'table_not_exist' => 'A tabela não existe',
    'unique' => 'Este valor já está presente na sua biblioteca de traits.',
    'the_category_name_cannot_be_empty' => 'O nome da categoria não pode estar vazio',
    'nathing_to_save' => 'Nada a salvar',
    'an_error_occurred' => 'Opa! Desculpe, ocorreu um erro!',
    'error_number' => 'Número do erro:',
    'reason' => [
        'reason' => 'motivo',
        'wallet_not_valid' => 'Carteira inválida',
        'something_went_wrong' => 'Algo deu errado',
    ],
    'solution' => [
        'solution' => 'solução',
        'create_a_new_wallet_and_try_again' => 'Crie uma nova carteira e tente novamente',
        'we_are_already_working_on_solving_the_problem' => 'Já estamos trabalhando para resolver o problema',
    ],
    'min' => [
        'string' => 'O campo deve ter pelo menos :min caracteres.',
    ],
    'max' => [
        'string' => 'O campo deve ter no máximo :max caracteres.',
    ],
    'id_epp_not_found' => 'Id EPP não encontrado',
    'minting' => [
        'error_generating_token' => 'Erro ao gerar o token',
        'insufficient_wallet_balance' => 'Saldo insuficiente na carteira para comprar este EcoNFT',
        'error_during_save_the_metadataFile' => 'Erro ao salvar os metadados no arquivo',
        'error_during_save_the_metadata_on_database' => 'Erro ao salvar os metadados no banco de dados',
        'error_during_create_metadata_file' => 'Erro ao criar o arquivo de metadados',
        'error_during_save_the_buyer' => 'Erro ao salvar o comprador',
        'buyer_not_exist' => 'O comprador não existe',
        'this_wallet_does_not_belong_to_any_buyer' => 'Esta carteira não pertence a nenhum comprador',
        'seller_not_exist' => 'O vendedor não existe',
        'seller_owner_not_found' => 'O proprietário do vendedor não foi encontrado',
        'seller_wallet_address_not_found' => 'O endereço da carteira do vendedor não foi encontrado',
        'error_during_save_the_seller' => 'Erro ao salvar o vendedor',
        'error_during_save_the_buyer_transaction' => 'Erro ao salvar a transação do comprador',
        'error_during_the_saving_of_the_payment' => 'Erro ao salvar o pagamento',
        'error_during_save_the_natan' => 'Erro ao salvar os dados', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Erro ao salvar a transação',
        'seller_not_found' => 'Vendedor não encontrado',
        'error_during_the_minting' => 'Erro durante a criação',
        'error_uploading_file' => 'Erro ao enviar o arquivo',
        'insufficient_balance' => 'Saldo insuficiente',
        'eco_nft_not_found' => 'EcoNFT não encontrado',
        'no_traits_found' => 'Nenhum traço encontrado',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in portoghese
|--------------------------------------------------------------------------
|
 */

return [
    'came_to_back' => 'Voltar',
    "file_deleted_successfully" => "Arquivo excluído com sucesso",
    'extension_not_allowed' => 'Extensão não permitida!',
    'title_file_type_not_allowed' => 'Tipo de arquivo não permitido!',
    'title_file_size_exceeds' => 'Tamanho de arquivo excessivo!',
    'title_invalid_file_name' => 'Nome de arquivo inválido!',
    'file_extension_not_allowed' => 'Tipo de arquivo não permitido: :extension. Tipos de arquivo permitidos têm as seguintes extensões: :extensions.',
    'file_type_not_allowed' => 'Tipo de arquivo não permitido: :type. Os tipos MIME permitidos são: :mimetypes.',
    'file_size_exceeds' => 'O tamanho do arquivo excede o tamanho máximo permitido de :size MB.',
    'invalid_file_name' => 'Nome de arquivo inválido: :filename. O nome do arquivo contém caracteres inválidos.',
    'allowed_extensions' => 'As extensões permitidas são: :extensions.',
    'allowed_mime_types' => 'Os tipos MIME permitidos são: :mimetypes.',
    "file_infected" => "Arquivo infectado",
    "scan_error" => "Erro de varredura",
    "starting_scan" => "Iniciando varredura",
    "error_uploading_file" => "Erro ao enviar o arquivo",
    "error_getting_presigned_url" => "Erro ao obter a URL pré-assinada",
    "error_deleting_file" => "Erro ao excluir o arquivo",
    "upload_finished" => "Carregamento concluído",
    "some_errors" => "alguns erros",
    "upload_failed" => "carregamento falhou",
    "file_scanning_may_take_a_long_time_for_each_file" => "A verificação de arquivos pode levar muito tempo para cada arquivo",
    "all_files_are_saved" => "Todos os arquivos estão salvos",
    "loading_finished_you_can_proceed_with_saving" => "Carregamento concluído, você pode prosseguir com a gravação",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Carregamento concluído, você pode prosseguir com a gravação e a varredura",
    "im_uploading_the_file" => "Estou carregando o arquivo",
    "virus_scan_disabled" => "Varredura de vírus desativada",
    "virus_scan_enabled" => "Varredura de vírus ativada",
    "file_is_clean" => "O arquivo está limpo",
    "the_uploaded_file_was_detected_as_infected" => "O arquivo carregado foi detectado como infectado",
    "antivirus_scan_in_progress" => "Verificação de antivírus em andamento",
    'scanning_stopped' => 'Varredura interrompida',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy feliz',
    "emogy_angry" => 'Emogy com raiva',
    "im_checking_the_validity_of_the_file" => 'Estou verificando a validade do arquivo',
    "im_recording_the_information_in_the_database" => 'Estou registrando as informações no banco de dados',
    "im_saving_the_image" => 'Estou salvando a imagem',
    "file_saved_successfully" => 'Arquivo: :fileCaricato salvo com sucesso',
    "file_uploaded_successfully" => 'Arquivo: :fileCaricato carregado com sucesso',
    "all_files_were_scanned_no_infected_files" => 'Todos os arquivos foram verificados, nenhum arquivo infectado',
    "one_or_more_files_were_found_infected" => 'Um ou mais arquivos foram encontrados infectados, eles foram excluídos do upload',
    "file_scanned_successfully" => 'Arquivo: :fileCaricato verificado com sucesso',
    "no_file_uploaded" => "Nenhum arquivo carregado",
    "error_during_file_upload" => "Erro durante o carregamento do arquivo",
    'starting_uplad' => 'Iniciando upload',
    'uploaded' => 'Carregado',
    'successfully' => 'com sucesso',
    'starting_upload' => 'Iniciando upload',
    "starting_saving" => "Iniciando salvamento",
    'waiting' => 'Aguarde...',
    'upload_status' => 'Status do upload',
    'return_to_collection' => 'Voltar para a coleção',
    'EGI_image' => 'Imagem EGI',
    'error_in_the_files' => 'Erro nos arquivos',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Visualização EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Arraste e solte seus arquivos aqui ou clique para selecionar',
    'upload_your_EGI_Files' => 'Carregue seus arquivos EGI',
    'wait_for_the_files_to_load' => 'Aguarde o carregamento dos arquivos',
    'access_the_control_panel' => 'Acesse o painel de controle',
    'of' => 'de',
    'errors_in_the_files' => 'Erros nos arquivos',
    'loading' => 'Carregando...',
    'utilities_image_file' => 'Utilitários, imagem e upload de arquivos',
    'file_upload' => 'Upload de arquivos',
    'select_files' => 'Selecione os arquivos',
    'max_file_size_reminder' => 'Lembre-se: o tamanho máximo para cada arquivo é de 100MB. Para arquivos acima de 30MB, recomendamos o upload individual para evitar problemas de rede.',
    'save_your_files' => 'Salve seus arquivos',
    'file_format_not_supported_for_viewing' => 'Formato de arquivo não suportado para visualização',
    'cancel_upload' => 'Cancelar upload',
    'upload_your_files' => 'Carregar arquivos',
    'open' => 'Abrir',
    'user_management' => 'Gerenciamento de usuários',
    'sign_in' => 'Entrar',
    'sign_out' => 'Sair',
    "who_is_natan_frangette" => "Quem é Natan Frangette?",
    'home' => 'Início',
    'remove_photo' => 'Remover foto',
    'username' => 'Nome de usuário',
    'value' => 'Valor',
    'title' => 'Título',
    'dimension' => 'Dimensão',
    'size' => 'Tamanho: ',
    'bind' => 'Vincular',
    'description' => 'Descrição',
    'name' => 'Nome',
    'date_start' => 'Data de início',
    'date_end' => 'Data de término',
    'unknown' => 'Desconhecido',
    'active' => 'Ativo',
    'inactive' => 'Inativo',
    'existing' => 'Existente',
    'welcome' => 'Bem-vindo ao hub Natan',
    'done' => 'Feito',
    'create' => 'Criar',
    'saving' => 'eu estou salvando...',
    'save' => 'Salvar',
    'saved' => 'Salvo!',
    'remember_to_save' => 'Lembre-se de salvar',
    'cancel' => 'Cancelar',
    'update' => 'Atualizar',
    'cancelled' => 'Cancelado',
    'deleted' => 'Excluído',
    'delete' => 'Excluir',
    'edit' => 'Editar',
    'add' => 'Adicionar',
    'confirm' => 'Confirmar',
    'disable' => 'Desativar',
    'close' => 'Fechar',
    'delete_confirm' => 'Tem certeza de que deseja excluir?',
    'whoops_something_went_wrong' => 'Opa! Algo deu errado. Por favor, tente novamente.',
    'action_confirm' => 'Operação concluída com sucesso!',
    'search' => 'Pesquisar',
    'traits' => 'Traits',
    'utility' => 'Utilidade',
    'zoom' => 'Zoom',
    'product_image' => 'Imagem do produto',
    'micro_logo' => 'Micro logo, molécula de Equilibrium',
    'logo' => 'Logo, molécula de Equilibrium',
    'manage_utility' => 'Gerenciar utilitários',
    'item_zoom' => 'Tamanho original',
    'esternal_transfert' => 'Transferência externa',
    'internal_transfert' => 'Transferência interna',
    'back_to_item' => 'Voltar ao item',
    'position' => 'Posição',
    'head_photo_page' => 'Foto de cabeçalho da página',
    'handle_collection_data' => 'Editar dados da coleção',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este item não pode ser excluído porque existem arquivos associados a ele',
    'edit_item' => [
        'title' => 'Editar item',
        'description' => 'Edite as informações do item',
        'back_to_collection' => 'Voltar para a coleção',
        'this_item_cannot_be_transfered' => 'Este item não pode ser transferido',
        'are_you_sure_you_want_to_transfer_this_item' => 'Tem certeza de que deseja transferir este item de <span class="font-bold"> :collectionNameFrom </span> para <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'A coleção pessoal para este usuário não existe, não é possível fazer a transferência',
        'not_exist_user_width_this_email' => 'O usuário com o e-mail :emailExternalTransfer não existe.',
        'transfer' => 'Transferir',
        'internal_transfer' => 'Transferência interna',
        'external_trasfer' => 'Transferência externa',
        'max_25_char' => 'Máximo de 25 caracteres',
        'max_1000_char' => 'Máximo de 1000 caracteres',
        'write_the_description' => 'Escreva a descrição',
        'date_of_creation' => 'Data de criação',
        'publish' => 'Publicar',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este item não pode ser excluído porque existem arquivos associados a ele',
    ],
    'bio' => [
        'your_biography' => 'A sua biografia',
        'bio_title' => 'Título da biografia',
        'manage_biography' => 'Gerenciar biografia',
        'manage_chapter' => 'Gerenciar capítulos',
        'back_to_biography' => 'Voltar à biografia',
        'back_to_profile' => 'Voltar ao perfil',
        'chapter' => 'Capítulo',
        'chapter_start_date' => 'Data de início do capítulo',
        'chapter_end_date' => 'Data de fim do capítulo',
        'chapter_title' => 'Título do capítulo',
        'chapter_biography' => 'Biografia do capítulo',
        'remove_biography' => 'Remover biografia',
        'remove_chapter' => 'Remover capítulo',
        'removed_chapter' => 'Capítulo removido',
        'add_chapter' => 'Adicionar capítulo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Tem certeza de que deseja remover este capítulo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Tem certeza de que deseja remover esta biografia?',

    ],
    'drop' => [
        'remove_from_drop' => 'Remover da drop',
        'add_to_drop' => 'Adicionar à drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Tem certeza de que deseja remover :itemremoved do drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: portoghese
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'por favor faça o login na sua conta',
    'email' => 'Endereço de e-mail',
    'password' => 'Senha',
    'remember_me' => 'Lembre de mim',
    'forgot_your_password' => 'Esqueceu sua senha?',
    'login' => 'Entrar',
    'register' => 'Registo',
    'please_register_now' => 'Por favor, registre-se agora',
    'first_name' => 'Primeiro nome',
    'last_name' => 'sobrenome',
    'confirm_password' => 'Confirme a Senha',
    'reset_password' => 'Redefinir Senha',
    'current_password' => 'Senha atual',
    'new_password' => 'Nova senha',
    'have_an_account' => 'Já tem uma conta?',
    'dont_have_an_account' => 'Não tem uma conta?',
    'logout' => 'Sair',
    'i_agree_to' => 'Eu concordo com os',
    'terms_of_service' => 'Termos de Serviço',
    'and' => 'e',
    'privacy_policy' => 'Eu concordo com os Termos de Serviço e a Política de Privacidade',
    'welcome_to_the_first_artist_business_builder' => 'Bem-vindo ao portal de Natan Frangette, o primeiro e único Gerador de Negócios para Artistas',
    'welcome_to_the_natan_site' => 'Bem-vindo ao site de Natan Frangette',
    'join_us' => 'Junte-se a uma equipe que fará a diferença!',
    'express_your_creativity' => 'Expresse sua criatividade com seus EcoNFTs',
    'change_the_world_with_every_sale' => 'Mude o mundo a cada venda',
    'innovative_partnerships' => 'Parcerias inovadoras',
    'bring_your_artistic_biography_to_life' => 'Traga sua biografia artística à vida',
    'impact_community' => 'Comunidade de impacto',
    'register_now' => 'Registre-se hoje e faça parte de uma revolução artística com impacto positivo na sociedade e no meio ambiente!',
    'change_language' => 'Mudar idioma',
    'for_your_security_please_confirm_your_password_to_continue' => 'Para sua segurança, confirme sua senha para continuar.',
    'two_factor' => [
        'title' => 'Autenticação de Dois Fatores',
        'description' => 'Adicione uma segurança extra à sua conta usando a autenticação de dois fatores.',
        'finish_enabled' => 'Conclua a ativação da autenticação de dois fatores.',
        'enabled' => 'A autenticação de dois fatores foi ativada para a sua conta!',
        'not_enabled' => 'Você não ativou a autenticação de dois fatores.',
        'prompt' => 'Quando a autenticação de dois fatores estiver ativada, será solicitado um token seguro e aleatório durante a autenticação. Você pode recuperar este token do aplicativo Google Authenticator em seu telefone.',
        'QRCode' => [
            'title' => 'Escanee o código QR abaixo no aplicativo autenticador do seu telefone.',
            'alt' => 'Código QR',
            'finish_enabled' => 'Para concluir a ativação da autenticação de dois fatores, escanee o código QR a seguir usando o aplicativo autenticador do seu telefone ou insira a chave de configuração e forneça o código OTP gerado.',
            'enabled' => 'A autenticação de dois fatores está agora ativada. Escanee o código QR a seguir usando o aplicativo autenticador do seu telefone ou insira a chave de configuração.',
            'setup_key' => 'Chave de Configuração',
            'code' => 'Código',
            'showing_recovery_codes' => 'Guarde estes códigos de recuperação em um gerenciador de senhas seguro. Eles podem ser usados para recuperar o acesso à sua conta se você perder seu dispositivo de autenticação de dois fatores.',
            'regenerate_recory_codes' => 'Regenerar Códigos de Recuperação',
            'show_recory_codes' => 'Mostrar Códigos de Recuperação',
        ],
    ],
    'browser_session' => [
        'title' => 'Sessão do Navegador',
        'description' => 'Gerencie e desconecte sessões ativas em outros navegadores e dispositivos.',
        'prompt' => 'Se necessário, você pode desconectar todas as outras sessões de navegador em todos os seus dispositivos. Algumas de suas sessões recentes estão listadas abaixo; no entanto, esta lista pode não ser exaustiva. Se você acredita que sua conta foi comprometida, você também deve atualizar sua senha.',
        'this_device' => 'Este Dispositivo',
        'last_active' => 'Última Atividade',
        'log_out_other_browser_sessions' => 'Desconectar outras sessões do navegador',
        'please_enter_your_password_to_confirm' => 'Insira sua senha para confirmar que deseja desconectar as outras sessões do navegador em todos os seus dispositivos.',
    ],
    'delete_account' => [
        'title' => 'Eliminar Conta',
        'description' => 'Exclua sua conta permanentemente.',
        'prompt' => 'Tem certeza de que deseja excluir sua conta? Uma vez excluída, todos os seus dados e recursos serão permanentemente eliminados. Insira sua senha para confirmar que deseja excluir sua conta permanentemente.',
        'once_your_account_is_deleted' => 'Depois que sua conta for excluída, todos os seus dados e recursos serão permanentemente eliminados. Antes de excluir sua conta, faça o download de quaisquer dados ou informações que deseja manter.',
        'delete_account' => 'Eliminar Conta',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/profile.php ####

<?php

/*
|
|    Traduzione in portoghese
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografia',
    'account' => 'Conta',
    'first_name' => 'Primeiro nome',
    'last_name' => 'Sobrenome',
    'email' => 'Email',
    'wallet' => 'Carteira',
    'language' => 'Idioma',
    'your_email_address_is_unverified' => 'Seu endereço de e-mail não foi verificado',
    'click_here_to_re-send_the_verification_email' => 'Clique aqui para reenviar o e-mail de verificação',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Um novo link de verificação foi enviado para seu endereço de e-mail',
    'creator' => 'Criador',
    'email_verified_at' => 'Email verificado em',
    'password' => 'Senha',
    'remember_token' => 'Lembrar token',
    'current_team_id' => 'ID da equipe atual',
    'profile_photo_path' => 'Caminho da foto do perfil',
    'consent' => 'Consentimento',
    'bio_title' => 'Título da biografia',
    'bio_story' => 'História da biografia',
    'title' => 'Título',
    'mr_miss_dott' => 'Sr. Sra. Dott.',
    'job_role' => 'Função de trabalho',
    'user_name' => 'Nome de usuário',
    'user_type' => 'Tipo de usuário',
    'street' => 'Rua',
    'city' => 'Cidade',
    'region' => 'Região',
    'state' => 'Estado',
    'zip' => 'Zip',
    'home_phone' => 'Telefone residencial',
    'cell_phone' => 'Telefone celular',
    'work_phone' => 'Telefone do trabalho',
    'site_url' => 'url do site',
    'social_facebook' => 'Facebook social',
    'social_x' => 'Social x',
    'social_telegram' => 'Telegrama social',
    'social_linkedin' => 'Linkedin social',
    'social_github' => 'Github social',
    'social_instagram' => 'Instagram social',
    'social_snapchat' => 'Snapchat social',
    'social_twich' => 'Twich social',
    'social_discord' => 'Discordar social',
    'Other' => 'Outro',
    'birth_date' => 'Data de nascimento',
    'fiscal_code' => 'Código fiscal',
    'tax_id_number' => 'Número de identificação fiscal',
    'doc_typo' => 'Tipo de documento',
    'doc_num' => 'Número do documento',
    'doc_issue_date' => 'Data de emissão do documento',
    'doc_expired_date' => 'Data de validade do documento',
    'doc_issue_from' => 'Documento emitido por',
    'doc_photo_path_f' => 'Caminho da foto do documento f',
    'doc_photo_path_r' => 'Caminho da foto do documento r',
    'org_data_sheet' => 'Folha de dados da organização',
    'please_update_your_company_information' => 'Atualize as informações da sua empresa',
    'insert_a_valid_url' => 'Insira uma URL válida',
    'enter_annotation' => 'Insira uma anotação',
    'org_name' => 'Nome da organização',
    'org_email' => 'Email da organização',
    'org_street' => 'Rua da organização',
    'org_city' => 'Cidade da organização',
    'org_region' => 'Região da organização',
    'org_state' => 'Estado da organização',
    'org_zip' => 'zip da organização',
    'org_site_url' => 'url do site da organização',
    'annotation' => 'Anotação',
    'org_phone_1' => 'Telefone 1 da organização',
    'org_phone_2' => 'Telefone 2 da organização',
    'org_phone_3' => 'Telefone 3 da organização',
    'rea' => 'Números de Identificação Fiscal (NIF)',
    'org_fiscal_code' => 'Código fiscal da organização',
    'org_vat_number' => 'Número de IVA da organização',
    'select_a_photo' => 'Selecione uma foto',
    'upload_a_photo' => 'Carregar uma foto',
    'remove_photo' => 'Remover foto',
    'select_a_language' => 'Selecione um idioma',
    'photo' => 'foto',
    'profile_information' => 'Informações do perfil',
    'update_your_profile_data' => 'Atualize seus dados de perfil',
    'biography' => 'Biografia',
    'document_data' => 'Dados do documento',
    'please_enter_your_ID_details' => 'Insira os detalhes do seu ID',
    'document_type' => 'Tipo de documento',
    'drive_licenze' => 'Licença de motorista',
    'passport' => 'Passaporte',
    'identity_card' => 'Cartão de identidade',
    'front_photograph_of_the_document' => 'Fotografia frontal do documento',
    'back_photograph_of_the_document' => 'Fotografia traseira do documento',
    'social_media' => 'Mídia social',
    'please_enter_your_social_media_details' => 'Insira os detalhes da sua mídia social',
    'update_password' => 'Atualizar senha',
    'ensure_your_account' => 'Certifique-se de que sua conta use uma senha longa e aleatória para permanecer seguro.',
    'enter_your_new_password' => 'Digite sua nova senha',
    'confirm_your_new_password' => 'Confirme sua nova senha',
    'two_factor_authentication' => 'Autenticação de dois fatores',
    'two factor authentication_add_additional_security' => 'A autenticação de dois fatores adiciona segurança adicional à sua conta usando dois fatores de autenticação',
    'You have not enabled two factor authentication.' => 'Você não habilitou a autenticação de dois fatores.',
    'text_for_two_factor_authentication' => 'Você não habilitou a autenticação de dois fatores. Quando você habilita a autenticação de dois fatores, você será solicitado a inserir um código aleatório gerado por um aplicativo no seu dispositivo móvel, além de seu nome de usuário e senha ao fazer login.',
    'browser_sessions' => 'Sessões do navegador',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gerencie e faça logout de suas sessões ativas em outros navegadores e dispositivos.',
    'text_for_sessione' => 'Se necessário, você pode encerrar todas as outras sessões de seus navegadores em todos os seus dispositivos. Algumas de suas sessões recentes estão listadas abaixo; no entanto, esta lista pode não ser exaustiva. Se você acha que sua conta foi comprometida, você também deve atualizar sua senha.',
    'log out other browser sessions' => 'Encerrar outras sessões do navegador',
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Tradução em português de todos os dados da sidebar e da navbar
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gerenciar Coleções',
        'collections' => 'Coleções',
        'dashboard' => 'Painel',
        'admin' => 'Admin',
        'authorizations' => 'Autorizações',
    ],

    'open_collection' => 'Abrir Coleção',
    'new_collection' => 'Nova Coleção',
    'permissions_roles' => 'Papéis e Permissões',
    'assign_roles' => 'Atribuir Papéis',
    'assign_permissions' => 'Atribuir Permissões',
    'manage_roles' => 'Gerenciar Papéis',

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/traits.php ####

<?php

/*
|
| Tradução Portuguesa para os dados dos traços
| os seguintes são todos os campos que precisam ser traduzidos
| no caso de adicionar novos campos, também adicione a tradução
|
 */

return [
    'sure_you_what_match_this_trait' => 'Tem certeza de que deseja combinar este traço?',
    'yes_match_it' => 'Sim, combine',
    'the_trait_was_matched' => 'O traço foi combinado',
    'trait_added' => 'Traço adicionado',
    'category_added' => 'Categoria adicionada',
    'key_added' => 'Chave adicionada',
    'value_added' => 'Valor adicionado',
    'new_category' => 'Nova categoria',
    'new_key' => 'Nova chave',
    'key_deletion_error' => 'Esta chave está vinculada a alguns traços e não pode ser removida. Se deseja excluí-la, primeiro deve excluir os traços associados.',
    'create_a_new_trait_for_this_key' => 'Criar um novo traço para esta chave',
    'click_for_selected' => 'Clique para selecionar',
    'trait_icon' => 'Ícone de traço',
    'EGI_with_traits' => 'EGI com traços',
    'traits_library' => 'Biblioteca de traços',
    'collection' => 'Coleção',
    'manage_traits' => 'Gerenciar traços',
    'manage_key' => 'Gerenciar chaves',
    'manage_category' => 'Gerenciar categorias',
    'delete_traits' => 'Excluir traços',
    'applyTraits' => 'Voltar para Aplicar Traços',
    'create_new_key' => 'Criar nova chave',
    'open_manage' => 'Abrir gerenciamento',
    'close_manage' => 'Fechar gerenciamento',
    'apply_traits' => 'Aplicar traços',
    'key_deletion' => 'Exclusão de chave',
    'key_deletion_confirm' => 'Tem certeza de que deseja excluir esta chave: :key?',
    'key_not_possible_delete' => 'Não é possível excluir esta chave',
    'key_deleted' => 'Chave excluída',
    'key_search' => 'Buscar chave',
    'make_a_new_key' => 'Criar uma nova chave',
    'key_created' => 'Chave criada',
    'key_updated' => 'Chave atualizada',
    'key_not_possible_update' => 'Não é possível atualizar esta chave',
    'key_not_found' => 'Chave não encontrada',
    'key_not_possible_create' => 'Não é possível criar esta chave',
    'key_not_possible_find' => 'Não é possível encontrar esta chave',
    'bind' => 'Associar',
    'unbind' => 'Desassociar',
    'binded' => 'Chaves associadas',
    'unbinded' => 'Chaves para associar',
    'make' => 'Criar',
    'create_a_new_category' => 'Criar uma nova categoria',
    'category_created' => 'Categoria criada',
    'create_a_new_key' => 'Criar uma nova chave',
    'select_a_category' => 'Selecione uma categoria',
    'select_one_or_more_EGI' => 'Selecione um ou mais EGI',
    'category' => 'Categoria',
    'select_a_key' => 'Selecione uma chave',
    'key' => 'Chave',
    'value_for_key' => 'Valor para a chave',
    'select_all' => 'Selecionar tudo',
    'unselect_all' => 'Desmarcar tudo',
    'many_to_many' => 'Muitos para muitos',
    'one_to_many' => 'Um para muitos',
    'zoom_in' => 'Aproximar',
    'zoom_out' => 'Afaste-se',
    'traits_on :numberItems items_in_this_collection' => 'Traços nos :numberItems itens desta coleção',
    'are_you_sure_remove :traitKey' => 'Tem certeza de que deseja remover <span class="font-bold"> :traitKey</span>?',
    'all_the_traits_you_created' => 'Todos os traços que você criou',
    'traits_categories' => 'Categorias de traços',
    'traits' => 'Traços',
    'update_category' => 'Atualizar categoria',
    'update_key' => 'Atualizar chave',
    'category' => 'Categoria',
    'explanation_apply_traits' => 'Atribua os traços que deseja aplicar a cada item da sua coleção',
    'explanation_manage_category' => 'Gerencie as categorias de traços. Nesta seção, você pode criar novas categorias, atualizar ou excluir as já existentes. Você pode fazer o mesmo com as chaves e também associá-las às categorias. Você pode visualizar todas as chaves que já foram associadas e, se necessário, desassociá-las clicando com o botão direito do mouse no cartão correspondente. Além disso, você pode ver todas as chaves que ainda precisam ser associadas: você pode selecionar uma ou mais (note bem que, ao selecionar a chave, ela deve ser colorida de vermelho, caso contrário, significa que não foi selecionada corretamente) e, clicando com o botão direito do mouse, será mostrada a lista de categorias disponíveis. Ao escolher uma categoria, você criará a associação.',
    'trait_value' => 'Valor do traço',
    'view_your_all_traits' => 'Ver todos os seus traços',
    'view_your_traits_this_collection' => 'Ver seus traços apenas desta coleção',
    'back_to_apply_traits' => 'Voltar para aplicar traços',
    'back_to_gallery' => 'Voltar para a galeria',
    'this_traits_non_cannot_be_removed' => 'Estes traços não podem ser removidos',
];

#### Inizio File: /home/fabio/EGI/resources/views/_welcome.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Styles / Scripts -->
        @if (file_exists(public_path('build/manifest.json')) || file_exists(public_path('hot')))
            @vite(['resources/css/app.css', 'resources/js/app.js'])
        @else
            <style>
                /* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.absolute{position:absolute}.relative{position:relative}.-left-20{left:-5rem}.top-0{top:0px}.-bottom-16{bottom:-4rem}.-left-16{left:-4rem}.-mx-3{margin-left:-0.75rem;margin-right:-0.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.flex{display:flex}.grid{display:grid}.hidden{display:none}.aspect-video{aspect-ratio:16 / 9}.size-12{width:3rem;height:3rem}.size-5{width:1.25rem;height:1.25rem}.size-6{width:1.5rem;height:1.5rem}.h-12{height:3rem}.h-40{height:10rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-full{width:100%}.w-\[calc\(100\%\+8rem\)\]{width:calc(100% + 8rem)}.w-auto{width:auto}.max-w-\[877px\]{max-width:877px}.max-w-2xl{max-width:42rem}.flex-1{flex:1 1 0%}.shrink-0{flex-shrink:0}.grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.gap-2{gap:0.5rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.self-center{align-self:center}.overflow-hidden{overflow:hidden}.rounded-\[10px\]{border-radius:10px}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:0.5rem}.rounded-md{border-radius:0.375rem}.rounded-sm{border-radius:0.125rem}.bg-\[\#FF2D20\]\/10{background-color:rgb(255 45 32 / 0.1)}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-gradient-to-b{background-image:linear-gradient(to bottom, var(--tw-gradient-stops))}.from-transparent{--tw-gradient-from:transparent var(--tw-gradient-from-position);--tw-gradient-to:rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-white{--tw-gradient-to:rgb(255 255 255 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-white{--tw-gradient-to:#fff var(--tw-gradient-to-position)}.stroke-\[\#FF2D20\]{stroke:#FF2D20}.object-cover{object-fit:cover}.object-top{object-position:top}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-10{padding-top:2.5rem;padding-bottom:2.5rem}.px-3{padding-left:0.75rem;padding-right:0.75rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:0.5rem;padding-bottom:0.5rem}.pt-3{padding-top:0.75rem}.text-center{text-align:center}.font-sans{font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji}.text-sm{font-size:0.875rem;line-height:1.25rem}.text-sm\/relaxed{font-size:0.875rem;line-height:1.625}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-semibold{font-weight:600}.text-black{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-\[0px_14px_34px_0px_rgba\(0\2c 0\2c 0\2c 0\.08\)\]{--tw-shadow:0px 14px 34px 0px rgba(0,0,0,0.08);--tw-shadow-colored:0px 14px 34px 0px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.ring-transparent{--tw-ring-color:transparent}.ring-white\/\[0\.05\]{--tw-ring-color:rgb(255 255 255 / 0.05)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.06\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.25\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.25));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-300{transition-duration:300ms}.selection\:bg-\[\#FF2D20\] *::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-\[\#FF2D20\]::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-black:hover{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.hover\:text-black\/70:hover{color:rgb(0 0 0 / 0.7)}.hover\:ring-black\/20:hover{--tw-ring-color:rgb(0 0 0 / 0.2)}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus-visible\:ring-1:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}@media (min-width: 640px){.sm\:size-16{width:4rem;height:4rem}.sm\:size-6{width:1.5rem;height:1.5rem}.sm\:pt-5{padding-top:1.25rem}}@media (min-width: 768px){.md\:row-span-3{grid-row:span 3 / span 3}}@media (min-width: 1024px){.lg\:col-start-2{grid-column-start:2}.lg\:h-16{height:4rem}.lg\:max-w-7xl{max-width:80rem}.lg\:grid-cols-3{grid-template-columns:repeat(3, minmax(0, 1fr))}.lg\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.lg\:flex-col{flex-direction:column}.lg\:items-end{align-items:flex-end}.lg\:justify-center{justify-content:center}.lg\:gap-8{gap:2rem}.lg\:p-10{padding:2.5rem}.lg\:pb-10{padding-bottom:2.5rem}.lg\:pt-0{padding-top:0px}.lg\:text-\[\#FF2D20\]{--tw-text-opacity:1;color:rgb(255 45 32 / var(--tw-text-opacity))}}@media (prefers-color-scheme: dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.dark\:bg-zinc-900{--tw-bg-opacity:1;background-color:rgb(24 24 27 / var(--tw-bg-opacity))}.dark\:via-zinc-900{--tw-gradient-to:rgb(24 24 27 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #18181b var(--tw-gradient-via-position), var(--tw-gradient-to)}.dark\:to-zinc-900{--tw-gradient-to:#18181b var(--tw-gradient-to-position)}.dark\:text-white\/50{color:rgb(255 255 255 / 0.5)}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:text-white\/70{color:rgb(255 255 255 / 0.7)}.dark\:ring-zinc-800{--tw-ring-opacity:1;--tw-ring-color:rgb(39 39 42 / var(--tw-ring-opacity))}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:hover\:text-white\/70:hover{color:rgb(255 255 255 / 0.7)}.dark\:hover\:text-white\/80:hover{color:rgb(255 255 255 / 0.8)}.dark\:hover\:ring-zinc-700:hover{--tw-ring-opacity:1;--tw-ring-color:rgb(63 63 70 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-white:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 255 255 / var(--tw-ring-opacity))}}
            </style>
        @endif
    </head>
    <body class="font-sans antialiased dark:bg-black dark:text-white/50">
        <div class="bg-gray-50 text-black/50 dark:bg-black dark:text-white/50">
            <img id="background" class="absolute -left-20 top-0 max-w-[877px]" src="https://laravel.com/assets/img/welcome/background.svg" alt="Laravel background" />
            <div class="relative min-h-screen flex flex-col items-center justify-center selection:bg-[#FF2D20] selection:text-white">
                <div class="relative w-full max-w-2xl px-6 lg:max-w-7xl">
                    <header class="grid grid-cols-2 items-center gap-2 py-10 lg:grid-cols-3">
                        <div class="flex lg:justify-center lg:col-start-2">
                            <svg class="h-12 w-auto text-white lg:h-16 lg:text-[#FF2D20]" viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="currentColor"/></svg>
                        </div>
                        @if (Route::has('login'))
                            <nav class="-mx-3 flex flex-1 justify-end">
                                @auth
                                    <a
                                        href="{{ url('/dashboard') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Dashboard
                                    </a>
                                @else
                                    <a
                                        href="{{ route('login') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Log in
                                    </a>

                                    @if (Route::has('register'))
                                        <a
                                            href="{{ route('register') }}"
                                            class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                        >
                                            Register
                                        </a>
                                    @endif
                                @endauth
                            </nav>
                        @endif
                    </header>

                    <main class="mt-6">
                        <div class="grid gap-6 lg:grid-cols-2 lg:gap-8">
                            <a
                                href="https://laravel.com/docs"
                                id="docs-card"
                                class="flex flex-col items-start gap-6 overflow-hidden rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] md:row-span-3 lg:p-10 lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div id="screenshot-container" class="relative flex w-full flex-1 items-stretch">
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-light.svg"
                                        alt="Laravel documentation screenshot"
                                        class="aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.06)] dark:hidden"
                                        onerror="
                                            document.getElementById('screenshot-container').classList.add('!hidden');
                                            document.getElementById('docs-card').classList.add('!row-span-1');
                                            document.getElementById('docs-card-content').classList.add('!flex-row');
                                            document.getElementById('background').classList.add('!hidden');
                                        "
                                    />
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-dark.svg"
                                        alt="Laravel documentation screenshot"
                                        class="hidden aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.25)] dark:block"
                                    />
                                    <div
                                        class="absolute -bottom-16 -left-16 h-40 w-[calc(100%+8rem)] bg-gradient-to-b from-transparent via-white to-white dark:via-zinc-900 dark:to-zinc-900"
                                    ></div>
                                </div>

                                <div class="relative flex items-center gap-6 lg:items-end">
                                    <div id="docs-card-content" class="flex items-start gap-6 lg:flex-col">
                                        <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                            <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="#FF2D20" d="M23 4a1 1 0 0 0-1.447-.894L12.224 7.77a.5.5 0 0 1-.448 0L2.447 3.106A1 1 0 0 0 1 4v13.382a1.99 1.99 0 0 0 1.105 1.79l9.448 4.728c.14.065.293.1.447.1.154-.005.306-.04.447-.105l9.453-4.724a1.99 1.99 0 0 0 1.1-1.789V4ZM3 6.023a.25.25 0 0 1 .362-.223l7.5 3.75a.251.251 0 0 1 .138.223v11.2a.25.25 0 0 1-.362.224l-7.5-3.75a.25.25 0 0 1-.138-.22V6.023Zm18 11.2a.25.25 0 0 1-.138.224l-7.5 3.75a.249.249 0 0 1-.329-.099.249.249 0 0 1-.033-.12V9.772a.251.251 0 0 1 .138-.224l7.5-3.75a.25.25 0 0 1 .362.224v11.2Z"/><path fill="#FF2D20" d="m3.55 1.893 8 4.048a1.008 1.008 0 0 0 .9 0l8-4.048a1 1 0 0 0-.9-1.785l-7.322 3.706a.506.506 0 0 1-.452 0L4.454.108a1 1 0 0 0-.9 1.785H3.55Z"/></svg>
                                        </div>

                                        <div class="pt-3 sm:pt-5 lg:pt-0">
                                            <h2 class="text-xl font-semibold text-black dark:text-white">Documentation</h2>

                                            <p class="mt-4 text-sm/relaxed">
                                                Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                            </p>
                                        </div>
                                    </div>

                                    <svg class="size-6 shrink-0 stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                                </div>
                            </a>

                            <a
                                href="https://laracasts.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M24 8.25a.5.5 0 0 0-.5-.5H.5a.5.5 0 0 0-.5.5v12a2.5 2.5 0 0 0 2.5 2.5h19a2.5 2.5 0 0 0 2.5-2.5v-12Zm-7.765 5.868a1.221 1.221 0 0 1 0 2.264l-6.626 2.776A1.153 1.153 0 0 1 8 18.123v-5.746a1.151 1.151 0 0 1 1.609-1.035l6.626 2.776ZM19.564 1.677a.25.25 0 0 0-.177-.427H15.6a.106.106 0 0 0-.072.03l-4.54 4.543a.25.25 0 0 0 .177.427h3.783c.027 0 .054-.01.073-.03l4.543-4.543ZM22.071 1.318a.047.047 0 0 0-.045.013l-4.492 4.492a.249.249 0 0 0 .038.385.25.25 0 0 0 .14.042h5.784a.5.5 0 0 0 .5-.5v-2a2.5 2.5 0 0 0-1.925-2.432ZM13.014 1.677a.25.25 0 0 0-.178-.427H9.101a.106.106 0 0 0-.073.03l-4.54 4.543a.25.25 0 0 0 .177.427H8.4a.106.106 0 0 0 .073-.03l4.54-4.543ZM6.513 1.677a.25.25 0 0 0-.177-.427H2.5A2.5 2.5 0 0 0 0 3.75v2a.5.5 0 0 0 .5.5h1.4a.106.106 0 0 0 .073-.03l4.54-4.543Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laracasts</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <a
                                href="https://laravel-news.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M8.75 4.5H5.5c-.69 0-1.25.56-1.25 1.25v4.75c0 .69.56 1.25 1.25 1.25h3.25c.69 0 1.25-.56 1.25-1.25V5.75c0-.69-.56-1.25-1.25-1.25Z"/><path d="M24 10a3 3 0 0 0-3-3h-2V2.5a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2V20a3.5 3.5 0 0 0 3.5 3.5h17A3.5 3.5 0 0 0 24 20V10ZM3.5 21.5A1.5 1.5 0 0 1 2 20V3a.5.5 0 0 1 .5-.5h14a.5.5 0 0 1 .5.5v17c0 .295.037.588.11.874a.5.5 0 0 1-.484.625L3.5 21.5ZM22 20a1.5 1.5 0 1 1-3 0V9.5a.5.5 0 0 1 .5-.5H21a1 1 0 0 1 1 1v10Z"/><path d="M12.751 6.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 7.3v-.5a.75.75 0 0 1 .751-.753ZM12.751 10.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 11.3v-.5a.75.75 0 0 1 .751-.753ZM4.751 14.047h10a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-10A.75.75 0 0 1 4 15.3v-.5a.75.75 0 0 1 .751-.753ZM4.75 18.047h7.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-7.5A.75.75 0 0 1 4 19.3v-.5a.75.75 0 0 1 .75-.753Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laravel News</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <div class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]">
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <g fill="#FF2D20">
                                            <path
                                                d="M16.597 12.635a.247.247 0 0 0-.08-.237 2.234 2.234 0 0 1-.769-1.68c.001-.195.03-.39.084-.578a.25.25 0 0 0-.09-.267 8.8 8.8 0 0 0-4.826-1.66.25.25 0 0 0-.268.181 2.5 2.5 0 0 1-2.4 1.824.045.045 0 0 0-.045.037 12.255 12.255 0 0 0-.093 3.86.251.251 0 0 0 .208.214c2.22.366 4.367 1.08 6.362 2.118a.252.252 0 0 0 .32-.079 10.09 10.09 0 0 0 1.597-3.733ZM13.616 17.968a.25.25 0 0 0-.063-.407A19.697 19.697 0 0 0 8.91 15.98a.25.25 0 0 0-.287.325c.151.455.334.898.548 1.328.437.827.981 1.594 1.619 2.28a.249.249 0 0 0 .32.044 29.13 29.13 0 0 0 2.506-1.99ZM6.303 14.105a.25.25 0 0 0 .265-.274 13.048 13.048 0 0 1 .205-4.045.062.062 0 0 0-.022-.07 2.5 2.5 0 0 1-.777-.982.25.25 0 0 0-.271-.149 11 11 0 0 0-5.6 2.815.255.255 0 0 0-.075.163c-.008.135-.02.27-.02.406.002.8.084 1.598.246 2.381a.25.25 0 0 0 .303.193 19.924 19.924 0 0 1 5.746-.438ZM9.228 20.914a.25.25 0 0 0 .1-.393 11.53 11.53 0 0 1-1.5-2.22 12.238 12.238 0 0 1-.91-2.465.248.248 0 0 0-.22-.187 18.876 18.876 0 0 0-5.69.33.249.249 0 0 0-.179.336c.838 2.142 2.272 4 4.132 5.353a.254.254 0 0 0 .15.048c1.41-.01 2.807-.282 4.117-.802ZM18.93 12.957l-.005-.008a.25.25 0 0 0-.268-.082 2.21 2.21 0 0 1-.41.081.25.25 0 0 0-.217.2c-.582 2.66-2.127 5.35-5.75 7.843a.248.248 0 0 0-.09.299.25.25 0 0 0 .065.091 28.703 28.703 0 0 0 2.662 2.12.246.246 0 0 0 .209.037c2.579-.701 4.85-2.242 6.456-4.378a.25.25 0 0 0 .048-.189 13.51 13.51 0 0 0-2.7-6.014ZM5.702 7.058a.254.254 0 0 0 .2-.165A2.488 2.488 0 0 1 7.98 5.245a.093.093 0 0 0 .078-.062 19.734 19.734 0 0 1 3.055-4.74.25.25 0 0 0-.21-.41 12.009 12.009 0 0 0-10.4 8.558.25.25 0 0 0 .373.281 12.912 12.912 0 0 1 4.826-1.814ZM10.773 22.052a.25.25 0 0 0-.28-.046c-.758.356-1.55.635-2.365.833a.25.25 0 0 0-.022.48c1.252.43 2.568.65 3.893.65.1 0 .2 0 .3-.008a.25.25 0 0 0 .147-.444c-.526-.424-1.1-.917-1.673-1.465ZM18.744 8.436a.249.249 0 0 0 .15.228 2.246 2.246 0 0 1 1.352 2.054c0 .337-.08.67-.23.972a.25.25 0 0 0 .042.28l.007.009a15.016 15.016 0 0 1 2.52 4.6.25.25 0 0 0 .37.132.25.25 0 0 0 .096-.114c.623-1.464.944-3.039.945-4.63a12.005 12.005 0 0 0-5.78-10.258.25.25 0 0 0-.373.274c.547 2.109.85 4.274.901 6.453ZM9.61 5.38a.25.25 0 0 0 .08.31c.34.24.616.561.8.935a.25.25 0 0 0 .3.127.631.631 0 0 1 .206-.034c2.054.078 4.036.772 5.69 1.991a.251.251 0 0 0 .267.024c.046-.024.093-.047.141-.067a.25.25 0 0 0 .151-.23A29.98 29.98 0 0 0 15.957.764a.25.25 0 0 0-.16-.164 11.924 11.924 0 0 0-2.21-.518.252.252 0 0 0-.215.076A22.456 22.456 0 0 0 9.61 5.38Z"
                                            />
                                        </g>
                                    </svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Vibrant Ecosystem</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white dark:focus-visible:ring-[#FF2D20]">Forge</a>, <a href="https://vapor.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Vapor</a>, <a href="https://nova.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Nova</a>, <a href="https://envoyer.io" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Envoyer</a>, and <a href="https://herd.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Herd</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Echo</a>, <a href="https://laravel.com/docs/horizon" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Telescope</a>, and more.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </main>

                    <footer class="py-16 text-center text-sm text-black dark:text-white/70">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </footer>
                </div>
            </div>
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/admin/assign-permissions.blade.php ####

<x-app-layout>
    <div class="container mx-auto mt-8">
        <div class="card shadow-md bg-white p-6">
            <h2 class="text-2xl font-bold mb-4">Assegna Permessi a un Utente</h2>
            <form action="{{ route('admin.assign.permissions') }}" method="POST">
                @csrf
                <div class="mb-4">
                    <label for="email" class="block text-sm font-medium text-gray-700">Email Utente</label>
                    <input type="email" name="email" id="email"
                           class="input input-bordered w-full mt-1"
                           placeholder="Inserisci l'indirizzo email" required>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-3">Permessi</label>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        @foreach($permissions as $permission)
                            <label class="label cursor-pointer justify-start gap-3">
                                <input type="checkbox"
                                       name="permissions[]"
                                       value="{{ $permission->name }}"
                                       class="checkbox checkbox-primary" />
                                <span class="label-text">{{ $permission->name }}</span>
                            </label>
                        @endforeach
                    </div>
                    @error('permissions')
                        <p class="text-error text-sm mt-1">{{ $message }}</p>
                    @enderror
                </div>
                <button type="submit" class="btn btn-primary w-full">
                    Assegna Permessi
                </button>
            </form>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/admin/assign-role.blade.php ####

<x-app-layout>
<div class="container mx-auto mt-8">
    <div class="card shadow-md bg-white p-6">
        <h2 class="text-2xl font-bold mb-4">Assegna Ruolo a un Utente</h2>
        <form action="{{ route('admin.assign.role') }}" method="POST">
            @csrf
            <div class="mb-4">
                <label for="email" class="block text-sm font-medium text-gray-700">Email Utente</label>
                <input type="email" name="email" id="email"
                       class="input input-bordered w-full mt-1"
                       placeholder="Inserisci l'indirizzo email" required>
            </div>
            <div class="mb-4">
                <label for="role" class="block text-sm font-medium text-gray-700">Ruolo</label>
                <select name="role" id="role"
                        class="select select-bordered w-full mt-1">
                    @foreach($roles as $role)
                        <option value="{{ $role->name }}">{{ $role->name }}</option>
                    @endforeach
                </select>
            </div>
            <button type="submit" class="btn btn-primary w-full">
                Assegna Ruolo
            </button>
        </form>
    </div>
</div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/create.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-base-content leading-tight">
            {{ __('Create New Role') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg p-6">
                <form method="POST" action="{{ route('admin.roles.store') }}" class="space-y-6">
                    @csrf

                    <div>
                        <x-label for="name" value="{{ __('Role Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name')" required 
                                class="input input-bordered w-full mt-1" />
                        @error('name')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div>
                        <x-label value="{{ __('Permissions') }}" class="mb-3" />
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            @foreach($permissions as $permission)
                                <label class="label cursor-pointer justify-start gap-3">
                                    <input type="checkbox" 
                                           name="permissions[]" 
                                           value="{{ $permission->id }}"
                                           class="checkbox checkbox-primary"
                                           @checked(old('permissions') && in_array($permission->id, old('permissions'))) />
                                    <span class="label-text">{{ $permission->name }}</span>
                                </label>
                            @endforeach
                        </div>
                        @error('permissions')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div class="flex items-center gap-4">
                        <x-button class="btn btn-primary">
                            {{ __('Create Role') }}
                        </x-button>
                        <a href="{{ route('admin.roles.index') }}" class="btn">
                            {{ __('Cancel') }}
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout> 
#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/edit.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-base-content leading-tight">
            {{ __('Edit Role') }}: {{ $role->name }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg p-6">
                <form method="POST" action="{{ route('admin.roles.update', $role) }}" class="space-y-6">
                    @csrf
                    @method('PUT')

                    <div>
                        <x-label for="name" value="{{ __('Role Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name', $role->name)" required 
                                class="input input-bordered w-full mt-1" />
                        @error('name')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div>
                        <x-label value="{{ __('Permissions') }}" class="mb-3" />
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            @foreach($permissions as $permission)
                                <label class="label cursor-pointer justify-start gap-3">
                                    <input type="checkbox" 
                                           name="permissions[]" 
                                           value="{{ $permission->id }}"
                                           class="checkbox checkbox-primary"
                                           @checked($role->permissions->contains($permission)) />
                                    <span class="label-text">{{ $permission->name }}</span>
                                </label>
                            @endforeach
                        </div>
                        @error('permissions')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div class="flex items-center gap-4">
                        <x-button class="btn btn-primary">
                            {{ __('Update Role') }}
                        </x-button>
                        <a href="{{ route('admin.roles.index') }}" class="btn">
                            {{ __('Cancel') }}
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout> 
#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/index.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <div class="flex justify-between items-center">
            <h2 class="font-semibold text-xl text-base-content leading-tight">
                {{ __('Roles & Permissions Management') }}
            </h2>
            <a href="{{ route('admin.roles.create') }}" class="btn btn-primary btn-sm gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                {{ __('New Role') }}
            </a>
        </div>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="table table-zebra w-full">
                        <!-- head -->
                        <thead class="bg-base-200 text-base-content">
                            <tr>
                                <th class="bg-base-200">Role</th>
                                <th class="bg-base-200">Permissions</th>
                                <th class="bg-base-200 w-24">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach($roles as $role)
                            <tr class="hover">
                                <td class="font-medium">
                                    <div class="flex items-center gap-2">
                                        <span class="badge badge-neutral">{{ $role->name }}</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="flex flex-wrap gap-1">
                                        @foreach($role->permissions as $permission)
                                            <span class="badge badge-ghost badge-sm">
                                                {{ str_replace('_', ' ', $permission->name) }}
                                            </span>
                                        @endforeach
                                    </div>
                                </td>
                                <td>
                                    <div class="flex items-center gap-2">
                                        <a href="{{ route('admin.roles.edit', $role) }}"
                                           class="btn btn-ghost btn-sm">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </a>
                                        @unless($role->name === 'superadmin')
                                        <form method="POST" action="{{ route('admin.roles.destroy', $role) }}"
                                              onsubmit="return confirm('Are you sure you want to delete this role?');"
                                              class="inline">
                                            @csrf
                                            @method('DELETE')
                                            <button type="submit" class="btn btn-ghost btn-sm text-error">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                                </svg>
                                            </button>
                                        </form>
                                        @endunless
                                    </div>
                                </td>
                            </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/api/api-token-manager.blade.php ####

<div>
    <!-- Generate API Token -->
    <x-form-section submit="createApiToken">
        <x-slot name="title">
            {{ __('Create API Token') }}
        </x-slot>

        <x-slot name="description">
            {{ __('API tokens allow third-party services to authenticate with our application on your behalf.') }}
        </x-slot>

        <x-slot name="form">
            <!-- Token Name -->
            <div class="col-span-6 sm:col-span-4">
                <x-label for="name" value="{{ __('Token Name') }}" />
                <x-input id="name" type="text" class="mt-1 block w-full" wire:model="createApiTokenForm.name" autofocus />
                <x-input-error for="name" class="mt-2" />
            </div>

            <!-- Token Permissions -->
            @if (Laravel\Jetstream\Jetstream::hasPermissions())
                <div class="col-span-6">
                    <x-label for="permissions" value="{{ __('Permissions') }}" />

                    <div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4">
                        @foreach (Laravel\Jetstream\Jetstream::$permissions as $permission)
                            <label class="flex items-center">
                                <x-checkbox wire:model="createApiTokenForm.permissions" :value="$permission"/>
                                <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ $permission }}</span>
                            </label>
                        @endforeach
                    </div>
                </div>
            @endif
        </x-slot>

        <x-slot name="actions">
            <x-action-message class="me-3" on="created">
                {{ __('Created.') }}
            </x-action-message>

            <x-button>
                {{ __('Create') }}
            </x-button>
        </x-slot>
    </x-form-section>

    @if ($this->user->tokens->isNotEmpty())
        <x-section-border />

        <!-- Manage API Tokens -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Manage API Tokens') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('You may delete any of your existing tokens if they are no longer needed.') }}
                </x-slot>

                <!-- API Token List -->
                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($this->user->tokens->sortBy('name') as $token)
                            <div class="flex items-center justify-between">
                                <div class="break-all dark:text-white">
                                    {{ $token->name }}
                                </div>

                                <div class="flex items-center ms-2">
                                    @if ($token->last_used_at)
                                        <div class="text-sm text-gray-400">
                                            {{ __('Last used') }} {{ $token->last_used_at->diffForHumans() }}
                                        </div>
                                    @endif

                                    @if (Laravel\Jetstream\Jetstream::hasPermissions())
                                        <button class="cursor-pointer ms-6 text-sm text-gray-400 underline" wire:click="manageApiTokenPermissions({{ $token->id }})">
                                            {{ __('Permissions') }}
                                        </button>
                                    @endif

                                    <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="confirmApiTokenDeletion({{ $token->id }})">
                                        {{ __('Delete') }}
                                    </button>
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    <!-- Token Value Modal -->
    <x-dialog-modal wire:model.live="displayingToken">
        <x-slot name="title">
            {{ __('API Token') }}
        </x-slot>

        <x-slot name="content">
            <div>
                {{ __('Please copy your new API token. For your security, it won\'t be shown again.') }}
            </div>

            <x-input x-ref="plaintextToken" type="text" readonly :value="$plainTextToken"
                class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500 w-full break-all"
                autofocus autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"
                @showing-token-modal.window="setTimeout(() => $refs.plaintextToken.select(), 250)"
            />
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$set('displayingToken', false)" wire:loading.attr="disabled">
                {{ __('Close') }}
            </x-secondary-button>
        </x-slot>
    </x-dialog-modal>

    <!-- API Token Permissions Modal -->
    <x-dialog-modal wire:model.live="managingApiTokenPermissions">
        <x-slot name="title">
            {{ __('API Token Permissions') }}
        </x-slot>

        <x-slot name="content">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                @foreach (Laravel\Jetstream\Jetstream::$permissions as $permission)
                    <label class="flex items-center">
                        <x-checkbox wire:model="updateApiTokenForm.permissions" :value="$permission"/>
                        <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ $permission }}</span>
                    </label>
                @endforeach
            </div>
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$set('managingApiTokenPermissions', false)" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-button class="ms-3" wire:click="updateApiToken" wire:loading.attr="disabled">
                {{ __('Save') }}
            </x-button>
        </x-slot>
    </x-dialog-modal>

    <!-- Delete Token Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingApiTokenDeletion">
        <x-slot name="title">
            {{ __('Delete API Token') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to delete this API token?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingApiTokenDeletion')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="deleteApiToken" wire:loading.attr="disabled">
                {{ __('Delete') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/api/index.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('API Tokens') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('api.api-token-manager')
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/confirm-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('This is a secure area of the application. Please confirm your password before continuing.') }}
        </div>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.confirm') }}">
            @csrf

            <div>
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="current-password" autofocus />
            </div>

            <div class="flex justify-end mt-4">
                <x-button class="ms-4">
                    {{ __('Confirm') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/forgot-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.') }}
        </div>

        @session('status')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ $value }}
            </div>
        @endsession

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.email') }}">
            @csrf

            <div class="block">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            </div>

            <div class="flex items-center justify-end mt-4">
                <x-button>
                    {{ __('Email Password Reset Link') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/login.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        @session('status')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ $value }}
            </div>
        @endsession

        <form method="POST" action="{{ route('login') }}">
            @csrf

            <div>
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="current-password" />
            </div>

            <div class="block mt-4">
                <label for="remember_me" class="flex items-center">
                    <x-checkbox id="remember_me" name="remember" />
                    <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ __('Remember me') }}</span>
                </label>
            </div>

            <div class="flex items-center justify-end mt-4">
                @if (Route::has('password.request'))
                    <a class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" href="{{ route('password.request') }}">
                        {{ __('Forgot your password?') }}
                    </a>
                @endif

                <x-button class="ms-4">
                    {{ __('Log in') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/register.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('register') }}">
            @csrf

            <div>
                <x-label for="name" value="{{ __('Name') }}" />
                <x-input id="name" class="block mt-1 w-full" type="text" name="name" :value="old('name')" required autofocus autocomplete="name" />
            </div>

            <div class="mt-4">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            </div>

            <div class="mt-4">
                <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                <x-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" required autocomplete="new-password" />
            </div>

            @if (Laravel\Jetstream\Jetstream::hasTermsAndPrivacyPolicyFeature())
                <div class="mt-4">
                    <x-label for="terms">
                        <div class="flex items-center">
                            <x-checkbox name="terms" id="terms" required />

                            <div class="ms-2">
                                {!! __('I agree to the :terms_of_service and :privacy_policy', [
                                        'terms_of_service' => '<a target="_blank" href="'.route('terms.show').'" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800">'.__('Terms of Service').'</a>',
                                        'privacy_policy' => '<a target="_blank" href="'.route('policy.show').'" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800">'.__('Privacy Policy').'</a>',
                                ]) !!}
                            </div>
                        </div>
                    </x-label>
                </div>
            @endif

            <div class="flex items-center justify-end mt-4">
                <a class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" href="{{ route('login') }}">
                    {{ __('Already registered?') }}
                </a>

                <x-button class="ms-4">
                    {{ __('Register') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/reset-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.update') }}">
            @csrf

            <input type="hidden" name="token" value="{{ $request->route('token') }}">

            <div class="block">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $request->email)" required autofocus autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            </div>

            <div class="mt-4">
                <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                <x-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" required autocomplete="new-password" />
            </div>

            <div class="flex items-center justify-end mt-4">
                <x-button>
                    {{ __('Reset Password') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/two-factor-challenge.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div x-data="{ recovery: false }">
            <div class="mb-4 text-sm text-gray-600 dark:text-gray-400" x-show="! recovery">
                {{ __('Please confirm access to your account by entering the authentication code provided by your authenticator application.') }}
            </div>

            <div class="mb-4 text-sm text-gray-600 dark:text-gray-400" x-cloak x-show="recovery">
                {{ __('Please confirm access to your account by entering one of your emergency recovery codes.') }}
            </div>

            <x-validation-errors class="mb-4" />

            <form method="POST" action="{{ route('two-factor.login') }}">
                @csrf

                <div class="mt-4" x-show="! recovery">
                    <x-label for="code" value="{{ __('Code') }}" />
                    <x-input id="code" class="block mt-1 w-full" type="text" inputmode="numeric" name="code" autofocus x-ref="code" autocomplete="one-time-code" />
                </div>

                <div class="mt-4" x-cloak x-show="recovery">
                    <x-label for="recovery_code" value="{{ __('Recovery Code') }}" />
                    <x-input id="recovery_code" class="block mt-1 w-full" type="text" name="recovery_code" x-ref="recovery_code" autocomplete="one-time-code" />
                </div>

                <div class="flex items-center justify-end mt-4">
                    <button type="button" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 underline cursor-pointer"
                                    x-show="! recovery"
                                    x-on:click="
                                        recovery = true;
                                        $nextTick(() => { $refs.recovery_code.focus() })
                                    ">
                        {{ __('Use a recovery code') }}
                    </button>

                    <button type="button" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 underline cursor-pointer"
                                    x-cloak
                                    x-show="recovery"
                                    x-on:click="
                                        recovery = false;
                                        $nextTick(() => { $refs.code.focus() })
                                    ">
                        {{ __('Use an authentication code') }}
                    </button>

                    <x-button class="ms-4">
                        {{ __('Log in') }}
                    </x-button>
                </div>
            </form>
        </div>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/verify-email.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('Before continuing, could you verify your email address by clicking on the link we just emailed to you? If you didn\'t receive the email, we will gladly send you another.') }}
        </div>

        @if (session('status') == 'verification-link-sent')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ __('A new verification link has been sent to the email address you provided in your profile settings.') }}
            </div>
        @endif

        <div class="mt-4 flex items-center justify-between">
            <form method="POST" action="{{ route('verification.send') }}">
                @csrf

                <div>
                    <x-button type="submit">
                        {{ __('Resend Verification Email') }}
                    </x-button>
                </div>
            </form>

            <div>
                <a
                    href="{{ route('profile.show') }}"
                    class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800"
                >
                    {{ __('Edit Profile') }}</a>

                <form method="POST" action="{{ route('logout') }}" class="inline">
                    @csrf

                    <button type="submit" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 ms-2">
                        {{ __('Log Out') }}
                    </button>
                </form>
            </div>
        </div>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/components/action-message.blade.php ####

@props(['on'])

<div x-data="{ shown: false, timeout: null }"
    x-init="@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, 2000); })"
    x-show.transition.out.opacity.duration.1500ms="shown"
    x-transition:leave.opacity.duration.1500ms
    style="display: none;"
    {{ $attributes->merge(['class' => 'text-sm text-gray-600 dark:text-gray-400']) }}>
    {{ $slot->isEmpty() ? 'Saved.' : $slot }}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/action-section.blade.php ####

<div {{ $attributes->merge(['class' => 'md:grid md:grid-cols-3 md:gap-6']) }}>
    <x-section-title>
        <x-slot name="title">{{ $title }}</x-slot>
        <x-slot name="description">{{ $description }}</x-slot>
    </x-section-title>

    <div class="mt-5 md:mt-0 md:col-span-2">
        <div class="px-4 py-5 sm:p-6 bg-white dark:bg-gray-800 shadow sm:rounded-lg">
            {{ $content }}
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/application-logo.blade.php ####

{{-- <svg viewBox="0 0 317 48" fill="none" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
  <path d="M74.09 30.04V13h-4.14v21H82.1v-3.96h-8.01zM95.379 19v1.77c-1.08-1.35-2.7-2.19-4.89-2.19-3.99 0-7.29 3.45-7.29 7.92s3.3 7.92 7.29 7.92c2.19 0 3.81-.84 4.89-2.19V34h3.87V19h-3.87zm-4.17 11.73c-2.37 0-4.14-1.71-4.14-4.23 0-2.52 1.77-4.23 4.14-4.23 2.4 0 4.17 1.71 4.17 4.23 0 2.52-1.77 4.23-4.17 4.23zM106.628 21.58V19h-3.87v15h3.87v-7.17c0-3.15 2.55-4.05 4.56-3.81V18.7c-1.89 0-3.78.84-4.56 2.88zM124.295 19v1.77c-1.08-1.35-2.7-2.19-4.89-2.19-3.99 0-7.29 3.45-7.29 7.92s3.3 7.92 7.29 7.92c2.19 0 3.81-.84 4.89-2.19V34h3.87V19h-3.87zm-4.17 11.73c-2.37 0-4.14-1.71-4.14-4.23 0-2.52 1.77-4.23 4.14-4.23 2.4 0 4.17 1.71 4.17 4.23 0 2.52-1.77 4.23-4.17 4.23zM141.544 19l-3.66 10.5-3.63-10.5h-4.26l5.7 15h4.41l5.7-15h-4.26zM150.354 28.09h11.31c.09-.51.15-1.02.15-1.59 0-4.41-3.15-7.92-7.59-7.92-4.71 0-7.92 3.45-7.92 7.92s3.18 7.92 8.22 7.92c2.88 0 5.13-1.17 6.54-3.21l-3.12-1.8c-.66.87-1.86 1.5-3.36 1.5-2.04 0-3.69-.84-4.23-2.82zm-.06-3c.45-1.92 1.86-3.03 3.93-3.03 1.62 0 3.24.87 3.72 3.03h-7.65zM164.516 34h3.87V12.1h-3.87V34zM185.248 34.36c3.69 0 6.9-2.01 6.9-6.3V13h-2.1v15.06c0 3.03-2.07 4.26-4.8 4.26-2.19 0-3.93-.78-4.62-2.61l-1.77 1.05c1.05 2.43 3.57 3.6 6.39 3.6zM203.124 18.64c-4.65 0-7.83 3.45-7.83 7.86 0 4.53 3.24 7.86 7.98 7.86 3.03 0 5.34-1.41 6.6-3.45l-1.74-1.02c-.81 1.44-2.46 2.55-4.83 2.55-3.18 0-5.55-1.89-5.97-4.95h13.17c.03-.3.06-.63.06-.93 0-4.11-2.85-7.92-7.44-7.92zm0 1.92c2.58 0 4.98 1.71 5.4 5.01h-11.19c.39-2.94 2.64-5.01 5.79-5.01zM221.224 20.92V19h-4.32v-4.2l-1.98.6V19h-3.15v1.92h3.15v9.09c0 3.6 2.25 4.59 6.3 3.99v-1.74c-2.91.12-4.32.33-4.32-2.25v-9.09h4.32zM225.176 22.93c0-1.62 1.59-2.37 3.15-2.37 1.44 0 2.97.57 3.6 2.1l1.65-.96c-.87-1.86-2.79-3.06-5.25-3.06-3 0-5.13 1.89-5.13 4.29 0 5.52 8.76 3.39 8.76 7.11 0 1.77-1.68 2.4-3.45 2.4-2.01 0-3.57-.99-4.11-2.52l-1.68.99c.75 1.92 2.79 3.45 5.79 3.45 3.21 0 5.43-1.77 5.43-4.32 0-5.52-8.76-3.39-8.76-7.11zM244.603 20.92V19h-4.32v-4.2l-1.98.6V19h-3.15v1.92h3.15v9.09c0 3.6 2.25 4.59 6.3 3.99v-1.74c-2.91.12-4.32.33-4.32-2.25v-9.09h4.32zM249.883 21.49V19h-1.98v15h1.98v-8.34c0-3.72 2.34-4.98 4.74-4.98v-1.92c-1.92 0-3.69.63-4.74 2.73zM263.358 18.64c-4.65 0-7.83 3.45-7.83 7.86 0 4.53 3.24 7.86 7.98 7.86 3.03 0 5.34-1.41 6.6-3.45l-1.74-1.02c-.81 1.44-2.46 2.55-4.83 2.55-3.18 0-5.55-1.89-5.97-4.95h13.17c.03-.3.06-.63.06-.93 0-4.11-2.85-7.92-7.44-7.92zm0 1.92c2.58 0 4.98 1.71 5.4 5.01h-11.19c.39-2.94 2.64-5.01 5.79-5.01zM286.848 19v2.94c-1.26-2.01-3.39-3.3-6.06-3.3-4.23 0-7.74 3.42-7.74 7.86s3.51 7.86 7.74 7.86c2.67 0 4.8-1.29 6.06-3.3V34h1.98V19h-1.98zm-5.91 13.44c-3.33 0-5.91-2.61-5.91-5.94 0-3.33 2.58-5.94 5.91-5.94s5.91 2.61 5.91 5.94c0 3.33-2.58 5.94-5.91 5.94zM309.01 18.64c-1.92 0-3.75.87-4.86 2.73-.84-1.74-2.46-2.73-4.56-2.73-1.8 0-3.42.72-4.59 2.55V19h-1.98v15H295v-8.31c0-3.72 2.16-5.13 4.32-5.13 2.13 0 3.51 1.41 3.51 4.08V34h1.98v-8.31c0-3.72 1.86-5.13 4.17-5.13 2.13 0 3.66 1.41 3.66 4.08V34h1.98v-9.36c0-3.75-2.31-6-5.61-6z" class="fill-black"/>
  <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
  <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
</svg> --}}
<img class ="h-24 w-24" src= '{{ config('app.logo_04') }}'>

#### Inizio File: /home/fabio/EGI/resources/views/components/application-mark.blade.php ####

<svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
  <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
  <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
</svg>

#### Inizio File: /home/fabio/EGI/resources/views/components/auth-session-status.blade.php ####

@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'alert alert-success']) }}>
        {{ $status }}
    </div>
@endif

#### Inizio File: /home/fabio/EGI/resources/views/components/authentication-card-logo.blade.php ####

<a href="/">
    <svg class="size-16" viewbox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
        <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
    </svg>
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/authentication-card.blade.php ####

<div class="min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100 dark:bg-gray-900">
    <div>
        {{ $logo }}
    </div>

    <div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg">
        {{ $slot }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/back-button.blade.php ####

<div>
    <a href="{{ url()->previous() }}"
        class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium mb-4">
         <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
         </svg>
         <span>{{ $label }}</span>
     </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/banner.blade.php ####

@props(['style' => session('flash.bannerStyle', 'success'), 'message' => session('flash.banner')])

<div x-data="{{ json_encode(['show' => true, 'style' => $style, 'message' => $message]) }}"
    :class="{ 'bg-indigo-500': style == 'success', 'bg-red-700': style == 'danger', 'bg-yellow-500': style == 'warning', 'bg-gray-500': style != 'success' && style != 'danger' && style != 'warning'}"
            style="display: none;"
            x-show="show && message"
            x-on:banner-message.window="
                style = event.detail.style;
                message = event.detail.message;
                show = true;
            ">
    <div class="max-w-screen-xl mx-auto py-2 px-3 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between flex-wrap">
            <div class="w-0 flex-1 flex items-center min-w-0">
                <span class="flex p-2 rounded-lg" :class="{ 'bg-indigo-600': style == 'success', 'bg-red-600': style == 'danger', 'bg-yellow-600': style == 'warning' }">
                    <svg x-show="style == 'success'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <svg x-show="style == 'danger'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z" />
                    </svg>
                    <svg x-show="style != 'success' && style != 'danger' && style != 'warning'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />
                    </svg>
                    <svg x-show="style == 'warning'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="1.5" fill="none" />
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4v.01 0 0 " />
                    </svg>
                </span>

                <p class="ms-3 font-medium text-sm text-white truncate" x-text="message"></p>
            </div>

            <div class="shrink-0 sm:ms-3">
                <button
                    type="button"
                    class="-me-1 flex p-2 rounded-md focus:outline-none sm:-me-2 transition"
                    :class="{ 'hover:bg-indigo-600 focus:bg-indigo-600': style == 'success', 'hover:bg-red-600 focus:bg-red-600': style == 'danger', 'hover:bg-yellow-600 focus:bg-yellow-600': style == 'warning'}"
                    aria-label="Dismiss"
                    x-on:click="show = false">
                    <svg class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/button.blade.php ####

<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-gray-800 dark:bg-gray-200 border border-transparent rounded-md font-semibold text-xs text-white dark:text-gray-800 uppercase tracking-widest hover:bg-gray-700 dark:hover:bg-white focus:bg-gray-700 dark:focus:bg-white active:bg-gray-900 dark:active:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/checkbox.blade.php ####

<input type="checkbox" {!! $attributes->merge(['class' => 'rounded dark:bg-gray-900 border-gray-300 dark:border-gray-700 text-indigo-600 shadow-sm focus:ring-indigo-500 dark:focus:ring-indigo-600 dark:focus:ring-offset-gray-800']) !!}>

#### Inizio File: /home/fabio/EGI/resources/views/components/collection-card.blade.php ####

@props(['id', 'editable' => false, 'imageType' => 'card', 'show_save_button' => true])

<div x-data="{ preview: null }" class="bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-shadow duration-300 overflow-hidden flex flex-col h-full">
    <!-- Immagine o Placeholder -->
    <figure class="h-48 w-full overflow-hidden bg-gray-900 flex items-center justify-center cursor-pointer">
        <!-- Anteprima dell'immagine caricata con Alpine.js -->
        <template x-if="preview">
            <img
                :src="preview"
                alt="Preview"
                class="w-full h-full object-contain transition-transform duration-300 group-hover:scale-105"
            >
        </template>

        @php
            $imagePath = $imageType === 'card' ? $collection->image_card : $collection->image_EGI;
        @endphp

        <!-- Immagine salvata se esiste, nascosta se c'è l'anteprima -->
        @if($imagePath)
            <img
                x-show="!preview"
                src="{{ $imagePath }}"
                alt="{{ $collection->collection_name }}"
                class="w-full h-full object-contain transition-transform duration-300 group-hover:scale-105"
            >
        @endif

        <!-- Icona della fotocamera se non c'è immagine -->
        @if(!$imagePath)
            <div
                class="h-full w-full flex items-center justify-center bg-gradient-to-r from-blue-500 to-purple-600"
                @if($editable) onclick="document.getElementById('image-{{ $imageType }}-{{ $id }}').click();" @endif
            >
                <x-repo-icon name="camera" class="w-20 h-20 text-white opacity-50" />
            </div>
        @endif
    </figure>

    <!-- Input File per il Caricamento dell’Immagine -->
    <input
        type="file"
        wire:model="uploadedImage"
        id="image-{{ $imageType }}-{{ $id }}"
        class="hidden"
        accept="image/*"
        @change="preview = URL.createObjectURL($event.target.files[0])"
    >

    <!-- Contenuto della Card -->
    <div class="p-4 flex flex-col justify-between flex-grow">
        <h2 class="text-xl font-bold text-white mb-2">
            {{ $collection->collection_name }}
        </h2>
        <p class="text-gray-400 text-sm line-clamp-2 mb-4">
            {{ Str::limit($collection->description, 100) }}
        </p>

        <!-- Badge e ID -->
        <div class="flex justify-between items-center mt-auto">
            <span class="badge bg-gradient-to-r from-purple-500 to-blue-500 text-white px-4 py-3 rounded-full">
                EGI
            </span>
            <span class="text-xs text-gray-500">ID: {{ $collection->id }}</span>
        </div>

        <!-- Pulsanti di Azione -->
        <div class="flex justify-end space-x-2 mt-4">
            @if($show_save_button)
                <a href="{{ route('collections.edit', ['id' => $collection->id]) }}" class="btn btn-primary btn-sm">
                    {{ __('collection.open_collection') }}
                </a>
            @endif
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/confirmation-modal.blade.php ####

@props(['id' => null, 'maxWidth' => null])

<x-modal :id="$id" :maxWidth="$maxWidth" {{ $attributes }}>
    <div class="bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
            <div class="mx-auto shrink-0 flex items-center justify-center size-12 rounded-full bg-red-100 sm:mx-0 sm:size-10">
                <svg class="size-6 text-red-600 dark:text-red-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                </svg>
            </div>

            <div class="mt-3 text-center sm:mt-0 sm:ms-4 sm:text-start">
                <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                    {{ $title }}
                </h3>

                <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
                    {{ $content }}
                </div>
            </div>
        </div>
    </div>

    <div class="flex flex-row justify-end px-6 py-4 bg-gray-100 dark:bg-gray-800 text-end">
        {{ $footer }}
    </div>
</x-modal>

#### Inizio File: /home/fabio/EGI/resources/views/components/confirms-password.blade.php ####

@props(['title' => __('Confirm Password'), 'content' => __('For your security, please confirm your password to continue.'), 'button' => __('Confirm')])

@php
    $confirmableId = md5($attributes->wire('then'));
@endphp

<span
    {{ $attributes->wire('then') }}
    x-data
    x-ref="span"
    x-on:click="$wire.startConfirmingPassword('{{ $confirmableId }}')"
    x-on:password-confirmed.window="setTimeout(() => $event.detail.id === '{{ $confirmableId }}' && $refs.span.dispatchEvent(new CustomEvent('then', { bubbles: false })), 250);"
>
    {{ $slot }}
</span>

@once
<x-dialog-modal wire:model.live="confirmingPassword">
    <x-slot name="title">
        {{ $title }}
    </x-slot>

    <x-slot name="content">
        {{ $content }}

        <div class="mt-4" x-data="{}" x-on:confirming-password.window="setTimeout(() => $refs.confirmable_password.focus(), 250)">
            <x-input type="password" class="mt-1 block w-3/4" placeholder="{{ __('Password') }}" autocomplete="current-password"
                        x-ref="confirmable_password"
                        wire:model="confirmablePassword"
                        wire:keydown.enter="confirmPassword" />

            <x-input-error for="confirmable_password" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="footer">
        <x-secondary-button wire:click="stopConfirmingPassword" wire:loading.attr="disabled">
            {{ __('Cancel') }}
        </x-secondary-button>

        <x-button class="ms-3" dusk="confirm-password-button" wire:click="confirmPassword" wire:loading.attr="disabled">
            {{ $button }}
        </x-button>
    </x-slot>
</x-dialog-modal>
@endonce

#### Inizio File: /home/fabio/EGI/resources/views/components/danger-button.blade.php ####

<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/dialog-modal.blade.php ####

@props(['id' => null, 'maxWidth' => null])

<x-modal :id="$id" :maxWidth="$maxWidth" {{ $attributes }}>
    <div class="px-6 py-4">
        <div class="text-lg font-medium text-gray-900 dark:text-gray-100">
            {{ $title }}
        </div>

        <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
            {{ $content }}
        </div>
    </div>

    <div class="flex flex-row justify-end px-6 py-4 bg-gray-100 dark:bg-gray-800 text-end">
        {{ $footer }}
    </div>
</x-modal>

#### Inizio File: /home/fabio/EGI/resources/views/components/dropdown-link.blade.php ####

<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:bg-gray-100 dark:focus:bg-gray-800 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/dropdown.blade.php ####

@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white dark:bg-gray-700', 'dropdownClasses' => ''])

@php
$alignmentClasses = match ($align) {
    'left' => 'ltr:origin-top-left rtl:origin-top-right start-0',
    'top' => 'origin-top',
    'none', 'false' => '',
    default => 'ltr:origin-top-right rtl:origin-top-left end-0',
};

$width = match ($width) {
    '48' => 'w-48',
    '60' => 'w-60',
    default => 'w-48',
};
@endphp

<div class="relative" x-data="{ open: false }" @click.away="open = false" @close.stop="open = false">
    <div @click="open = ! open">
        {{ $trigger }}
    </div>

    <div x-show="open"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="transform opacity-0 scale-95"
            x-transition:enter-end="transform opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="transform opacity-100 scale-100"
            x-transition:leave-end="transform opacity-0 scale-95"
            class="absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }} {{ $dropdownClasses }}"
            style="display: none;"
            @click="open = false">
        <div class="rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}">
            {{ $content }}
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/form-button.blade.php ####

<button
    type="{{ $type }}"
    {{ $attributes->merge([
        'class' => 'btn btn-' . $style .
                  ($size ? ' btn-' . $size : '') .
                  ' transition-transform duration-150 transform shadow-lg' .
                  ' active:shadow-md active:translate-y-1 hover:scale-105' .
                  ' focus:outline-none focus:ring-2 focus:ring-' . $style . ' focus:ring-opacity-50' .
                  ' ' . $class
    ]) }}
>
    {{ $slot }}
</button> 

#### Inizio File: /home/fabio/EGI/resources/views/components/form-input-icon.blade.php ####

@props([
    'type' => 'text',
    'label' => '',
    'model' => '',
    'id' => '',
    'required' => false,
    'class' => '',
    'placeholder' => '',
    'icon' => '',
    'iconPosition' => 'right',
    'value' => ''
])

<div>
    @if($label)
        <label for="{{ $id }}" class="block mb-1 text-sm font-medium">{{ $label }}</label>
    @endif

    <label class="input input-bordered flex items-center gap-2 {{ $class }}">
        @if($iconPosition === 'left')
            @include("components.icons.$icon")
        @endif

        <input
            type="{{ $type }}"
            @if($model) wire:model="{{ $model }}" @endif
            id="{{ $id }}"
            class="grow"
            placeholder="{{ $placeholder }}"
            @if($value) value="{{ $value }}" @endif
            {{ $required ? 'required' : '' }}
        >

        @if($iconPosition === 'right')
            @include("components.icons.$icon")
        @endif
    </label>

    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div> 

#### Inizio File: /home/fabio/EGI/resources/views/components/form-input.blade.php ####

@props([
    'type' => 'text',
    'label',
    'model',
    'datatip',
    'id',
    'required' => false,
    'width_label' => '',
    'width_input' => '',
    'placeholder' => '',
    'style' => 'primary',
    'icon' => null,

])

<div>
    <label class="text-sm label">{{ $label }}</label>
    <label
        class="for={{ $id }} input-{{ $style }} {{ $width_label }} input input-bordered flex items-center gap-2 text-sm w-full"
    >
        @if ($iconHtml)
            <div>{!! $iconHtml !!}</div>
        @endif

        <!-- Div tooltip che si comporta da "contenitore" flessibile -->
        <div class="tooltip tooltip-info flex-1 min-w-0" data-tip="{{ $datatip }}">
            <input
                type="{{ $type }}"
                wire:model="{{ $model }}"
                id="{{ $id }}"
                class="border-0 border-e-orange-800 focus:border-transparent focus:ring-0 {{ $width_input }} text-sm w-full"
                placeholder="{{ $placeholder }}" {{ $required ? 'required' : '' }}
            >
        </div>
    </label>

    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div>


#### Inizio File: /home/fabio/EGI/resources/views/components/form-section.blade.php ####

@props(['submit'])

<div {{ $attributes->merge(['class' => 'md:grid md:grid-cols-3 md:gap-6']) }}>
    <x-section-title>
        <x-slot name="title">{{ $title }}</x-slot>
        <x-slot name="description">{{ $description }}</x-slot>
    </x-section-title>

    <div class="mt-5 md:mt-0 md:col-span-2">
        <form wire:submit="{{ $submit }}">
            <div class="px-4 py-5 bg-white dark:bg-gray-800 sm:p-6 shadow {{ isset($actions) ? 'sm:rounded-tl-md sm:rounded-tr-md' : 'sm:rounded-md' }}">
                <div class="grid grid-cols-6 gap-6">
                    {{ $form }}
                </div>
            </div>

            @if (isset($actions))
                <div class="flex items-center justify-end px-4 py-3 bg-gray-50 dark:bg-gray-800 text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">
                    {{ $actions }}
                </div>
            @endif
        </form>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/form-select.blade.php ####

@props([
    'label',
    'model',
    'id',
    'options' => [],
    'required' => false,
    'class' => '',
    'style' => 'primary', // primary, secondary, accent, info, success, warning, error
    'maxWidth' => 'xs' // xs, sm, md, lg, xl
])

<div>
    <label for="{{ $id }}" class="label text-sm">{{ $label }}</label>
    <select
        wire:model="{{ $model }}"
        id="{{ $id }}"
        class="select select-{{ $style }} max-w-{{ $maxWidth }} {{ $class }}"
        {{ $required ? 'required' : '' }}
    >
        {{ $slot }}
    </select>
    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/email.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z" />
    <path
        d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/help.blade.php ####


#### Inizio File: /home/fabio/EGI/resources/views/components/icons/password.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        fill-rule="evenodd"
        d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
        clip-rule="evenodd" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/search.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        fill-rule="evenodd"
        d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
        clip-rule="evenodd" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/user.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM12.735 14c.618 0 1.093-.561.872-1.139a6.002 6.002 0 0 0-11.215 0c-.22.578.254 1.139.872 1.139h9.47Z" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/image-uploader.blade.php ####

@props([
    'model',
    'id',
    'label',
    'image',
    'removeMethod' => 'removeImage',
])


<div class="items-center form-control">
    <label class="label">
        <span class="font-semibold label-text">{{ $label }}</span>
    </label>

    {{--
        Debug. Vista su url temporaneo dell'immagine caricata
        @if ($this->$model instanceof Illuminate\Http\UploadedFile)
            @dump($this->$model->temporaryUrl())
        @endif
    --}}

    <div class="tooltip" data-tip="Click to upload image">

            <div class="avatar">
                <div class="w-24 border rounded-full cursor-pointer border-base-300 hover:border-primary"
                @if($image === '' || $image === null)
                    onclick="document.getElementById('{{ $id }}').click();"
                @endif
                >

                    @if($image !== '' && $image !== null )
                        <img src="{{ Storage::url($image) }}" class="object-cover w-full h-full rounded-full" title="{{ $image }}">
                    @else
                        @if ($this->$model instanceof Illuminate\Http\UploadedFile)
                            <img src="{{ $this->$model->temporaryUrl() }}" class="object-cover w-full h-full rounded-full">
                        @else
                            <div class="flex items-center justify-center h-full text-base-content">
                                @if ($iconHtml)
                                <x-icon name="camera" class="w-8 h-8 opacity-50" />
                                @endif
                            </div>
                        @endif
                    @endif
                </div>
            </div>
    </div>

    <input
        type="file"
        wire:model={{ $model }}
        id="{{ $id }}"
        class="hidden"
        accept="image/*"
    >

    @error($model)
        <span class="mt-1 text-sm text-error">messaggio {{ $message }}</span>
    @enderror

    @if ($image !== '' && $image !== null )
        <button
            type="button"
            wire:click="{{ $removeMethod }}( '{{ $id }}' )"
            onclick="document.getElementById('{{ $id }}').value = '';"
            class="mt-3 btn btn-error"
        >
            {{ __('label.delete') }}
        </button>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/input-error.blade.php ####

@props(['for'])

@error($for)
    <p {{ $attributes->merge(['class' => 'text-sm text-red-600 dark:text-red-400']) }}>{{ $message }}</p>
@enderror

#### Inizio File: /home/fabio/EGI/resources/views/components/input.blade.php ####

@props(['disabled' => false])

<input {{ $disabled ? 'disabled' : '' }} {!! $attributes->merge(['class' => 'border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm']) !!}>

#### Inizio File: /home/fabio/EGI/resources/views/components/label.blade.php ####

@props(['value'])

<label {{ $attributes->merge(['class' => 'block font-medium text-sm text-gray-700 dark:text-gray-300']) }}>
    {{ $value ?? $slot }}
</label>

#### Inizio File: /home/fabio/EGI/resources/views/components/layouts/app.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <title>{{ config('app.name', 'Florence EGI') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
        <script>console.log('resources/views/components/layouts/app.blade.php');</script>

        {{-- Icone di MaterialIcons --}}
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

        <!-- Styles -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"/>
    </head>
    <body class="font-sans antialiased bg-base-200">
        <div class="drawer lg:drawer-open">
            <input id="main-drawer" type="checkbox" class="drawer-toggle" />

            <!-- Page Content -->
            <div class="flex flex-col min-h-screen drawer-content">
                <!-- Navbar -->
                <livewire:navigation-menu />

                <!-- Page Heading -->
                @if (isset($header))
                    <header class="shadow bg-base-100">
                        <div class="px-4 py-6 mx-auto max-w-7xl sm:px-6 lg:px-8">
                            {{ $header }}
                        </div>
                    </header>
                @endif

                <!-- Main Content -->
                <main class="flex-1 p-4 lg:p-8">
                    {{ $slot }}
                </main>
            </div>

            <!-- Sidebar -->
            <livewire:sidebar />

            @stack('modals')

            @if(app()->environment('local'))
                {!! $debugInfo ?? '' !!}
            @endif
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/components/modal.blade.php ####

@props(['id', 'maxWidth'])

@php
$id = $id ?? md5($attributes->wire('model'));

$maxWidth = [
    'sm' => 'sm:max-w-sm',
    'md' => 'sm:max-w-md',
    'lg' => 'sm:max-w-lg',
    'xl' => 'sm:max-w-xl',
    '2xl' => 'sm:max-w-2xl',
][$maxWidth ?? '2xl'];
@endphp

<div
    x-data="{ show: @entangle($attributes->wire('model')) }"
    x-on:close.stop="show = false"
    x-on:keydown.escape.window="show = false"
    x-show="show"
    id="{{ $id }}"
    class="jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50"
    style="display: none;"
>
    <div x-show="show" class="fixed inset-0 transform transition-all" x-on:click="show = false" x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0">
        <div class="absolute inset-0 bg-gray-500 dark:bg-gray-900 opacity-75"></div>
    </div>

    <div x-show="show" class="mb-6 bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto"
                    x-trap.inert.noscroll="show"
                    x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95">
        {{ $slot }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/nav-link.blade.php ####

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 dark:border-indigo-600 text-sm font-medium leading-5 text-gray-900 dark:text-gray-100 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-700 focus:outline-none focus:text-gray-700 dark:focus:text-gray-300 focus:border-gray-300 dark:focus:border-gray-700 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/repo-icon.blade.php ####

<div class="{{ $class ?? 'w-6 h-6' }}">
    {!! $iconHtml !!}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/responsive-nav-link.blade.php ####

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'block w-full ps-3 pe-4 py-2 border-l-4 border-indigo-400 dark:border-indigo-600 text-start text-base font-medium text-indigo-700 dark:text-indigo-300 bg-indigo-50 dark:bg-indigo-900/50 focus:outline-none focus:text-indigo-800 dark:focus:text-indigo-200 focus:bg-indigo-100 dark:focus:bg-indigo-900 focus:border-indigo-700 dark:focus:border-indigo-300 transition duration-150 ease-in-out'
            : 'block w-full ps-3 pe-4 py-2 border-l-4 border-transparent text-start text-base font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 hover:border-gray-300 dark:hover:border-gray-600 focus:outline-none focus:text-gray-800 dark:focus:text-gray-200 focus:bg-gray-50 dark:focus:bg-gray-700 focus:border-gray-300 dark:focus:border-gray-600 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/secondary-button.blade.php ####

<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-md font-semibold text-xs text-gray-700 dark:text-gray-300 uppercase tracking-widest shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-25 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/section-border.blade.php ####

<div class="hidden sm:block">
    <div class="py-8">
        <div class="border-t border-gray-200 dark:border-gray-700"></div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/section-title.blade.php ####

<div class="md:col-span-1 flex justify-between">
    <div class="px-4 sm:px-0">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">{{ $title }}</h3>

        <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
            {{ $description }}
        </p>
    </div>

    <div class="px-4 sm:px-0">
        {{ $aside ?? '' }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/separator.blade.php ####

<div class="border-t border-gray-200 dark:border-gray-600"></div>

#### Inizio File: /home/fabio/EGI/resources/views/components/suggestion-icon.blade.php ####

@props([
    'tooltip',
])

<div
    @click="open = true"
    class="relative cursor-pointer flex items-center justify-center tooltip tooltip-info"
    data-tip="{{ $tooltip }}"
>
    <svg
        xmlns="http://www.w3.org/2000/svg"
        height="24px"
        viewBox="0 0 24 24"
        width="24px"
        fill="#5f6368"
    >
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z" />
    </svg>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/switchable-team.blade.php ####

@props(['team', 'component' => 'dropdown-link'])

<form method="POST" action="{{ route('current-team.update') }}" x-data>
    @method('PUT')
    @csrf

    <!-- Hidden Team ID -->
    <input type="hidden" name="team_id" value="{{ $team->id }}">

    <x-dynamic-component :component="$component" href="#" x-on:click.prevent="$root.submit();">
        <div class="flex items-center">
            @if (Auth::user()->isCurrentTeam($team))
                <svg class="me-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            @endif

            <div class="truncate">{{ $team->name }}</div>
        </div>
    </x-dynamic-component>
</form>

#### Inizio File: /home/fabio/EGI/resources/views/components/validation-errors.blade.php ####

@if ($errors->any())
    <div {{ $attributes }}>
        <div class="font-medium text-red-600 dark:text-red-400">{{ __('Whoops! Something went wrong.') }}</div>

        <ul class="mt-3 list-disc list-inside text-sm text-red-600 dark:text-red-400">
            @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
            @endforeach
        </ul>
    </div>
@endif

#### Inizio File: /home/fabio/EGI/resources/views/components/welcome.blade.php ####

<div class="p-6 lg:p-8 bg-white border-b border-gray-200">
    <x-application-logo class="block h-12 w-auto" />

    <h1 class="mt-8 text-2xl font-medium text-gray-900">
        Welcome to your Florence EGI Platform!
    </h1>

    <p class="mt-6 text-gray-500 leading-relaxed">
        Florence EGI è una piattaforma innovativa, progettata per supportare creatori e sostenitori ambientali nella gestione e promozione delle proprie collezioni digitali. Qui troverai strumenti avanzati per creare, organizzare e presentare le tue collezioni, con un focus speciale sulla trasparenza e sull’impatto positivo. L’obiettivo è connettere creatori, utenti e programmi di protezione ambientale (EPP) attraverso un’esperienza intuitiva e funzionale. Esplora le possibilità offerte da Florence EGI e porta il tuo contributo creativo verso un impatto concreto e sostenibile.
    </p>
</div>

<div class="bg-gray-200 bg-opacity-25 grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8 p-6 lg:p-8">
    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://laravel.com/docs">Documentation</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Florence EGI offre una documentazione completa che copre ogni aspetto della piattaforma. Che tu sia un nuovo utente o abbia già esperienza, ti consigliamo di leggere tutta la documentazione dall'inizio alla fine per comprendere appieno le funzionalità e le potenzialità della piattaforma.
        </p>

        <p class="mt-4 text-sm">
            <a href="https://laravel.com/docs" class="inline-flex items-center font-semibold text-indigo-700">
                Explore the documentation

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 w-5 h-5 fill-indigo-500">
                    <path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd" />
                </svg>
            </a>
        </p>
    </div>

    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://florenceegi.com/casts">Florence EGI Casts</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Florence EGI Casts offre una collezione crescente di tutorial video per esplorare la piattaforma Florence EGI, scoprire le funzionalità del marketplace, e imparare a navigare e creare collezioni EGI. Approfondisci, scopri nuove opportunità e accresci le tue competenze creative con questi contenuti esclusivi.
        </p>

        <p class="mt-4 text-sm">
            <a href="https://florenceegi.com/casts" class="inline-flex items-center font-semibold text-indigo-700">
                Inizia a guardare Florence EGI Casts

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 w-5 h-5 fill-indigo-500">
                    <path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd" />
                </svg>
            </a>
        </p>
    </div>


    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://florenceegi.com/">Florence EGI Marketplace</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Il Florence EGI Marketplace è progettato per essere la tua piattaforma di riferimento per esplorare, scoprire e supportare collezioni uniche di EGI, tutte connesse a progetti ambientali. La piattaforma offre un'esperienza di navigazione moderna e intuitiva, arricchita da funzionalità di prenotazione e valutazione per aiutarti a scegliere le opere che più ti ispirano.
        </p>
    </div>

    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                Florence EGI Institutional Site
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Il sito istituzionale Florence EGI offre informazioni complete sul progetto, inclusi documenti ufficiali, il white paper, la roadmap e dettagli sugli obiettivi ambientali. Questo è il punto di riferimento per tutti coloro che desiderano comprendere la missione di Florence EGI, scoprire gli EPP, e contribuire alle nostre iniziative di sostenibilità.
        </p>
    </div>

</div>

#### Inizio File: /home/fabio/EGI/resources/views/dashboard.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-xl sm:rounded-lg">
                {{-- <x-welcome /> --}}
                <livewire:dashboard />

            </div>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/emails/team-invitation.blade.php ####

@component('mail::message')
{{ __('You have been invited to join the :team team!', ['team' => $invitation->team->name]) }}

@if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::registration()))
{{ __('If you do not have an account, you may create one by clicking the button below. After creating an account, you may click the invitation acceptance button in this email to accept the team invitation:') }}

@component('mail::button', ['url' => route('register')])
{{ __('Create Account') }}
@endcomponent

{{ __('If you already have an account, you may accept this invitation by clicking the button below:') }}

@else
{{ __('You may accept this invitation by clicking the button below:') }}
@endif


@component('mail::button', ['url' => $acceptUrl])
{{ __('Accept Invitation') }}
@endcomponent

{{ __('If you did not expect to receive an invitation to this team, you may discard this email.') }}
@endcomponent

#### Inizio File: /home/fabio/EGI/resources/views/error.blade.php ####

<x-app-layout>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8d7da;
            color: #721c24;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;Qà
            align-items: center;
            height: 100vh;
        }
        .error-container {
            background-color: #f5c6cb;
            padding: 20px 40px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }
        p {
            font-size: 18px;
            margin: 0;
        }
    </style>
    <div class="error-container">
        <h1>Si è verificato un errore</h1>
        <p>{{ $message }}</p>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/app.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
        <script>console.log('resources/views/layouts/app.blade.php gg');</script>

         {{-- Icone di MaterialIcons --}}
         <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
         <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

         <!-- Styles -->
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"/>

        <!-- Styles -->
        @livewireStyles
    </head>

    <body class="font-sans antialiased bg-base-200">
        <!-- Inizio drawer -->
        <!-- lg:drawer-open => Su schermi lg o maggiori, la sidebar è sempre visibile -->
        <!-- drawer => classe DaisyUI per attivare il layout a scomparsa -->
        <div class="drawer lg:drawer-open">

            <!-- Questo checkbox controlla lo stato del drawer -->
            <input id="main-drawer" type="checkbox" class="drawer-toggle" />

            <!-- Contenuto principale della pagina -->
            <div class="flex flex-col min-h-screen drawer-content">
                <!-- Navbar -->
                <livewire:navigation-menu />

                <!-- Page Heading -->
                @if (isset($header))
                    <header class="shadow bg-base-100">
                        <div class="px-4 py-6 mx-auto max-w-7xl sm:px-6 lg:px-8">
                            {{ $header }}
                        </div>
                    </header>
                @endif

                <!-- Main Content -->
                <main class="flex-1 p-4 lg:p-8">
                    {{ $slot }}
                </main>
            </div>

            <!-- Sidebar -->
            <!-- Sidebar rimane invariata, semplicemente sta dentro .drawer-side -->
            <livewire:sidebar/>

            @stack('modals')

            @if(app()->environment('local'))
                {!! $debugInfo ?? '' !!}
            @endif
        </div>
    </body>




</html>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/guest-welcome.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}" data-theme="florenceegi">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Florence EGI') }}</title>
        <script>console.log('resources/views/layouts/guest-welcome.blade.php');</script>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
    </head>
    <body class="font-sans antialiased bg-gradient-to-br from-gray-900 to-gray-800 text-green-800">
        <div class="min-h-screen">
            {{ $slot }}
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/guest.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>
        <script>console.log('resources/views/layouts/guest.blade.php');</script>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])

        <!-- Styles -->
        @livewireStyles
    </head>
    <body>
        <div class="font-sans text-gray-900 dark:text-gray-100 antialiased">
            {{ $slot }}
        </div>

        @livewireScripts
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/back_to_collection_button.blade.php ####

<div class="mt-8 ml-2">
    <a href="{{ route('collections.edit', ['id' => $collection->id]) }}" class="p-4">
        <!-- disegna un bottone primario -->
        <div class="flex gap-2 border border-green-500 p-4 w-fit rounded-lg items-center bg-green-500 hover:bg-green-600 text-white font-bold shadow-md transition-all duration-300 cursor-pointer">
            <x-repo-icon name="back" class="text-gray-500 opacity-50" />
            {{ __('collection.came_back_to_collection') }}
        </div>

    </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/data_section.blade.php ####

<div id="image_of_collection" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">

    <!-- Titolo della sezione -->
    <div class="mb-6 flex items-start justify-between">
        <div>
            <h2 class="text-2xl font-bold text-white">{{ __('collection.data_section_title') }}</h2>
            <p class="text-sm text-gray-400">{{ __('collection.data_section_description') }}</p>
        </div>

        <div class="ml-4">
            @include('livewire.modale.collection_general_suggestion')
        </div>
    </div>

    <!-- Campi di Input -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2">

        <!-- Collection Name -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.collection_name') }}</span>
            </div>
            <x-form-input
                id="collection_name"
                type="text"
                :label="__('collection.collection_name')"
                :placeholder="__('collection.collection_name')"
                :datatip="__('collection.collection_name')"
                model="collection_name"
                width_label="w-full"
                width_input="w-full"
                icon="collection-name"
                required
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Collection is_published -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="form-control w-52">
                <label class="cursor-pointer label">
                    <span class="label-text text-white">{{ __('collection.publish_collection') }}</span>
                    <input type="checkbox" class="toggle toggle-primary" wire:model='is_published' />
                </label>
            </div>
        </div>

        <!-- Select Content Type -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <label class="form-control w-full max-w-xs">
                <div class="label">
                    <span class="label-text text-white">{{ __('collection.collection_name') }}</span>
                </div>
                <select class="select select-bordered select-primary bg-gray-700 text-white" wire:model='type'>
                    <option disabled selected>{{ __('collection.select_content_type') }}</option>
                    <option value="image">{{ __('collection.type_image') }}</option>
                    <option value="ebook">{{ __('collection.type_ebook') }}</option>
                    <option value="audio">{{ __('collection.type_audio') }}</option>
                    <option value="video">{{ __('collection.type_video') }}</option>
                </select>
            </label>
        </div>

    </div>

    <!-- Altri Campi -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3 mt-6">

        <!-- EGI Number -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.EGI_number') }}</span>
            </div>
            <x-form-input
                :label="__('collection.EGI_number')"
                :placeholder="__('collection.EGI_number')"
                :datatip="__('collection.EGI_number')"
                type="number"
                model="EGI_number"
                id="EGI_number"
                width_label="w-full"
                width_input="w-full"
                required
                icon="collection-number"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Floor Price -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.set_base_EcoNFT_price') }}</span>
            </div>
            <x-form-input
                :label="__('collection.EGI_floor_price')"
                :placeholder="__('collection.set_base_EcoNFT_price')"
                :datatip="__('collection.set_base_EcoNFT_price')"
                type="number"
                model="floor_price"
                id="floor_price"
                width_label="w-full"
                width_input="w-full"
                required
                icon="egi-base-price"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Collection Position -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.position_for_mor_than_one_collection') }}</span>
            </div>
            <x-form-input
                :label="__('collection.position')"
                type="number"
                :datatip="__('collection.position_for_mor_than_one_collection')"
                model="position"
                :placeholder="__('collection.position')"
                id="position"
                width_label="w-full"
                width_input="w-full"
                required
                icon="collection-position"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

    </div>

    <!-- Textarea per la Descrizione -->
    <div class="mt-6">
        <h2 for="description" class="block mb-2 text-sm font-medium text-white">
            {{ __('collection.collection_description') }}
        </h2>
        <div class="w-full tooltip tooltip-info z-10" data-tip="{{ __('collection.collection_description_suggest') }}">
            <textarea wire:model="description"
                      id="description"
                      class="textarea textarea-bordered textarea-primary bg-gray-900 text-white w-full min-h-[120px] rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300"
                      required
                      placeholder="{{ __('collection.collection_description_placeholder') }}">
            </textarea>
        </div>
        @error('collection.description')
            <span class="text-xs text-error">{{ $message }}</span>
        @enderror
    </div>

    <div class="grid grid-cols-1 gap-6 md:grid-cols-1">
        <!-- URL della Collection -->
        <div class="mt-6 bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.collection_site_URL_suggest') }}</span>
            </div>
            <x-form-input
                :label="__('collection.collection_site_URL')"
                type="url"
                :datatip="__('collection.collection_site_URL_suggest')"
                model="url_collection_site"
                id="url_collection_site"
                :placeholder="__('collection.collection_site_URL')"
                width_label="w-full"
                width_input="w-full"
                required
                icon="url"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

    </div>

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/image_section.blade.php ####

<div id="image_of_collection" class="p-4 border border-gray-300 rounded-lg bg-white shadow-md">

    <div class="mb-4 flex items-start justify-between">
        <!-- Primo div con il titolo e la descrizione -->
        <div>
            <h2 class="text-lg font-semibold text-gray-800">{{ __('collection.image_section_title') }}</h2>
            <p class="text-sm text-gray-500">{{ __('collection.image_section_description') }}</p>
        </div>

        <!-- Div per il pulsante dei suggerimenti -->
        <div class="ml-4">
            @include('livewire.modale.collection_image_suggestion')
        </div>
    </div>

    <!-- Griglia delle immagini -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        <!-- Immagine banner -->
        <x-image-uploader id="banner"
            id="banner"
            :label="__('collection.banner_image')"
            model="path_image_banner"
            :image="$collection['path_image_banner']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
        <!-- Immagine Card -->
        <x-image-uploader
            id="card"
            :label="__('collection.card_image')"
            model="path_image_card"
            :image="$collection['path_image_card']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
        {{-- @include('livewire.collection-manager-includes.path_image_card') --}}

        <!-- Immagine Avatar -->
        <x-image-uploader id="avatar"
            id="avatar"
            :label="__('collection.avatar_image')"
            model="path_image_avatar"
            :image="$collection['path_image_avatar']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
    </div>

    <div class="flex justify-end space-x-2 mt-4">
        <a href="{{ route('collections.head_images', ['id' => $collectionId]) }}" class="btn btn-primary btn-sm">
            {{ __('collection.open_collection') }}
        </a>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_avatar.blade.php ####

<div class="text-center">
    <label for="banner" class="block mb-2 text-sm font-semibold text-gray-700">Image Avatar</label>
    <div class="relative inline-block cursor-pointer" onclick="document.getElementById('banner').click();">
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">
            @if ($path_image_avatar)
                <img src="{{ $path_image_avatar->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif
        </div>
    </div>

    <input type="file" wire:model="path_image_avatar" id="avatar" class="hidden" accept="image/*">
    @error('path_image_avatar')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_avatar)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('banner')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_banner.blade.php ####

<div class="text-center">
    <label for="banner" class="block mb-2 text-sm font-semibold text-gray-700">Banner Image</label>
    <div class="relative inline-block cursor-pointer" onclick="document.getElementById('banner').click();">
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">
            @if ($path_image_banner)
                <img src="{{ $path_image_banner->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif
        </div>
    </div>

    <input type="file" wire:model="path_image_banner" id="banner" class="hidden" accept="image/*">
    @error('path_image_banner')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_banner)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('banner')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_card.blade.php ####

<div class="text-center">
    <label for="card" class="block mb-2 text-sm font-semibold text-gray-700">Card Image</label>
    {{-- <div class="relative inline-block cursor-pointer" onclick="document.getElementById('card').click();"> --}}
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">

            @if ($path_image_card)
                <img src="{{ $path_image_card->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif

        </div>
    {{-- </div> --}}

    <input type="file" wire:model="path_image_card" id="card" class="" accept="image/*">

    @error('path_image_card')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_card)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('card')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/wallets_section.blade.php ####

<div id="wallet_section" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">

    <!-- Titolo della sezione -->
    <div class="mb-6">
        <h2 class="text-2xl font-bold text-white">{{ __('collection.wallet_section_title') }}</h2>
        <p class="text-sm text-gray-400">{{ __('collection.wallet_section_description') }}</p>
    </div>

    <!-- Vista Desktop degli Wallets -->
    @if($wallets)
        <div class="hidden md:block overflow-x-auto">
            <table class="table-auto w-full border-collapse rounded-2xl shadow-md overflow-hidden">
                <thead class="bg-gradient-to-r from-blue-500 to-purple-600 text-white">
                    <tr>
                        <th class="px-4 py-3 text-left">{{ __('collection.wallet_address') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.user_role') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.royalty_mint') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.royalty_rebind') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.status') }}</th>
                    </tr>
                </thead>
                <tbody class="bg-gray-900 text-gray-300">
                    @forelse ($wallets as $wallet)
                        <tr class="hover:bg-gray-700 transition-colors duration-200">
                            <td class="px-4 py-3">
                                @if ($wallet->wallet)
                                    <div class="tooltip tooltip-right" data-tip="{{ $wallet->wallet }}">
                                        <span class="text-blue-400 hover:underline cursor-pointer" onclick="copyToClipboard('{{ $wallet->wallet }}')">
                                            {{ $wallet->short_wallet }}
                                        </span>
                                    </div>
                                @endif
                            </td>
                            <td class="px-4 py-3">{{ $wallet->user_role ?? __('collection.role_unknown') }}</td>
                            <td class="px-4 py-3">{{ $wallet->royalty_mint }}%</td>
                            <td class="px-4 py-3">{{ $wallet->royalty_rebind }}%</td>
                            <td class="px-4 py-3">
                                <span class="badge {{ $wallet->status ? 'bg-green-500' : 'bg-red-500' }} text-white px-2 py-1 rounded-full">
                                    {{ $wallet->status ? __('collection.active') : __('collection.inactive') }}
                                </span>
                            </td>
                        </tr>
                    @empty
                        <tr>
                            <td colspan="5" class="px-4 py-3 text-center text-gray-400">
                                {{ __('collection.no_wallets') }}
                            </td>
                        </tr>
                    @endforelse
                </tbody>
            </table>
        </div>
    @endif

    <!-- Vista Mobile degli Wallets -->
    @if($wallets)
        <div class="block md:hidden">
            @forelse ($wallets as $wallet)
                <div class="p-4 mb-4 bg-gray-900 rounded-2xl shadow-md hover:shadow-lg transition-shadow duration-300">
                    <p class="text-gray-300">
                        <strong>{{ __('collection.wallet.address') }}:</strong>
                        <span class="text-blue-400 hover:underline cursor-pointer" onclick="copyToClipboard('{{ $wallet->wallet }}')">
                            {{ $wallet->short_wallet }}
                        </span>
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.user_role') }}:</strong> {{ $wallet->user_role ?? __('collection.wallet.role_unknown') }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.royalty_mint') }}:</strong> {{ $wallet->royalty_mint }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.royalty_rebind') }}:</strong> {{ $wallet->royalty_rebind }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.status') }}:</strong>
                        <span class="badge {{ $wallet->status ? 'bg-green-500' : 'bg-red-500' }} text-white px-2 py-1 rounded-full">
                            {{ $wallet->status ? __('label.active') : __('label.inactive') }}
                        </span>
                    </p>
                </div>
            @empty
                <p class="text-center text-gray-400">{{ __('collection.no_wallets') }}</p>
            @endforelse
        </div>
    @endif

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-carousel.blade.php ####

<div x-data="{ activeSlide: @entangle('activeSlide') }" class="relative w-full overflow-hidden">
    <h3 class="mt-6 text-xl">{{ __('collection.collections') }}</h3>

    <!-- Contenitore del carousel con larghezza fissa per le card -->
    <div class="relative">
        <div class="flex transition-transform duration-500 ease-in-out"
             :style="{ transform: `translateX(-${activeSlide * 25}%)` }">

            @foreach($collections as $index => $collection)
            <div class="w-full sm:max-w-[350px] px-2 flex-shrink-0">
                <x-collection-card :id="$collection->id" :editable="false" imageType="card" />

                </div>
            @endforeach

        </div>

        <!-- Pulsante per Slide Precedente -->
        <button wire:click="prevSlide"
                class="btn btn-circle absolute left-4 top-1/2 transform -translate-y-1/2 z-50">
            ❮
        </button>

        <!-- Pulsante per Slide Successiva -->
        <button wire:click="nextSlide"
                class="btn btn-circle absolute right-4 top-1/2 transform -translate-y-1/2 z-50">
            ❯
        </button>
    </div>

    <!-- Indicatori del Carousel -->
    <div class="flex justify-center mt-4">
        @foreach($collections as $index => $collection)
            <button wire:click="$set('activeSlide', {{ $index }})"
                    class="btn btn-xs mx-1"
                    :class="{ 'btn-active': activeSlide === {{ $index }} }">
            </button>
        @endforeach
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-manager.blade.php ####

<div class="max-w-4xl p-4 mx-auto">

    <!-- Flash Messages -->
    @if (session()->has('message'))
        <div class="mb-4 alert alert-success">
            {{ session('message') }}
        </div>
    @endif

    @if (session()->has('error'))
        <div class="mb-4 alert alert-error">
            {{ session('error') }}
        </div>
    @endif

    <h2 class="mb-4 text-2xl font-bold">{{ __('collection.manage_collection') }}</h2>

    <form wire:submit.prevent="save({{ $collectionId }})"
        class="p-6 space-y-6 bg-white rounded-lg shadow-sm">

        <!-- Sezione dei dati della collection -->
        @include('livewire.collection-manager-includes.data_section')

        <div class="mt-6 bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300 flex items-center justify-center">
            <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
                <!-- Bottone per aprire la vista per la gestione delle immagini di testata -->
                <a href="{{ route('collections.head_images', ['id' => $collectionId]) }}" class="btn btn-primary btn-lg">
                    {{ __('collection.collection_image') }}
                </a>

                <!-- Bottone per aprire la vista dei membri della collection -->
                <a href="{{ route('collections.collection_user', ['id' => $collectionId]) }}" class="btn btn-primary btn-lg">
                    {{ __('collection.collection_members') }}
                </a>
                <!-- Bottone per il salvataggio -->
                <div class="flex justify-end">
                    <x-form-button type="submit" style="primary" class="px-6">
                        {{ __('label.save') }}
                    </x-form-button>
                </div>
            </div>
        </div>
    </form>

</div>

<script>
    console.log('resources/views/livewire/collection-manager.blade.php');
</script>


<script>
    function closeModal() {
    document.querySelector('.fixed').remove();
}
</script>

<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            alert('Indirizzo copiato negli appunti!');
        }).catch(err => {
            console.error('Errore durante la copia: ', err);
        });
    }
</script>

<script>
    document.addEventListener('livewire:init', () => {
        // Gestisce errori di permessi o appartenenza
        Livewire.on('swal:error', (text) => {
            Swal.fire({
                icon: 'error',
                title: text[0]['title'],
                text: text[0]['text'],
                confirmButtonColor: '#d33',
                confirmButtonText: 'Chiudi'
            });
        });
    });
</script>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-user.blade.php ####

@php
    $canCreateWallet = (new \App\Livewire\Collections\CollectionUserMember)->userHasPermissionInCollection($collectionId, 'create_wallet');
@endphp
<div id="collection_management" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">
    <!-- Titolo della sezione -->
    <div id="collection_management" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">
        <!-- Titolo della sezione -->
        <div class="mb-6 flex items-start justify-between flex-wrap gap-4">
            <div>
                <h2 class="text-2xl font-bold text-white">{{ $collectionName }}</h2>
                <p class="text-sm text-gray-400">
                    {{ __('Owner:') }} {{ $collectionOwner->name }} {{ $collectionOwner->last_name }}
                </p>
                <p class="text-sm text-gray-400">{{ __('collection.team_members_description') }}</p>
            </div>
            @if($canCreateWallet)
                <div class="flex flex-wrap space-x-0 gap-4">
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="dispatch('openInviteModal')">
                        {{ __('collection.invite_collection_member') }}
                    </button>
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="$dispatch('openForCreateNewWallets')">
                        {{ __('collection.wallet.create_the_wallet') }}
                    </button>
                </div>
            @endif
        </div>
        <!-- Restante contenuto della vista -->
    </div>

    <!-- Sezione Membri della Collection -->
    <h3 class="text-xl font-bold text-white mb-4">{{ __('collection.members') }}</h3>
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        @foreach($collectionUsers as $member)
            <div class="{{ $member->status === 'pending' ? 'bg-yellow-800' : 'bg-gray-900' }} p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center mb-4">
                    <img class="w-12 h-12 rounded-full" src="{{ $member->user->profile_photo_url }}" alt="{{ $member->user->name }}">
                    <div class="ml-4">
                        <h3 class="text-lg font-bold text-white">{{ $member->user->name }} {{ $member->user->last_name }}</h3>
                        <p class="text-sm text-gray-400">{{ __('Role: ') . $member->role }}</p>
                        <p class="text-sm text-gray-400">{{ __('User id: ') . $member->user_id }}</p>
                    </div>
                </div>
                @if(!$member->wallet && $canCreateWallet)
                <!-- Bottone per creare un nuovo wallet. Il listener si trova in /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php -->
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="$dispatch('openForCreateNewWallets', { collectionId: {{ $member->collection_id }}, userId: {{ $member->user_id }} })">
                        {{ __('collection.wallet.create_wallet_for_member') }}
                    </button>
                @endif
            </div>
        @endforeach
    </div>

    <!-- Sezione Wallet -->
    <h3 class="text-xl font-bold text-white mt-8 mb-4">{{ __('collection.wallets') }}</h3>
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        @foreach($wallets as $wallet)
            <div class="{{ !$canCreateWallet || in_array($wallet->platform_role, ['natan', 'EPP']) ? 'bg-gray-700 opacity-75 cursor-not-allowed' : 'bg-gray-900' }} p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
                <div>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Role:') }}</strong> {{ $wallet->platform_role }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Wallet Address:') }}</strong> {{ substr($wallet->wallet, 0, 6) }}...{{ substr($wallet->wallet, -4) }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Mint Royalty:') }}</strong> {{ $wallet->royalty_mint }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Rebind Royalty:') }}</strong> {{ $wallet->royalty_rebind }}%
                    </p>

                    <!-- Nome e Cognome dell'Utente Correlato -->
                    @if($wallet->user)
                        <p class="text-sm text-gray-400">
                            <strong>{{ __('Owner:') }}</strong> {{ $wallet->user->name }} {{ $wallet->user->last_name }}
                        </p>
                    @else
                        <p class="text-sm text-gray-400">
                            <strong>{{ __('Owner:') }}</strong> {{ __('Unassigned') }}
                        </p>
                    @endif
                </div>

                @if($canCreateWallet && (!in_array($wallet->platform_role, ['natan', 'EPP']) || Auth::user()->hasRole('superadmin')))
                    <button wire:click="$dispatch('openHandleWallets', { walletId: {{ $wallet->id }} })" class="btn btn-primary mt-4 w-full">
                        {{ __('collection.wallet.manage_wallet') }}
                    </button>
                @endif
            </div>
        @endforeach

    </div>

    <!-- Bottone che permette di aprire la collection -->
    @include('livewire.collection-manager-includes.back_to_collection_button')

    <!-- Placeholder se non ci sono membri o wallet -->

    <!-- Include le Modali -->
    <livewire:collections.edit-wallet-modal />
    <livewire:collections.invite-user-to-collection-modal :collectionId="$collectionId" />
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/create-collection.blade.php ####

<div class="max-w-2xl mx-auto p-6 bg-white rounded shadow">
    <h1 class="text-2xl font-bold mb-4">Crea una Nuova Collection</h1>

    <form wire:submit.prevent="create">
        <div class="mb-4">
            <label for="collection_name" class="block font-semibold">Nome della Collection</label>
            <input type="text" id="collection_name" wire:model="collection.collection_name" class="w-full border rounded p-2">
            @error('collection_name') <span class="text-red-500">{{ $message }}</span> @enderror
        </div>

        <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">{{ __('collection.new_collection') }}</button>
    </form>

    @if (session()->has('error'))
        <div class="text-red-500 mt-4">{{ session('error') }}</div>
    @endif
</div>

<script>
    console.log('resources/views/livewire/create-collection.blade.php');
</script>



#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/edit-wallet-modal.blade.php ####

<div>
    @if($show)
        <div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center">
            <div class="bg-gray-800 p-6 rounded-2xl w-full max-w-md shadow-lg">
                <h3 class="text-2xl font-bold text-white mb-4">{{ __('Edit Wallet Details') }}</h3>

                <!-- Wallet Address -->
                <div class="mb-4">
                    <label for="walletAddress" class="block text-sm font-medium text-gray-300">{{ __('Wallet Address') }}</label>
                    <input type="text" id="walletAddress" wire:model="walletAddress"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter wallet address') }}">
                    @error('walletAddress') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Royalty Mint -->
                <div class="mb-4">
                    <label for="royaltyMint" class="block text-sm font-medium text-gray-300">{{ __('Royalty Mint (%)') }}</label>
                    <input type="number" id="royaltyMint" wire:model="royaltyMint"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter royalty mint percentage') }}">
                    @error('royaltyMint') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Royalty Rebind -->
                <div class="mb-4">
                    <label for="royaltyRebind" class="block text-sm font-medium text-gray-300">{{ __('Royalty Rebind (%)') }}</label>
                    <input type="number" id="royaltyRebind" wire:model="royaltyRebind"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter royalty rebind percentage') }}">
                    @error('royaltyRebind') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Azioni -->
                <div class="flex justify-end space-x-4 mt-6">
                    <button wire:click="closeHandleWallets" class="btn btn-secondary">{{ __('label.cancel') }}</button>
                    @if($mode === 'create')
                        <button wire:click="createNewWallet" class="btn btn-secondary">{{ __('label.save') }}</button>
                    @else
                        <button wire:click="saveWallet" class="btn btn-primary">{{ __('label.save') }}</button>
                    @endif

                </div>
            </div>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/head-images-manager.blade.php ####

<div class="mx-auto max-w-4xl rounded-2xl border border-gray-700 bg-gray-800 p-6 shadow-lg">

    <h2 class="mb-6 text-2xl font-bold text-white">{{ __('collection.manage_head_images') }}</h2>

    <livewire:collections.images.banner-image-upload :collectionId="$collectionId">

    <div class="grid grid-cols-1 gap-6 sm:col-span-2 sm:grid-cols-3">
        <livewire:collections.images.card-image-upload :collectionId="$collectionId" />

        <!-- EGI Image -->
        @if (config('app.egi_asset'))
            <livewire:collections.images.egi-image-upload :collectionId="$collectionId" />
        @endif

        <!-- Avatar -->
        <livewire:collections.images.avatar-image-upload :collectionId="$collectionId" />
    </div>

    <!-- Bottone che permette di aprire la collection -->
    @include('livewire.collection-manager-includes.back_to_collection_button')

</div>

<!-- Script per SweetAlert2 -->
<script>

    function confirmDelete(type) {

        console.log('confirmDelete',type);

        // Mappa dei tipi di immagine per le traduzioni
        const typeMap = {
            'banner': '{{ __("collection.banner_image") }}',
            'avatar': '{{ __("collection.avatar_image") }}',
            'card': '{{ __("collection.card_image") }}',
            'EGI': '{{ __("collection.EGI_image") }}'
        };

        Swal.fire({
            title: '{{ __("collection.confirm_delete_title") }}',
            text: '{{ __("collection.confirm_delete_text", ["type" => ":type"]) }}'.replace(':type', typeMap[type]),
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: '{{ __("collection.confirm_delete_button") }}',
            cancelButtonText: '{{ __("collection.cancel_delete_button") }}'
        }).then((result) => {
            if (result.isConfirmed) {
                @this.removeImage(type);
                Swal.fire(
                    '{{ __("collection.deleted_title") }}',
                    '{{ __("collection.deleted_text", ["type" => ":type"]) }}'.replace(':type', typeMap[type]),
                    'success'
                );
            }
        });
    }

</script>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/avatar-image-upload.blade.php ####

<div class="mb-8 text-center">
    <h3 class="text-lg font-semibold text-white mb-2">{{ __('collection.avatar_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_avatar instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Cornice con bordo dinamico -->
    <div class="w-32 h-32 mx-auto bg-gray-900 rounded-full shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('avatar-image-{{ $collectionId }}').click();" @endif>
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Avatar" class="w-full h-full object-cover" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-10 h-10 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_avatar" id="avatar-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_avatar instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_avatar') }}
            </button>
        @endif

        @if($existingImageUrl || $image_avatar)
            <button type="button" onclick="confirmDelete('avatar')" class="btn btn-error">
                {{ __('collection.delete_avatar') }}
            </button>
        @endif
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/banner-image-upload.blade.php ####

<div class="mb-8">
    <h3 class="text-lg font-semibold text-white mb-2">{{ __('collection.banner_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_banner instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Cornice con bordo dinamico -->
    <div class="max-w-[1200px] max-h-[300px] w-full h-auto mx-auto md:h-64 bg-gray-900 rounded-2xl shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('banner-image-{{ $collectionId }}').click();" @endif>
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Banner image" class="w-full h-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-16 h-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_banner" id="banner-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_banner instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_banner') }}
            </button>
        @endif

        @if($existingImageUrl || $image_banner)
            <button type="button" onclick="confirmDelete('banner')" class="btn btn-error">
                {{ __('collection.delete_banner') }}
            </button>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/card-image-upload.blade.php ####

<div class="w-full sm:max-w-[300px] px-2 flex-shrink-0">
    <h3 class="text-lg font-semibold text-white mb-2"> {{ __('collection.card_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_card instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Applica il bordo al div genitore -->
    <div class="w-full h-48 bg-gray-900 rounded-2xl shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('card-image-{{ $collectionId }}').click();" @endif>
        <!-- Immagine o icona di default -->
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Card Image" class="w-full h-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-16 h-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_card" id="card-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_card instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_card') }}
            </button>
        @endif

        @if($existingImageUrl || $image_card)
            <button type="button" onclick="confirmDelete('card')" class="btn btn-error">
                {{ __('collection.delete_card') }}
            </button>
        @endif
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/egi-image-upload.blade.php ####

<div class="w-full flex-shrink-0 px-2 sm:max-w-[300px]">
    <h3 class="mb-2 text-lg font-semibold text-white">
        {{ __('collection.EGI_image') }}
    </h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_EGI instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Applica il bordo al div genitore -->
    <div class="{{ $borderColor }} flex h-48 w-full cursor-pointer items-center justify-center overflow-hidden rounded-2xl border-4 bg-gray-900 shadow-md transition-shadow duration-300 hover:shadow-lg"
        @if (!$imageUrl) onclick="document.getElementById('egi-image-{{ $collectionId }}').click();" @endif>
        <!-- Immagine o icona di default -->
        @if ($imageUrl)
            <img src="{{ $imageUrl }}" alt="EGI Image" class="h-full w-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="h-16 w-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_EGI" id="egi-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex justify-center gap-2">
        @if ($image_EGI instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_EGI') }}
            </button>
        @endif

        @if ($existingImageUrl || $image_EGI)
            <button type="button" onclick="confirmDelete('EGI')" class="btn btn-error">
                {{ __('collection.delete_EGI') }}
            </button>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/invite-user-to-collection-modal.blade.php ####

<div>
    @if($show)
        <div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center">
            <div class="bg-gray-800 p-6 rounded-2xl w-full max-w-md shadow-lg">
                <h3 class="text-2xl font-bold text-white mb-4">{{ __('Invite Collection Member') }}</h3>

                <!-- Email -->
                <div class="mb-4">
                    <label for="email" class="block text-sm font-medium text-gray-300">{{ __('Email') }}</label>
                    <input type="email" id="email" wire:model="email"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter user email') }}">
                    @error('email') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Role -->
                <div class="mb-4">
                    <label for="role" class="block text-sm font-medium text-gray-300">{{ __('Role') }}</label>
                    <select id="role" wire:model="role"
                        class="select select-bordered select-primary w-full bg-gray-700 text-white">
                        <option value="" disabled>{{ __('Select a role') }}</option>
                        @foreach($roles as $role)
                            <option value="{{ $role }}">{{ ucfirst($role) }}</option>
                        @endforeach
                    </select>
                    @error('role') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Azioni -->
                <div class="flex justify-end space-x-4 mt-6">
                    <button wire:click="closeModal" class="btn btn-secondary">{{ __('Cancel') }}</button>
                    <button wire:click="invite" class="btn btn-primary">{{ __('Send Invitation') }}</button>
                </div>
            </div>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/no-team.blade.php ####

<div class="p-6 bg-red-100 border border-red-400 rounded-md">
    <h2 class="text-lg font-bold text-red-700">Attenzione</h2>
    <p class="mt-2 text-red-600">{{ $message }}</p>
    <a href="{{ route('teams.create') }}" class="mt-4 inline-block bg-blue-500 text-white px-4 py-2 rounded">
        Crea una collection
    </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/open.blade.php ####

<div>
    {{-- Nothing in the world is as soft and yielding as water. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/reject-modal.blade.php ####

<div>
    <form wire:submit.prevent="reject">
        <textarea wire:model="rejectionReason" placeholder="Motivo del rifiuto"></textarea>
        <button type="submit" class="btn btn-danger">Rifiuta Modifica</button>
    </form>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/show.blade.php ####

<div>
    {{-- Success is as dangerous as failure. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/dashboard.blade.php ####

<div class="p-6 bg-gray-800 text-white rounded-2xl shadow-lg">
    @php
        use App\Repositories\IconRepository;
    @endphp

    <!-- Titolo della Dashboard -->
    <h2 class="text-3xl font-bold mb-6">{{ __('Dashboard') }}</h2>

    <!-- Statistiche -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        <div class="bg-gray-700 p-4 rounded-lg shadow-md flex items-center">
            <div class="icon mr-4">
                <!-- Icona per le Collections -->
                <div class="icon-placeholder bg-gray-600 w-12 h-12 rounded-full flex items-center justify-center">
                   <x-repo-icon name="open_collection" class="text-gray-500 opacity-90" />
                </div>
            </div>
            <div>
                <h3 class="text-xl font-semibold">{{ __('Collections') }}</h3>
                <p class="text-2xl font-bold">{{ $collectionsCount }}</p>
            </div>
        </div>

        <div class="bg-gray-700 p-4 rounded-lg shadow-md flex items-center">
            <div class="icon mr-4">
                <!-- Icona per i Collection Members -->
                <div class="icon-placeholder bg-gray-600 w-12 h-12 rounded-full flex items-center justify-center">
                    <x-repo-icon name="collection-name" class="" />
                </div>
            </div>
            <div>
                <h3 class="text-xl font-semibold">{{ __('Collection Members') }}</h3>
                <p class="text-2xl font-bold">{{ $collectionMembersCount }}</p>
            </div>
        </div>
    </div>

    <!-- Notifiche -->
    <div class="bg-gray-700 p-6 rounded-lg shadow-md">
        <h3 class="text-2xl font-bold mb-4">{{ __('Notifications') }}</h3>

        <!-- Notifiche Pendenti -->
        @forelse ($pendingNotifications as $notification)
            @include($this->getNotificationView($notification))
            {{-- @dump($notification) --}}
        @empty
            <p class="text-gray-400">{{ __('No pending notifications available.') }}</p>
        @endforelse
    </div>

    <!-- Bottone per Mostrare/Nascondere Storico -->
    <div class="text-right mt-4">
        <button wire:click="toggleHistoricalNotifications" class="btn btn-sm btn-secondary">
            {{ $showHistoricalNotifications ? __('Hide Processed Notifications') : __('Show Processed Notifications') }}
        </button>
    </div>

    <!-- Notifiche Storiche -->
    @if ($showHistoricalNotifications)
        <div class="bg-gray-700 p-6 rounded-lg shadow-md mt-4">
            <h3 class="text-xl font-bold text-white mb-4">{{ __('Processed Notifications') }}</h3>

            <div class="space-y-4">
                @forelse ($historicalNotifications as $notification)
                    <div class="flex items-start space-x-4">
                        <div class="w-2 h-2 rounded-full bg-gray-400 mt-2"></div>
                        <div class="flex-1 bg-gray-800 p-4 rounded-lg shadow-md">
                            <!-- Inizio del Collapse -->
                            <div class="collapse collapse-arrow bg-gray-600 rounded-lg">
                                <input type="checkbox" id="collapse-{{ $notification->id }}" class="peer hidden" />

                                <!-- Label modificata -->
                                <label for="collapse-{{ $notification->id }}" class="collapse-title flex justify-between items-center text-lg font-medium cursor-pointer text-gray-200">
                                    <span>{{ $notification->data['message'] }}</span>
                                    <button
                                        wire:click="deleteNotificationAction('{{ $notification->id }}')"
                                        wire:confirm="{{ __('notification.confirm_delete') }}"
                                        class="btn btn-warning btn-sm">
                                        {{ __('label.delete') }}
                                    </button>
                                </label>

                                <!-- Contenuto del Collapse -->
                                <div class="collapse-content peer-checked:block hidden">
                                    <p class="text-sm text-gray-300">
                                        {{ __('notification.reply') }}:
                                        <span class="font-bold {{ $notification->outcome === 'declined' ? 'text-red-500' : 'text-green-500' }}">
                                            {{ ucfirst($notification->outcome) }}
                                        </span>
                                    </p>

                                    @if(isset($notification->data['reason']) && $notification->data['reason'])
                                        @if(isset($notification->data['approver']) && $notification->data['approver'])
                                            <p class="text-sm text-gray-300">
                                                {{ __('notification.receiver') }}: <span class="font-bold">{{ $notification->data['approver'] }}</span>
                                            </p>
                                        @endif
                                        <p class="text-sm text-gray-300">
                                            {{ __('notification.proposal_declined_reason') }}: <span class="font-bold">{{ $notification->data['reason'] }}</span>
                                        </p>
                                        <p class="text-sm text-gray-300">
                                            {{ __('collection.wallet.royalty_mint') }}: <span class="font-bold">{{ $notification->data['royalty_mint'] .'%' }}</span>
                                        </p>
                                        <p class="text-sm text-gray-300">
                                            {{ __('collection.wallet.royalty_rebind') }}: <span class="font-bold">{{ $notification->data['royalty_rebind'] .'%' }}</span>
                                        </p>
                                    @endif
                                </div>
                            </div>
                            <!-- Fine del Collapse -->
                            <p class="text-xs text-gray-500">{{ $notification->created_at->diffForHumans() }}</p>
                        </div>
                    </div>
                @empty
                    <p class="text-gray-400">{{ __('No historical notifications.') }}</p>
                @endforelse
            </div>

        </div>
    @endif


    <livewire:proposals.decline-proposal-modal />

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/language-selector.blade.php ####

<div class="dropdown">
    <div tabindex="0" role="button" class="m-1 btn btn-sm">
        <span class="fi fi-{{ $currentLocale === 'en' ? 'gb' : $currentLocale }}"></span>
        {{ config('app.languages')[$currentLocale] }}
    </div>
    <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box">
        @foreach ($languages as $code => $name)
            <li>
                <a wire:click="$set('currentLocale', '{{ $code }}')" class="flex items-center gap-2">
                    <span class="fi fi-{{ $code === 'en' ? 'gb' : $code }}"></span>
                    {{ $name }}
                </a>
            </li>
        @endforeach
    </ul>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/layout/navigation.blade.php ####

<div class="shadow-lg navbar bg-base-100">
    <div class="flex-none lg:hidden">
        <label for="main-drawer" class="btn btn-square btn-ghost drawer-button">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-5 h-5 stroke-current">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
        </label>
    </div>

    @livewire('language-selector')

    <div class="flex-1">
        <a href="{{ route('dashboard') }}" class="text-xl normal-case btn btn-ghost">
            {{ config('app.name') . " " . config('app.version') }}
        </a>
        <span class="text-xl normal-case btn btn-ghost">{{ $currentTeam }}</span>

    </div>

    <div class="flex-none">
        <div class="dropdown dropdown-end">
            <label tabindex="0" class="btn btn-ghost btn-circle avatar">
                <div class="w-10 rounded-full">
                    <img src="{{ $user->profile_photo_url }}" alt="{{ $user->name }}" />
                </div>
            </label>
            <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                <li>
                    <a href="{{ route('profile.show') }}" class="justify-between">
                        Profile
                    </a>
                </li>
                @can('manage_roles')
                <li>
                    <a href="{{ route('admin.roles.index') }}">
                        Roles & Permissions
                    </a>
                </li>
                @endcan
                <li>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <a href="{{ route('logout') }}" onclick="event.preventDefault(); this.closest('form').submit();">
                            Logout
                        </a>
                    </form>
                </li>

            </ul>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/modale/collection_general_suggestion.blade.php ####

@php
    use Illuminate\Support\Str;

    $markdownFile = resource_path('markdown/collection_general_suggestion.md');
    $content = Str::markdown(file_get_contents($markdownFile));
@endphp

<!-- Finestra modale -->
<div x-data="{ open: false }">

    <!-- Pulsante per aprire la modale -->
    <x-suggestion-icon :tooltip="__('collection.tips_to_optimize_your_collection')" icon-color="#5f6368" />

    <!-- Modale -->
    <div
        x-show="open"
        class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
        x-cloak
    >
        <div class="bg-white rounded-lg shadow-lg max-w-3xl w-full p-6 relative overflow-hidden">
            <!-- Titolo -->
            <div class="border-b pb-4 mb-4">
                <h2 class="text-xl font-bold text-gray-800">{{ __('collection.tips_to_optimize_your_collection') }}</h2>
                <button
                    class="absolute top-4 right-4 text-gray-500 hover:text-gray-800"
                    @click="open = false"
                >
                    &times;
                </button>
            </div>

            <!-- Contenuto Scrollabile -->
            <div class="overflow-y-auto max-h-96 px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 prose">
                {!! $content !!}
            </div>

            <!-- Pulsante di chiusura -->
            <div class="text-right mt-4">
                <button
                    class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
                    @click="open = false"
                >
                    Chiudi
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/modale/collection_image_suggestion.blade.php ####

@php
    use Illuminate\Support\Str;

    $markdownFile = resource_path('markdown/collection_image_suggestion.md');
    $content = Str::markdown(file_get_contents($markdownFile));
@endphp

<!-- Finestra modale -->
<div x-data="{ open: false }">

    <!-- Pulsante per aprire la modale -->
    <x-suggestion-icon :tooltip="__('collection.tips_for_your_collection_images')" icon-color="#5f6368" />

    <!-- Modale -->
    <div
        x-show="open"
        class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
        x-cloak
    >
        <div class="bg-white rounded-lg shadow-lg max-w-3xl w-full p-6 relative overflow-hidden">
            <!-- Titolo -->
            <div class="border-b pb-4 mb-4">
                <h2 class="text-xl font-bold text-gray-800">{{ __('collection.tips_for_your_collection_images') }}</h2>
                <button
                    class="absolute top-4 right-4 text-gray-500 hover:text-gray-800"
                    @click="open = false"
                >
                    &times;
                </button>
            </div>

            <!-- Contenuto Scrollabile -->
            <div class="overflow-y-auto max-h-96 px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 prose">
                {!! $content !!}
            </div>

            <!-- Pulsante di chiusura -->
            <div class="text-right mt-4">
                <button
                    class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
                    @click="open = false"
                >
                    Chiudi
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/photo-uploader.blade.php ####

<div class="p-6 bg-white shadow-md rounded-md">
    <h2 class="text-xl font-bold mb-4">Carica una Foto</h2>

    <!-- Form per il caricamento della foto -->
    <form wire:submit.prevent="save" class="space-y-4">
        <!-- Input per il caricamento del file -->
        <input type="file" wire:model="photo" class="block w-full text-gray-700 border border-gray-300 rounded-md shadow-sm">

        <!-- Mostra l'anteprima se è stato selezionato un file -->
        @if ($photo)
            @dump($this->getTemporaryUrl())
            @if ($this->getTemporaryUrl())
                <img src="{{ $this->getTemporaryUrl() }}" alt="Anteprima della foto" class="w-48 h-48 object-cover rounded-md">
            @else
                <p class="text-red-500">Errore nel generare l'anteprima.</p>
            @endif
        @endif

        <!-- Bottone di caricamento -->
        <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-md shadow hover:bg-blue-600">
            Carica
        </button>
    </form>

    <!-- Messaggio di successo -->
    @if (session()->has('message'))
        <div class="mt-4 p-2 bg-green-100 text-green-700 rounded-md">
            {{ session('message') }}
        </div>
    @endif
</div

#### Inizio File: /home/fabio/EGI/resources/views/livewire/proposals/decline-proposal-modal.blade.php ####

<div class="{{ $isVisible ? 'block' : 'hidden' }}">
    <!-- Overlay -->
    <div class="fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-50">
        <!-- Modale -->
        <div class="bg-gray-800 rounded-lg shadow-2xl w-full max-w-lg p-6 text-white">
            <!-- Header -->
            <div class="flex justify-between items-center border-b border-gray-700 pb-4">
                <h5 class="text-xl font-bold">{{ __('Decline Proposal') }}</h5>
                <button type="button" class="text-gray-400 hover:text-gray-300" wire:click="closeModal">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Body -->
            <div class="mt-4">
                <form wire:submit.prevent="decline">
                    <div class="mb-4">
                        <label for="reason" class="block text-sm font-medium text-gray-300">{{ __('Reason for Decline') }}</label>
                        <textarea id="reason"
                                  class="w-full bg-gray-700 text-white border border-gray-600 rounded-lg p-3 focus:ring-indigo-500 focus:border-indigo-500"
                                  wire:model="reason"
                                  rows="4"
                                  required></textarea>
                        @error('reason') <span class="text-red-500 text-sm mt-1">{{ $message }}</span> @enderror
                    </div>
                    <!-- Actions -->
                    <div class="flex justify-end space-x-4">
                        <button type="button" wire:click="closeModal" class="bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded-lg">
                            {{ __('Cancel') }}
                        </button>
                        <button type="submit" class="bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded-lg">
                            {{ __('Decline') }}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade copy 2.php ####

<script>
    console.log('resources/views/livewire/sidebar.blade.php');
</script>
<div class="drawer-side">
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100">
        <div class="space-y-4 p-4">
            @if (!empty($menus))
                @foreach ($menus as $menu)
                    @can($menu['permission'])
                        @if (count($menu['submenu']) > 0)

                            <!-- Summary con sottomenù -->
                            <details class="collapse collapse-arrow bg-base-200">
                                @if($menu['summary_head'] == true)
                                    <div class="flex gap-2">
                                        @if ($menu['summary_icon'])
                                            {!! $menu['summary_icon'] !!}
                                        @endif
                                        {{ $menu['name'] }}
                                    </div>
                                @else
                                    <summary class="collapse-title text-lg font-medium">
                                        <div class="flex gap-2">
                                            @if ($menu['summary_icon'])
                                                {!! $menu['summary_icon'] !!}
                                            @endif
                                            {{ $menu['name'] }}
                                        </div>
                                    </summary>
                                @endif

                                <div class="collapse-content space-y-2">
                                    @foreach ($menu['submenu'] as $submenu)
                                        @can($submenu['permission'])
                                        <a href="{{ Route::has($submenu['route']) ? route($submenu['route']) : '#' }}"
                                            class="{{ request()->routeIs($submenu['route']) ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                                            {{-- @if($submenu['icon'] === 'fallback')
                                                <img src="{{ config('app.logo_04') }}" alt="{{ $submenu['name'] }}" class="w-12 h-12">
                                            @else --}}
                                                {!! $submenu['icon'] !!}
                                            {{-- @endif --}}
                                                {{ $submenu['name'] }}
                                            </a>
                                        @endcan
                                    @endforeach
                                </div>
                            </details>
                        @else
                            <!-- Summary senza voci -->
                            <a href="{{ Route::has($menu['summary_route']) ? route($menu['summary_route']) : '#' }}"
                                class="text-lg font-medium text-gray-500">
                                <div class="flex gap-2 mb-8 mt-32">
                                    <div class = "mt-0"> {!! $menu['summary_icon'] !!} </div>
                                    <div class = "mt-1">{{ $menu['name'] }}</div>
                                </div>
                            </a>
                            
                            <div class="border-t border-gray-200 dark:border-gray-600"></div>

                        @endif
                    @endcan
                @endforeach
            @else
                <p class="text-center">Nessun menu disponibile</p>
            @endif

        </div>
    </aside>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade copy.php ####

<script>
    console.log('resources/views/livewire/sidebar.blade.php');
</script>
<div class="drawer-side">
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100">
        <div class="space-y-4 p-4">
            <!-- Dashboard -->
            <a href="{{ route('dashboard') }}"
                class="{{ request()->routeIs('dashboard') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path
                        d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" />
                </svg>
                Dashboard
            </a>

            <!-- Admin Section -->
            @can('manage_roles')
                <details class="collapse collapse-arrow bg-base-200">
                    <summary class="collapse-title text-lg font-medium">Admin</summary>
                    <div class="collapse-content space-y-2">
                        <a href="{{ route('admin.roles.index') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M361.6 370s0 .1 0 0c0 .6.1 1.1.1 1.6v.4c0 .4.1.8.1 1.2 0 .2 0 .4.1.5 0 .4.1.8.2 1.1 0 .2 0 .3.1.5.1.5.2 1.1.3 1.6.1.5.2.9.3 1.4.2.9.5 1.8.8 2.7.1.4.3.9.4 1.3 2 5.6 5 10.2 8.6 13.2.8.7 1.7 1.3 2.5 1.8.6.4 1.2.7 1.8.9.6.3 1.2.5 1.8.7.6.2 1.2.3 1.8.4 1.9.3 3.7.2 5.6-.4l.9-.3c.1 0 .2-.1.3-.1.2-.1.4-.2.6-.2.1-.1.2-.1.3-.2.2-.1.3-.2.5-.3.1-.1.2-.1.4-.2s.3-.2.5-.3c.1-.1.2-.2.4-.2.1-.1.3-.2.4-.3.1 0 .1-.1.2-.1 15.4 40.6 46.9 75.5 83.4 75.5s68-34.9 83.4-75.5c.1 0 .1.1.2.1.1.1.3.2.4.3.1.1.2.2.4.2.1.1.3.2.5.3.1.1.2.1.4.2s.3.2.5.3c.1.1.2.1.3.2.2.1.4.2.6.2.1 0 .2.1.3.1l.9.3c1.9.6 3.7.7 5.6.4.6-.1 1.2-.2 1.8-.4s1.2-.4 1.8-.7l1.8-.9c.9-.5 1.7-1.1 2.5-1.8 4.7-3.9 8.4-10.5 10.1-18.6.1-.5.2-1.1.3-1.6 0-.2 0-.3.1-.5.1-.4.1-.8.2-1.2 0-.2 0-.3.1-.5 0-.4.1-.8.1-1.2v-.4c0-.5.1-1 .1-1.5v-3.7c0-.5 0-.9-.1-1.4v-.2c0-.5-.1-1-.2-1.5-1.2-9.6-6-17.4-12.8-19.4-1.9-.6-3.9-.7-5.8-.3.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2v.1c-1.9-.3-3.9-.2-5.8.3-6.9 2.1-11.6 9.8-12.8 19.4-.1.5-.1 1-.2 1.5v.2c0 .4-.1.9-.1 1.4V368.2c-.4.7-.4 1.2-.4 1.8zM735.1 567.4c-3.2-1.3-6.3-2.5-9.5-3.6v-30.3c0-48-39-87-87-87s-87 39-87 87v10.4c-2.5 7.9-5.4 15.6-8.4 23.2-.4.1-.7.3-1.1.4v2.3c-9.7 23.2-21.9 44.7-36.3 63.8L490.4 557l6.9-9.4 7.7-10.5c.3-.3.5-.6.7-1 .1-.1.1-.2.2-.3.2-.2.3-.5.4-.7.1-.1.2-.3.2-.4.1-.2.2-.4.3-.7.1-.2.2-.3.2-.5.1-.2.2-.4.3-.7.1-.2.1-.4.2-.5.1-.2.1-.4.2-.7.1-.2.1-.4.2-.6.1-.2.1-.4.2-.6l.3-1.5c0-.1 0-.2.1-.3 0-.3.1-.6.1-.9v-.4c0-.3 0-.6.1-.9v-1.6c0-.3 0-.7-.1-1v-.1c-.1-1.6-.5-3.1-1-4.6-.4-1-.8-1.9-1.3-2.8l-12.9-18.1c-2.3-3.8-5.8-6.1-9.5-6.1h-20.3c-3.7 0-7.2 2.3-9.5 6.1l-12.9 18.1c-.5.9-1 1.9-1.3 2.8-.5 1.5-.9 3-1 4.6v.1c0 .3 0 .7-.1 1v1.6c0 .3 0 .6.1.9v.4c0 .3.1.6.1.9 0 .1 0 .2.1.3l.3 1.5c0 .2.1.4.2.6.1.2.1.4.2.6.1.2.1.4.2.7.1.2.1.4.2.5.1.2.2.4.3.7.1.2.1.3.2.5s.2.4.3.7c.1.1.2.3.2.4.1.2.3.5.4.7.1.1.1.2.2.3.2.3.5.7.7 1l7.7 10.5 6.9 9.4-11.2 56-4.1 20.6c-25.5-33.7-44-74.9-54.1-119.7-1.5-6.7-6.8-10.6-12-9L297.6 530c-9.9 3.2-17.3 13.9-18.7 26.9l-13.3 124.2-.4 3.6c-.2 1.8-.3 3.6-.2 5.4.3 12.4 6 23.3 14.4 28.4 1.2.7 2.5 1.3 3.7 1.8.9.3 1.7.6 2.7.8 1.4.3 2.7.4 4.2.4h254.2c12.1 4.8 24.4 8.6 36.8 11.5h.1c7.9 1.8 15.8 3.3 23.8 4.4h.1c8 1.1 15.9 1.8 23.9 2.1 6.4.2 12.8.2 19.2 0 8-.3 16-1 23.9-2.1h.1c7.9-1.1 15.9-2.5 23.8-4.4h.1c6.3-1.5 12.6-3.2 18.9-5.2 6.8-2.1 13.5-4.5 20.2-7.2V567.4zM638.6 477c31.1 0 56.5 25.3 56.5 56.5v21.3c-9.2-2.1-18.4-3.7-27.6-4.7-2.8-9.8-9.3-17.4-17.4-20.1l-62.7-20.2c8.9-19.3 28.5-32.8 51.2-32.8z" />
                                        </g>
                                        <g>
                                            <path fill="#A44995"
                                                d="m504.9 517-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-4.5-5.4-5.1-14.3-1.4-20.6l12.9-18.1c2.3-3.8 5.8-6.1 9.5-6.1H484c3.7 0 7.2 2.3 9.5 6.1l12.9 18.1c3.7 6.3 3.1 15.2-1.5 20.6z" />
                                            <path fill="#952584"
                                                d="m504.9 504.1-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-1.2-1.4-2.1-3.1-2.7-4.9-2.1 6-1.1 13.2 2.7 17.8l23 31.4c4.6 5.5 11.6 5.5 16.2 0l23-31.4c3.9-4.6 4.9-11.8 2.7-17.8-.6 1.8-1.5 3.5-2.7 4.9z" />
                                            <path fill="#FFF"
                                                d="M398.4 346.1c3.1 15.2-2.3 30-12.3 33s-20.5-6.9-23.6-22.1c-3.1-15.2 2.3-30 12.3-33 9.8-3 20.4 6.8 23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M386.1 369c-9.9 3-20.5-6.9-23.6-22.1-.2-1.2-.4-2.4-.6-3.5-.5 4.3-.4 8.9.6 13.5 3.1 15.2 13.7 25.1 23.6 22.1 9.1-2.8 14.5-15.5 12.8-29.4-1.2 9.6-5.9 17.4-12.8 19.4z" />
                                            <path fill="#FFF"
                                                d="M549.3 346.1c-3.1 15.2 2.3 30 12.3 33 9.9 3 20.5-6.9 23.6-22.1 3.1-15.2-2.3-30-12.3-33-9.9-3-20.5 6.8-23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M585.2 346.9c-3.1 15.2-13.7 25.1-23.6 22.1-6.9-2.1-11.6-9.8-12.8-19.4-1.7 13.9 3.7 26.7 12.8 29.4 9.9 3 20.5-6.9 23.6-22.1 1-4.7 1.1-9.3.6-13.5-.2 1.2-.4 2.4-.6 3.5z" />
                                            <path fill="#FFF"
                                                d="M567.2 325.5c0 57-41.8 126.8-93.3 126.8s-93.3-69.7-93.3-126.8 41.8-103.2 93.3-103.2 93.3 46.2 93.3 103.2z" />
                                            <path fill="#DADADA"
                                                d="M473.8 432.3c-48.5 0-88.4-61.8-92.9-116.6-.3 3.3-.4 6.5-.4 9.9 0 57 41.8 126.8 93.3 126.8s93.3-69.7 93.3-126.8c0-3.3-.1-6.6-.4-9.9-4.5 54.8-44.4 116.6-92.9 116.6z" />
                                            <path fill="#A44995" d="M517.8 673.8h-88L462 513.3h23.6z" />
                                            <path fill="#952584"
                                                d="m517.8 673.8-16.2-80.9c-2.3 2.9-4.6 5.7-7 8.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 601.3c-2.4-2.7-4.7-5.6-7-8.4l-16.2 80.9h88z" />
                                            <path fill="#A44995"
                                                d="M448 276.3s13 24.3 50.4 36.7c20.2 6.7 47.7 9 68.7 10.6.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2 0 0 20.7-3.4 39.1-15.3 18.4-11.9 28.4-31.9 28.4-31.9z" />
                                            <path fill="#952584" d="M457.3 525.3h33.1v11.6h-33.1z" />
                                            <path fill="#36A9E1"
                                                d="M668.8 536.9c-1.4-13.1-8.8-23.7-18.7-26.9l-78.2-25.2c-5.2-1.7-10.5 2.3-12 9-11.5 51.1-33.9 97.5-65.2 133.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 627.2c-31.3-36-53.7-82.3-65.2-133.4-1.5-6.7-6.8-10.6-12-9L297.6 510c-9.9 3.2-17.3 13.9-18.7 26.9l-13.7 127.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-13.8-127.8z" />
                                            <path fill="#0091C5"
                                                d="M681.3 654c-3.4 12.5-12.6 21.7-23.6 21.7H289.9c-11 0-20.2-9.2-23.6-21.7l-1.2 10.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-1.2-10.8z" />
                                            <path fill="#0091C5"
                                                d="M657.7 701.5c15.2 0 26.8-17.3 24.8-36.8l-12.3-114.3c-29.3-3.7-59-2.3-88.1 4.4v-21.3c0-15.6 6.4-29.8 16.7-40l-26.9-8.7c-1.9-.6-3.8-.5-5.5.2-3.1 4.6-5.8 9.5-8 14.7-1.8 7.2-3.7 14.3-5.9 21.3-.6 4.1-.9 8.2-.9 12.4v30.3c-3.2 1.2-6.4 2.4-9.5 3.6v134.1h115.6z" />
                                            <g>
                                                <path fill="#FFF"
                                                    d="M725.6 615h-30.5V513.5c0-31.1-25.3-56.5-56.5-56.5-31.1 0-56.5 25.3-56.5 56.5V615h-30.5V513.5c0-48 39-87 87-87s87 39 87 87V615z" />
                                                <path fill="#DADADA"
                                                    d="M638.6 444.1c-38.1 0-69.1 27.4-69.1 61.1V615h12.6V513.5c0-31.1 25.3-56.5 56.5-56.5 31.1 0 56.5 25.3 56.5 56.5V615h12.6V505.2c-.1-33.7-31-61.1-69.1-61.1z" />
                                                <path fill="#952584"
                                                    d="M735.1 700.7c-62.8 25.4-130.2 25.4-193.1 0V547.4c58.8-23.8 121.7-25.3 181-4.5 4 1.4 8.1 2.9 12.1 4.5v153.3z" />
                                                <path fill="#A44995"
                                                    d="M562.3 540.2v167.7c50.1 15.7 102.5 15.7 152.6 0V540.2c-50.1-15.7-102.5-15.7-152.6 0z" />
                                                <circle fill="#36A9E1" cx="638.6" cy="601.7" r="26.1" />
                                                <path fill="#36A9E1"
                                                    d="M647.4 666.3h-17.6c-3.7 0-6.7-3-6.7-6.7v-58.2H654v58.2c0 3.7-2.9 6.7-6.6 6.7z" />
                                                <path fill="#2C3088"
                                                    d="M641.7 659.9h-6.3c-1.8 0-3.2-1.4-3.2-3.2v-47.9h12.7v47.9c0 1.7-1.4 3.2-3.2 3.2z" />
                                                <circle fill="#2C3088" cx="638.6" cy="601.7" r="15.5" />
                                                <path fill="#DADADA"
                                                    d="M735.1 561.3c-3.5-1.4-6.9-2.7-10.4-3.9-60.1-21-123.2-19.6-182.6 3.9v10.4c.6 0 1.3-.1 1.9-.4 57.7-23.3 119.1-24.9 177.5-4.5 4 1.4 7.9 2.9 11.8 4.5.6.2 1.2.4 1.9.4l-.1-10.4zM542 685.8c3.5 1.4 6.9 2.7 10.4 3.9 28.3 9.9 57.2 14.8 86.1 14.8 32.5 0 65-6.3 96.5-18.7v-10.4c-.6 0-1.3.1-1.9.4-57.7 23.3-119.1 24.9-177.5 4.5-4-1.4-7.9-2.9-11.8-4.5-.6-.2-1.2-.4-1.9-.4v10.4z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>
                            Roles & Permissions
                        </a>
                        <a href="{{ route('admin.assign.role.form') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                                viewBox="0 0 48 48" width="40" height="40">
                                <defs>
                                    <linearGradient id="c" x1="19.5" y1="47.82" x2="19.5"
                                        y2="-42.52" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#273a9b" />
                                        <stop offset=".56" stop-color="#202f65" />
                                        <stop offset="1" stop-color="#021e2f" />
                                    </linearGradient>
                                    <linearGradient id="a" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#27e9de" />
                                        <stop offset=".52" stop-color="#03a4ec" />
                                        <stop offset="1" stop-color="#2547a8" />
                                    </linearGradient>
                                    <linearGradient id="e" x1="19.5" y1="33.53" x2="19.5"
                                        y2="15.56" xlink:href="#a" />
                                    <linearGradient id="f" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" xlink:href="#a" />
                                    <linearGradient id="b" x1="33" y1="33.92" x2="33"
                                        y2="15.04" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#fff" />
                                        <stop offset=".52" stop-color="#cce2e6" />
                                        <stop offset="1" stop-color="#8fa1bb" />
                                    </linearGradient>
                                    <linearGradient id="g" x1="27.88" y1="28.99" x2="20.63"
                                        y2="16.24" xlink:href="#b" />
                                    <linearGradient id="h" y1="26.44" y2="38.78" xlink:href="#b" />
                                    <linearGradient id="i" x1="33" y1="56.25" x2="33"
                                        y2="3.66" xlink:href="#c" />
                                    <linearGradient id="j" x1="33" y1="36.81" x2="33"
                                        y2="42.75" xlink:href="#c" />
                                    <linearGradient id="d" x1="33" y1="48.03" x2="33"
                                        y2="33.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#f3c57a" />
                                        <stop offset=".49" stop-color="#f39369" />
                                        <stop offset="1" stop-color="#e94867" />
                                    </linearGradient>
                                    <linearGradient id="k" x1="33" y1="41.5" x2="33"
                                        y2="34.55" xlink:href="#d" />
                                </defs>
                                <circle cx="19.5" cy="19.5" r="16.5" style="fill:url(#c)" />
                                <path
                                    d="M19.5 24.27a16.46 16.46 0 0 0-12.61 5.86 16.48 16.48 0 0 0 25.21 0 16.46 16.46 0 0 0-12.6-5.86z"
                                    style="fill:url(#a)" />
                                <path
                                    d="M19.5 24.27a16.37 16.37 0 0 0-6.06 1.18 6.6 6.6 0 0 0 12.12 0 16.37 16.37 0 0 0-6.06-1.18z"
                                    style="fill:url(#e)" />
                                <circle cx="19.5" cy="16.22" r="6.61" style="fill:url(#f)" />
                                <path d="M40.5 39h-15V28.5a7.5 7.5 0 0 1 15 0zm-12-3h9v-7.5a4.5 4.5 0 0 0-9 0z"
                                    style="fill:url(#b)" />
                                <path d="M31.5 36h-3v-7.5a4.49 4.49 0 0 1 3-4.22v-3.13a7.51 7.51 0 0 0-6 7.35V39h6z"
                                    style="fill:url(#g)" />
                                <path
                                    d="M40.5 30.12a2.17 2.17 0 0 0-.69-.12H37.5v6h-9v-6h-2.31a2.17 2.17 0 0 0-.69.12V39h15z"
                                    style="fill:url(#h)" />
                                <rect x="24" y="31.5" width="18" height="13.5" rx="2.19" ry="2.19"
                                    style="fill:url(#i)" />
                                <path d="M26.19 31.5a2.18 2.18 0 0 0-2.07 1.5h17.76a2.18 2.18 0 0 0-2.07-1.5z"
                                    style="fill:url(#j)" />
                                <path
                                    d="M35.16 38.16a2.16 2.16 0 0 0-4.26-.52 2.14 2.14 0 0 0 .42 1.87 1.15 1.15 0 0 1 .24.73v.32A1.44 1.44 0 0 0 33 42a1.44 1.44 0 0 0 1.44-1.44v-.32a1.18 1.18 0 0 1 .25-.74 2.13 2.13 0 0 0 .47-1.34z"
                                    style="fill:url(#d)" />
                                <path
                                    d="M35 38.92a2.16 2.16 0 0 0-2.59-1.35A2.13 2.13 0 0 0 31 38.91a2.16 2.16 0 0 0 .33.6 1.15 1.15 0 0 1 .24.73v.32a1.44 1.44 0 1 0 2.88 0v-.32a1.18 1.18 0 0 1 .25-.74 2.16 2.16 0 0 0 .3-.58z"
                                    style="fill:url(#k)" />
                            </svg>
                            Assign roles
                        </a>
                        <a href="{{ route('admin.assign.permissions.form') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40"
                                height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M690.9 656.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9v4.5c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-4.5c-.1-9.9-8.1-17.9-18-17.9zM708.8 601.9V393c0-13.8-11.2-25-25-25H612v-53.4c0-11.5-6.6-22-17-26.9-60.1-28.6-129.9-28.6-190 0-10.4 4.9-17 15.4-17 26.9V368h-71.8c-13.8 0-25 11.2-25 25v218.9c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10h-.1z" />
                                        </g>
                                        <g>
                                            <path fill="#952584"
                                                d="M683.8 684.3H316.2c-13.8 0-25-11.2-25-25v-4.5h417.7v4.5c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#A44995"
                                                d="M690.9 636.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9 0 9.9 8 17.9 17.9 17.9h381.8c9.9 0 17.9-8 17.9-17.9 0-9.9-8-17.9-17.9-17.9zM683.8 616.9H316.2c-13.8 0-25-11.2-25-25V373c0-13.8 11.2-25 25-25h367.7c13.8 0 25 11.2 25 25v218.9c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#952584"
                                                d="M683.8 606.9H316.2c-13.8 0-25-11.2-25-25v10c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#36A9E1"
                                                d="M669.1 581.9H330.9c-6.9 0-12.6-5.6-12.6-12.6V375.6c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v193.7c0 7-5.7 12.6-12.6 12.6z" />
                                            <path fill="#0091C5"
                                                d="M669.1 363H330.9c-6.9 0-12.6 5.6-12.6 12.6v10c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v-10c0-7-5.7-12.6-12.6-12.6z" />
                                            <path fill="#FFF"
                                                d="M364.7 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3s-2.8 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M364.7 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1 2.3-3.2 3.8-5.8 3.8z" />
                                            <path fill="#FFF"
                                                d="M672.1 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3-.1 3.5-2.9 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M672.1 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1.1 2.3-3.3 3.8-5.8 3.8z" />
                                            <circle fill="#36A9E1" cx="612.8" cy="654.8" r="6.2" />
                                            <path fill="#0091C5"
                                                d="M612.8 656c-2.5 0-4.7-1.5-5.6-3.7-.3.8-.5 1.6-.5 2.5 0 3.4 2.8 6.2 6.2 6.2 3.4 0 6.2-2.8 6.2-6.2 0-.9-.2-1.7-.5-2.5-1.1 2.2-3.3 3.7-5.8 3.7z" />
                                            <g>
                                                <path fill="#0091C5"
                                                    d="m589.1 485.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 470.7 388 451 388 430.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#FFF"
                                                    d="m589.1 465.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 450.7 388 431 388 410.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#DADADA"
                                                    d="M599.5 404.6V303.2c0-10-5.9-19.2-15.1-23.5-53.4-25-115.4-25-168.8 0-9.2 4.3-15.1 13.5-15.1 23.5v101.4c0 17.9 7.3 35.1 20.3 47.7l65.7 63.6c7.5 7.3 19.5 7.3 27 0l65.7-63.6c13-12.5 20.3-29.7 20.3-47.7z" />
                                                <path fill="#A44995"
                                                    d="m572.4 448-60.1 59.1c-6.9 6.7-17.9 6.7-24.7 0l-60-59.1a62.263 62.263 0 0 1-18.6-44.4v-94.3c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v94.3c0 16.8-6.7 32.7-18.6 44.4z" />
                                                <path fill="#952584"
                                                    d="M577.2 287.6c-48.8-23.3-105.6-23.3-154.4 0-8.4 4-13.8 12.5-13.8 21.9v13c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v-13c0-9.4-5.4-17.9-13.8-21.9z" />
                                            </g>
                                            <g>
                                                <path fill="#952584"
                                                    d="M489.6 447.5c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22l-61.4 79.2c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#FFF"
                                                    d="M489.6 433.8c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22L504.6 428c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#DADADA"
                                                    d="m563.4 326.9-71.1 91.8-39.4-53c-3.1-4.1-7.2-6.9-11.8-8.4-3.9 5.4-4.1 12.9.1 18.6l38.5 51.8c2.4 3.3 6 5.4 9.9 6.1.8.1 1.6.2 2.5.2 4.9.1 9.5-2.2 12.5-6.1l61.4-79.2c5.2-6.8 4-16.5-2.6-21.8z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>
                            Assign permissions
                        </a>
                        {{-- <details class="collapse collapse-arrow bg-base-200">
                            <summary class="collapse-title text-lg font-medium">Ultra Confi Manager</summary>
                                <a href="{{ route('admin.open_uconfig') }}"
                                class="btn btn-ghost w-full justify-start {{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }}">
                                    Ultra Config Manager
                                </a>
                        </details> --}}
                    </div>
                </details>
            @endcan

            <!-- Gestione Collezioni -->
            <details class="collapse-arrow collapse bg-base-200">
                <summary class="collapse-title text-lg font-medium">Gestione Collezioni</summary>
                <div class="collapse-content space-y-2">
                    <a href="{{ route('collections.index') }}"
                        class="{{ request()->routeIs('collections.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" width="40" height="40"
                            style="enable-background:new 0 0 256 256" xml:space="preserve">
                            <style>
                                .st2 {
                                    fill: none;
                                    stroke: #6b1d1d;
                                    stroke-width: .5;
                                    stroke-miterlimit: 10
                                }

                                .st3 {
                                    fill: #3a312a
                                }

                                .st8 {
                                    fill: #f16c7a
                                }

                                .st9 {
                                    fill: #8ac6dd
                                }

                                .st14 {
                                    fill: #d7e057
                                }
                            </style>
                            <g id="Layer_1">
                                <path
                                    d="M215.716 91.134h-7.02l-2.17 4.26c.18.58.28 1.19.28 1.83v67.58l7.81 17.84a1.5 1.5 0 0 1-.77 1.97l-7.04 3.08v30.01c0 3.36-2.73 6.09-6.09 6.09h15c3.36 0 6.09-2.73 6.09-6.09V97.224c0-3.36-2.73-6.09-6.09-6.09z"
                                    style="fill:#decaad" />
                                <path class="st14"
                                    d="M47.717 25.964s3.408 12.659 13.222 13.246c0 0-13.1 4.525-13.321 14.202 0 0-2.579-13.572-12.925-14.059 0 .001 12.05-1.825 13.024-13.389z" />
                                <path class="st3"
                                    d="M47.617 54.912a1.502 1.502 0 0 1-1.473-1.217c-.023-.124-2.494-12.417-11.522-12.842a1.5 1.5 0 0 1-.155-2.982c.441-.069 10.895-1.817 11.754-12.033a1.501 1.501 0 0 1 2.943-.265c.031.116 3.259 11.626 11.864 12.141a1.501 1.501 0 0 1 .402 2.915c-.121.042-12.119 4.311-12.312 12.819a1.498 1.498 0 0 1-1.501 1.464zm-7.741-15.73c3.878 1.969 6.23 5.746 7.587 8.877 2.026-4.021 5.941-6.787 8.949-8.427-4.135-1.842-6.784-5.651-8.335-8.722-1.793 4.36-5.27 6.867-8.201 8.272z" />
                                <path class="st14"
                                    d="M26.018 42.945s2.411 8.954 9.352 9.369c0 0-9.266 3.201-9.422 10.045 0 0-1.824-9.6-9.142-9.944 0 0 8.524-1.291 9.212-9.47z" />
                                <path class="st3"
                                    d="M25.947 63.859a1.5 1.5 0 0 1-1.473-1.22c-.016-.082-1.704-8.442-7.739-8.726a1.5 1.5 0 0 1-.154-2.982c.296-.047 7.364-1.243 7.942-8.113a1.501 1.501 0 0 1 1.361-1.368 1.506 1.506 0 0 1 1.581 1.102c.023.079 2.229 7.919 7.994 8.264a1.5 1.5 0 0 1 .4 2.916c-.081.028-8.282 2.953-8.412 8.662a1.5 1.5 0 0 1-1.5 1.465zm-4.519-11.527c2.108 1.333 3.524 3.394 4.447 5.28 1.376-2.232 3.516-3.872 5.365-4.973-2.287-1.269-3.884-3.35-4.941-5.224-1.173 2.287-3.015 3.876-4.871 4.917z" />
                                <path class="st14"
                                    d="M26.018 16.287s2.411 8.954 9.352 9.37c0 0-9.266 3.201-9.422 10.045 0 0-1.824-9.6-9.142-9.944 0 0 8.524-1.292 9.212-9.471z" />
                                <path class="st3"
                                    d="M25.947 37.202a1.5 1.5 0 0 1-1.473-1.22c-.016-.082-1.704-8.442-7.739-8.726a1.5 1.5 0 0 1-.154-2.981c.296-.047 7.364-1.243 7.942-8.114a1.499 1.499 0 0 1 2.942-.267c.023.079 2.229 7.92 7.994 8.265a1.5 1.5 0 0 1 .4 2.915c-.081.028-8.282 2.952-8.412 8.662a1.5 1.5 0 0 1-1.5 1.466zm-4.519-11.528c2.108 1.333 3.524 3.395 4.447 5.28 1.376-2.232 3.516-3.872 5.365-4.973-2.287-1.269-3.884-3.35-4.941-5.223-1.173 2.286-3.015 3.875-4.871 4.916z" />
                                <path
                                    d="M126.234 75.213H33.411c-9.447 0-17.105 7.658-17.105 17.105v130.289c0 9.447 7.658 17.105 17.105 17.105H222.2c9.447 0 17.105-7.658 17.105-17.105V92.318c0-9.447-7.658-17.105-17.105-17.105H126.234z"
                                    style="fill:#87796f" />
                                <path class="st3"
                                    d="M222.2 241.213H33.411c-10.259 0-18.605-8.346-18.605-18.605V92.318c0-10.259 8.347-18.605 18.605-18.605h92.822a1.5 1.5 0 1 1 0 3H33.411c-8.604 0-15.605 7.001-15.605 15.605v130.289c0 8.605 7.001 15.605 15.605 15.605H222.2c8.605 0 15.605-7.001 15.605-15.605V92.318c0-8.605-7.001-15.605-15.605-15.605h-83.155a1.5 1.5 0 1 1 0-3H222.2c10.259 0 18.605 8.346 18.605 18.605v130.289c.001 10.26-8.346 18.606-18.605 18.606z" />
                                <path
                                    d="M223.306 147.226V97.224c0-4.194-3.4-7.594-7.594-7.594H56.9a7.594 7.594 0 0 0-7.594 7.594v120.478c0 4.194 3.4 7.594 7.594 7.594h158.811c4.194 0 7.594-3.4 7.594-7.594v-70.476z"
                                    style="fill:#fce8cb" />
                                <path class="st3"
                                    d="M215.712 226.796H56.9c-5.015 0-9.095-4.08-9.095-9.095V97.224c0-5.015 4.08-9.095 9.095-9.095h158.811c5.015 0 9.094 4.08 9.094 9.095v120.478c.001 5.014-4.078 9.094-9.093 9.094zM56.9 91.129a6.102 6.102 0 0 0-6.095 6.095v120.478a6.102 6.102 0 0 0 6.095 6.095h158.811a6.101 6.101 0 0 0 6.094-6.095V97.224a6.1 6.1 0 0 0-6.094-6.095H56.9z" />
                                <circle class="st8" cx="32.306" cy="156.963" r="8" />
                                <path class="st3"
                                    d="M32.306 166.463c-5.238 0-9.5-4.262-9.5-9.5s4.262-9.5 9.5-9.5 9.5 4.262 9.5 9.5-4.262 9.5-9.5 9.5zm0-16c-3.584 0-6.5 2.916-6.5 6.5s2.916 6.5 6.5 6.5 6.5-2.916 6.5-6.5-2.916-6.5-6.5-6.5z" />
                                <path class="st8" d="m92.306 150.577-31.754 55h63.508z" />
                                <path class="st3"
                                    d="M124.061 207.078H60.552a1.5 1.5 0 0 1-1.299-2.25l31.754-55a1.5 1.5 0 0 1 2.598 0l31.755 55a1.5 1.5 0 0 1-1.299 2.25zm-60.912-3h58.313l-29.157-50.5-29.156 50.5z" />
                                <path transform="rotate(-23.648 160.806 162.746)" class="st9"
                                    d="M120.996 122.935h79.619v79.619h-79.619z" />
                                <path class="st3"
                                    d="M140.308 216.679a1.5 1.5 0 0 1-1.375-.899l-31.936-72.934a1.502 1.502 0 0 1 .773-1.976l72.935-31.936a1.498 1.498 0 0 1 1.975.772l31.935 72.934a1.5 1.5 0 0 1-.773 1.976l-72.934 31.936c-.195.087-.4.127-.6.127zm-29.961-73.661 30.732 70.186 70.186-30.732-30.731-70.186-70.187 30.732z" />
                                <path class="st8"
                                    d="m235.846 34.542 2.932-5.801a8.499 8.499 0 0 0-3.752-11.42 8.499 8.499 0 0 0-11.42 3.752l-2.932 5.801 15.172 7.668z" />
                                <path class="st3"
                                    d="M235.847 36.042c-.232 0-.465-.054-.677-.161l-15.173-7.669a1.501 1.501 0 0 1-.662-2.016l2.933-5.801a9.936 9.936 0 0 1 5.804-4.99 9.946 9.946 0 0 1 7.632.576c4.921 2.487 6.9 8.515 4.414 13.436l-2.932 5.801a1.506 1.506 0 0 1-1.339.824zm-13.158-9.831 12.495 6.316 2.255-4.462c1.741-3.445.354-7.664-3.09-9.405a6.953 6.953 0 0 0-5.342-.403 6.948 6.948 0 0 0-4.062 3.493l-2.256 4.461z" />
                                <path class="st9"
                                    d="m202.646 62.252-51.209 100.499 15.172 7.668 69.237-135.877-15.172-7.669-11.968 23.488z" />
                                <path class="st3"
                                    d="M166.608 171.92c-.227 0-.459-.052-.676-.162l-15.173-7.669a1.504 1.504 0 0 1-.66-2.02l51.21-100.498a1.5 1.5 0 0 1 2.674 1.363l-50.527 99.157 12.496 6.315 67.875-133.205-12.496-6.315-11.289 22.156a1.5 1.5 0 0 1-2.674-1.363l11.969-23.488a1.501 1.501 0 0 1 2.014-.658l15.173 7.668a1.504 1.504 0 0 1 .66 2.02l-69.237 135.878a1.503 1.503 0 0 1-1.339.821z" />
                                <path class="st8" d="m185.942 95.035-34.505 67.716 15.172 7.668 34.505-67.716z" />
                                <path class="st3"
                                    d="M166.608 171.92c-.227 0-.459-.052-.676-.162l-15.173-7.669a1.504 1.504 0 0 1-.66-2.02l34.506-67.716a1.502 1.502 0 0 1 2.014-.658l15.172 7.669a1.504 1.504 0 0 1 .66 2.02L167.946 171.1c-.265.52-.792.82-1.338.82zm-13.152-9.829 12.496 6.315 33.143-65.043-12.495-6.315-33.144 65.043z" />
                                <path class="st14" d="m166.609 170.419-15.172-7.668-2.338 23.468z" />
                                <path class="st3"
                                    d="M149.099 187.72a1.502 1.502 0 0 1-1.493-1.649l2.338-23.469a1.5 1.5 0 0 1 2.168-1.19l15.173 7.669a1.5 1.5 0 0 1 .329 2.453l-17.511 15.8a1.499 1.499 0 0 1-1.004.386zm3.613-22.644-1.736 17.429 13.005-11.734-11.269-5.695z" />
                                <circle class="st14" cx="120.806" cy="126.744" r="28.5" />
                                <path class="st3"
                                    d="M120.806 156.744c-16.542 0-30-13.458-30-30s13.458-30 30-30 30 13.458 30 30-13.458 30-30 30zm0-57c-14.888 0-27 12.112-27 27s12.112 27 27 27 27-12.112 27-27-12.113-27-27-27z" />
                            </g>
                        </svg>
                        {{ __('collection.manage_collection') }}
                    </a>
                </div>
            </details>
        </div>
    </aside>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade.php ####

<div class="drawer-side">
    <!-- drawer-overlay gestisce il click fuori dalla sidebar per chiuderla su mobile -->
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100 flex flex-col">
        <!-- Titolo del Contesto -->
        <div class="p-4 bg-gray-900 text-white text-2xl font-bold">
            {{ __($contextTitle) }}
        </div>

        <div class="p-6">
            <x-back-button />
        </div>

        <x-separator />

        <!-- Menu -->
        <div class="space-y-4 p-4 flex-1 overflow-y-auto">
            @if (!empty($menus))
                @foreach ($menus as $menu)
                    @if (empty($menu['permission']) || Gate::allows($menu['permission']))
                        @if (!empty($menu['items']))
                            <!-- Summary con sottomenù -->
                            <details class="collapse collapse-arrow bg-base-200">
                                <summary class="collapse-title text-lg font-medium flex items-center gap-2">
                                    @if (!empty($menu['icon']))
                                        {!! $menu['icon'] !!}
                                    @endif
                                    <span>{{ $menu['name'] }}</span>
                                </summary>

                                <div class="collapse-content space-y-2 ml-4">
                                    @foreach ($menu['items'] as $item)
                                        @if (empty($item['permission']) || Gate::allows($item['permission']))
                                            <a href="{{ route($item['route']) }}"
                                               class="btn btn-ghost w-full justify-start flex items-center gap-2 hover:bg-gray-200">
                                                {!! $item['icon'] !!}
                                                <span>{{ $item['name'] }}</span>
                                            </a>
                                        @endif
                                    @endforeach
                                </div>
                            </details>
                        @else
                            <!-- Summary senza voci -->
                            <a href="{{ route($menu['summary_route']) }}"
                               class="text-lg font-medium text-gray-700 flex items-center gap-2 hover:text-blue-600">
                                @if (!empty($menu['icon']))
                                    {!! $menu['icon'] !!}
                                @endif
                                <span>{{ $menu['name'] }}</span>
                            </a>
                            <div class="border-t border-gray-300 my-4"></div>
                        @endif
                        <x-separator />
                    @endif
                @endforeach
            @else
                <p class="text-center text-gray-500">Nessun menu disponibile</p>
            @endif
        </div>
    </aside>
</div>



#### Inizio File: /home/fabio/EGI/resources/views/livewire/team-manager.blade.php ####

<div>
    {{-- Be like water. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/welcome/auth-forms.blade.php ####

<div>
    <!-- Tab Navigation -->
    <div class="tabs tabs-boxed bg-base-200 bg-opacity-50 mb-6">
        <a wire:click="$set('showLogin', true)"
           class="tab {{ $showLogin ? 'tab-active' : '' }}">
            Login
        </a>
        <a wire:click="$set('showLogin', false)"
           class="tab {{ !$showLogin ? 'tab-active' : '' }}">
            Register
        </a>
    </div>

    <!-- Forms Container -->
    <div class="transition-all duration-300">
        @if($showLogin)
            <x-auth-session-status class="mb-4" :status="session('status')" />

            <form method="POST" action="{{ route('login') }}">
                @csrf
                <div class="space-y-4">
                    <div>
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" name="email" :value="old('email')" required autofocus autocomplete="username"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password" value="{{ __('Password') }}" />
                        <x-input id="password" type="password" name="password" required autocomplete="current-password"
                                class="input input-bordered w-full" />
                    </div>

                    <div class="flex items-center justify-between">
                        <label class="label cursor-pointer">
                            <input type="checkbox" name="remember" class="checkbox checkbox-primary" />
                            <span class="label-text ml-2">{{ __('Remember me') }}</span>
                        </label>

                        @if (Route::has('password.request'))
                            <a class="link link-primary" href="{{ route('password.request') }}">
                                {{ __('Forgot password?') }}
                            </a>
                        @endif
                    </div>

                    <x-button class="btn btn-primary w-full">
                        {{ __('Log in') }}
                    </x-button>
                </div>
            </form>
        @else
            <form method="POST" action="{{ route('register') }}">
                @csrf
                <div class="space-y-4">
                    <div>
                        <x-label for="name" value="{{ __('Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name')" required autofocus autocomplete="name"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" name="email" :value="old('email')" required autocomplete="username"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password" value="{{ __('Password') }}" />
                        <x-input id="password" type="password" name="password" required autocomplete="new-password"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                        <x-input id="password_confirmation" type="password" name="password_confirmation" required autocomplete="new-password"
                                class="input input-bordered w-full" />
                    </div>

                    @if (Laravel\Jetstream\Jetstream::hasTermsAndPrivacyPolicyFeature())
                        <div>
                            <x-label for="terms">
                                <div class="flex items-center">
                                    <x-checkbox name="terms" id="terms" required />
                                    <div class="ml-2">
                                        {!! __('I agree to the :terms_of_service and :privacy_policy', [
                                            'terms_of_service' => '<a target="_blank" href="'.route('terms.show').'" class="link link-primary">'.__('Terms of Service').'</a>',
                                            'privacy_policy' => '<a target="_blank" href="'.route('policy.show').'" class="link link-primary">'.__('Privacy Policy').'</a>',
                                        ]) !!}
                                    </div>
                                </div>
                            </x-label>
                        </div>
                    @endif

                    <x-button class="btn btn-primary w-full">
                        {{ __('Register') }}
                    </x-button>
                </div>
            </form>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/navigation-menu.blade.php ####

<nav x-data="{ open: false }" class="bg-white dark:bg-gray-800 border-b border-gray-100 dark:border-gray-700">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
            <div class="flex">
                <!-- Logo -->
                <div class="shrink-0 flex items-center">
                    <a href="{{ route('dashboard') }}">
                        <x-application-mark class="block h-9 w-auto" />
                    </a>
                </div>

                {{-- @if (Auth::user()->can('superadmin')) --}}
                {{-- @endif --}}

                <!-- Navigation Links Desktop -->
                <div class="hidden space-x-8 sm:-my-px sm:ms-10 sm:flex">
                    <x-nav-link href="{{ route('dashboard') }}" :active="request()->routeIs('dashboard')">
                        {{ __('Dashboard') }}
                    </x-nav-link>
                    <!-- Altri link desktop se vuoi -->
                </div>

            </div>

            <div class="flex">
                <div class="shrink-0 flex items-center text-4xl text-gray-700 dark:text-gray-500">
                    {{ Auth::user()->name }}
                </div>
            </div>


            <div class="hidden sm:flex sm:items-center sm:ms-6">
                <!-- Teams Dropdown (se abilitato) -->
                {{-- @if (Laravel\Jetstream\Jetstream::hasTeamFeatures())
                    <div class="ms-3 relative">
                        <x-dropdown align="right" width="60">
                            <x-slot name="trigger">
                                <span class="inline-flex rounded-md">
                                    <button type="button"
                                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:text-gray-700 dark:hover:text-gray-300 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 active:bg-gray-50 dark:active:bg-gray-700 transition ease-in-out duration-150">
                                        {{ Auth::user()?->currentTeam?->name ?? 'Nessun team assegnato' }}

                                        <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                                             viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                  d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"/>
                                        </svg>
                                    </button>
                                </span>
                            </x-slot>

                            <x-slot name="content">
                                <!-- Team Management -->
                                <div class="w-60">
                                    <div class="block px-4 py-2 text-xs text-gray-400">
                                        {{ __('Manage Team') }}
                                    </div>

                                    <x-dropdown-link
                                        href="{{ Auth::user()?->currentTeam?->id ? route('teams.show', Auth::user()->currentTeam->id) : '#' }}">
                                        {{ __('Team Settings') }}
                                    </x-dropdown-link>

                                    @can('create', Laravel\Jetstream\Jetstream::newTeamModel())
                                        <x-dropdown-link href="{{ route('teams.create') }}">
                                            {{ __('Create New Team') }}
                                        </x-dropdown-link>
                                    @endcan

                                    @if (Auth::user()->allTeams()->count() > 1)
                                        <div class="border-t border-gray-200 dark:border-gray-600"></div>

                                        <div class="block px-4 py-2 text-xs text-gray-400">
                                            {{ __('Switch Teams') }}
                                        </div>

                                        @foreach (Auth::user()->allTeams() as $team)
                                            <x-switchable-team :team="$team" />
                                        @endforeach
                                    @endif
                                </div>
                            </x-slot>
                        </x-dropdown>
                    </div>
                @endif --}}

                <!-- Settings Dropdown -->
                <div class="ms-3 relative">
                    <x-dropdown align="right" width="48">
                        <x-slot name="trigger">
                            @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
                                <button
                                    class="flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition">
                                    <img class="size-8 rounded-full object-cover" src="{{ Auth::user()->profile_photo_url }}"
                                         alt="{{ Auth::user()->name }}"/>
                                </button>
                            @else
                                <span class="inline-flex rounded-md">
                                    <button type="button"
                                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:text-gray-700 dark:hover:text-gray-300 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 active:bg-gray-50 dark:active:bg-gray-700 transition ease-in-out duration-150">
                                        {{ Auth::user()->name }}

                                        <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                                             viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                  d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
                                        </svg>
                                    </button>
                                </span>
                            @endif
                        </x-slot>

                        <x-slot name="content">
                            <!-- Account Management -->
                            <div class="block px-4 py-2 text-xs text-gray-400">
                                {{ __('Manage Account') }}
                            </div>

                            <x-dropdown-link href="{{ route('profile.show') }}">
                                {{ __('Profile') }}
                            </x-dropdown-link>

                            @if (Laravel\Jetstream\Jetstream::hasApiFeatures())
                                <x-dropdown-link href="{{ route('api-tokens.index') }}">
                                    {{ __('API Tokens') }}
                                </x-dropdown-link>
                            @endif

                            <div class="border-t border-gray-200 dark:border-gray-600"></div>

                            <!-- Authentication -->
                            <form method="POST" action="{{ route('logout') }}" x-data>
                                @csrf

                                <x-dropdown-link href="{{ route('logout') }}"
                                             @click.prevent="$root.submit();">
                                    {{ __('Log Out') }}
                                </x-dropdown-link>
                            </form>
                        </x-slot>
                    </x-dropdown>
                </div>
            </div>

            <!-- Sezione mobile (schermi piccoli) con due pulsanti: uno per la navbar, uno per la sidebar -->
            <div class="-me-2 flex items-center sm:hidden">
                <!-- Pulsante per togglare la SIDEBAR (Drawer DaisyUI) -->
                <!-- Usa un'icona diversa per distinguere questo dal menu navbar -->
                <label for="main-drawer" class="inline-flex items-center justify-center p-2 ms-2 rounded-md text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-900 focus:outline-none transition duration-150 ease-in-out">
                    <svg class="size-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <!-- Ad esempio puntini che simboleggiano la sidebar -->
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M10 6h9M10 12h9M10 18h9M4 6h.01M4 12h.01M4 18h.01" />
                    </svg>
                </label>

                <!-- Pulsante per togglare il menu della NAVBAR (Alpine) -->
                <button @click="open = ! open" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-900 focus:outline-none transition duration-150 ease-in-out">
                    <svg class="size-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <!-- Icona hamburger (visibile quando open = false) -->
                        <path :class="{'inline-flex': ! open, 'hidden': open }" class="inline-flex"
                              stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M4 6h16M4 12h16M4 18h16" />
                        <!-- Icona X (visibile quando open = true) -->
                        <path :class="{'hidden': ! open, 'inline-flex': open }" class="hidden"
                              stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Responsive Navigation Menu (Alpine) -->
    <!-- Resta come nel tuo codice, questo serve per il menu responsive della NAVBAR, non per la sidebar -->
    <div :class="{'block': open, 'hidden': ! open}" class="hidden sm:hidden">
        <div class="pt-2 pb-3 space-y-1">
            <x-responsive-nav-link href="{{ route('dashboard') }}" :active="request()->routeIs('dashboard')">
                {{ __('Dashboard') }}
            </x-responsive-nav-link>
            <!-- Altri link responsive se vuoi -->
        </div>

        <!-- Responsive Settings Options -->
        <div class="pt-4 pb-1 border-t border-gray-200 dark:border-gray-600">
            <div class="flex items-center px-4">
                @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
                    <div class="shrink-0 me-3">
                        <img class="size-10 rounded-full object-cover" src="{{ Auth::user()->profile_photo_url }}"
                             alt="{{ Auth::user()->name }}" />
                    </div>
                @endif

                <div>
                    <div class="font-medium text-base text-gray-800 dark:text-gray-200">{{ Auth::user()->name }}</div>
                    <div class="font-medium text-sm text-gray-500">{{ Auth::user()->email }}</div>
                </div>
            </div>

            <div class="mt-3 space-y-1">
                <x-responsive-nav-link href="{{ route('profile.show') }}" :active="request()->routeIs('profile.show')">
                    {{ __('Profile') }}
                </x-responsive-nav-link>

                @if (Laravel\Jetstream\Jetstream::hasApiFeatures())
                    <x-responsive-nav-link href="{{ route('api-tokens.index') }}" :active="request()->routeIs('api-tokens.index')">
                        {{ __('API Tokens') }}
                    </x-responsive-nav-link>
                @endif

                <!-- Authentication -->
                <form method="POST" action="{{ route('logout') }}" x-data>
                    @csrf
                    <x-responsive-nav-link href="{{ route('logout') }}"
                                   @click.prevent="$root.submit();">
                        {{ __('Log Out') }}
                    </x-responsive-nav-link>
                </form>

                <!-- Team Management -->
                {{-- @if (Laravel\Jetstream\Jetstream::hasTeamFeatures())
                    <div class="border-t border-gray-200 dark:border-gray-600"></div>

                    <div class="block px-4 py-2 text-xs text-gray-400">
                        {{ __('Manage Team') }}
                    </div>

                    <x-responsive-nav-link
                        href="{{ Auth::user()?->currentTeam?->id ? route('teams.show', Auth::user()->currentTeam->id) : '#' }}"
                        :active="Auth::user()?->currentTeam && request()->routeIs('teams.show')">
                        {{ __('Team Settings') }}
                    </x-responsive-nav-link>

                    @can('create', Laravel\Jetstream\Jetstream::newTeamModel())
                        <x-responsive-nav-link href="{{ route('teams.create') }}" :active="request()->routeIs('teams.create')">
                            {{ __('Create New Team') }}
                        </x-responsive-nav-link>
                    @endcan

                    @if (Auth::user()->allTeams()->count() > 1)
                        <div class="border-t border-gray-200 dark:border-gray-600"></div>

                        <div class="block px-4 py-2 text-xs text-gray-400">
                            {{ __('Switch Teams') }}
                        </div>

                        @foreach (Auth::user()->allTeams() as $team)
                            <x-switchable-team :team="$team" component="responsive-nav-link" />
                        @endforeach
                    @endif
                @endif --}}
            </div>
        </div>
    </div>
</nav>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/default.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg shadow-md">
    <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>
    <p class="text-sm text-gray-400">{{ $notification->created_at->diffForHumans() }}</p>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/invitation.blade.php ####

<div class="bg-blue-600 p-4 mb-4 rounded-lg shadow-md">
    <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>

    <div class="flex space-x-2 mt-2">

        <button wire:click="handleNotificationAction('{{ $notification->id }}', 'accept')" class="btn btn-primary">
            {{ __('Accept') }}
        </button>
        <button wire:click="handleNotificationAction('{{ $notification->id }}', 'decline')" class="btn btn-secondary">
            {{ __('Decline') }}
        </button>
    </div>
    <p class="text-sm text-gray-400">{{ __('Created:') }} {{ $notification->created_at->diffForHumans() }}</p>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/proposa-declined-notification.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg">
    <h3 class="text-2xl font-bold mb-4 text-red-500">{{ __('Proposta rifiutata') }}</h3>
    <!-- Contenitore principale -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <!-- Contenitore dei Dettagli -->
        <div class="bg-gray-800 p-4 rounded-lg shadow-md mb-4 md:mb-0 w-full md:w-auto">
            @if(isset($notification->data['reason']) && $notification->data['reason'])
                <p class="text-sm text-gray-300">
                    {{ __('notification.receiver') }}: <span class="font-bold">{{ $notification->data['approver'] }}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('notification.proposal_declined_reason') }}: <span class="font-bold">{{ $notification->data['reason'] }}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('collection.wallet.royalty_mint') }}: <span class="font-bold">{{ $notification->data['royalty_mint'] .'%'}}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('collection.wallet.royalty_rebind') }}: <span class="font-bold">{{ $notification->data['royalty_rebind'] .'%' }}</span>
                </p>
            @endif
        </div>

        <!-- Contenitore dei Bottoni -->
        <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2">
            @if ( $notification->data['status'] === 'response')
                <button wire:click="notificationArchive('{{ $notification->id }}', 'declined')" class="btn btn-primary w-full md:w-auto">
                    {{ __('archive') }}
                </button>
            @endif
        </div>
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/notifications/wallet-change-request.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg">
    <!-- Contenitore principale -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <!-- Contenitore dei Dettagli -->
        <div class="bg-gray-800 p-4 rounded-lg shadow-md mb-4 md:mb-0 w-full md:w-auto">
            <div class="mb-2">
                <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>
           </div>
            <div class="mb-2">
                <p class="text-md text-gray-300 truncate w-full" title="{{ $notification->data['wallet_address'] }}">
                    <strong>{{ __('Wallet Address:') }}</strong>
                    {{ $notification->data['wallet_address'] }}
                </p>
            </div>
            <div class="mb-2">
                <p class="text-md text-gray-300">
                    <strong>{{ __('Mint Royalty:') }}</strong> {{ $notification->data['royalty_mint'] }}%
                </p>
            </div>
            <div class="mb-2">
                <p class="text-md text-gray-300">
                    <strong>{{ __('Rebind Royalty:') }}</strong> {{ $notification->data['royalty_rebind'] }}%
                </p>
            </div>

            <div>
                <p class="text-sm text-gray-400">
                    {{ __('Created:') }} {{ $notification->created_at->diffForHumans() }}
                </p>
            </div>
        </div>

        <!-- Contenitore dei Bottoni -->
        <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2">
            @if (isset($notification->data['wallet_change_approvals_id']) && $notification->data['type'] === 'create')
                <button wire:click="handleNotificationAction('{{ $notification->id }}', 'accept')" class="btn btn-primary w-full md:w-auto">
                    {{ __('Accept') }}
                </button>

                <button
                    wire:click="openDeclineModal({{ json_encode($notification)}})"
                    class="btn btn-secondary">
                    {{ __('Decline') }}
                </button>


            @endif
        </div>
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/policy.blade.php ####

<x-guest-layout>
    <div class="pt-4 bg-gray-100 dark:bg-gray-900">
        <div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0">
            <div>
                <x-authentication-card-logo />
            </div>

            <div class="w-full sm:max-w-2xl mt-6 p-6 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg prose dark:prose-invert">
                {!! $policy !!}
            </div>
        </div>
    </div>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/profile/delete-user-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Delete Account') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Permanently delete your account.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.') }}
        </div>

        <div class="mt-5">
            <x-danger-button wire:click="confirmUserDeletion" wire:loading.attr="disabled">
                {{ __('Delete Account') }}
            </x-danger-button>
        </div>

        <!-- Delete User Confirmation Modal -->
        <x-dialog-modal wire:model.live="confirmingUserDeletion">
            <x-slot name="title">
                {{ __('Delete Account') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}

                <div class="mt-4" x-data="{}" x-on:confirming-delete-user.window="setTimeout(() => $refs.password.focus(), 250)">
                    <x-input type="password" class="mt-1 block w-3/4"
                                autocomplete="current-password"
                                placeholder="{{ __('Password') }}"
                                x-ref="password"
                                wire:model="password"
                                wire:keydown.enter="deleteUser" />

                    <x-input-error for="password" class="mt-2" />
                </div>
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingUserDeletion')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3" wire:click="deleteUser" wire:loading.attr="disabled">
                    {{ __('Delete Account') }}
                </x-danger-button>
            </x-slot>
        </x-dialog-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/logout-other-browser-sessions-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Browser Sessions') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Manage and log out your active sessions on other browsers and devices.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password.') }}
        </div>

        @if (count($this->sessions) > 0)
            <div class="mt-5 space-y-6">
                <!-- Other Browser Sessions -->
                @foreach ($this->sessions as $session)
                    <div class="flex items-center">
                        <div>
                            @if ($session->agent->isDesktop())
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8 text-gray-500">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25" />
                                </svg>
                            @else
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8 text-gray-500">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3" />
                                </svg>
                            @endif
                        </div>

                        <div class="ms-3">
                            <div class="text-sm text-gray-600 dark:text-gray-400">
                                {{ $session->agent->platform() ? $session->agent->platform() : __('Unknown') }} - {{ $session->agent->browser() ? $session->agent->browser() : __('Unknown') }}
                            </div>

                            <div>
                                <div class="text-xs text-gray-500">
                                    {{ $session->ip_address }},

                                    @if ($session->is_current_device)
                                        <span class="text-green-500 font-semibold">{{ __('This device') }}</span>
                                    @else
                                        {{ __('Last active') }} {{ $session->last_active }}
                                    @endif
                                </div>
                            </div>
                        </div>
                    </div>
                @endforeach
            </div>
        @endif

        <div class="flex items-center mt-5">
            <x-button wire:click="confirmLogout" wire:loading.attr="disabled">
                {{ __('Log Out Other Browser Sessions') }}
            </x-button>

            <x-action-message class="ms-3" on="loggedOut">
                {{ __('Done.') }}
            </x-action-message>
        </div>

        <!-- Log Out Other Devices Confirmation Modal -->
        <x-dialog-modal wire:model.live="confirmingLogout">
            <x-slot name="title">
                {{ __('Log Out Other Browser Sessions') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices.') }}

                <div class="mt-4" x-data="{}" x-on:confirming-logout-other-browser-sessions.window="setTimeout(() => $refs.password.focus(), 250)">
                    <x-input type="password" class="mt-1 block w-3/4"
                                autocomplete="current-password"
                                placeholder="{{ __('Password') }}"
                                x-ref="password"
                                wire:model="password"
                                wire:keydown.enter="logoutOtherBrowserSessions" />

                    <x-input-error for="password" class="mt-2" />
                </div>
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingLogout')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-button class="ms-3"
                            wire:click="logoutOtherBrowserSessions"
                            wire:loading.attr="disabled">
                    {{ __('Log Out Other Browser Sessions') }}
                </x-button>
            </x-slot>
        </x-dialog-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/show.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Profile') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @if (Laravel\Fortify\Features::canUpdateProfileInformation())
                @livewire('profile.update-profile-information-form')

                <x-section-border />
            @endif

            @if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::updatePasswords()))
                <div class="mt-10 sm:mt-0">
                    @livewire('profile.update-password-form')
                </div>

                <x-section-border />
            @endif

            @if (Laravel\Fortify\Features::canManageTwoFactorAuthentication())
                <div class="mt-10 sm:mt-0">
                    @livewire('profile.two-factor-authentication-form')
                </div>

                <x-section-border />
            @endif

            <div class="mt-10 sm:mt-0">
                @livewire('profile.logout-other-browser-sessions-form')
            </div>

            @if (Laravel\Jetstream\Jetstream::hasAccountDeletionFeatures())
                <x-section-border />

                <div class="mt-10 sm:mt-0">
                    @livewire('profile.delete-user-form')
                </div>
            @endif
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/profile/two-factor-authentication-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Two Factor Authentication') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Add additional security to your account using two factor authentication.') }}
    </x-slot>

    <x-slot name="content">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
            @if ($this->enabled)
                @if ($showingConfirmation)
                    {{ __('Finish enabling two factor authentication.') }}
                @else
                    {{ __('You have enabled two factor authentication.') }}
                @endif
            @else
                {{ __('You have not enabled two factor authentication.') }}
            @endif
        </h3>

        <div class="mt-3 max-w-xl text-sm text-gray-600 dark:text-gray-400">
            <p>
                {{ __('When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone\'s Google Authenticator application.') }}
            </p>
        </div>

        @if ($this->enabled)
            @if ($showingQrCode)
                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        @if ($showingConfirmation)
                            {{ __('To finish enabling two factor authentication, scan the following QR code using your phone\'s authenticator application or enter the setup key and provide the generated OTP code.') }}
                        @else
                            {{ __('Two factor authentication is now enabled. Scan the following QR code using your phone\'s authenticator application or enter the setup key.') }}
                        @endif
                    </p>
                </div>

                <div class="mt-4 p-2 inline-block bg-white">
                    {!! $this->user->twoFactorQrCodeSvg() !!}
                </div>

                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        {{ __('Setup Key') }}: {{ decrypt($this->user->two_factor_secret) }}
                    </p>
                </div>

                @if ($showingConfirmation)
                    <div class="mt-4">
                        <x-label for="code" value="{{ __('Code') }}" />

                        <x-input id="code" type="text" name="code" class="block mt-1 w-1/2" inputmode="numeric" autofocus autocomplete="one-time-code"
                            wire:model="code"
                            wire:keydown.enter="confirmTwoFactorAuthentication" />

                        <x-input-error for="code" class="mt-2" />
                    </div>
                @endif
            @endif

            @if ($showingRecoveryCodes)
                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        {{ __('Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.') }}
                    </p>
                </div>

                <div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 dark:bg-gray-900 dark:text-gray-100 rounded-lg">
                    @foreach (json_decode(decrypt($this->user->two_factor_recovery_codes), true) as $code)
                        <div>{{ $code }}</div>
                    @endforeach
                </div>
            @endif
        @endif

        <div class="mt-5">
            @if (! $this->enabled)
                <x-confirms-password wire:then="enableTwoFactorAuthentication">
                    <x-button type="button" wire:loading.attr="disabled">
                        {{ __('Enable') }}
                    </x-button>
                </x-confirms-password>
            @else
                @if ($showingRecoveryCodes)
                    <x-confirms-password wire:then="regenerateRecoveryCodes">
                        <x-secondary-button class="me-3">
                            {{ __('Regenerate Recovery Codes') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @elseif ($showingConfirmation)
                    <x-confirms-password wire:then="confirmTwoFactorAuthentication">
                        <x-button type="button" class="me-3" wire:loading.attr="disabled">
                            {{ __('Confirm') }}
                        </x-button>
                    </x-confirms-password>
                @else
                    <x-confirms-password wire:then="showRecoveryCodes">
                        <x-secondary-button class="me-3">
                            {{ __('Show Recovery Codes') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @endif

                @if ($showingConfirmation)
                    <x-confirms-password wire:then="disableTwoFactorAuthentication">
                        <x-secondary-button wire:loading.attr="disabled">
                            {{ __('Cancel') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @else
                    <x-confirms-password wire:then="disableTwoFactorAuthentication">
                        <x-danger-button wire:loading.attr="disabled">
                            {{ __('Disable') }}
                        </x-danger-button>
                    </x-confirms-password>
                @endif

            @endif
        </div>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/update-password-form.blade.php ####

<x-form-section submit="updatePassword">
    <x-slot name="title">
        {{ __('Update Password') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Ensure your account is using a long, random password to stay secure.') }}
    </x-slot>

    <x-slot name="form">
        <div class="col-span-6 sm:col-span-4">
            <x-label for="current_password" value="{{ __('Current Password') }}" />
            <x-input id="current_password" type="password" class="mt-1 block w-full" wire:model="state.current_password" autocomplete="current-password" />
            <x-input-error for="current_password" class="mt-2" />
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="password" value="{{ __('New Password') }}" />
            <x-input id="password" type="password" class="mt-1 block w-full" wire:model="state.password" autocomplete="new-password" />
            <x-input-error for="password" class="mt-2" />
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
            <x-input id="password_confirmation" type="password" class="mt-1 block w-full" wire:model="state.password_confirmation" autocomplete="new-password" />
            <x-input-error for="password_confirmation" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-action-message class="me-3" on="saved">
            {{ __('Saved.') }}
        </x-action-message>

        <x-button>
            {{ __('Save') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/update-profile-information-form.blade.php ####

<x-form-section submit="updateProfileInformation">
    <x-slot name="title">
        {{ __('Profile Information') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Update your account\'s profile information and email address.') }}
    </x-slot>

    <x-slot name="form">
        <!-- Profile Photo -->
        @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
            <div x-data="{photoName: null, photoPreview: null}" class="col-span-6 sm:col-span-4">
                <!-- Profile Photo File Input -->
                <input type="file" id="photo" class="hidden"
                            wire:model.live="photo"
                            x-ref="photo"
                            x-on:change="
                                    photoName = $refs.photo.files[0].name;
                                    const reader = new FileReader();
                                    reader.onload = (e) => {
                                        photoPreview = e.target.result;
                                    };
                                    reader.readAsDataURL($refs.photo.files[0]);
                            " />

                <x-label for="photo" value="{{ __('Photo') }}" />

                <!-- Current Profile Photo -->
                <div class="mt-2" x-show="! photoPreview">
                    <img src="{{ $this->user->profile_photo_url }}" alt="{{ $this->user->name }}" class="rounded-full size-20 object-cover">
                </div>

                <!-- New Profile Photo Preview -->
                <div class="mt-2" x-show="photoPreview" style="display: none;">
                    <span class="block rounded-full size-20 bg-cover bg-no-repeat bg-center"
                          x-bind:style="'background-image: url(\'' + photoPreview + '\');'">
                    </span>
                </div>

                <x-secondary-button class="mt-2 me-2" type="button" x-on:click.prevent="$refs.photo.click()">
                    {{ __('Select A New Photo') }}
                </x-secondary-button>

                @if ($this->user->profile_photo_path)
                    <x-secondary-button type="button" class="mt-2" wire:click="deleteProfilePhoto">
                        {{ __('Remove Photo') }}
                    </x-secondary-button>
                @endif

                <x-input-error for="photo" class="mt-2" />
            </div>
        @endif

        <!-- Name -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Name') }}" />
            <x-input id="name" type="text" class="mt-1 block w-full" wire:model="state.name" required autocomplete="name" />
            <x-input-error for="name" class="mt-2" />
        </div>

        <!-- Email -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="email" value="{{ __('Email') }}" />
            <x-input id="email" type="email" class="mt-1 block w-full" wire:model="state.email" required autocomplete="username" />
            <x-input-error for="email" class="mt-2" />

            @if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::emailVerification()) && ! $this->user->hasVerifiedEmail())
                <p class="text-sm mt-2 dark:text-white">
                    {{ __('Your email address is unverified.') }}

                    <button type="button" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" wire:click.prevent="sendEmailVerification">
                        {{ __('Click here to re-send the verification email.') }}
                    </button>
                </p>

                @if ($this->verificationLinkSent)
                    <p class="mt-2 font-medium text-sm text-green-600 dark:text-green-400">
                        {{ __('A new verification link has been sent to your email address.') }}
                    </p>
                @endif
            @endif
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-action-message class="me-3" on="saved">
            {{ __('Saved.') }}
        </x-action-message>

        <x-button wire:loading.attr="disabled" wire:target="photo">
            {{ __('Save') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/create-team-form.blade.php ####

<x-form-section submit="createTeam">
    <x-slot name="title">
        {{ __('Team Details') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Create a new team to collaborate with others on projects.') }}
    </x-slot>

    <x-slot name="form">
        <div class="col-span-6">
            <x-label value="{{ __('Team Owner') }}" />

            <div class="flex items-center mt-2">
                <img class="size-12 rounded-full object-cover" src="{{ $this->user->profile_photo_url }}" alt="{{ $this->user->name }}">

                <div class="ms-4 leading-tight">
                    <div class="text-gray-900 dark:text-white">{{ $this->user->name }}</div>
                    <div class="text-gray-700 dark:text-gray-300 text-sm">{{ $this->user->email }}</div>
                </div>
            </div>
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Team Name') }}" />
            <x-input id="name" type="text" class="mt-1 block w-full" wire:model="state.name" autofocus />
            <x-input-error for="name" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-button>
            {{ __('Create') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/create.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Create Team') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('teams.create-team-form')
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/teams/delete-team-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Delete Team') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Permanently delete this team.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain.') }}
        </div>

        <div class="mt-5">
            <x-danger-button wire:click="$toggle('confirmingTeamDeletion')" wire:loading.attr="disabled">
                {{ __('Delete Team') }}
            </x-danger-button>
        </div>

        <!-- Delete Team Confirmation Modal -->
        <x-confirmation-modal wire:model.live="confirmingTeamDeletion">
            <x-slot name="title">
                {{ __('Delete Team') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted.') }}
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingTeamDeletion')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3" wire:click="deleteTeam" wire:loading.attr="disabled">
                    {{ __('Delete Team') }}
                </x-danger-button>
            </x-slot>
        </x-confirmation-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/show.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Team Settings') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('teams.update-team-name-form', ['team' => $team])

            @livewire('teams.team-member-manager', ['team' => $team])

            @if (Gate::check('delete', $team) && ! $team->personal_team)
                <x-section-border />

                <div class="mt-10 sm:mt-0">
                    @livewire('teams.delete-team-form', ['team' => $team])
                </div>
            @endif
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/teams/team-member-manager.blade.php ####

<div>
    @if (Gate::check('addTeamMember', $team))
        <x-section-border />

        <!-- Add Team Member -->
        <div class="mt-10 sm:mt-0">
            <x-form-section submit="addTeamMember">
                <x-slot name="title">
                    {{ __('Add Team Member') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('Add a new team member to your team, allowing them to collaborate with you.') }}
                </x-slot>

                <x-slot name="form">
                    <div class="col-span-6">
                        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
                            {{ __('Please provide the email address of the person you would like to add to this team.') }}
                        </div>
                    </div>

                    <!-- Member Email -->
                    <div class="col-span-6 sm:col-span-4">
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" class="mt-1 block w-full" wire:model="addTeamMemberForm.email" />
                        <x-input-error for="email" class="mt-2" />
                    </div>

                    <!-- Role -->
                    @if (count($this->roles) > 0)
                        <div class="col-span-6 lg:col-span-4">
                            <x-label for="role" value="{{ __('Role') }}" />
                            <x-input-error for="role" class="mt-2" />

                            <div class="relative z-0 mt-1 border border-gray-200 dark:border-gray-700 rounded-lg cursor-pointer">
                                @foreach ($this->roles as $index => $role)
                                    <button type="button" class="relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-600 {{ $index > 0 ? 'border-t border-gray-200 dark:border-gray-700 focus:border-none rounded-t-none' : '' }} {{ ! $loop->last ? 'rounded-b-none' : '' }}"
                                                    wire:click="$set('addTeamMemberForm.role', '{{ $role->key }}')">
                                        <div class="{{ isset($addTeamMemberForm['role']) && $addTeamMemberForm['role'] !== $role->key ? 'opacity-50' : '' }}">
                                            <!-- Role Name -->
                                            <div class="flex items-center">
                                                <div class="text-sm text-gray-600 dark:text-gray-400 {{ $addTeamMemberForm['role'] == $role->key ? 'font-semibold' : '' }}">
                                                    {{ $role->name }}
                                                </div>

                                                @if ($addTeamMemberForm['role'] == $role->key)
                                                    <svg class="ms-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                    </svg>
                                                @endif
                                            </div>

                                            <!-- Role Description -->
                                            <div class="mt-2 text-xs text-gray-600 dark:text-gray-400 text-start">
                                                {{ $role->description }}
                                            </div>
                                        </div>
                                    </button>
                                @endforeach
                            </div>
                        </div>
                    @endif
                </x-slot>

                <x-slot name="actions">
                    <x-action-message class="me-3" on="saved">
                        {{ __('Added.') }}
                    </x-action-message>

                    <x-button>
                        {{ __('Add') }}
                    </x-button>
                </x-slot>
            </x-form-section>
        </div>
    @endif

    @if ($team->teamInvitations->isNotEmpty() && Gate::check('addTeamMember', $team))
        <x-section-border />

        <!-- Team Member Invitations -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Pending Team Invitations') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation.') }}
                </x-slot>

                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($team->teamInvitations as $invitation)
                            <div class="flex items-center justify-between">
                                <div class="text-gray-600 dark:text-gray-400">{{ $invitation->email }}</div>

                                <div class="flex items-center">
                                    @if (Gate::check('removeTeamMember', $team))
                                        <!-- Cancel Team Invitation -->
                                        <button class="cursor-pointer ms-6 text-sm text-red-500 focus:outline-none"
                                                            wire:click="cancelTeamInvitation({{ $invitation->id }})">
                                            {{ __('Cancel') }}
                                        </button>
                                    @endif
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    @if ($team->users->isNotEmpty())
        <x-section-border />

        <!-- Manage Team Members -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Team Members') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('All of the people that are part of this team.') }}
                </x-slot>

                <!-- Team Member List -->
                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($team->users->sortBy('name') as $user)
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <img class="size-8 rounded-full object-cover" src="{{ $user->profile_photo_url }}" alt="{{ $user->name }}">
                                    <div class="ms-4 dark:text-white">{{ $user->name }}</div>
                                </div>

                                <div class="flex items-center">
                                    <!-- Manage Team Member Role -->
                                    @if (Gate::check('updateTeamMember', $team) && Laravel\Jetstream\Jetstream::hasRoles())
                                        <button class="ms-2 text-sm text-gray-400 underline" wire:click="manageRole('{{ $user->id }}')">
                                            {{ Laravel\Jetstream\Jetstream::findRole($user->membership->role)->name }}
                                        </button>
                                    @elseif (Laravel\Jetstream\Jetstream::hasRoles())
                                        <div class="ms-2 text-sm text-gray-400">
                                            {{ Laravel\Jetstream\Jetstream::findRole($user->membership->role)->name }}
                                        </div>
                                    @endif

                                    <!-- Leave Team -->
                                    @if ($this->user->id === $user->id)
                                        <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="$toggle('confirmingLeavingTeam')">
                                            {{ __('Leave') }}
                                        </button>

                                    <!-- Remove Team Member -->
                                    @elseif (Gate::check('removeTeamMember', $team))
                                        <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="confirmTeamMemberRemoval('{{ $user->id }}')">
                                            {{ __('Remove') }}
                                        </button>
                                    @endif
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    <!-- Role Management Modal -->
    <x-dialog-modal wire:model.live="currentlyManagingRole">
        <x-slot name="title">
            {{ __('Manage Role') }}
        </x-slot>

        <x-slot name="content">
            <div class="relative z-0 mt-1 border border-gray-200 dark:border-gray-700 rounded-lg cursor-pointer">
                @foreach ($this->roles as $index => $role)
                    <button type="button" class="relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-600 {{ $index > 0 ? 'border-t border-gray-200 dark:border-gray-700 focus:border-none rounded-t-none' : '' }} {{ ! $loop->last ? 'rounded-b-none' : '' }}"
                                    wire:click="$set('currentRole', '{{ $role->key }}')">
                        <div class="{{ $currentRole !== $role->key ? 'opacity-50' : '' }}">
                            <!-- Role Name -->
                            <div class="flex items-center">
                                <div class="text-sm text-gray-600 dark:text-gray-400 {{ $currentRole == $role->key ? 'font-semibold' : '' }}">
                                    {{ $role->name }}
                                </div>

                                @if ($currentRole == $role->key)
                                    <svg class="ms-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                @endif
                            </div>

                            <!-- Role Description -->
                            <div class="mt-2 text-xs text-gray-600 text-start dark:text-gray-400">
                                {{ $role->description }}
                            </div>
                        </div>
                    </button>
                @endforeach
            </div>
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="stopManagingRole" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-button class="ms-3" wire:click="updateRole" wire:loading.attr="disabled">
                {{ __('Save') }}
            </x-button>
        </x-slot>
    </x-dialog-modal>

    <!-- Leave Team Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingLeavingTeam">
        <x-slot name="title">
            {{ __('Leave Team') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to leave this team?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingLeavingTeam')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="leaveTeam" wire:loading.attr="disabled">
                {{ __('Leave') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>

    <!-- Remove Team Member Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingTeamMemberRemoval">
        <x-slot name="title">
            {{ __('Remove Team Member') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to remove this person from the team?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingTeamMemberRemoval')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="removeTeamMember" wire:loading.attr="disabled">
                {{ __('Remove') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/teams/update-team-name-form.blade.php ####

<x-form-section submit="updateTeamName">
    <x-slot name="title">
        {{ __('Team Name') }}
    </x-slot>

    <x-slot name="description">
        {{ __('The team\'s name and owner information.') }}
    </x-slot>

    <x-slot name="form">
        <!-- Team Owner Information -->
        <div class="col-span-6">
            <x-label value="{{ __('Team Owner') }}" />

            <div class="flex items-center mt-2">
                <img class="size-12 rounded-full object-cover" src="{{ $team->owner->profile_photo_url }}" alt="{{ $team->owner->name }}">

                <div class="ms-4 leading-tight">
                    <div class="text-gray-900 dark:text-white">{{ $team->owner->name }}</div>
                    <div class="text-gray-700 dark:text-gray-300 text-sm">{{ $team->owner->email }}</div>
                </div>
            </div>
        </div>

        <!-- Team Name -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Team Name') }}" />

            <x-input id="name"
                        type="text"
                        class="mt-1 block w-full"
                        wire:model="state.name"
                        :disabled="! Gate::check('update', $team)" />

            <x-input-error for="name" class="mt-2" />
        </div>
    </x-slot>

    @if (Gate::check('update', $team))
        <x-slot name="actions">
            <x-action-message class="me-3" on="saved">
                {{ __('Saved.') }}
            </x-action-message>

            <x-button>
                {{ __('Save') }}
            </x-button>
        </x-slot>
    @endif
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/terms.blade.php ####

<x-guest-layout>
    <div class="pt-4 bg-gray-100 dark:bg-gray-900">
        <div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0">
            <div>
                <x-authentication-card-logo />
            </div>

            <div class="w-full sm:max-w-2xl mt-6 p-6 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg prose dark:prose-invert">
                {!! $terms !!}
            </div>
        </div>
    </div>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/welcome.blade.php ####

<x-guest-welcome-layout>
    <div class="relative min-h-screen">
        <!-- Hero Section -->
        <div class="container mx-auto px-4 py-12">
            <div class="grid items-center gap-12 lg:grid-cols-2">
                <!-- Left Side - Welcome Content -->
                <div class="space-y-8">
                    <h1 class="text-5xl font-bold text-white">
                        Welcome to Florence EGI
                    </h1>
                    <p class="text-xl text-gray-300">
                        Your gateway to the next generation of digital assets.
                    </p>

                    <!-- Features Grid -->
                    <div class="mt-8 grid grid-cols-2 gap-4">
                        <div class="card bg-base-100 bg-opacity-10 p-4">
                            <div class="mb-2 text-2xl text-primary">🔒</div>
                            <h3 class="font-semibold">Secure Platform</h3>
                            <p class="text-sm text-gray-400">Enhanced with 2FA protection</p>
                        </div>
                        <div class="card bg-base-100 bg-opacity-10 p-4">
                            <div class="mb-2 text-2xl text-primary">👥</div>
                            <h3 class="font-semibold">Team Management</h3>
                            <p class="text-sm text-gray-400">Collaborate seamlessly</p>
                        </div>
                    </div>
                </div>

                <!-- Right Side - Auth Forms -->
                <div class="card bg-base-100 bg-opacity-10 shadow-xl backdrop-blur-lg">
                    <div class="card-body">
                        <livewire:welcome.auth-forms />
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-guest-welcome-layout>

#### Inizio File: /home/fabio/EGI/routes/api.php ####

<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

Route::get('/user', function (Request $request) {
    return $request->user();
})->middleware('auth:sanctum');

#### Inizio File: /home/fabio/EGI/routes/console.php ####

<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote')->hourly();

#### Inizio File: /home/fabio/EGI/routes/web.php ####

<?php

use App\Livewire\Collections\CollectionCarousel;
use App\Livewire\Collections\CollectionEdit;
use App\Livewire\Collections\CollectionUserMember;
use App\Livewire\Collections\CollectionWallet;
use App\Livewire\Collections\CreateCollection;
use App\Livewire\Collections\HeadImagesManager;
use Illuminate\Support\Facades\Route;
use App\Livewire\PhotoUploader;
use App\Http\Controllers\Admin\RoleController;
use App\Http\Controllers\IconAdminController;
use App\Http\Controllers\WalletController;
use App\Http\Controllers\DropController;
use App\Http\Middleware\SetLanguage;
use App\Livewire\Collections\CollectionOpen;
use Illuminate\Support\Facades\Log;
use UltraProject\UConfig\Http\Controllers\UConfigController;


// Rotta per PhotoUploader
Route::get('/photo-uploader', PhotoUploader::class)->name('photo-uploader');

// Rotta per la home
Route::get('/', function () {
    return view('welcome');
});

// Rotte protette da middleware
Route::middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])
    ->group(function () {

        // Dashboard
        Route::get('/dashboard', function () {
            return view('dashboard');
        })->name('dashboard');

        Route::get('/debug-context', function () {
            return Route::currentRouteName();
        })->name('debug.context');

        // Admin Routes
        Route::prefix('admin')->name('admin.')->group(function () {
            Route::resource('roles', RoleController::class)
                ->middleware(['role_or_permission:manage_roles']);

            Route::resource('icons', IconAdminController::class)
                ->middleware(['role_or_permission: manage_icons']);

            Route::get('/assign-role', [RoleController::class, 'showAssignRoleForm'])
                ->name('assign.role.form')
                ->middleware(['role_or_permission:manage_roles']);

            Route::post('/assign-role', [RoleController::class, 'assignRole'])
                ->name('assign.role')
                ->middleware(['role_or_permission:manage_roles']);

            Route::get('/assign-permissions', [RoleController::class, 'showAssignPermissionsForm'])
                ->name('assign.permissions.form')
                ->middleware(['role_or_permission:manage_roles']);

            Route::post('/assign-permissions', [RoleController::class, 'assignPermissions'])
                ->name('assign.permissions')
                ->middleware(['role_or_permission:manage_roles']);
        });

        Route::prefix('collections')->group(function () {

            // Rotte per visualizzare il carousel delle collezioni, viene usata solamente se il team corrente ha più di una collezione associata
            Route::get('/carousel', CollectionCarousel::class)
                ->middleware('collection_can:read_collection')
                ->name('collections.carousel');

            // Rotta per aprire vista della collezione
            Route::get('/{id}/edit', CollectionEdit::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.edit');

            // Rotta per discernere se mostrare il carousel o la vista della collezione
            Route::get('/open', CollectionOpen::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.open');

            Route::get('/{id}/head-images', HeadImagesManager::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.head_images');

            Route::get('/create', CreateCollection::class)
                ->middleware('collection_can:create_collection')
                ->name('collections.create');

            Route::get('/{id}/members', CollectionUserMember::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.collection_user');

        });




        // Route::get('/teams', TeamManager::class)
        //     ->middleware(['can:read_collection'])
        //     ->name('teams');

        // Rotte per Wallet
        Route::post('/wallets/{id}/approve', [WalletController::class, 'approve'])
            ->name('wallets.approve')
            ->middleware(['can:approve_wallet']);

        Route::post('/wallets/{id}/reject', [WalletController::class, 'reject'])
            ->name('wallets.reject')
            ->middleware(['can:reject_wallet']);

        // Rotte per Drop
        Route::post('/drops/{id}/join', [DropController::class, 'join'])
            ->name('drops.join')
            ->middleware(['can:join_drop']);

        // Rotta di debug per visualizzare la sessione
        Route::get('/session', function () {
            dd((session()->all()));
        });
    });

#### Inizio File: /home/fabio/EGI/tests/Feature/ApiTokenPermissionsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Str;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class ApiTokenPermissionsTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_token_permissions_can_be_updated(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $token = $user->tokens()->create([
            'name' => 'Test Token',
            'token' => Str::random(40),
            'abilities' => ['create', 'read'],
        ]);

        Livewire::test(ApiTokenManager::class)
            ->set(['managingPermissionsFor' => $token])
            ->set(['updateApiTokenForm' => [
                'permissions' => [
                    'delete',
                    'missing-permission',
                ],
            ]])
            ->call('updateApiToken');

        $this->assertTrue($user->fresh()->tokens->first()->can('delete'));
        $this->assertFalse($user->fresh()->tokens->first()->can('read'));
        $this->assertFalse($user->fresh()->tokens->first()->can('missing-permission'));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/AuthenticationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AuthenticationTest extends TestCase
{
    use RefreshDatabase;

    public function test_login_screen_can_be_rendered(): void
    {
        $response = $this->get('/login');

        $response->assertStatus(200);
    }

    public function test_users_can_authenticate_using_the_login_screen(): void
    {
        $user = User::factory()->create();

        $response = $this->post('/login', [
            'email' => $user->email,
            'password' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }

    public function test_users_can_not_authenticate_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $this->post('/login', [
            'email' => $user->email,
            'password' => 'wrong-password',
        ]);

        $this->assertGuest();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/BrowserSessionsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\LogoutOtherBrowserSessionsForm;
use Livewire\Livewire;
use Tests\TestCase;

class BrowserSessionsTest extends TestCase
{
    use RefreshDatabase;

    public function test_other_browser_sessions_can_be_logged_out(): void
    {
        $this->actingAs(User::factory()->create());

        Livewire::test(LogoutOtherBrowserSessionsForm::class)
            ->set('password', 'password')
            ->call('logoutOtherBrowserSessions')
            ->assertSuccessful();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/CreateApiTokenTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class CreateApiTokenTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_tokens_can_be_created(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(ApiTokenManager::class)
            ->set(['createApiTokenForm' => [
                'name' => 'Test Token',
                'permissions' => [
                    'read',
                    'update',
                ],
            ]])
            ->call('createApiToken');

        $this->assertCount(1, $user->fresh()->tokens);
        $this->assertEquals('Test Token', $user->fresh()->tokens->first()->name);
        $this->assertTrue($user->fresh()->tokens->first()->can('read'));
        $this->assertFalse($user->fresh()->tokens->first()->can('delete'));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/CreateTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\CreateTeamForm;
use Livewire\Livewire;
use Tests\TestCase;

class CreateTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_teams_can_be_created(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(CreateTeamForm::class)
            ->set(['state' => ['name' => 'Test Team']])
            ->call('createTeam');

        $this->assertCount(2, $user->fresh()->ownedTeams);
        $this->assertEquals('Test Team', $user->fresh()->ownedTeams()->latest('id')->first()->name);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteAccountTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\DeleteUserForm;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteAccountTest extends TestCase
{
    use RefreshDatabase;

    public function test_user_accounts_can_be_deleted(): void
    {
        if (! Features::hasAccountDeletionFeatures()) {
            $this->markTestSkipped('Account deletion is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $component = Livewire::test(DeleteUserForm::class)
            ->set('password', 'password')
            ->call('deleteUser');

        $this->assertNull($user->fresh());
    }

    public function test_correct_password_must_be_provided_before_account_can_be_deleted(): void
    {
        if (! Features::hasAccountDeletionFeatures()) {
            $this->markTestSkipped('Account deletion is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        Livewire::test(DeleteUserForm::class)
            ->set('password', 'wrong-password')
            ->call('deleteUser')
            ->assertHasErrors(['password']);

        $this->assertNotNull($user->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteApiTokenTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Str;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteApiTokenTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_tokens_can_be_deleted(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $token = $user->tokens()->create([
            'name' => 'Test Token',
            'token' => Str::random(40),
            'abilities' => ['create', 'read'],
        ]);

        Livewire::test(ApiTokenManager::class)
            ->set(['apiTokenIdBeingDeleted' => $token->id])
            ->call('deleteApiToken');

        $this->assertCount(0, $user->fresh()->tokens);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\Team;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\DeleteTeamForm;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_teams_can_be_deleted(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->ownedTeams()->save($team = Team::factory()->make([
            'personal_team' => false,
        ]));

        $team->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'test-role']
        );

        Livewire::test(DeleteTeamForm::class, ['team' => $team->fresh()])
            ->call('deleteTeam');

        $this->assertNull($team->fresh());
        $this->assertCount(0, $otherUser->fresh()->teams);
    }

    public function test_personal_teams_cant_be_deleted(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(DeleteTeamForm::class, ['team' => $user->currentTeam])
            ->call('deleteTeam')
            ->assertHasErrors(['team']);

        $this->assertNotNull($user->currentTeam->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/EmailVerificationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;
use Laravel\Fortify\Features;
use Tests\TestCase;

class EmailVerificationTest extends TestCase
{
    use RefreshDatabase;

    public function test_email_verification_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        $user = User::factory()->withPersonalTeam()->unverified()->create();

        $response = $this->actingAs($user)->get('/email/verify');

        $response->assertStatus(200);
    }

    public function test_email_can_be_verified(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        Event::fake();

        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1($user->email)]
        );

        $response = $this->actingAs($user)->get($verificationUrl);

        Event::assertDispatched(Verified::class);

        $this->assertTrue($user->fresh()->hasVerifiedEmail());
        $response->assertRedirect(route('dashboard', absolute: false).'?verified=1');
    }

    public function test_email_can_not_verified_with_invalid_hash(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1('wrong-email')]
        );

        $this->actingAs($user)->get($verificationUrl);

        $this->assertFalse($user->fresh()->hasVerifiedEmail());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/ExampleTest.php ####

<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/InviteTeamMemberTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Mail;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Laravel\Jetstream\Mail\TeamInvitation;
use Livewire\Livewire;
use Tests\TestCase;

class InviteTeamMemberTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_members_can_be_invited_to_team(): void
    {
        if (! Features::sendsTeamInvitations()) {
            $this->markTestSkipped('Team invitations not enabled.');
        }

        Mail::fake();

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('addTeamMemberForm', [
                'email' => 'test@example.com',
                'role' => 'admin',
            ])->call('addTeamMember');

        Mail::assertSent(TeamInvitation::class);

        $this->assertCount(1, $user->currentTeam->fresh()->teamInvitations);
    }

    public function test_team_member_invitations_can_be_cancelled(): void
    {
        if (! Features::sendsTeamInvitations()) {
            $this->markTestSkipped('Team invitations not enabled.');
        }

        Mail::fake();

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        // Add the team member...
        $component = Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('addTeamMemberForm', [
                'email' => 'test@example.com',
                'role' => 'admin',
            ])->call('addTeamMember');

        $invitationId = $user->currentTeam->fresh()->teamInvitations->first()->id;

        // Cancel the team invitation...
        $component->call('cancelTeamInvitation', $invitationId);

        $this->assertCount(0, $user->currentTeam->fresh()->teamInvitations);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/LeaveTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class LeaveTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_users_can_leave_teams(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->call('leaveTeam');

        $this->assertCount(0, $user->currentTeam->fresh()->users);
    }

    public function test_team_owners_cant_leave_their_own_team(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->call('leaveTeam')
            ->assertHasErrors(['team']);

        $this->assertNotNull($user->currentTeam->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/PasswordConfirmationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PasswordConfirmationTest extends TestCase
{
    use RefreshDatabase;

    public function test_confirm_password_screen_can_be_rendered(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $response = $this->actingAs($user)->get('/user/confirm-password');

        $response->assertStatus(200);
    }

    public function test_password_can_be_confirmed(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/user/confirm-password', [
            'password' => 'password',
        ]);

        $response->assertRedirect();
        $response->assertSessionHasNoErrors();
    }

    public function test_password_is_not_confirmed_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/user/confirm-password', [
            'password' => 'wrong-password',
        ]);

        $response->assertSessionHasErrors();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/PasswordResetTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Auth\Notifications\ResetPassword;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Laravel\Fortify\Features;
use Tests\TestCase;

class PasswordResetTest extends TestCase
{
    use RefreshDatabase;

    public function test_reset_password_link_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        $response = $this->get('/forgot-password');

        $response->assertStatus(200);
    }

    public function test_reset_password_link_can_be_requested(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class);
    }

    public function test_reset_password_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class, function (object $notification) {
            $response = $this->get('/reset-password/'.$notification->token);

            $response->assertStatus(200);

            return true;
        });
    }

    public function test_password_can_be_reset_with_valid_token(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class, function (object $notification) use ($user) {
            $response = $this->post('/reset-password', [
                'token' => $notification->token,
                'email' => $user->email,
                'password' => 'password',
                'password_confirmation' => 'password',
            ]);

            $response->assertSessionHasNoErrors();

            return true;
        });
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/ProfileInformationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\UpdateProfileInformationForm;
use Livewire\Livewire;
use Tests\TestCase;

class ProfileInformationTest extends TestCase
{
    use RefreshDatabase;

    public function test_current_profile_information_is_available(): void
    {
        $this->actingAs($user = User::factory()->create());

        $component = Livewire::test(UpdateProfileInformationForm::class);

        $this->assertEquals($user->name, $component->state['name']);
        $this->assertEquals($user->email, $component->state['email']);
    }

    public function test_profile_information_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdateProfileInformationForm::class)
            ->set('state', ['name' => 'Test Name', 'email' => 'test@example.com'])
            ->call('updateProfileInformation');

        $this->assertEquals('Test Name', $user->fresh()->name);
        $this->assertEquals('test@example.com', $user->fresh()->email);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/RegistrationTest.php ####

<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Fortify\Features;
use Laravel\Jetstream\Jetstream;
use Tests\TestCase;

class RegistrationTest extends TestCase
{
    use RefreshDatabase;

    public function test_registration_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is not enabled.');
        }

        $response = $this->get('/register');

        $response->assertStatus(200);
    }

    public function test_registration_screen_cannot_be_rendered_if_support_is_disabled(): void
    {
        if (Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is enabled.');
        }

        $response = $this->get('/register');

        $response->assertStatus(404);
    }

    public function test_new_users_can_register(): void
    {
        if (! Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is not enabled.');
        }

        $response = $this->post('/register', [
            'name' => 'Test User',
            'email' => 'test@example.com',
            'password' => 'password',
            'password_confirmation' => 'password',
            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature(),
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/RemoveTeamMemberTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class RemoveTeamMemberTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_members_can_be_removed_from_teams(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('teamMemberIdBeingRemoved', $otherUser->id)
            ->call('removeTeamMember');

        $this->assertCount(0, $user->currentTeam->fresh()->users);
    }

    public function test_only_team_owner_can_remove_team_members(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('teamMemberIdBeingRemoved', $user->id)
            ->call('removeTeamMember')
            ->assertStatus(403);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/TwoFactorAuthenticationSettingsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Fortify\Features;
use Laravel\Jetstream\Http\Livewire\TwoFactorAuthenticationForm;
use Livewire\Livewire;
use Tests\TestCase;

class TwoFactorAuthenticationSettingsTest extends TestCase
{
    use RefreshDatabase;

    public function test_two_factor_authentication_can_be_enabled(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication');

        $user = $user->fresh();

        $this->assertNotNull($user->two_factor_secret);
        $this->assertCount(8, $user->recoveryCodes());
    }

    public function test_recovery_codes_can_be_regenerated(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        $component = Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication')
            ->call('regenerateRecoveryCodes');

        $user = $user->fresh();

        $component->call('regenerateRecoveryCodes');

        $this->assertCount(8, $user->recoveryCodes());
        $this->assertCount(8, array_diff($user->recoveryCodes(), $user->fresh()->recoveryCodes()));
    }

    public function test_two_factor_authentication_can_be_disabled(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        $component = Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication');

        $this->assertNotNull($user->fresh()->two_factor_secret);

        $component->call('disableTwoFactorAuthentication');

        $this->assertNull($user->fresh()->two_factor_secret);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdatePasswordTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Hash;
use Laravel\Jetstream\Http\Livewire\UpdatePasswordForm;
use Livewire\Livewire;
use Tests\TestCase;

class UpdatePasswordTest extends TestCase
{
    use RefreshDatabase;

    public function test_password_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ])
            ->call('updatePassword');

        $this->assertTrue(Hash::check('new-password', $user->fresh()->password));
    }

    public function test_current_password_must_be_correct(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'wrong-password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ])
            ->call('updatePassword')
            ->assertHasErrors(['current_password']);

        $this->assertTrue(Hash::check('password', $user->fresh()->password));
    }

    public function test_new_passwords_must_match(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'wrong-password',
            ])
            ->call('updatePassword')
            ->assertHasErrors(['password']);

        $this->assertTrue(Hash::check('password', $user->fresh()->password));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdateTeamMemberRoleTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class UpdateTeamMemberRoleTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_member_roles_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('managingRoleFor', $otherUser)
            ->set('currentRole', 'editor')
            ->call('updateRole');

        $this->assertTrue($otherUser->fresh()->hasTeamRole(
            $user->currentTeam->fresh(), 'editor'
        ));
    }

    public function test_only_team_owner_can_update_team_member_roles(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('managingRoleFor', $otherUser)
            ->set('currentRole', 'editor')
            ->call('updateRole')
            ->assertStatus(403);

        $this->assertTrue($otherUser->fresh()->hasTeamRole(
            $user->currentTeam->fresh(), 'admin'
        ));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdateTeamNameTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\UpdateTeamNameForm;
use Livewire\Livewire;
use Tests\TestCase;

class UpdateTeamNameTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_names_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(UpdateTeamNameForm::class, ['team' => $user->currentTeam])
            ->set(['state' => ['name' => 'Test Team']])
            ->call('updateTeamName');

        $this->assertCount(1, $user->fresh()->ownedTeams);
        $this->assertEquals('Test Team', $user->currentTeam->fresh()->name);
    }
}

#### Inizio File: /home/fabio/EGI/tests/TestCase.php ####

<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}

#### Inizio File: /home/fabio/EGI/tests/Unit/ExampleTest.php ####

<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_that_true_is_true(): void
    {
        $this->assertTrue(true);
    }
}

### Indice dei File ###
1 /home/fabio/EGI/app/Actions/Fortify/CreateNewUser.php
2 /home/fabio/EGI/app/Actions/Fortify/PasswordValidationRules.php
3 /home/fabio/EGI/app/Actions/Fortify/ResetUserPassword.php
4 /home/fabio/EGI/app/Actions/Fortify/UpdateUserPassword.php
5 /home/fabio/EGI/app/Actions/Fortify/UpdateUserProfileInformation.php
6 /home/fabio/EGI/app/Actions/Jetstream/AddTeamMember.php
7 /home/fabio/EGI/app/Actions/Jetstream/CreateTeam.php
8 /home/fabio/EGI/app/Actions/Jetstream/DeleteTeam.php
9 /home/fabio/EGI/app/Actions/Jetstream/DeleteUser.php
10 /home/fabio/EGI/app/Actions/Jetstream/InviteTeamMember.php
11 /home/fabio/EGI/app/Actions/Jetstream/RemoveTeamMember.php
12 /home/fabio/EGI/app/Actions/Jetstream/UpdateTeamName.php
13 /home/fabio/EGI/app/Casts/EGIImageCast.php
14 /home/fabio/EGI/app/Contracts/NotificationHandlerInterface.php
15 /home/fabio/EGI/app/Contracts/ProposalHandlerInterface.php
16 /home/fabio/EGI/app/Http/Controllers/Admin/RoleController.php
17 /home/fabio/EGI/app/Http/Controllers/Controller.php
18 /home/fabio/EGI/app/Http/Controllers/DropController.php
19 /home/fabio/EGI/app/Http/Controllers/IconAdminController.php
20 /home/fabio/EGI/app/Http/Controllers/WalletController.php
21 /home/fabio/EGI/app/Http/Kernel.php
22 /home/fabio/EGI/app/Http/Middleware/AddViewDebugInfo.php
23 /home/fabio/EGI/app/Http/Middleware/CheckCollectionPermission.php
24 /home/fabio/EGI/app/Http/Middleware/DisableCache.php
25 /home/fabio/EGI/app/Http/Middleware/EncryptCookies.php
26 /home/fabio/EGI/app/Http/Middleware/SetLanguage.php
27 /home/fabio/EGI/app/Http/Middleware/SetLocale.php
28 /home/fabio/EGI/app/Http/Middleware/VerifyCsrfToken.php
29 /home/fabio/EGI/app/Http/Resources/CollectionResource.php
30 /home/fabio/EGI/app/Livewire/Collections/CollectionCarousel.php
31 /home/fabio/EGI/app/Livewire/Collections/CollectionEdit.php
32 /home/fabio/EGI/app/Livewire/Collections/CollectionOpen.php
33 /home/fabio/EGI/app/Livewire/Collections/CollectionUserMember.php
34 /home/fabio/EGI/app/Livewire/Collections/CreateCollection.php
35 /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php
36 /home/fabio/EGI/app/Livewire/Collections/HeadImagesManager.php
37 /home/fabio/EGI/app/Livewire/Collections/Images/AvatarImageUpload.php
38 /home/fabio/EGI/app/Livewire/Collections/Images/BannerImageUpload.php
39 /home/fabio/EGI/app/Livewire/Collections/Images/CardImageUpload.php
40 /home/fabio/EGI/app/Livewire/Collections/Images/EgiImageUpload.php
41 /home/fabio/EGI/app/Livewire/Collections/InviteUserToCollectionModal.php
42 /home/fabio/EGI/app/Livewire/Collections/RejectModal.php
43 /home/fabio/EGI/app/Livewire/Collections/Show.php
44 /home/fabio/EGI/app/Livewire/Dashboard.php
45 /home/fabio/EGI/app/Livewire/LanguageSelector.php
46 /home/fabio/EGI/app/Livewire/Layout/Navigation.php
47 /home/fabio/EGI/app/Livewire/Layout/Sidebar.php
48 /home/fabio/EGI/app/Livewire/PhotoUploader.php
49 /home/fabio/EGI/app/Livewire/Proposals/AcceptProposalModal.php
50 /home/fabio/EGI/app/Livewire/Proposals/DeclineProposalModal.php
51 /home/fabio/EGI/app/Livewire/Proposals/ProposalAcceptedNotification.php
52 /home/fabio/EGI/app/Livewire/Proposals/ProposalDeclinedNotification.php
53 /home/fabio/EGI/app/Livewire/Sidebar.php
54 /home/fabio/EGI/app/Livewire/TeamManager.php
55 /home/fabio/EGI/app/Livewire/Traits/HandlesCollectionUpdate.php
56 /home/fabio/EGI/app/Livewire/Welcome/AuthForms.php
57 /home/fabio/EGI/app/Models/Collection.php
58 /home/fabio/EGI/app/Models/CollectionInvitation.php
59 /home/fabio/EGI/app/Models/CollectionUser.php
60 /home/fabio/EGI/app/Models/Egi.php
61 /home/fabio/EGI/app/Models/EgiAudit.php
62 /home/fabio/EGI/app/Models/Icon.php
63 /home/fabio/EGI/app/Models/Membership.php
64 /home/fabio/EGI/app/Models/Notification.php
65 /home/fabio/EGI/app/Models/Permission.php
66 /home/fabio/EGI/app/Models/User.php
67 /home/fabio/EGI/app/Models/Wallet.php
68 /home/fabio/EGI/app/Models/WalletChangeApproval.php
69 /home/fabio/EGI/app/Notifications/CollectionInvitationNotification.php
70 /home/fabio/EGI/app/Notifications/WalletChangeRequest.php
71 /home/fabio/EGI/app/Notifications/WalletChangeResponse.php
72 /home/fabio/EGI/app/Policies/CollectionPolicy.php
73 /home/fabio/EGI/app/Policies/EgiPolicy.php
74 /home/fabio/EGI/app/Policies/ProfilePolicy.php
75 /home/fabio/EGI/app/Policies/TeamPolicy.php
76 /home/fabio/EGI/app/Policies/TeamWalletPolicy.php
77 /home/fabio/EGI/app/Providers/AppServiceProvider.php
78 /home/fabio/EGI/app/Providers/FileHelperServiceProvider.php
79 /home/fabio/EGI/app/Providers/FortifyServiceProvider.php
80 /home/fabio/EGI/app/Providers/JetstreamServiceProvider.php
81 /home/fabio/EGI/app/Providers/ViewDebugServiceProvider.php
82 /home/fabio/EGI/app/Repositories/IconRepository.php
83 /home/fabio/EGI/app/Services/EGIImageService.php
84 /home/fabio/EGI/app/Services/FileStorageService.php
85 /home/fabio/EGI/app/Services/Menu/ContextMenus.php
86 /home/fabio/EGI/app/Services/Menu/Items/AssignPermissionsMenu.php
87 /home/fabio/EGI/app/Services/Menu/Items/AssignRolesMenu.php
88 /home/fabio/EGI/app/Services/Menu/Items/BackToDashboardMenu.php
89 /home/fabio/EGI/app/Services/Menu/Items/NewCollectionMenu.php
90 /home/fabio/EGI/app/Services/Menu/Items/OpenCollectionMenu.php
91 /home/fabio/EGI/app/Services/Menu/Items/PermissionsRolesMenu.php
92 /home/fabio/EGI/app/Services/Menu/MenuConditionEvaluator.php
93 /home/fabio/EGI/app/Services/Menu/MenuGroup.php
94 /home/fabio/EGI/app/Services/Menu/MenuItem.php
95 /home/fabio/EGI/app/Services/Menu/MenuScanner.php
96 /home/fabio/EGI/app/Services/Notifications/InvitationNotificationHandler.php
97 /home/fabio/EGI/app/Services/Notifications/NotificationHandlerFactory.php
98 /home/fabio/EGI/app/Services/Notifications/WalletChangeRequestHandler.php
99 /home/fabio/EGI/app/Services/Proposals/Handlers/WalletProposalHandler.php
100 /home/fabio/EGI/app/Services/Proposals/ProposalHandlerFactory.php
101 /home/fabio/EGI/app/Traits/HasCreateDefaultCollectionWallets.php
102 /home/fabio/EGI/app/Traits/HasPermissionTrait.php
103 /home/fabio/EGI/app/Traits/HasTeamRoles.php
104 /home/fabio/EGI/app/Traits/HasTeams.php
105 /home/fabio/EGI/app/Traits/HasUtilitys.php
106 /home/fabio/EGI/app/Traits/SaveCollectionTraits.php
107 /home/fabio/EGI/app/Traits/UsesUuid.php
108 /home/fabio/EGI/app/View/Components/AppLayout.php
109 /home/fabio/EGI/app/View/Components/AuthSessionStatus.php
110 /home/fabio/EGI/app/View/Components/BackButton.php
111 /home/fabio/EGI/app/View/Components/CollectionCard.php
112 /home/fabio/EGI/app/View/Components/FormButton.php
113 /home/fabio/EGI/app/View/Components/FormInput.php
114 /home/fabio/EGI/app/View/Components/FormInputIcon.php
115 /home/fabio/EGI/app/View/Components/FormSelect.php
116 /home/fabio/EGI/app/View/Components/GuestLayout.php
117 /home/fabio/EGI/app/View/Components/GuestWelcomeLayout.php
118 /home/fabio/EGI/app/View/Components/ImageUploader.php
119 /home/fabio/EGI/app/View/Components/RepoIcon.php
120 /home/fabio/EGI/app/View/Components/Separator.php
121 /home/fabio/EGI/app/View/Components/SuggestionIcon.php
122 /home/fabio/EGI/app/View/Components/auth-session-status.blade.php
123 /home/fabio/EGI/bootstrap/app.php
124 /home/fabio/EGI/bootstrap/cache/packages.php
125 /home/fabio/EGI/bootstrap/cache/services.php
126 /home/fabio/EGI/bootstrap/providers.php
127 /home/fabio/EGI/config/app.php
128 /home/fabio/EGI/config/auth.php
129 /home/fabio/EGI/config/cache.php
130 /home/fabio/EGI/config/context.php
131 /home/fabio/EGI/config/database.php
132 /home/fabio/EGI/config/filesystems.php
133 /home/fabio/EGI/config/fortify.php
134 /home/fabio/EGI/config/icons.php
135 /home/fabio/EGI/config/jetstream.php
136 /home/fabio/EGI/config/logging.php
137 /home/fabio/EGI/config/mail.php
138 /home/fabio/EGI/config/paths.php
139 /home/fabio/EGI/config/permission.php
140 /home/fabio/EGI/config/queue.php
141 /home/fabio/EGI/config/sanctum.php
142 /home/fabio/EGI/config/services.php
143 /home/fabio/EGI/config/session.php
144 /home/fabio/EGI/database/factories/CollectionFactory.php
145 /home/fabio/EGI/database/factories/TeamFactory.php
146 /home/fabio/EGI/database/factories/UserFactory.php
147 /home/fabio/EGI/database/factories/WalletFactory.php
148 /home/fabio/EGI/database/migrations/0001_01_01_000000_create_users_table.php
149 /home/fabio/EGI/database/migrations/0001_01_01_000001_create_cache_table.php
150 /home/fabio/EGI/database/migrations/0001_01_01_000002_create_jobs_table.php
151 /home/fabio/EGI/database/migrations/2024_11_07_063504_add_two_factor_columns_to_users_table.php
152 /home/fabio/EGI/database/migrations/2024_11_07_163525_create_personal_access_tokens_table.php
153 /home/fabio/EGI/database/migrations/2024_11_07_165429_create_permission_tables.php
154 /home/fabio/EGI/database/migrations/2024_11_14_090414_create_collections_table.php
155 /home/fabio/EGI/database/migrations/2024_11_18_122016_create_icons_table.php
156 /home/fabio/EGI/database/migrations/2024_12_10_171308_create_egi_table.php
157 /home/fabio/EGI/database/migrations/2024_12_10_171834_create_egi_audits_table.php
158 /home/fabio/EGI/database/migrations/2024_12_23_143829_create_notifications_table.php
159 /home/fabio/EGI/database/migrations/2024_12_27_102951_create_collection_user_table.php
160 /home/fabio/EGI/database/migrations/2024_12_27_104339_create_wallets_table.php
161 /home/fabio/EGI/database/migrations/2024_12_27_104350_create_wallet_change_approvals_table.php
162 /home/fabio/EGI/database/migrations/2024_12_28_131757_create_collection_invitations_table.php
163 /home/fabio/EGI/database/seeders/AdminUserSeeder.php
164 /home/fabio/EGI/database/seeders/DatabaseSeeder.php
165 /home/fabio/EGI/database/seeders/FakeUserSeeder.php
166 /home/fabio/EGI/database/seeders/IconSeeder.php
167 /home/fabio/EGI/database/seeders/InitialSetupSeeder.php
168 /home/fabio/EGI/database/seeders/RolesAndPermissionsSeeder.php
169 /home/fabio/EGI/database/seeders/SuperAdminUserSeeder.php
170 /home/fabio/EGI/helpers.php
171 /home/fabio/EGI/newOwner.php
172 /home/fabio/EGI/public/index.php
173 /home/fabio/EGI/resources/lang/de/collection.php
174 /home/fabio/EGI/resources/lang/de/errors.php
175 /home/fabio/EGI/resources/lang/de/label.php
176 /home/fabio/EGI/resources/lang/de/login.php
177 /home/fabio/EGI/resources/lang/de/profile.php
178 /home/fabio/EGI/resources/lang/de/side_nav_bar.php
179 /home/fabio/EGI/resources/lang/de/traits.php
180 /home/fabio/EGI/resources/lang/en/auth.php
181 /home/fabio/EGI/resources/lang/en/collection.php
182 /home/fabio/EGI/resources/lang/en/errors.php
183 /home/fabio/EGI/resources/lang/en/label.php
184 /home/fabio/EGI/resources/lang/en/login.php
185 /home/fabio/EGI/resources/lang/en/notification.php
186 /home/fabio/EGI/resources/lang/en/pagination.php
187 /home/fabio/EGI/resources/lang/en/passwords.php
188 /home/fabio/EGI/resources/lang/en/profile.php
189 /home/fabio/EGI/resources/lang/en/side_nav_bar.php
190 /home/fabio/EGI/resources/lang/en/traits.php
191 /home/fabio/EGI/resources/lang/en/validation.php
192 /home/fabio/EGI/resources/lang/es/collection.php
193 /home/fabio/EGI/resources/lang/es/errors.php
194 /home/fabio/EGI/resources/lang/es/label.php
195 /home/fabio/EGI/resources/lang/es/login.php
196 /home/fabio/EGI/resources/lang/es/profile.php
197 /home/fabio/EGI/resources/lang/es/side_nav_bar.php
198 /home/fabio/EGI/resources/lang/es/traits.php
199 /home/fabio/EGI/resources/lang/fr/collection.php
200 /home/fabio/EGI/resources/lang/fr/errors.php
201 /home/fabio/EGI/resources/lang/fr/label.php
202 /home/fabio/EGI/resources/lang/fr/login.php
203 /home/fabio/EGI/resources/lang/fr/profile.php
204 /home/fabio/EGI/resources/lang/fr/side_nav_bar.php
205 /home/fabio/EGI/resources/lang/fr/traits.php
206 /home/fabio/EGI/resources/lang/it/collection.php
207 /home/fabio/EGI/resources/lang/it/errors.php
208 /home/fabio/EGI/resources/lang/it/label.php
209 /home/fabio/EGI/resources/lang/it/login.php
210 /home/fabio/EGI/resources/lang/it/notification.php
211 /home/fabio/EGI/resources/lang/it/profile.php
212 /home/fabio/EGI/resources/lang/it/side_nav_bar.php
213 /home/fabio/EGI/resources/lang/it/traits.php
214 /home/fabio/EGI/resources/lang/it/utilities.php
215 /home/fabio/EGI/resources/lang/pt/collection.php
216 /home/fabio/EGI/resources/lang/pt/errors.php
217 /home/fabio/EGI/resources/lang/pt/label.php
218 /home/fabio/EGI/resources/lang/pt/login.php
219 /home/fabio/EGI/resources/lang/pt/profile.php
220 /home/fabio/EGI/resources/lang/pt/side_nav_bar.php
221 /home/fabio/EGI/resources/lang/pt/traits.php
222 /home/fabio/EGI/resources/views/_welcome.blade.php
223 /home/fabio/EGI/resources/views/admin/assign-permissions.blade.php
224 /home/fabio/EGI/resources/views/admin/assign-role.blade.php
225 /home/fabio/EGI/resources/views/admin/roles/create.blade.php
226 /home/fabio/EGI/resources/views/admin/roles/edit.blade.php
227 /home/fabio/EGI/resources/views/admin/roles/index.blade.php
228 /home/fabio/EGI/resources/views/api/api-token-manager.blade.php
229 /home/fabio/EGI/resources/views/api/index.blade.php
230 /home/fabio/EGI/resources/views/auth/confirm-password.blade.php
231 /home/fabio/EGI/resources/views/auth/forgot-password.blade.php
232 /home/fabio/EGI/resources/views/auth/login.blade.php
233 /home/fabio/EGI/resources/views/auth/register.blade.php
234 /home/fabio/EGI/resources/views/auth/reset-password.blade.php
235 /home/fabio/EGI/resources/views/auth/two-factor-challenge.blade.php
236 /home/fabio/EGI/resources/views/auth/verify-email.blade.php
237 /home/fabio/EGI/resources/views/components/action-message.blade.php
238 /home/fabio/EGI/resources/views/components/action-section.blade.php
239 /home/fabio/EGI/resources/views/components/application-logo.blade.php
240 /home/fabio/EGI/resources/views/components/application-mark.blade.php
241 /home/fabio/EGI/resources/views/components/auth-session-status.blade.php
242 /home/fabio/EGI/resources/views/components/authentication-card-logo.blade.php
243 /home/fabio/EGI/resources/views/components/authentication-card.blade.php
244 /home/fabio/EGI/resources/views/components/back-button.blade.php
245 /home/fabio/EGI/resources/views/components/banner.blade.php
246 /home/fabio/EGI/resources/views/components/button.blade.php
247 /home/fabio/EGI/resources/views/components/checkbox.blade.php
248 /home/fabio/EGI/resources/views/components/collection-card.blade.php
249 /home/fabio/EGI/resources/views/components/confirmation-modal.blade.php
250 /home/fabio/EGI/resources/views/components/confirms-password.blade.php
251 /home/fabio/EGI/resources/views/components/danger-button.blade.php
252 /home/fabio/EGI/resources/views/components/dialog-modal.blade.php
253 /home/fabio/EGI/resources/views/components/dropdown-link.blade.php
254 /home/fabio/EGI/resources/views/components/dropdown.blade.php
255 /home/fabio/EGI/resources/views/components/form-button.blade.php
256 /home/fabio/EGI/resources/views/components/form-input-icon.blade.php
257 /home/fabio/EGI/resources/views/components/form-input.blade.php
258 /home/fabio/EGI/resources/views/components/form-section.blade.php
259 /home/fabio/EGI/resources/views/components/form-select.blade.php
260 /home/fabio/EGI/resources/views/components/icons/email.blade.php
261 /home/fabio/EGI/resources/views/components/icons/help.blade.php
262 /home/fabio/EGI/resources/views/components/icons/password.blade.php
263 /home/fabio/EGI/resources/views/components/icons/search.blade.php
264 /home/fabio/EGI/resources/views/components/icons/user.blade.php
265 /home/fabio/EGI/resources/views/components/image-uploader.blade.php
266 /home/fabio/EGI/resources/views/components/input-error.blade.php
267 /home/fabio/EGI/resources/views/components/input.blade.php
268 /home/fabio/EGI/resources/views/components/label.blade.php
269 /home/fabio/EGI/resources/views/components/layouts/app.blade.php
270 /home/fabio/EGI/resources/views/components/modal.blade.php
271 /home/fabio/EGI/resources/views/components/nav-link.blade.php
272 /home/fabio/EGI/resources/views/components/repo-icon.blade.php
273 /home/fabio/EGI/resources/views/components/responsive-nav-link.blade.php
274 /home/fabio/EGI/resources/views/components/secondary-button.blade.php
275 /home/fabio/EGI/resources/views/components/section-border.blade.php
276 /home/fabio/EGI/resources/views/components/section-title.blade.php
277 /home/fabio/EGI/resources/views/components/separator.blade.php
278 /home/fabio/EGI/resources/views/components/suggestion-icon.blade.php
279 /home/fabio/EGI/resources/views/components/switchable-team.blade.php
280 /home/fabio/EGI/resources/views/components/validation-errors.blade.php
281 /home/fabio/EGI/resources/views/components/welcome.blade.php
282 /home/fabio/EGI/resources/views/dashboard.blade.php
283 /home/fabio/EGI/resources/views/emails/team-invitation.blade.php
284 /home/fabio/EGI/resources/views/error.blade.php
285 /home/fabio/EGI/resources/views/layouts/app.blade.php
286 /home/fabio/EGI/resources/views/layouts/guest-welcome.blade.php
287 /home/fabio/EGI/resources/views/layouts/guest.blade.php
288 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/back_to_collection_button.blade.php
289 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/data_section.blade.php
290 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/image_section.blade.php
291 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_avatar.blade.php
292 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_banner.blade.php
293 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_card.blade.php
294 /home/fabio/EGI/resources/views/livewire/collection-manager-includes/wallets_section.blade.php
295 /home/fabio/EGI/resources/views/livewire/collections/collection-carousel.blade.php
296 /home/fabio/EGI/resources/views/livewire/collections/collection-manager.blade.php
297 /home/fabio/EGI/resources/views/livewire/collections/collection-user.blade.php
298 /home/fabio/EGI/resources/views/livewire/collections/create-collection.blade.php
299 /home/fabio/EGI/resources/views/livewire/collections/edit-wallet-modal.blade.php
300 /home/fabio/EGI/resources/views/livewire/collections/head-images-manager.blade.php
301 /home/fabio/EGI/resources/views/livewire/collections/images/avatar-image-upload.blade.php
302 /home/fabio/EGI/resources/views/livewire/collections/images/banner-image-upload.blade.php
303 /home/fabio/EGI/resources/views/livewire/collections/images/card-image-upload.blade.php
304 /home/fabio/EGI/resources/views/livewire/collections/images/egi-image-upload.blade.php
305 /home/fabio/EGI/resources/views/livewire/collections/invite-user-to-collection-modal.blade.php
306 /home/fabio/EGI/resources/views/livewire/collections/no-team.blade.php
307 /home/fabio/EGI/resources/views/livewire/collections/open.blade.php
308 /home/fabio/EGI/resources/views/livewire/collections/reject-modal.blade.php
309 /home/fabio/EGI/resources/views/livewire/collections/show.blade.php
310 /home/fabio/EGI/resources/views/livewire/dashboard.blade.php
311 /home/fabio/EGI/resources/views/livewire/language-selector.blade.php
312 /home/fabio/EGI/resources/views/livewire/layout/navigation.blade.php
313 /home/fabio/EGI/resources/views/livewire/modale/collection_general_suggestion.blade.php
314 /home/fabio/EGI/resources/views/livewire/modale/collection_image_suggestion.blade.php
315 /home/fabio/EGI/resources/views/livewire/photo-uploader.blade.php
316 /home/fabio/EGI/resources/views/livewire/proposals/decline-proposal-modal.blade.php
317 /home/fabio/EGI/resources/views/livewire/sidebar.blade
318 /home/fabio/EGI/resources/views/livewire/sidebar.blade
319 /home/fabio/EGI/resources/views/livewire/sidebar.blade.php
320 /home/fabio/EGI/resources/views/livewire/team-manager.blade.php
321 /home/fabio/EGI/resources/views/livewire/welcome/auth-forms.blade.php
322 /home/fabio/EGI/resources/views/navigation-menu.blade.php
323 /home/fabio/EGI/resources/views/notifications/default.blade.php
324 /home/fabio/EGI/resources/views/notifications/invitation.blade.php
325 /home/fabio/EGI/resources/views/notifications/proposa-declined-notification.blade.php
326 /home/fabio/EGI/resources/views/notifications/wallet-change-request.blade.php
327 /home/fabio/EGI/resources/views/policy.blade.php
328 /home/fabio/EGI/resources/views/profile/delete-user-form.blade.php
329 /home/fabio/EGI/resources/views/profile/logout-other-browser-sessions-form.blade.php
330 /home/fabio/EGI/resources/views/profile/show.blade.php
331 /home/fabio/EGI/resources/views/profile/two-factor-authentication-form.blade.php
332 /home/fabio/EGI/resources/views/profile/update-password-form.blade.php
333 /home/fabio/EGI/resources/views/profile/update-profile-information-form.blade.php
334 /home/fabio/EGI/resources/views/teams/create-team-form.blade.php
335 /home/fabio/EGI/resources/views/teams/create.blade.php
336 /home/fabio/EGI/resources/views/teams/delete-team-form.blade.php
337 /home/fabio/EGI/resources/views/teams/show.blade.php
338 /home/fabio/EGI/resources/views/teams/team-member-manager.blade.php
339 /home/fabio/EGI/resources/views/teams/update-team-name-form.blade.php
340 /home/fabio/EGI/resources/views/terms.blade.php
341 /home/fabio/EGI/resources/views/welcome.blade.php
342 /home/fabio/EGI/routes/api.php
343 /home/fabio/EGI/routes/console.php
344 /home/fabio/EGI/routes/web.php
345 /home/fabio/EGI/tests/Feature/ApiTokenPermissionsTest.php
346 /home/fabio/EGI/tests/Feature/AuthenticationTest.php
347 /home/fabio/EGI/tests/Feature/BrowserSessionsTest.php
348 /home/fabio/EGI/tests/Feature/CreateApiTokenTest.php
349 /home/fabio/EGI/tests/Feature/CreateTeamTest.php
350 /home/fabio/EGI/tests/Feature/DeleteAccountTest.php
351 /home/fabio/EGI/tests/Feature/DeleteApiTokenTest.php
352 /home/fabio/EGI/tests/Feature/DeleteTeamTest.php
353 /home/fabio/EGI/tests/Feature/EmailVerificationTest.php
354 /home/fabio/EGI/tests/Feature/ExampleTest.php
355 /home/fabio/EGI/tests/Feature/InviteTeamMemberTest.php
356 /home/fabio/EGI/tests/Feature/LeaveTeamTest.php
357 /home/fabio/EGI/tests/Feature/PasswordConfirmationTest.php
358 /home/fabio/EGI/tests/Feature/PasswordResetTest.php
359 /home/fabio/EGI/tests/Feature/ProfileInformationTest.php
360 /home/fabio/EGI/tests/Feature/RegistrationTest.php
361 /home/fabio/EGI/tests/Feature/RemoveTeamMemberTest.php
362 /home/fabio/EGI/tests/Feature/TwoFactorAuthenticationSettingsTest.php
363 /home/fabio/EGI/tests/Feature/UpdatePasswordTest.php
364 /home/fabio/EGI/tests/Feature/UpdateTeamMemberRoleTest.php
365 /home/fabio/EGI/tests/Feature/UpdateTeamNameTest.php
366 /home/fabio/EGI/tests/TestCase.php
367 /home/fabio/EGI/tests/Unit/ExampleTest.php

### Fine Indice ###


#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/CreateNewUser.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use App\Models\Collection;
use App\Traits\HasCreateDefaultCollectionWallets;
use App\Traits\HasUtilitys;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\CreatesNewUsers;
use Spatie\Permission\Models\Role;

class CreateNewUser implements CreatesNewUsers
{
    use PasswordValidationRules;
    use HasCreateDefaultCollectionWallets;
    use HasUtilitys;


    /**
     * Crea un nuovo utente registrato.
     *
     * @param  array<string, string>  $input
     */
    public function create(array $input): User
    {
        Log::channel('florenceegi')->info('Classe: CreateNewUser Metodo create: INIZIO', ['input' => $input]);

        // Validazione dell'input
        $this->validateInput($input);

        // Generazione dei dettagli del wallet
        [$wallet_address, $wallet_balance] = $this->generateWalletDetails();

        // Creazione dell'utente e delle risorse collegate
        return $this->handleUserCreation($input, $wallet_address, $wallet_balance);
    }

    private function validateInput(array $input): void
    {
        try {
            Validator::make($input, [
                'name' => ['required', 'string', 'max:255'],
                'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
                'password' => $this->passwordRules(),
            ])->validate();

            Log::channel('florenceegi')->info('Classe: CreateNewUser Metodo validateInput: VALIDAZIONE OK');
        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->error('Errore di validazione', ['errors' => $e->errors()]);
            throw $e;
        }
    }

    private function generateWalletDetails(): array
    {
        $wallet_address = $this->generateFakeAlgorandAddress();
        Log::channel('florenceegi')->info('Generato wallet address', ['wallet_address' => $wallet_address]);

        $wallet_balance = config('app.virtual_wallet_balance');
        Log::channel('florenceegi')->info('Generato wallet balance', ['wallet_balance' => $wallet_balance]);

        return [$wallet_address, $wallet_balance];
    }

    private function handleUserCreation(array $input, string $wallet_address, float $wallet_balance): User
    {
        return DB::transaction(function () use ($input, $wallet_address, $wallet_balance) {
            return tap(User::create([
                'name' => $input['name'],
                'email' => $input['email'],
                'wallet' => $wallet_address,
                'wallet_balance' => $wallet_balance,
                'language' => app()->getLocale(),
                'password' => Hash::make($input['password']),
            ]), function (User $user) {
                Log::channel('florenceegi')->info('Utente creato con successo', ['user_id' => $user->id]);

                // Crea la collection e i wallet predefiniti
                $this->createDefaultCollection($user);
            });
        });
    }

    /**
     * Crea una collection predefinita per l'utente.
     */
    protected function createDefaultCollection(User $user): void
    {
        tap(Collection::create([
            'user_id' => $user->id,
            'epp_id' => config('app.epp_id'),
            'collection_name' => explode(' ', $user->name, 2)[0] . "'s Collection",
            'description' => __('collection.default_description'),
            'creator_id' => $user->id,
            'type' => 'standard',
            'position' => 1,
            'EGI_number' => 1,
            'floor_price' => 0.0,
            'is_published' => false,
        ]), function (Collection $collection) use ($user) {
            Log::channel('florenceegi')->info('Collection creata con successo', ['collection_id' => $collection->id]);

            // Associa l'utente alla collection nella tabella pivot collection_user
            $collection->users()->attach($user->id, ['role' => 'creator']);

            // Crea i wallet predefiniti per la collection
            $this->attachDefaultWallets($collection, $user);

            // Assegna il ruolo di creator all'utente
            $this->assignCreatorRole($user->id);
        });
    }

    public function assignCreatorRole(int $userId)
    {
        $user = User::find($userId);

        if (!$user) {
            Log::channel('florenceegi')->error('Utente non trovato durante l\'assegnazione del ruolo', ['user_id' => $userId]);
            return;
        }

        $creatorRole = Role::firstOrCreate(['name' => 'creator']);

        if (!$user->hasRole('creator')) {
            $user->assignRole($creatorRole);
            Log::channel('florenceegi')->info('Assegnato ruolo creator all\'utente', ['user_id' => $userId]);
        }
    }

    /**
     * Crea i wallet predefiniti per la collection.
     */
    protected function attachDefaultWallets(Collection $collection, User $user): void
    {
        $defaultWallets = [
            ['user_id' => $user->id, 'wallet' => $user->wallet, 'royalty_mint' => 50.0, 'royalty_rebind' => 10.0], // Wallet Creator
            ['user_id' => config('app.natan_id'), 'wallet' => config('app.natan_wallet_address'), 'royalty_mint' => 25.0, 'royalty_rebind' => 5.0], // Wallet Natan
            ['user_id' => config('app.epp_id'), 'wallet' => config('app.epp_wallet_address'), 'royalty_mint' => 25.0, 'royalty_rebind' => 5.0], // Wallet EPP
        ];

        foreach ($defaultWallets as $wallet) {
            $collection->wallets()->create($wallet);
        }

        Log::channel('florenceegi')->info('Wallet predefiniti associati alla collection', ['collection_id' => $collection->id]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/PasswordValidationRules.php ####

<?php

namespace App\Actions\Fortify;

use Illuminate\Validation\Rules\Password;

trait PasswordValidationRules
{
    /**
     * Get the validation rules used to validate passwords.
     *
     * @return array<int, \Illuminate\Contracts\Validation\Rule|array<mixed>|string>
     */
    protected function passwordRules(): array
    {
        return ['required', 'string', Password::default(), 'confirmed'];
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/ResetUserPassword.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\ResetsUserPasswords;

class ResetUserPassword implements ResetsUserPasswords
{
    use PasswordValidationRules;

    /**
     * Validate and reset the user's forgotten password.
     *
     * @param  array<string, string>  $input
     */
    public function reset(User $user, array $input): void
    {
        Validator::make($input, [
            'password' => $this->passwordRules(),
        ])->validate();

        $user->forceFill([
            'password' => Hash::make($input['password']),
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/UpdateUserPassword.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
use Laravel\Fortify\Contracts\UpdatesUserPasswords;

class UpdateUserPassword implements UpdatesUserPasswords
{
    use PasswordValidationRules;

    /**
     * Validate and update the user's password.
     *
     * @param  array<string, string>  $input
     */
    public function update(User $user, array $input): void
    {
        Validator::make($input, [
            'current_password' => ['required', 'string', 'current_password:web'],
            'password' => $this->passwordRules(),
        ], [
            'current_password.current_password' => __('The provided password does not match your current password.'),
        ])->validateWithBag('updatePassword');

        $user->forceFill([
            'password' => Hash::make($input['password']),
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Fortify/UpdateUserProfileInformation.php ####

<?php

namespace App\Actions\Fortify;

use App\Models\User;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\Rule;
use Laravel\Fortify\Contracts\UpdatesUserProfileInformation;

class UpdateUserProfileInformation implements UpdatesUserProfileInformation
{
    /**
     * Validate and update the given user's profile information.
     *
     * @param  array<string, mixed>  $input
     */
    public function update(User $user, array $input): void
    {
        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'email', 'max:255', Rule::unique('users')->ignore($user->id)],
            'photo' => ['nullable', 'mimes:jpg,jpeg,png', 'max:1024'],
        ])->validateWithBag('updateProfileInformation');

        if (isset($input['photo'])) {
            $user->updateProfilePhoto($input['photo']);
        }

        if ($input['email'] !== $user->email &&
            $user instanceof MustVerifyEmail) {
            $this->updateVerifiedUser($user, $input);
        } else {
            $user->forceFill([
                'name' => $input['name'],
                'email' => $input['email'],
            ])->save();
        }
    }

    /**
     * Update the given verified user's profile information.
     *
     * @param  array<string, string>  $input
     */
    protected function updateVerifiedUser(User $user, array $input): void
    {
        $user->forceFill([
            'name' => $input['name'],
            'email' => $input['email'],
            'email_verified_at' => null,
        ])->save();

        $user->sendEmailVerificationNotification();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/AddTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Closure;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\AddsTeamMembers;
use Laravel\Jetstream\Events\AddingTeamMember;
use Laravel\Jetstream\Events\TeamMemberAdded;
use Laravel\Jetstream\Jetstream;
use Laravel\Jetstream\Rules\Role;

class AddTeamMember implements AddsTeamMembers
{
    /**
     * Add a new team member to the given team.
     */
    public function add(User $user, Team $team, string $email, ?string $role = null): void
    {
        Gate::forUser($user)->authorize('addTeamMember', $team);

        $this->validate($team, $email, $role);

        $newTeamMember = Jetstream::findUserByEmailOrFail($email);

        AddingTeamMember::dispatch($team, $newTeamMember);

        $team->users()->attach(
            $newTeamMember, ['role' => $role]
        );

        TeamMemberAdded::dispatch($team, $newTeamMember);
    }

    /**
     * Validate the add member operation.
     */
    protected function validate(Team $team, string $email, ?string $role): void
    {
        Validator::make([
            'email' => $email,
            'role' => $role,
        ], $this->rules(), [
            'email.exists' => __('We were unable to find a registered user with this email address.'),
        ])->after(
            $this->ensureUserIsNotAlreadyOnTeam($team, $email)
        )->validateWithBag('addTeamMember');
    }

    /**
     * Get the validation rules for adding a team member.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    protected function rules(): array
    {
        return array_filter([
            'email' => ['required', 'email', 'exists:users'],
            'role' => Jetstream::hasRoles()
                            ? ['required', 'string', new Role]
                            : null,
        ]);
    }

    /**
     * Ensure that the user is not already on the team.
     */
    protected function ensureUserIsNotAlreadyOnTeam(Team $team, string $email): Closure
    {
        return function ($validator) use ($team, $email) {
            $validator->errors()->addIf(
                $team->hasUserWithEmail($email),
                'email',
                __('This user already belongs to the team.')
            );
        };
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/CreateTeam.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\CreatesTeams;
use Laravel\Jetstream\Events\AddingTeam;
use Laravel\Jetstream\Jetstream;

class CreateTeam implements CreatesTeams
{
    /**
     * Validate and create a new team for the given user.
     *
     * @param  array<string, string>  $input
     */
    public function create(User $user, array $input): Team
    {
        Gate::forUser($user)->authorize('create', Jetstream::newTeamModel());

        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
        ])->validateWithBag('createTeam');

        AddingTeam::dispatch($user);

        $user->switchTeam($team = $user->ownedTeams()->create([
            'name' => $input['name'],
            'personal_team' => false,
        ]));

        return $team;
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/DeleteTeam.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use Laravel\Jetstream\Contracts\DeletesTeams;

class DeleteTeam implements DeletesTeams
{
    /**
     * Delete the given team.
     */
    public function delete(Team $team): void
    {
        $team->purge();
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/DeleteUser.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\DB;
use Laravel\Jetstream\Contracts\DeletesTeams;
use Laravel\Jetstream\Contracts\DeletesUsers;

class DeleteUser implements DeletesUsers
{
    /**
     * Create a new action instance.
     */
    public function __construct(protected DeletesTeams $deletesTeams)
    {
    }

    /**
     * Delete the given user.
     */
    public function delete(User $user): void
    {
        DB::transaction(function () use ($user) {
            $this->deleteTeams($user);
            $user->deleteProfilePhoto();
            $user->tokens->each->delete();
            $user->delete();
        });
    }

    /**
     * Delete the teams and team associations attached to the user.
     */
    protected function deleteTeams(User $user): void
    {
        $user->teams()->detach();

        $user->ownedTeams->each(function (Team $team) {
            $this->deletesTeams->delete($team);
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/InviteTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Closure;
use Illuminate\Database\Query\Builder;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\Rule;
use Laravel\Jetstream\Contracts\InvitesTeamMembers;
use Laravel\Jetstream\Events\InvitingTeamMember;
use Laravel\Jetstream\Jetstream;
use Laravel\Jetstream\Mail\TeamInvitation;
use Laravel\Jetstream\Rules\Role;

class InviteTeamMember implements InvitesTeamMembers
{
    /**
     * Invite a new team member to the given team.
     */
    public function invite(User $user, Team $team, string $email, ?string $role = null): void
    {
        Gate::forUser($user)->authorize('addTeamMember', $team);

        $this->validate($team, $email, $role);

        InvitingTeamMember::dispatch($team, $email, $role);

        $invitation = $team->teamInvitations()->create([
            'email' => $email,
            'role' => $role,
        ]);

        Mail::to($email)->send(new TeamInvitation($invitation));
    }

    /**
     * Validate the invite member operation.
     */
    protected function validate(Team $team, string $email, ?string $role): void
    {
        Validator::make([
            'email' => $email,
            'role' => $role,
        ], $this->rules($team), [
            'email.unique' => __('This user has already been invited to the team.'),
        ])->after(
            $this->ensureUserIsNotAlreadyOnTeam($team, $email)
        )->validateWithBag('addTeamMember');
    }

    /**
     * Get the validation rules for inviting a team member.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    protected function rules(Team $team): array
    {
        return array_filter([
            'email' => [
                'required', 'email',
                Rule::unique(Jetstream::teamInvitationModel())->where(function (Builder $query) use ($team) {
                    $query->where('team_id', $team->id);
                }),
            ],
            'role' => Jetstream::hasRoles()
                            ? ['required', 'string', new Role]
                            : null,
        ]);
    }

    /**
     * Ensure that the user is not already on the team.
     */
    protected function ensureUserIsNotAlreadyOnTeam(Team $team, string $email): Closure
    {
        return function ($validator) use ($team, $email) {
            $validator->errors()->addIf(
                $team->hasUserWithEmail($email),
                'email',
                __('This user already belongs to the team.')
            );
        };
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/RemoveTeamMember.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Support\Facades\Gate;
use Illuminate\Validation\ValidationException;
use Laravel\Jetstream\Contracts\RemovesTeamMembers;
use Laravel\Jetstream\Events\TeamMemberRemoved;

class RemoveTeamMember implements RemovesTeamMembers
{
    /**
     * Remove the team member from the given team.
     */
    public function remove(User $user, Team $team, User $teamMember): void
    {
        $this->authorize($user, $team, $teamMember);

        $this->ensureUserDoesNotOwnTeam($teamMember, $team);

        $team->removeUser($teamMember);

        TeamMemberRemoved::dispatch($team, $teamMember);
    }

    /**
     * Authorize that the user can remove the team member.
     */
    protected function authorize(User $user, Team $team, User $teamMember): void
    {
        if (! Gate::forUser($user)->check('removeTeamMember', $team) &&
            $user->id !== $teamMember->id) {
            throw new AuthorizationException;
        }
    }

    /**
     * Ensure that the currently authenticated user does not own the team.
     */
    protected function ensureUserDoesNotOwnTeam(User $teamMember, Team $team): void
    {
        if ($teamMember->id === $team->owner->id) {
            throw ValidationException::withMessages([
                'team' => [__('You may not leave a team that you created.')],
            ])->errorBag('removeTeamMember');
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Actions/Jetstream/UpdateTeamName.php ####

<?php

namespace App\Actions\Jetstream;

use App\Models\Team;
use App\Models\User;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Validator;
use Laravel\Jetstream\Contracts\UpdatesTeamNames;

class UpdateTeamName implements UpdatesTeamNames
{
    /**
     * Validate and update the given team's name.
     *
     * @param  array<string, string>  $input
     */
    public function update(User $user, Team $team, array $input): void
    {
        Gate::forUser($user)->authorize('update', $team);

        Validator::make($input, [
            'name' => ['required', 'string', 'max:255'],
        ])->validateWithBag('updateTeamName');

        $team->forceFill([
            'name' => $input['name'],
        ])->save();
    }
}

#### Inizio File: /home/fabio/EGI/app/Casts/EGIImageCast.php ####

<?php

namespace App\Casts;

use App\Services\EGIImageService;
use Illuminate\Contracts\Database\Eloquent\CastsAttributes;
use Illuminate\Database\Eloquent\Model;

/**
 * Class EGIImageCast
 *
 * Custom cast to transform image filenames into full URLs using EGIImageService.
 */
class EGIImageCast implements CastsAttributes
{
    /**
     * Cast the given value to an image URL.
     *
     * @param  Model  $model
     * @param  string $key
     * @param  mixed  $value
     * @param  array  $attributes
     * @return string|null
     */
    public function get($model, string $key, $value, array $attributes)
    {
        if (!$value) {
            return null;
        }

        // Determine the path key based on the field name.
        $pathKey = match ($key) {
            'image_banner' => 'head.banner',
            'image_card'   => 'head.card',
            'image_avatar' => 'head.avatar',
            'image_EGI'    => 'head.EGI_asset',
            default        => 'head.root',
        };

        // Retrieve the image URL using EGIImageService.
        return EGIImageService::getCachedEGIImagePath(
            $model->id,
            $value,
            $model->is_published,
            null,
            $pathKey
        );
    }

    /**
     * Prepare the given value for storage (no transformation).
     *
     * @param  Model  $model
     * @param  string $key
     * @param  mixed  $value
     * @param  array  $attributes
     * @return mixed
     */
    public function set($model, string $key, $value, array $attributes)
    {
        // Return the value as is for storage.
        return $value;
    }
}

#### Inizio File: /home/fabio/EGI/app/Contracts/NotificationHandlerInterface.php ####

<?php

namespace App\Contracts;

use Illuminate\Notifications\DatabaseNotification;

interface NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action);
}

#### Inizio File: /home/fabio/EGI/app/Contracts/ProposalHandlerInterface.php ####

<?php

namespace App\Contracts;

interface ProposalHandlerInterface
{
    /**
     * Gestisce il declino di una proposta.
     *
     * @param int $proposalId
     * @param string $reason
     * @return void
     */
    public function decline(int $proposalId, string $reason): void;
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/Admin/RoleController.php ####

<?php

declare(strict_types=1);

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Redirect;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;

class RoleController extends Controller
{
    public function __construct()
    {
        // Sposta il middleware nella definizione delle rotte
    }

    public function index(): View
    {

        $roles = Role::with('permissions')->get();
        Log::info('Roles: ' . $roles);
        return view('admin.roles.index', compact('roles'));
    }

    public function create(): View
    {
        $permissions = Permission::all();
        return view('admin.roles.create', compact('permissions'));
    }

    public function store(Request $request): RedirectResponse
    {
        $validated = $request->validate([
            'name' => ['required', 'string', 'max:255', 'unique:roles'],
            'permissions' => ['required', 'array'],
            'permissions.*' => ['exists:permissions,id'],
        ]);

        $role = Role::create(['name' => $validated['name']]);

        $permissionNames = $this->getPermissionNames($validated['permissions']);
        $role->syncPermissions($permissionNames);

        return Redirect::route('admin.roles.index')
            ->with('success', 'Role created successfully.');
    }

    public function edit(Role $role): View
    {
        $permissions = Permission::all();
        return view('admin.roles.edit', compact('role', 'permissions'));
    }

    public function update(Request $request, Role $role): RedirectResponse
    {
        $validated = $request->validate([
            'name' => ['required', 'string', 'max:255', 'unique:roles,name,' . $role->id],
            'permissions' => ['required', 'array'],
            'permissions.*' => ['exists:permissions,id'],
        ]);

        $role->update(['name' => $validated['name']]);

        $permissionNames = $this->getPermissionNames($validated['permissions']);
        $role->syncPermissions($permissionNames);

        return Redirect::route('admin.roles.index')
            ->with('success', 'Role updated successfully.');
    }

    protected function getPermissionNames(array $ids): array
    {
        return Permission::whereIn('id', $ids)->pluck('name')->toArray();
    }

    public function showAssignRoleForm()
    {
        $roles = Role::all(); // Recupera tutti i ruoli dalla tabella `roles`
        return view('admin.assign-role', compact('roles'));
    }

    public function showAssignPermissionsForm()
    {
        $permissions = Permission::all(); // Recupera tutti i permessi
        return view('admin.assign-permissions', compact('permissions'));
    }

    public function assignRole(Request $request)
    {
        $request->validate([
            'email' => 'required|email|exists:users,email',
            'role' => 'required|exists:roles,name',
        ]);

        $user = User::where('email', $request->email)->firstOrFail();
        $role = $request->role;


        // Assegna il ruolo all'utente
        $user->assignRole($role);

        Log::info('Ruolo assegnato: ' . $role . ' a ' . $user->email);

        return redirect()->back()->with('success', 'Ruolo assegnato correttamente!');
    }

    public function assignPermissions(Request $request)
    {
        $request->validate([
            'email' => 'required|email|exists:users,email',
            'permissions' => 'required|array',
            'permissions.*' => 'exists:permissions,name',
        ]);

        $user = User::where('email', $request->email)->firstOrFail();
        $permissions = $request->permissions;

        // Assegna i permessi selezionati all'utente
        $user->syncPermissions($permissions);

        return redirect()->back()->with('success', 'Permessi assegnati correttamente!');
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/Controller.php ####

<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/DropController.php ####

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class DropController extends Controller
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/IconAdminController.php ####

<?php


namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Icon;

class IconAdminController extends Controller
{

    public function __construct()
    {
        $this->middleware('can:manage_icons');
    }

    public function index()
    {
        $icons = Icon::all();
        return view('admin.icons.index', compact('icons'));
    }

    public function edit(Icon $icon)
    {
        return view('admin.icons.edit', compact('icon'));
    }

    public function update(Request $request, Icon $icon)
    {
        $request->validate([
            'html' => 'required|string',
        ]);

        $icon->update([
            'html' => $request->svg,
        ]);

        return redirect()->route('admin.icons.index')->with('status', 'Icon updated successfully!');
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Controllers/WalletController.php ####

<?php

namespace App\Http\Controllers;

use App\Models\TeamWallet;
use Illuminate\Http\Request;

class WalletController extends Controller
{
    public function edit(TeamWallet $wallet)
{
    $this->authorize('update', $wallet);
    return view('wallets.edit', compact('wallet'));
}
}

#### Inizio File: /home/fabio/EGI/app/Http/Kernel.php ####

<?php

namespace App\Http;

use App\Http\Middleware\CheckTeamPermission;
use App\Http\Middleware\SetLanguage;
use Illuminate\Foundation\Http\Kernel as HttpKernel;
use Spatie\Permission\Middleware\RoleOrPermissionMiddleware;

class Kernel extends HttpKernel
{
    /**
     * The application's route middleware.
     *
     * These middleware may be assigned to groups or used individually.
     *
     * @var array
     */
    protected $routeMiddleware = [
        // ... altri middleware
        // 'team' => CheckTeamPermission::class,
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array
     */
    protected $middlewareGroups = [
        // 'web' => [
        //     // ... altri middleware
        //     // \App\Http\Middleware\DisableCache::class,
        //     SetLanguage::class,
        //     RoleOrPermissionMiddleware::class, // Assicurati che questo sia presente
        // ],
    ];

}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/AddViewDebugInfo.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class AddViewDebugInfo
{
    public function handle(Request $request, Closure $next): Response
    {
        $response = $next($request);

        if (!app()->environment('production') &&
            $response instanceof Response &&
            str_contains($response->headers->get('content-type') ?? '', 'text/html')
        ) {
            $content = $response->getContent();

            // Aggiungi uno script per mostrare il path nella console del browser
            $debugScript = sprintf('
                <script>
                    console.group("🔍 View Debug Info");
                    console.log(
                        "Current Route: %s",
                        "%s"
                    );
                    console.log(
                        "Current View: %s",
                        "%s"
                    );
                    console.groupEnd();
                </script>
            ',
                request()->route()?->getName() ?? request()->path(),
                request()->url(),
                view()->shared('__current_view_path', 'Unknown View'),
                request()->route()?->getActionName() ?? 'Unknown Action'
            );

            // Inserisci lo script prima della chiusura del body
            $content = preg_replace('/<\/body>/', $debugScript . '</body>', $content, 1);
            $response->setContent($content);
        }

        return $response;
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/CheckCollectionPermission.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Spatie\Permission\Models\Role;

class CheckCollectionPermission
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @param  string|null  $permission
     * @return mixed
     */
    public function handle(Request $request, Closure $next, $permission = null)
    {
        // Recupera l'utente autenticato
        $user = Auth::user();

        Log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'user_id' => $user->id,
            'permission' => $permission,
            'user_name' => $user->name,
        ]);

        // Verifica se la rotta è 'collections.open'
        $rotta = $request->route()->getName();

        if ($rotta === 'collections.open') {
            // Trova tutte le collection associate all'utente tramite collection_user
            $collections = Collection::whereHas('users', function ($query) use ($user) {
                $query->where('user_id', $user->id);
            })->get();

            // Se esiste una sola collection, usala per il controllo
            if ($collections->count() === 1) {
                $collection = $collections->first();
            } else {
                // Se ci sono più collection, consenti l'accesso per il selettore/carousel
                return $next($request);
            }
        } else {
            // Recupera l'ID della collection dalla richiesta per le altre rotte
            $collectionId = $request->route('id') ?? $request->route('collection');
            $collection = Collection::find($collectionId);

            // Se la collection non esiste, restituisci un errore 404
            if (!$collection) {
                abort(404, 'Collection non trovata.');
            }
        }

        // Verifica se l'utente è membro della collection tramite collection_user
        $membership = $collection->users()->where('user_id', $user->id)->first();

        if (!$membership) {
            abort(403, 'Non sei un membro della collection associata.');
        }

        // Recupera il ruolo dell'utente nella collection
        $roleName = $membership->pivot->role;

        Log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'collection_id' => $collection->id,
            'role_name' => $roleName,
        ]);

        // Verifica se il ruolo esiste in Spatie
        $role = Role::where('name', $roleName)->first();
        log::channel('florenceegi')->info('Middleware: CheckCollectionPermission', [
            'role' => $role,
        ]);

        if (!$role) {
            abort(403, 'Ruolo non valido.');
        }

        // Verifica se il ruolo ha il permesso richiesto
        if ($permission && !$role->hasPermissionTo($permission)) {
            abort(403, 'Non hai i permessi necessari per eseguire questa azione.');
        }

        return $next($request);
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/DisableCache.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;

class DisableCache
{
    public function handle(Request $request, Closure $next)
    {
        $response = $next($request);
        $response->headers->set('Cache-Control', 'no-cache, no-store, must-revalidate');
        $response->headers->set('Pragma', 'no-cache');
        $response->headers->set('Expires', '0');
        return $response;
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/EncryptCookies.php ####

<?php

namespace App\Http\Middleware;

use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;

class EncryptCookies extends Middleware
{
    /**
     * The names of the cookies that should not be encrypted.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/SetLanguage.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;

class SetLanguage
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next
     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse
     */
    public function handle(Request $request, Closure $next)
    {
        // 1) Verifica se l'utente è autenticato e ha un valore 'language' nel DB

        // Log::channel('florenceegi')->info('USER: '.Auth::user());
        // Log::channel('florenceegi')->info('LINGUA CORRENTE DA DB: '.Auth::user()->language);

        if (Auth::user() && Auth::user()->language) {
            $modalita = 'DB';
            $lang = trim(Auth::user()->language);
            App::setLocale($lang);

            // 2) Se l'utente non è autenticato o non ha una lingua impostata, verifica il cookie 'language'
        } elseif (Cookie::has('language')) {
            $modalita = 'COOKIE';
            $lang = trim(Cookie::get('language'));
            App::setLocale($lang);
            // 3) Se nessuna delle opzioni precedenti è disponibile, usa la lingua predefinita dal file di configurazione
        } else {
            $modalita = 'CONFIG';
            $lang = trim(config('app.locale'));
            App::setLocale($lang);
        }

        session(['language__'.$modalita => App::getLocale()]);
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.$modalita.' '.$lang);

        return $next($request);
    }
}

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/SetLocale.php ####

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;

class SetLocale
{
    public function handle(Request $request, Closure $next)
    {
        // Prendi la lingua dall'utente autenticato o dalla sessione o usa quella di default
        $locale = Auth::check() && Auth::user()->language
            ? Auth::user()->language
            : session('locale', config('app.locale'));

        // Verifica che la lingua sia tra quelle supportate
        if (in_array($locale, config('app.languages'))) {
            App::setLocale($locale);
        }

        return $next($request);
    }
} 

#### Inizio File: /home/fabio/EGI/app/Http/Middleware/VerifyCsrfToken.php ####

<?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;

class VerifyCsrfToken extends Middleware
{
    /**
     * The URIs that should be excluded from CSRF verification.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

#### Inizio File: /home/fabio/EGI/app/Http/Resources/CollectionResource.php ####

<?php

namespace App\Http\Resources;

use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;

class CollectionResource extends JsonResource
{
    /**
     * Trasforma la risorsa in un array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function toArray($request)
    {
        return [
            'id' => $this->id,
            'creator_id' => $this->creator_id,
            'owner_id' => $this->owner_id,
            'epp_id' => $this->epp_id,
            'type' => $this->type,
            'is_published' => $this->is_published,
            'collection_name' => $this->collection_name,
            'position' => $this->position,
            'EGI_number' => $this->EGI_number,
            'floor_price' => $this->floor_price,
            'description' => $this->description,
            'url_collection_site' => $this->url_collection_site,
            'image_banner' => $this->path_image_banner,
            'image_card' => $this->path_image_card,
            'image_avatar' => $this->path_image_avatar,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionCarousel.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\Collection;
use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class CollectionCarousel extends Component
{
    public $collections;
    public $activeSlide = 0;
    protected $iconRepository;

    public function boot(IconRepository $iconRepository)
    {
        $this->iconRepository = $iconRepository;
    }

    public function mount()
    {

        $team_id = Auth::user()->currentTeam->id;
        $this->collections = Collection::where('team_id', $team_id)->get();

        Log::channel('florenceegi')->info('Collections for team', [
            'team_id' => $team_id,
            'collections' => $this->collections,
        ]);

    }

    public function nextSlide()
    {
        $this->activeSlide = ($this->activeSlide + 1) % count($this->collections);
    }

    public function prevSlide()
    {
        $this->activeSlide = ($this->activeSlide - 1 + count($this->collections)) % count($this->collections);
    }

    public function edit($id)
    {
        // Implementa la logica per modificare la collezione
    }

    public function delete($id)
    {
        // Implementa la logica per eliminare la collezione
    }

    public function render()
    {
        $iconHtml = $this->iconRepository->getIcon('camera', 'elegant', '');
        return view('livewire.collections.collection-carousel', compact('iconHtml'));
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionEdit.php ####

<?php

namespace App\Livewire\Collections;

use App\Helpers\FileHelper;
use App\Livewire\Traits\HandlesCollectionUpdate;
use App\Models\Collection;
use App\Models\Team;
use App\Models\TeamUser;
use Livewire\Component;
use Livewire\WithFileUploads;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Illuminate\Support\Facades\Auth;
use Livewire\Attributes\Validate;
use App\Traits\SaveCollectionTraits;


/**
 * Class CollectionEdit
 * @package App\Livewire\Collections
 * NOTA BENE: il metodo Save è all'interno del trait SaveCollectionTraits
 */

class CollectionEdit extends Component
{
    use WithFileUploads, SaveCollectionTraits;

    #[Validate('required|string|max:255')]
    public $collection_name;

    #[Validate('required|string')]
    public $type;

    #[Validate('nullable|integer')]
    public $position;

    #[Validate('nullable|integer')]
    public $EGI_number;

    #[Validate('nullable|numeric')]
    public $floor_price;

    #[Validate('nullable|string')]
    public $description;

    #[Validate('nullable|string')]
    public $url_collection_site;

    #[Validate('nullable|boolean')]
    public $is_published;

    public $collections;

    public $collection =[];

    public $model_collection = null;

    public $log;

    public $collectionId;

    public $teamUsers;

    public $teamId;

    public function mount($id = null)
    {

        $this->collectionId = $id;
        $collection = Collection::findOrFail($this->collectionId);

        Log::channel('florenceegi')->info('CollectionEdit:mount', ['collection' => $collection]);

        $this->collection_name = $collection->collection_name;
        $this->type = $collection->type;
        $this->position = $collection->position;
        $this->EGI_number = $collection->EGI_number;
        $this->floor_price = $collection->floor_price;
        $this->description = $collection->description;
        $this->url_collection_site = $collection->url_collection_site;
        $this->is_published = $collection->is_published;

    }

    public function render()
    {
        return view('livewire.collections.collection-manager', [
            'userId' => Auth::id(),
            'collectionId' => $this->collectionId,
        ]);
    }

}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionOpen.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\Validate;
use Livewire\Component;
use Livewire\Features\SupportFileUploads\WithFileUploads;
use App\Traits\SaveCollectionTraits;

/**
 * Class CollectionEdit
 * @package App\Livewire\Collections
 * NOTA BENE: il metodo Save è all'interno del trait SaveCollectionTraits
 */

class CollectionOpen extends Component
{
    use WithFileUploads, SaveCollectionTraits; // Usa il nuovo trait

    #[Validate('required|string|max:255')]
    public $collection_name;

    #[Validate('required|string')]
    public $type;

    #[Validate('nullable|integer')]
    public $position;

    #[Validate('nullable|integer')]
    public $EGI_number;

    #[Validate('nullable|numeric')]
    public $floor_price;

    #[Validate('nullable|string')]
    public $description;

    #[Validate('nullable|string')]
    public $url_collection_site;

    #[Validate('nullable|boolean')]
    public $is_published;

    public $activeSlide = 0;
    public $collections;
    public $collection;
    public $noCollectionMessage = 'Non ci sono collection disponibili.';
    protected $iconRepository;
    protected $user;

    public $collectionId;

    public function boot(IconRepository $iconRepository)
    {
        $this->iconRepository = $iconRepository;
    }

    public function mount()
    {

        $this->collections = collect(); // Inizializza come una Collection vuota
        $this->loadCollections();

    }

    public function loadCollections()
    {
        // Recupera l'utente autenticato
        $this->user = Auth::user();

        $user = $this->user; // Nella callback non si puù usare $this

        // Recupera tutte le collection associate all'utente
        $this->collections = Collection::whereHas('users', function ($query) use ($user) {
            $query->where('user_id', $user->id);
        })->get();

        // Verifica se c'è una sola collection
        if ($this->collections->count() === 1) {

            Log::channel('florenceegi')->info('CollectionEdit:mount', ['collection' => $this->collection]);

            $this->collection = $this->collections->first();

        }
    }

    public function render()
    {

        Log::channel('florenceegi')->info('CollectionOpen', [
            'collection' => $this->collection,
        ]);

        // Se l'utente non ha alcuna collection, mostra un messaggio di avviso
        if (!$this->collections || $this->collections->isEmpty()) {
            return view('livewire.collections.no-collection', [
                'message' => $this->noCollectionMessage,
            ]);
        }

        // Se ci sono più di una collection, mostra il carousel
        if ($this->collections->count() > 1) {
            $iconHtml = $this->iconRepository->getIcon('camera', 'elegant', '');

            return view('livewire.collections.collection-carousel', [
                'iconHtml' => $iconHtml,
                'collections' => $this->collections,
            ]);
        }

        // Se c'è una sola collection, carica i dettagli
        $this->collectionId = $this->collection->id;
        $this->collection_name = $this->collection->collection_name;
        $this->type = $this->collection->type;
        $this->position = $this->collection->position;
        $this->EGI_number = $this->collection->EGI_number;
        $this->floor_price = $this->collection->floor_price;
        $this->description = $this->collection->description;
        $this->url_collection_site = $this->collection->url_collection_site;
        $this->is_published = $this->collection->is_published;

        return view('livewire.collections.collection-manager');
    }

    // public function nextSlide()
    // {
    //     $this->activeSlide = ($this->activeSlide + 1) % $this->collections->count();
    // }

    // public function prevSlide()
    // {
    //     $this->activeSlide = ($this->activeSlide - 1 + $this->collections->count()) % $this->collections->count();
    // }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CollectionUserMember.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Models\CollectionUser;
use App\Models\Wallet;
use Livewire\Component;
use Illuminate\Support\Facades\Log;
use App\Traits\HasPermissionTrait;

class CollectionUserMember extends Component
{

    use HasPermissionTrait;

    public $collectionUsers; // Lista membri del team
    public $wallets;

    public $collection;
    public $collectionId;
    public $collectionName;
    public $collectionOwner; // Proprietario della collection
    public $show = false; // Proprietà per gestire la visibilità della modale

    public function mount($id)
    {
        Log::channel('florenceegi')->info('Collection id', [
            'collectionId' => $id
        ]);

        $this->collectionId = $id;

        // Carica la collection e i suoi dati
        $this->loadCollectionData();
        $this->loadTeamUsers();
    }

    public function loadCollectionData()
    {
        $this->collection = Collection::findOrFail($this->collectionId);

        $this->collectionName = $this->collection->collection_name;
        $this->collectionOwner = $this->collection->owner; // Assumendo che esista una relazione `owner` nel modello Collection
    }

    public function loadTeamUsers()
    {
        $this->collectionUsers = CollectionUser::where('collection_id', $this->collectionId)->get();
        $this->wallets = Wallet::where('collection_id', '=', $this->collectionId)->get();

        Log::channel('florenceegi')->info('CollectionUsersMembers', [
            'collectionId' => $this->collectionId,
            'wallets' => $this->wallets
        ]);
    }

    public function render()
    {
        return view('livewire.collections.collection-user');
    }
}


#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/CreateCollection.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\Collection;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Attributes\Validate;

class CreateCollection extends Component
{
    public $collection = [
        'creator_id' => null,
        'type' => 'image',
        'status' => 'draft',
        'is_published' => false,
        'collection_name' => null,
        'position' => null,
        'EGI_number' => null,
        'floor_price' => null,
        'description' => null,
    ];

    // Regole di validazione
    protected $rules = [
        'collection.creator_id' => 'required|exists:users,id',
        'collection.collection_name' => 'required|string|max:255',
        'collection.type' => 'required|string|in:image,e-book,audio,video',
        'collection.position' => 'nullable|integer',
        'collection.EGI_number' => 'nullable|integer',
        'collection.floor_price' => 'nullable|numeric',
        'collection.description' => 'nullable|string',
        'collection.status' => 'nullable|string|in:draft,pending_approval,published',
        'collection.is_published' => 'nullable|boolean',
    ];

    public function create()
    {
        Log::channel('florenceegi')->info('Class: CreateCollection. Method: create()');

        try {
            $this->prepareCollectionData();

            $this->validate();

            $collection = Collection::create($this->collection);

            Log::channel('florenceegi')->info('Collection created successfully', [
                'collection_id' => $collection->id,
                'collection_name' => $collection->collection_name,
            ]);

            session()->flash('message', __('collection.created_successfully'));

            // Associa l'utente come creator nella tabella pivot collection_user
            $collection->users()->attach(Auth::id(), ['role' => 'creator']);

            // Reset dei campi
            $this->resetInputFields();

            return redirect()->route('collections.edit', $collection->id);

        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->warning('Validation failed during collection creation', [
                'errors' => $e->errors(),
            ]);
            session()->flash('error', __('collection.create_validation_error'));
            throw $e;
        } catch (\Exception $e) {
            Log::channel('florenceegi')->error('Failed to create collection', [
                'error' => $e->getMessage(),
            ]);
            session()->flash('error', __('collection.creation_failed'));
        }
    }

    private function prepareCollectionData()
    {
        $this->collection['creator_id'] = Auth::id();
        $this->collection['epp_id'] = config('app.epp_id');
        $this->collection['type'] = $this->collection['type'] ?? 'image';
        $this->collection['status'] = 'draft';
        $this->collection['is_published'] = false;
        $this->collection['position'] = $this->collection['position'] ?? 1;
        $this->collection['EGI_number'] = $this->collection['EGI_number'] ?? 1;
        $this->collection['floor_price'] = $this->collection['floor_price'] ?? 0.0;
    }

    private function resetInputFields()
    {
        $this->collection = [
            'creator_id' => null,
            'type' => 'image',
            'status' => 'draft',
            'is_published' => false,
            'collection_name' => null,
            'position' => null,
            'EGI_number' => null,
            'floor_price' => null,
            'description' => null,
        ];
    }

    public function render()
    {
        return view('livewire.collections.create-collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use Illuminate\Support\Facades\Notification;
use App\Models\User;
use App\Models\Wallet;
use App\Models\WalletChangeApproval;
use App\Notifications\WalletChangeRequest;
use App\Notifications\WalletChangeResponse;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\Attributes\On;

class EditWalletModal extends Component
{

    use HasPermissionTrait;

    public $walletId; // Proprietà per identificare l'utente nella collection
    public $collectionId; // Proprietà per identificare l'utente nella collection
    public $walletAddress;
    public $royaltyMint;
    public $royaltyRebind;
    public $approverUserId;

    public $mode = 'create'; // Modalità di apertura della modale
    public $show = false; // Proprietà per gestire la visibilità della modale

    public function mount($walletId = null)
    {

        // if ($this->walleId) {
        //     $this->loadData($this->walleId);
        // }
    }

    public function loadData()
    {

        $wallet = Wallet::findOrFail($this->walletId);

        Log::channel('florenceegi')->info('Wallet', [
            'walletId' => $this->walletId
        ]);

        $this->walletAddress = $wallet->wallet;
        $this->royaltyMint = $wallet->royalty_mint;
        $this->royaltyRebind = $wallet->royalty_rebind;
    }

    #[On('openHandleWallets')]
    public function openHandleWallets($walletId)
    {
        $this->walletId = $walletId;
        $this->loadData();
        $this->show = true; // Mostra la modale
        $this->mode = 'edit';
    }
    #[On('openForCreateNewWallets')]
    public function openForCreateNewWallets($collectionId = null, $userId = null)
    {
        if ($collectionId) {
            Log::channel('florenceegi')->info('Collection id', [
                'collectionId' => $collectionId
            ]);
            $this->collectionId = $collectionId;
            $this->approverUserId = $userId;
        } else {
            Log::channel('florenceegi')->info('No Collection ID provided for wallet creation.');
        }

        $this->show = true; // Mostra la modale
        $this->mode = 'create';
    }


    public function closeHandleWallets()
    {
        $this->walletAddress = null;
        $this->royaltyMint = null;
        $this->royaltyRebind = null;
        $this->show = false; // Mostra la modale
    }

    public function createNewWallet()
    {

        Log::channel('florenceegi')->info('createNewWallet');

        $this->validate([
            'walletAddress' => 'required|string',
            'royaltyMint' => 'nullable|numeric|min:0|max:100',
            'royaltyRebind' => 'nullable|numeric|min:0|max:100',
        ]);

        // Uso la relazione tra il modello Wallet e il metodo collection per recuperare la collection
        $collection = Collection::findOrFail($this->collectionId);
        // $approverUserId = $collection->creator_id;

        Log::channel('florenceegi')->info('createNewWallet PRIMA della verifica dei permessi', [
            'collectionId' => $this->collectionId,
            'approverUserId' => $this->approverUserId
        ]);

        // Verifica permessi
        if (!$this->hasPermission($collection, 'create_wallet')) {
            session()->flash('error', __('You do not have permission to create a wallet.'));
            return;
        }

        Log::channel('florenceegi')->info('createNewWallet DOPO della verifica dei permessi', [
            'collectionId' => $this->collectionId,
            'approverUserId' => $this->approverUserId
        ]);

        // Verifica e aggiorna la quota del creator
        $this->validateAndAdjustCreatorQuota($collection, $this->royaltyMint, $this->royaltyRebind);

        // Crea una proposta di wallet
        $this->proposeNewWallet($this->collectionId, $this->approverUserId, $this->walletAddress, $this->royaltyMint, $this->royaltyRebind);

        $this->show = false;
        session()->flash('message', __('Wallet creation request sent successfully!'));
    }

    public function saveWallet()
    {
        $this->validate([
            'walletAddress' => 'required|string',
            'royaltyMint' => 'nullable|numeric|min:0|max:100',
            'royaltyRebind' => 'nullable|numeric|min:0|max:100',
        ]);

        $wallet = Wallet::findOrFail($this->walletId);

        // **Controllo dei Permessi**
        if ($wallet->user_id !== Auth::id()) {
            // Usa il trait per verificare i permessi sulla collection
            $this->hasPermission($wallet->collection, 'update_wallet');
        }

        // **Validazione delle Quote**
        $remainingMint = $this->validateCreatorModification('royalty_mint', $wallet, $this->royaltyMint);
        $remainingRebind = $this->validateCreatorModification('royalty_rebind', $wallet, $this->royaltyRebind);

        // **Gestione delle Riduzioni e Accredito all’EPP**
        $this->handleReductionsAndEpp($wallet, $remainingMint, $remainingRebind);

        // **Inserimento in wallet_change_approvals**
        if ($wallet->user_id !== Auth::id()) {
            $this->createWalletApproval($wallet);
            session()->flash('message', __('The modification has been submitted for approval.'));
            $this->show = false;
            return;
        }

        // **Applicazione della Modifica**
        $wallet->update([
            'wallet' => $this->walletAddress,
            'royalty_mint' => $this->royaltyMint,
            'royalty_rebind' => $this->royaltyRebind,
        ]);

        $this->dispatch('collectionMemberUpdated');
        $this->show = false;
        session()->flash('message', __('Wallet updated successfully!'));
    }


    private function handleReductionsAndEpp($wallet, $remainingMint, $remainingRebind)
    {
        $eppWallet = Wallet::where('collection_id', $wallet->collection_id)->where('platform_role', 'EPP')->first();

        if ($remainingMint < 0) {
            $eppWallet->increment('royalty_mint', abs($remainingMint));
        }

        if ($remainingRebind < 0) {
            $eppWallet->increment('royalty_rebind', abs($remainingRebind));
        }
    }

    private function validateCreatorModification($type, $wallet, $newValue)
    {
        $maxValue = $type === 'royalty_mint' ? 70.0 : 4.5;
        $currentSum = Wallet::where('collection_id', $wallet->collection_id)->sum($type);

        $newSum = $currentSum - $wallet->$type + $newValue;

        if ($newSum > $maxValue) {
            throw new \Exception(__('The total exceeds the maximum allowed percentage.'));
        }

        return $maxValue - $newSum;
    }

    public function validateAndAdjustCreatorQuota($collection, $newMint, $newRebind)
    {
        $creatorWallet = Wallet::where('collection_id', $collection->id)
                            ->where('user_id', $collection->creator_id)
                            ->first();

        if (!$creatorWallet) {
            throw new \Exception(__('Creator wallet not found.'));
        }

        // Verifica se il creator ha abbastanza quota disponibile
        if ($creatorWallet->royalty_mint < $newMint || $creatorWallet->royalty_rebind < $newRebind) {
            throw new \Exception(__('Creator does not have enough quota to allocate.'));
        }

        // Riduci la quota del creator
        // $creatorWallet->update([
        //     'royalty_mint' => $creatorWallet->royalty_mint - $newMint,
        //     'royalty_rebind' => $creatorWallet->royalty_rebind - $newRebind,
        // ]);
    }

    public function proposeNewWallet($collection, $approverUserId, $walletAddress, $mint, $rebind)
    {

        Log::channel('florenceegi')->info('proposeNewWallet', [
            'approverUserId' => $approverUserId
        ]);

        $approval = WalletChangeApproval::create([
            'wallet_id' => null, // Perché è un nuovo wallet
            'requested_by_user_id' => Auth::user()->id, // Chi inoltra la richiesta
            'approver_user_id' => $approverUserId, // Chi deve approvare la richiesta
            'change_type' => 'create',
            'change_details' => [
                'wallet_address' => $walletAddress,
                'royalty_mint' => $mint,
                'royalty_rebind' => $rebind,
            ],
            'status' => 'pending',
        ]);

        // Notifica il membro della collection
        $member = User::find($approverUserId);
        Notification::send($member, new WalletChangeRequest($approval));
    }

    public function approveChange($approvalId)
    {
        $approval = WalletChangeApproval::findOrFail($approvalId);
        $wallet = $approval->wallet;

        $wallet->update($approval->change_details['new']);
        $approval->update(['status' => 'approved']);

        Notification::send($approval->requestedBy, new WalletChangeResponse($approval, 'proposal'));
        session()->flash('message', __('The wallet change has been approved.'));
    }

    public function declineChange($approvalId, $reason = null)
    {
        $approval = WalletChangeApproval::findOrFail($approvalId);

        $approval->update([
            'status' => 'rejected',
            'rejection_reason' => $reason,
        ]);

        Notification::send($approval->requestedBy, new WalletChangeResponse($approval, 'rejected'));
        session()->flash('message', __('The wallet change has been declined.'));
    }

    public function render()
    {
        return view('livewire.collections.edit-wallet-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/HeadImagesManager.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Services\EGIImageService;
use Illuminate\Support\Facades\Log;
use Livewire\Component;

/**
 * Class HeadImagesManager
 *
 * This Livewire component manages the header images (banner, card, and avatar)
 * for a specific collection. It initializes the collection and provides a render
 * method to display the associated view.
 */
class HeadImagesManager extends Component
{
    /**
     * The collection instance associated with the header images.
     *
     * @var Collection
     */
    public $collection;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * Mount the component and initialize the collection.
     *
     * @param int $id The ID of the collection to be managed.
     *
     * @return void
     */
    public function mount($id)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $id;

        // Retrieve the collection from the database or fail with a 404 error if not found.
        $this->collection = Collection::findOrFail($this->collectionId);
    }

    /**
     * Remove the existing banner image from storage and update the database.
     *
     * @return void
     */
    public function removeImage($type)
    {

        Log::channel('florenceegi')->info('HeadImagesManager, removeImage', ['type' => $type]);


        // Clear the image state in the component.
        switch ($type) {
            case 'banner':
                $this->dispatch('bannerImageRemove');
                break;
            case 'card':
                $this->dispatch('cardImageRemove');
                break;
            case 'EGI':
                $this->dispatch('egiImageRemove');
                break;
            case 'avatar':
                $this->dispatch('avatarImageRemove');
                break;
        }



    }

    /**
     * Render the component's view.
     *
     * @return \Illuminate\View\View The view associated with the component.
     */
    public function render()
    {
        // Return the Livewire view for managing head images.
        return view('livewire.collections.head-images-manager');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/AvatarImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use App\Traits\SaveCollectionTraits;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class AvatarImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * the avatar image associated with a specific collection.
 */
class AvatarImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The avatar image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_avatar;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing avatar image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID.
     *
     * @param int $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $collectionId;

        // Load the existing avatar image.
        $this->loadExistingImage();
    }

    /**
     * Load the existing avatar image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an avatar image.
        if ($collection->image_avatar) {
            // Retrieve the cached image path for the avatar.
            // $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
            //     $this->collectionId,
            //     $collection->image_avatar,
            //     $collection->is_published,
            //     null,
            //     'head.avatar' // PathKey for the avatar image.
            // );
            $this->existingImageUrl = $collection->image_avatar;
        }

    }

    #[On('avatarImageRemove')]
    public function avatarImageRemove(){
        $this->removeImage();
    }

    /**
     * Save the uploaded avatar image to the storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        $collection = Collection::findOrFail($this->collectionId);

        // Verifica il permesso "update_collection"
        $this->hasPermission($collection, 'update_collection_image_header');


        try {
            // Check if an image has been uploaded.
            if (!$this->image_avatar) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the 'avatar_image_' prefix.
            $filename = 'avatar_image_' . uniqid() . '.' . $this->image_avatar->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_avatar, 'head.avatar')) {
                throw new \Exception('Error saving the avatar image.');
            }

            // Retrieve the collection and update the image_avatar field.
            $collection->image_avatar = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_avatar = null;

            // Flash a success message to the session.
            session()->flash('success', 'Avatar image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the avatar image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the avatar image.');
        }
    }

    /**
     * Remove the existing avatar image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an avatar image.
            if ($collection->image_avatar) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('avatar_image_', $this->collectionId, 'head.avatar');

                // Set the image_avatar field to null and save the collection.
                $collection->image_avatar = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_avatar = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Avatar image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the avatar image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the avatar image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the avatar image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_avatar instanceof TemporaryUploadedFile)
            ? $this->image_avatar->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.avatar-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/BannerImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class BannerImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * the banner image associated with a specific collection.
 */
class BannerImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The banner image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_banner;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing banner image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID.
     *
     * @param int $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID passed as a parameter.
        $this->collectionId = $collectionId;

        // Load the existing banner image.
        $this->loadExistingImage();
    }

    /**
     * Load the existing banner image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has a banner image.
        if ($collection->image_banner) {
            // Retrieve the cached image path for the banner.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_banner,
                $collection->is_published,
                null,
                'head.banner' // PathKey for the banner image.
            );
            $this->existingImageUrl = $collection->image_banner;
        }

    }

    /**
     * Save the uploaded banner image to the storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        $collection = Collection::findOrFail($this->collectionId);

        // Verifica il permesso "update_collection"
        $this->hasPermission($collection, 'update_collection_image_header');

        try {
            // Check if an image has been uploaded.
            if (!$this->image_banner) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the 'banner_image_' prefix.
            $filename = 'banner_image_' . uniqid() . '.' . $this->image_banner->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_banner, 'head.banner')) {
                throw new \Exception('Error saving the banner image.');
            }

            // Retrieve the collection and update the image_banner field.
            $collection->image_banner = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_banner = null;

            // Flash a success message to the session.
            session()->flash('success', 'Banner image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the banner image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the banner image.');
        }
    }

    #[On('bannerImageRemove')]
    public function bannerImageRemove(){
        $this->removeImage();
    }

    /**
     * Remove the existing banner image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {

        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has a banner image.
            if ($collection->image_banner) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('banner_image_', $this->collectionId, 'head.banner');

                // Set the image_banner field to null and save the collection.
                $collection->image_banner = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_banner = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Banner image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the banner image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the banner image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the banner image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_banner instanceof TemporaryUploadedFile)
            ? $this->image_banner->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.banner-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/CardImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class ImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * different types of images (card, EGI asset, or default) associated with a collection.
 */
class CardImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_card;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID and image type.
     *
     * @param int    $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID and image type passed as parameters.
        $this->collectionId = $collectionId;

        // Load the existing image URL.
        $this->loadExistingImage();
    }

    /**
     * Load the existing image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an image for the specified field.
        if ($collection->image_card) {
            // Retrieve the cached image path using the EGIImageService.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_card,
                $collection->is_published,
                null,
                'head.card' // PathKey for the card image.
            );

            $this->existingImageUrl = $collection->image_card;
        }
    }

    /**
     * Save the uploaded image to storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        try {

            $collection = Collection::findOrFail($this->collectionId);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection_image_header');

            // Check if an image has been uploaded.
            if (!$this->image_card) {
                throw new \Exception('No image to save.');
            }

            $filename = 'card_image_' . uniqid() . '.' . $this->image_card->getClientOriginalExtension();

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_card, 'head.card')) {
                throw new \Exception("Error saving the card image.");
            }

            // Update the corresponding database field with the new filename.
            $collection->image_card = $filename;
            $collection->save();

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_card = null;

            // Flash a success message to the session.
            session()->flash('success', 'card image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the card image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the card image.');
        }
    }

    #[On('cardImageRemove')]
    public function cardImageRemove(){

        $this->removeImage();
    }

    /**
     * Remove the existing image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an image to remove.
            if ($collection->image_card) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('card_image_', $this->collectionId, 'head.card');

                // Set the image field to null and save the collection.
                $collection->image_card = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_card = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'card image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the card image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the card image.');
        }
    }

    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_card instanceof TemporaryUploadedFile)
            ? $this->image_card->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.card-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Images/EgiImageUpload.php ####

<?php

namespace App\Livewire\Collections\Images;

use App\Models\Collection;
use App\Services\EGIImageService;
use App\Traits\HasPermissionTrait;
use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Modelable;
use Livewire\Features\SupportFileUploads\TemporaryUploadedFile;
use Livewire\Attributes\On;

/**
 * Class ImageUpload
 *
 * This Livewire component manages the upload, display, and removal of
 * different types of images (card, EGI asset, or default) associated with a collection.
 */
class EgiImageUpload extends Component
{
    use WithFileUploads, HasPermissionTrait;

    /**
     * The image being uploaded or managed.
     *
     * @var TemporaryUploadedFile|null
     */
    #[Modelable]
    public $image_EGI;

    /**
     * The unique identifier for the collection.
     *
     * @var int
     */
    public $collectionId;

    /**
     * The URL of the existing image.
     *
     * @var string|null
     */
    public $existingImageUrl;

    /**
     * Mount the component and initialize the collection ID and image type.
     *
     * @param int    $collectionId The ID of the collection.
     *
     * @return void
     */
    public function mount($collectionId)
    {
        // Store the collection ID and image type passed as parameters.
        $this->collectionId = $collectionId;

        // Load the existing image URL.
        $this->loadExistingImage();
    }

    /**
     * Load the existing image URL from the database.
     *
     * @return void
     */
    public function loadExistingImage()
    {
        // Retrieve the collection or fail with a 404 error if not found.
        $collection = Collection::findOrFail($this->collectionId);

        // Check if the collection has an image for the specified field.
        if ($collection->image_EGI) {
            // Retrieve the cached image path using the EGIImageService.
            $this->existingImageUrl = EGIImageService::getCachedEGIImagePath(
                $this->collectionId,
                $collection->image_EGI,
                $collection->is_published,
                null,
                'head.EGI_asset' // PathKey for the EGI image.
            );

            $this->existingImageUrl = $collection->image_EGI;
        }

    }

    /**
     * Save the uploaded image to storage and update the database.
     *
     * @return void
     */
    public function saveImage()
    {

        Log::channel('florenceegi')->info('EgiImageUpload, saveImage');

        // Save the image using the EGIImageService.

        try {

            $collection = Collection::findOrFail($this->collectionId);

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['collection' => $collection]);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection_image_header');

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage after permission', ['image_EGI' => $this->image_EGI]);

            // Check if an image has been uploaded.
            if (!$this->image_EGI) {
                throw new \Exception('No image to save.');
            }

            // Generate a unique filename with the appropriate prefix.
            $filename = 'EGI_asset_' . uniqid() . '.' . $this->image_EGI->getClientOriginalExtension();

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Save the image using the EGIImageService.
            if (!EGIImageService::saveEGIImage($this->collectionId, $filename, $this->image_EGI, 'head.EGI_asset')) {
                throw new \Exception("Error saving the EGI image.");
            }

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Update the corresponding database field with the new filename.
            $collection->image_EGI = $filename;
            $collection->save();

            Log::channel('florenceegi')->info('EgiImageUpload, saveImage', ['filename' => $filename]);

            // Reload the existing image URL to reflect the new upload.
            $this->loadExistingImage();

            // Clear the uploaded image from the component state.
            $this->image_EGI = null;

            // Flash a success message to the session.
            session()->flash('success', 'EGI image saved successfully!');
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error saving the EGI image: ' . $e->getMessage());
            session()->flash('error', 'Error saving the EGI image.');
        }
    }

    #[On('egiImageRemove')]
    public function egiImageRemove(){


        $this->removeImage();
    }

    /**
     * Remove the existing image from storage and update the database.
     *
     * @return void
     */
    public function removeImage()
    {
        try {
            // Retrieve the collection or fail if not found.
            $collection = Collection::findOrFail($this->collectionId);

            // Check if the collection has an image to remove.
            if ($collection->image_EGI) {
                // Remove the old image using the EGIImageService.
                EGIImageService::removeOldImage('EGI_asset_', $this->collectionId, 'head.EGI_asset');

                // Set the image field to null and save the collection.
                $collection->image_EGI = null;
                $collection->save();

                // Clear the image state in the component.
                $this->image_EGI = null;
                $this->existingImageUrl = null;

                // Flash a success message to the session.
                session()->flash('success', 'Egi image removed successfully!');
            }
        } catch (\Exception $e) {
            // Log the error and flash an error message to the session.
            Log::error('Error removing the EGI image: ' . $e->getMessage());
            session()->flash('error', 'Error removing the EGI image.');
        }
    }


    /**
     * Render the component's view with the appropriate image URL.
     *
     * @return \Illuminate\View\View The view for the image upload component.
     */
    public function render()
    {
        // Determine the image URL: temporary URL if the image is in preview, otherwise the existing URL.
        $imageUrl = ($this->image_EGI instanceof TemporaryUploadedFile)
            ? $this->image_EGI->temporaryUrl()
            : $this->existingImageUrl;

        // Return the view with the image URL.
        return view('livewire.collections.images.egi-image-upload', [
            'imageUrl' => $imageUrl,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/InviteUserToCollectionModal.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\CollectionInvitation;
use App\Models\Collection;
use App\Models\User;
use App\Notifications\CollectionInvitationNotification;
use Livewire\Component;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Notification;
use Livewire\Attributes\On;
use Spatie\Permission\Models\Role; // Importiamo i ruoli di Spatie

class InviteUserToCollectionModal extends Component
{
    public $email; // Email dell'utente da invitare
    public $role; // Ruolo dell'utente nella collection
    public $roles; // Ruoli disponibili
    public $collectionId; // ID della collection corrente
    public $show = false; // Gestisce la visibilità della modale

    public function mount($collectionId)
    {
        $this->collectionId = $collectionId;

        // Carica i ruoli disponibili da Spatie
        $this->roles = Role::pluck('name')->toArray(); // Recupera i nomi dei ruoli dalla tabella 'roles'
    }

    public function invite()
    {
        $this->validate([
            'email' => 'required|email',
            'role' => 'required|in:' . implode(',', $this->roles), // Validazione sui ruoli definiti
        ]);

        // Verifica se l'utente esiste già nel sistema
        $user = User::where('email', $this->email)->first();

        // Registra l'invito nella tabella `collection_invitations`
        $invitation = CollectionInvitation::create([
            'collection_id' => $this->collectionId,
            'email' => $this->email,
            'role' => $this->role,
            'status' => 'pending',
        ]);

        // Invia notifica all'utente, se esiste
        if ($user) {
            Notification::send($user, new CollectionInvitationNotification($invitation->id));
        }

        Log::channel('florenceegi')->info('Collection Invitation Sent', [
            'collection_id' => $this->collectionId,
            'email' => $this->email,
            'role' => $this->role,
        ]);

        $this->resetFields();
        $this->show = false;
        $this->dispatch('collection-member-updated'); // Aggiorna il genitore
    }

    #[On('openInviteModal')]
    public function showInviteModal()
    {
        $this->resetFields(); // Pulisce i campi
        $this->show = true; // Mostra la modale
    }

    public function resetFields()
    {
        $this->email = '';
        $this->role = '';
    }

    public function closeModal()
    {
        $this->show = false;
    }

    public function render()
    {
        return view('livewire.collections.invite-user-to-collection-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/RejectModal.php ####

<?php

namespace App\Livewire\Collections;

use Livewire\Component;
use App\Models\WalletChangeApproval;

class RejectModal extends Component
{
    public $approvalId;
    public $rejectionReason;

    protected $listeners = ['openRejectModal'];

    public function openRejectModal($approvalId)
    {
        $this->approvalId = $approvalId;
        $this->rejectionReason = '';
    }

    public function reject()
    {
        $approval = WalletChangeApproval::findOrFail($this->approvalId);

        $approval->wallet->update(json_decode($approval->wallet->previous_values, true));
        $approval->wallet->update(['approval' => 'approved']);
        $approval->update([
            'status' => 'rejected',
            'rejection_reason' => $this->rejectionReason,
            'approved_at' => now(),
        ]);

        session()->flash('message', 'Modifica rifiutata.');
        $this->emit('changesRejected');
    }

    public function render()
    {
        return view('livewire.collections.reject-modal');
    }
}


#### Inizio File: /home/fabio/EGI/app/Livewire/Collections/Show.php ####

<?php

namespace App\Livewire\Collections;

use App\Models\Collection;
use App\Models\TeamWallet;
use Illuminate\Support\Facades\Auth;
use Livewire\Component;
use Illuminate\Support\Facades\Log;

class Show extends Component
{
    public $collection = [
        'user_id' => null,
        'team_id' => null,
        'type' => null,
        'is_published' => null,
        'collection_name' => null,
        'position' => null,
        'EGI_number '=> null,
        'floor_price' => null,
        'description' => null,
        'url_collection_site' => null,
        'image_banner' => '',
        'image_card' => '',
        'image_avatar' => '',
    ];

    public $collections;
    public $collectionId;

    public function render()
    {

        $user = Auth::user();

        // Recupera la collection selezionata
        $collection = Collection::find($this->collectionId);

        // estrapola tutti gli wallets relazionati al team
        $wallets = TeamWallet::where('team_id', $collection->team_id)->get();

        // Recupera tutte le collection dell'utente connesso
        $this->collections = Collection::where('user_id', $user->id)->get();
        return view('livewire.collections.collection-manager',[
            'wallets' => $wallets,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Dashboard.php ####

<?php

namespace App\Livewire;

use App\Models\CollectionInvitation;
use App\Services\Notifications\NotificationHandlerFactory;
use Livewire\Component;
use App\Models\Collection;
use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;
use Livewire\Attributes\On;
use Illuminate\Support\Facades\Log;

class Dashboard extends Component
{
    public $collectionsCount;
    public $collectionMembersCount;
    public $notifications;
    public $viewingHistoricalNotifications = false;

    public $showHistoricalNotifications = false;

    public $pendingNotifications = [];
    public $historicalNotifications = [];

    public function mount()
    {
        $this->loadStats();
        $this->loadNotifications();
    }

    public function loadStats()
    {
        $this->collectionsCount = Collection::where('creator_id', Auth::id())->count();

        $this->collectionMembersCount = CollectionUser::whereHas('collection', function ($query) {
            $query->where('creator_id', Auth::id());
        })
        ->where('user_id', '!=', Auth::id())
        ->count();
    }


/**
 * Questo metodo gestisce l'evento "proposal-declined" emesso dal metodo decline() del componente DeclineProposalModal.
 *
 * @return void
 */
    #[On('proposal-declined')]
    public function handleProposalDeclined()
    {
        // Log dell'evento per verifica
        Log::channel('florenceegi')->info('Dashboard: proposal-declined event received.');

        // Ricaricare le notifiche pendenti e storiche
        $this->loadNotifications();

        // Mostrare un messaggio di successo all'utente
        session()->flash('message', __('The proposal was declined successfully and a notification was sent to the proposer.'));
    }

    #[On('proposal-accepted')]
    public function handleProposalAccepted()
    {
        // Log dell'evento per verifica
        Log::channel('florenceegi')->info('Dashboard: proposal-accepted event received.');

        // Ricaricare le notifiche pendenti e storiche
        $this->loadNotifications();

        // Mostrare un messaggio di successo all'utente
        session()->flash('message', __('The proposal was accepted successfully and a notification was sent to the proposer.'));
    }

    public function openDeclineModal($notification)
    {
        Log::channel('florenceegi')->info('Dashboard: openDeclineModal', [
            'notification' => $notification,

        ]);

        // il listener si trova in app/Livewire/Proposals/DeclineProposalModal.php
        $this->dispatch('open-decline-modal', $notification);
    }

    public function openAcceptModal($notification)
    {
        Log::channel('florenceegi')->info('Dashboard: openAcceptModal', [
            'notification' => $notification,
        ]);

        // il listener si trova in app/Livewire/Proposals/AcceptProposalModal.php
        $this->dispatch('open-accept-modal', $notification);
    }

    public function notificationArchive($notificationId, $action)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $notification->update([
            'read_at' => now(),
            'outcome' => $action,
        ]);

        $this->loadNotifications();
    }

    public function deleteNotificationAction($notificationId)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $notification->delete();

        $this->loadNotifications();
    }

    public function loadNotifications()
    {
        $this->pendingNotifications = Auth::user()->notifications()
        ->where(function ($query) {
            $query->whereNull('read_at')
                  ->orWhere('outcome', 'pending');
        })
        ->orderBy('created_at', 'desc')
        ->get();

        $this->historicalNotifications = Auth::user()->notifications()
            ->whereIn('outcome', ['accepted', 'declined', 'done'])
            ->orderBy('created_at', 'desc')
            ->get();

        Log::channel('florenceegi')->info('Dashboard: loadNotifications', [
            'pendingNotifications' => $this->pendingNotifications,
            'historicalNotifications' => $this->historicalNotifications,
        ]);

    }

    public function handleNotificationAction($notificationId, $action)
    {
        $notification = Auth::user()->notifications()->findOrFail($notificationId);
        $type = $notification->type;

        $handler = NotificationHandlerFactory::getHandler($type);
        $handler->handle($notification, $action);

        $this->loadStats();
        $this->loadNotifications();
    }

    public function toggleHistoricalNotifications()
    {
        $this->showHistoricalNotifications = !$this->showHistoricalNotifications;
    }

    public function getNotificationView($notification)
    {
        $notificationViews = [
            'App\Notifications\WalletChangeRequest' => 'notifications.wallet-change-request',
            'App\Notifications\CollectionInvitationNotification' => 'notifications.invitation',
            'App\Livewire\Proposals\ProposalDeclinedNotification' => 'notifications.proposa-declined-notification',
        ];

        return $notificationViews[$notification->type] ?? 'notifications.default';
    }

    public function render()
    {
        return view('livewire.dashboard', [
            'pendingNotifications' => $this->pendingNotifications,
            'historicalNotifications' => $this->historicalNotifications,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/LanguageSelector.php ####

<?php

namespace App\Livewire;

use App\Models\User;
use Livewire\Component;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;

class LanguageSelector extends Component
{
    public $currentLocale;
    public $languages;

    public function mount()
    {
        $this->languages = config('app.languages');

        // Segue la stessa logica del middleware SetLanguage
        if (Auth::check() && Auth::user()->language) {
            // Log::channel('florenceegi')->info('language from db');
            $this->currentLocale = trim(Auth::user()->language);
        } elseif (Cookie::has('language')) {
            // Log::channel('florenceegi')->info('language from cookie');
            $this->currentLocale = trim(Cookie::get('language'));
        } else {
            // Log::channel('florenceegi')->info('language from config');
            $this->currentLocale = trim(config('app.locale'));
        }
        // App::setLocale($this->currentLocale);
        // session(['language' => $this->currentLocale]);

        session(['language' => App::getLocale()]);
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.App::currentLocale());
        // Log::channel('florenceegi')->info('LINGUA CORRENTE: '.App::getLocale());

    }

    public function updatedCurrentLocale($value)
    {
        Log::channel('florenceegi')->info('Attempting to update locale to: ' . $value);

        if (array_key_exists($value, $this->languages)) {
            $value = trim($value);
            // Log::channel('florenceegi')->info('Locale updated to: ' . $value);

            // Aggiorna il database se l'utente è autenticato
            if (Auth::check()) {
                /** @var User $user */
                $user = Auth::user();
                $user->language = $value;
                $user->save();
                // Log::channel('florenceegi')->info('User language updated in database: ' . $value);
            } else {
                Log::channel('florenceegi')->info('User is not authenticated, setting cookie for language: ' . $value);
            }

            // Imposta il cookie per gli utenti non autenticati
            Cookie::queue('language', $value, 60 * 24 * 365); // Cookie valido per un anno

            // Aggiorna la sessione e l'applicazione
            session(['language' => $value]);
            App::setLocale($value);

            Log::channel('florenceegi')->info('Language changed to: ' . App::currentLocale());

            // Ricarica la pagina per applicare la nuova lingua
            $this->dispatch('language-changed')->self();
            return redirect(request()->header('Referer'));
        } else {
            Log::channel('florenceegi')->warning('Invalid language value provided: ' . $value);
        }
    }

    public function render()
    {
        return view('livewire.language-selector');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Layout/Navigation.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Layout;

use Illuminate\Contracts\View\View;
use Illuminate\Support\Facades\Auth;
use Livewire\Component;

class Navigation extends Component
{

    public $currentTeam;

    public function render(): View
    {

        $this->currentTeam = Auth::user()->currentTeam?->name ?? NESSUN_TEAM;

        return view('livewire.layout.navigation', [
            'user' => Auth::user(),
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Layout/Sidebar.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Layout;

use Illuminate\Contracts\View\View;
use Livewire\Component;

use App\Models\ContextHasMenu;

class Sidebar extends Component
{

    public $context;
    public $menuItems;

    public function mount($context = 'general')
    {
        $this->context = $context;
        $this->menuItems = ContextHasMenu::with('barMenu')
            ->where('context', $this->context)
            ->get()
            ->pluck('barMenu');
    }
    public function render(): View
    {
        return view('livewire.sidebar');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/PhotoUploader.php ####

<?php

namespace App\Livewire;

use Illuminate\Support\Facades\Log;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\Attributes\Layout;

class PhotoUploader extends Component
{
    use WithFileUploads;

    public $photo;

    public function updatedPhoto()
    {
        Log::info('Foto caricata:', ['photo' => $this->photo]);
        Log::info('File caricato:', ['name' => $this->photo->getClientOriginalName()]);
        Log::info('Percorso temporaneo:', ['path' => $this->photo->getRealPath()]);
        Log::info('Temporary URL:', ['url' => $this->photo->temporaryUrl()]);


        if ($this->photo) {
            Log::info('Temporary URL:', ['url' => $this->photo->temporaryUrl()]);
        }
    }

    public function getTemporaryUrl()
    {
        try {
            return $this->photo->temporaryUrl();
        } catch (\Exception $e) {
            Log::error('Errore nel generare temporaryUrl:', ['error' => $e->getMessage()]);
            return null;
        }
    }

    public function save()
    {
        // Valida il file
        $this->validate([
            'photo' => 'image|max:2048', // Max 2MB
        ]);

        // Salva il file nel disco configurato (di default: "storage/app/livewire-tmp")
        $path = $this->photo->store('photos', 'public');

        Log::info('File salvato in:', ['path' => $path]);

        // Mostra un messaggio di successo (opzionale)
        session()->flash('message', 'Foto caricata con successo: ' . $path);
    }

    #[Layout('layouts.guest')]
    public function render()
    {
        return view('livewire.photo-uploader');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/AcceptProposalModal.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\WalletChangeApproval;

use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Livewire\Component;

class AcceptProposalModal extends Component
{
    public $isVisible = false;
    public $context;
    public $type;
    public $walletChangeApprovalId;
    public $reason = '';
    public $notification;

    protected $rules = [
        'reason' => 'required|string|max:500',
    ];

    #[On('open-accept-modal')]
    public function openAcceptModal($notification)
    {

        $this->notification = $notification;

        Log::channel('florenceegi')->info('AcceptProposalModal: openModal', [
            '$this->notification' => $notification,
        ]);

        $this->isVisible = true;

    }

    public function closeModal()
    {
        $this->isVisible = false;
    }


    public function accept()
    {

        Log::channel('florenceegi')->info('AcceptProposalModal: accept', [
            'notification' =>  json_encode($this->notification),
            'type' => $this->type,
            'reason' => $this->reason,
        ]);

        $this->validate();

        // Trova la proposta nel database
        $proposal = WalletChangeApproval::findOrFail($this->notification['data']['wallet_change_approvals_id']);

        // Aggiorna lo stato della proposta a "accepted" e salva la motivazione
        $proposal->update([
            'type' => $this->notification['data']['type'],
            'status' => 'accepted',
            'rejection_reason' => $this->reason,
            'read_at' => now(),
            'notification_id' => $this->notification['id']
        ]);

        // Aggiungo i dati alla notifica di risposta
        $this->notification['type'] = $proposal->type;
        $this->notification['reason'] = $this->reason;
        $this->notification['approver_user_id'] = $proposal->approver_user_id;


        // Crea la notifica di declino per il proponente
        $proposal->requestedBy->notify(new ProposalAcceptedNotification($this->notification));

        // Compensazione del wallet del proponente

        // Nasconde la modale
        $this->isVisible = false;

        // Invia l'evento per aggiornare la dashboard
        $this->dispatch('proposal-accepted');
    }




    public function render()
    {
        return view('livewire.proposals.decline-proposal-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/DeclineProposalModal.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\WalletChangeApproval;

use Illuminate\Support\Facades\Log;
use Livewire\Attributes\On;
use Livewire\Component;

class DeclineProposalModal extends Component
{
    public $isVisible = false;
    public $context;
    public $type;
    public $walletChangeApprovalId;
    public $reason = '';
    public $notification;

    protected $rules = [
        'reason' => 'required|string|max:500',
    ];

    #[On('open-decline-modal')]
    public function openDeclineModal($notification)
    {

        $this->notification = $notification;

        Log::channel('florenceegi')->info('DeclineProposalModal: openModal', [
            '$this->notification_data' => $notification,
        ]);

        $this->isVisible = true;

    }

    public function closeModal()
    {
        $this->isVisible = false;
    }


    public function decline()
    {

        Log::channel('florenceegi')->info('DeclineProposalModal: decline', [
            'notification' =>  json_encode($this->notification),
            'type' => $this->type,
            'reason' => $this->reason,
        ]);

        $this->validate();

        // Trova la proposta nel database
        $proposal = WalletChangeApproval::findOrFail($this->notification['data']['wallet_change_approvals_id']);

        // Aggiorna lo stato della proposta a "declined" e salva la motivazione
        $proposal->update([
            'type' => $this->notification['data']['type'],
            'status' => 'declined',
            'rejection_reason' => $this->reason,
            'read_at' => now(),
            'notification_id' => $this->notification['id']
        ]);

        // Aggiungo i dati alla notifica di risposta
        $this->notification['type'] = $proposal->type;
        $this->notification['reason'] = $this->reason;
        $this->notification['approver_user_id'] = $proposal->approver_user_id;


        // Crea la notifica di declino per il proponente
        $proposal->requestedBy->notify(new ProposalDeclinedNotification($this->notification));

        // Nasconde la modale
        $this->isVisible = false;

        // Invia l'evento per aggiornare la dashboard
        $this->dispatch('proposal-declined');
    }




    public function render()
    {
        return view('livewire.proposals.decline-proposal-modal');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/ProposalAcceptedNotification.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\Notification as NotificationModel;
use App\Models\User;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class ProposalAcceptedNotification extends Notification
{
    use Queueable;

    public $notification;
    public $reason;

    public function __construct(array $notification)
    {
        $this->notification = $notification;

    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        // Trova l'utente che ha richiesto la modifica per comporre il nominativo
        $approver = User::find($this->notification['notifiable_id']);
        $approver_name = $approver->name . ' ' . $approver->last_name;

        Log::channel('florenceegi')->info('ProposalAcceptedNotification:toDatabase', [
            'notification id' => $this->notification['id']
        ]);

        // Aggiorna la notifica di richiesta nel database per segnalarla come completata
        $updated_notification = NotificationModel::find($this->notification['id']);

        // Ottieni i dati JSON esistenti
        $data = $updated_notification->data;

        // Aggiungi una nuova chiave al JSON
        $data['reason'] = $this->notification['reason'];

        // Aggiorna il modello con i nuovi dati
        $updated_notification->update([
            'outcome' => 'accepted',
            'read_at' => now(),
            'data' => $data, // Salva i dati aggiornati
        ]);

        return [
            'message' => $this->notification['data']['type'] === 'create'
                ? __('notification.proposed_creation_new_wallet')
                : __('notification.proposed_change_to_a_wallet'),
            'type' => 'proposal_accepted',
            'reason' => $this->notification['reason'],
            'wallet_address' => $this->notification['data']['wallet_address'],
            'royalty_mint' => $this->notification['data']['royalty_mint'],
            'royalty_rebind' => $this->notification['data']['royalty_rebind'],
            'wallet_change_approvals_id' => $this->notification['data']['wallet_change_approvals_id'],
            'requested_by' => $this->notification['data']['requested_by'],
            'approver' => $approver_name,
            'status' => 'response', // Definisce questa notifica come una [risposta]
            'timestamp' => now(),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Proposals/ProposalDeclinedNotification.php ####

<?php

namespace App\Livewire\Proposals;

use App\Models\Notification as NotificationModel;
use App\Models\User;
use Illuminate\Bus\Queueable;
use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class ProposalDeclinedNotification extends Notification
{
    use Queueable;

    public $notification;
    public $reason;

    public function __construct(array $notification)
    {
        $this->notification = $notification;

    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        // Trova l'utente che ha richiesto la modifica per comporre il nominativo
        $approver = User::find($this->notification['notifiable_id']);
        $approver_name = $approver->name . ' ' . $approver->last_name;

        Log::channel('florenceegi')->info('ProposalDeclinedNotification:toDatabase', [
            'notification id' => $this->notification['id']
        ]);

        // Aggiorna la notifica di richiesta nel database per segnalarla come completata
        $updated_notification = NotificationModel::find($this->notification['id']);

        // Ottieni i dati JSON esistenti
        $data = $updated_notification->data;

        // Aggiungi una nuova chiave al JSON
        $data['reason'] = $this->notification['reason'];

        // Aggiorna il modello con i nuovi dati
        $updated_notification->update([
            'outcome' => 'declined',
            'read_at' => now(),
            'data' => $data, // Salva i dati aggiornati
        ]);

        return [
            'message' => $this->notification['data']['type'] === 'create'
                ? __('notification.proposed_creation_new_wallet')
                : __('notification.proposed_change_to_a_wallet'),
            'type' => 'proposal_declined',
            'reason' => $this->notification['reason'],
            'wallet_address' => $this->notification['data']['wallet_address'],
            'royalty_mint' => $this->notification['data']['royalty_mint'],
            'royalty_rebind' => $this->notification['data']['royalty_rebind'],
            'wallet_change_approvals_id' => $this->notification['data']['wallet_change_approvals_id'],
            'requested_by' => $this->notification['data']['requested_by'],
            'approver' => $approver_name,
            'status' => 'response', // Definisce questa notifica come una [risposta]
            'timestamp' => now(),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Sidebar.php ####

<?php

namespace App\Livewire;

use Livewire\Component;
use Illuminate\Support\Facades\Route;
use App\Services\Menu\ContextMenus;
use App\Services\Menu\MenuConditionEvaluator;
use App\Repositories\IconRepository;

class Sidebar extends Component
{
    public $menus = [];
    public $contextTitle = '';
    protected $iconRepo;

    public function mount()
    {
        $evaluator = new MenuConditionEvaluator();
        $this->iconRepo = new IconRepository();

        // Determina il contesto dalla rotta corrente
        $currentRouteName = Route::currentRouteName();
        $context = explode('.', $currentRouteName)[0] ?? 'dashboard';

        // Imposta il titolo del contesto
        $this->contextTitle = ucfirst($context);

        // Ottieni i menu per il contesto corrente
        $allMenus = ContextMenus::getMenusForContext($context);

        // Filtra i menu in base ai permessi dell'utente
        foreach ($allMenus as $menu) {
            $filteredItems = array_filter($menu->items, function ($item) use ($evaluator) {
                return $evaluator->shouldDisplay($item);
            });

            if (!empty($filteredItems)) {
                // Converti il MenuGroup in un array associativo
                $menuArray = [
                    'name' => $menu->name,
                    'icon' => $menu->icon,
                    'permission' => $menu->permission ?? null,
                    'items' => [],
                ];

                foreach ($filteredItems as $item) {
                    $menuArray['items'][] = [
                        'name' => $item->name,
                        'route' => $item->route,
                        'icon' => $this->iconRepo->getDefaultIcon($item->icon),
                        'permission' => $item->permission ?? null,
                        'children' => $item->children ?? [],
                    ];
                }

                $this->menus[] = $menuArray;
            }
        }
    }

    public function render()
    {
        return view('livewire.sidebar');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/TeamManager.php ####

<?php

namespace App\Livewire;

use Livewire\Component;

class TeamManager extends Component
{
    public function render()
    {
        return view('livewire.team-manager');
    }
}

#### Inizio File: /home/fabio/EGI/app/Livewire/Traits/HandlesCollectionUpdate.php ####

<?php

namespace App\Livewire\Traits;

use App\Services\FileStorageService;
use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Support\Facades\Auth;

trait HandlesCollectionUpdate
{

    public function collectionUpdate()
    {

        try {
            $this->validate();

            $collection = Collection::findOrFail($this->collectionId);

            Log::channel('florenceegi')->info('Current collection', [
                'collection' => json_encode($collection, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)
            ]);

            Log::channel('florenceegi')->info('Modified collection', [
                'collection' => json_encode($this->collection, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)
            ]);

            $collection->update($this->collection);

            session()->flash('message', __('collection.updated_successfully'));

        } catch (\Illuminate\Validation\ValidationException $e) {
            Log::channel('florenceegi')->error('Validation error during update', $e->errors());
            session()->flash('error', __('collection.update.validation_error'));
            throw $e;

        } catch (ModelNotFoundException $e) {
            Log::channel('florenceegi')->error('Collection not found during update', ['collection_id' => $this->collectionId]);
            session()->flash('error', __('collection.not_found'));

        } catch (\Exception $e) {
            Log::channel('florenceegi')->error('Failed to update collection', [
                'error' => $e->getMessage(),
                'collection_data' => $this->collection,
                'stack_trace' => $e->getTraceAsString(),
            ]);
            session()->flash('error', __('collection.save_failed'));
        }
    }

}

#### Inizio File: /home/fabio/EGI/app/Livewire/Welcome/AuthForms.php ####

<?php

declare(strict_types=1);

namespace App\Livewire\Welcome;

use Illuminate\Contracts\View\View;
use Livewire\Component;

class AuthForms extends Component
{
    public bool $showLogin = true;

    public function toggleForm(): void
    {
        $this->showLogin = !$this->showLogin;
    }

    public function render(): View
    {
        return view('livewire.welcome.auth-forms');
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/Collection.php ####

<?php

namespace App\Models;

use App\Casts\EGIImageCast;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Collection extends Model
{
    use HasFactory;
    use SoftDeletes; // Gestione SoftDeletes

    /**
     * Gli attributi assegnabili in massa.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'creator_id',
        'owner_id',
        'collection_name',
        'description',
        'type',
        'status',
        'is_published',
        'image_banner',
        'image_card',
        'image_avatar',
        'image_egi',
        'url_collection_site',
        'position',
        'EGI_number',
        'EGI_asset_roles',
        'floor_price',
        'path_image_to_ipfs',
        'url_image_ipfs',
        'epp_id',
        'EGI_asset_id',
    ];

    /**
     * Gli attributi che devono essere castati.
     *
     * @var array
     */
    protected $casts = [
        'image_banner' => EGIImageCast::class,
        'image_card'   => EGIImageCast::class,
        'image_avatar' => EGIImageCast::class,
        'image_EGI'    => EGIImageCast::class,
        'is_published' => 'boolean',
    ];

    /**
     * Relazione con il creator.
     */
    public function creator()
    {
        return $this->belongsTo(User::class, 'creator_id');
    }

    /**
     * Relazione con l'owner.
     */
    public function owner()
    {
        return $this->belongsTo(User::class, 'owner_id');
    }

    /**
     * Relazione con gli EGI.
     */
    public function egis()
    {
        return $this->hasMany(Egi::class);
    }

    /**
     * Relazione con gli utenti tramite la tabella pivot collection_user.
     */
    public function users()
    {
        return $this->belongsToMany(User::class, 'collection_user')
                    ->withPivot('role')
                    ->withTimestamps();
    }

    /**
     * Relazione con i wallet.
     */
    public function wallets()
    {
        return $this->hasMany(Wallet::class);
    }

    /**
     * Verifica se la collection è pubblicata.
     *
     * @return bool
     */
    public function isPublished(): bool
    {
        return $this->status === 'published';
    }

    /**
     * Verifica se la collection può essere pubblicata.
     *
     * @return bool
     */
    public function canBePublished(): bool
    {
        $pendingApprovals = WalletChangeApproval::whereHas('wallet', function ($query) {
            $query->where('collection_id', $this->id);
        })->where('status', 'pending')->exists();

        return !$pendingApprovals && $this->status === 'draft';
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/CollectionInvitation.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class CollectionInvitation extends Model
{
    use HasFactory;

    /**
     * La tabella associata al modello.
     *
     * @var string
     */
    protected $table = 'collection_invitations';

    /**
     * I campi che possono essere assegnati in massa.
     *
     * @var array
     */
    protected $fillable = [
        'collection_id',
        'email',
        'role',
        'status',
    ];

    /**
     * Relazione con il modello Collection.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    /**
     * Determina se l'invito è in sospeso.
     *
     * @return bool
     */
    public function isPending()
    {
        return $this->status === 'pending';
    }

    /**
     * Determina se l'invito è stato accettato.
     *
     * @return bool
     */
    public function isAccepted()
    {
        return $this->status === 'accepted';
    }

    /**
     * Determina se l'invito è stato rifiutato.
     *
     * @return bool
     */
    public function isRejected()
    {
        return $this->status === 'rejected';
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/CollectionUser.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class CollectionUser extends Model
{
    use HasFactory;

    protected $table = 'collection_user';

    protected $fillable = [
        'collection_id',
        'user_id',
        'role',
        'is_owner',
        'joined_at',
        'removed_at',
        'metadata',
        'status',
    ];

    // const STATUS_PENDING = 'pending';
    // const STATUS_ACCEPTED = 'accepted';
    // const STATUS_REJECTED = 'rejected';

    // public static function statuses()
    // {
    //     return [
    //         self::STATUS_PENDING,
    //         self::STATUS_ACCEPTED,
    //         self::STATUS_REJECTED,
    //     ];
    // }

    protected $casts = [
        'is_owner' => 'boolean',
        'joined_at' => 'datetime',
        'removed_at' => 'datetime',
        'metadata' => 'array',
    ];

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * Relazione con il modello Wallet.
     * Supponendo che la tabella `wallets` abbia una colonna `collection_user_id`
     * per identificare il wallet associato al CollectionUser.
     */
    public function wallet()
    {
        return $this->hasOne(Wallet::class, 'user_id', 'id');
    }
}


#### Inizio File: /home/fabio/EGI/app/Models/Egi.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Egi extends Model
{

    use SoftDeletes;

    protected $fillable = [
        'collection_id', 'key_file', 'token_EGI', 'jsonMetadata', 'user_id',
        'auction_id', 'owner_id', 'drop_id', 'upload_id', 'creator', 'owner_wallet',
        'drop_title', 'title', 'description', 'extension', 'media', 'type', 'bind',
        'paired', 'price', 'floorDropPrice', 'position', 'creation_date', 'size',
        'dimension', 'is_published', 'mint', 'rebind', 'file_crypt', 'file_hash',
        'file_IPFS', 'file_mime', 'status', 'is_public', 'updated_by'
    ];

    public static function boot()
    {
        parent::boot();

        static::updated(function ($egi) {
            $egi->audits()->create([
                'user_id' => auth()->id(),
                'old_values' => $egi->getOriginal(),
                'new_values' => $egi->getChanges(),
                'action' => 'update',
            ]);
        });
    }

    public function audits()
    {
        return $this->hasMany(EgiAudit::class);
    }

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/EgiAudit.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class EgiAudit extends Model
{
    //
}

#### Inizio File: /home/fabio/EGI/app/Models/Icon.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Icon extends Model
{
    use HasFactory;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'style',
        'type',
        'class',
        'html',
    ];

    /**
     * Accessor to get the full HTML for the icon.
     *
     * @return string
     */
    public function getFullHtmlAttribute(): string
    {
        return $this->html;
    }

    /**
     * Mutator to sanitize the HTML input.
     *
     * @param string $value
     */
    public function setHtmlAttribute(string $value): void
    {
        // Optional sanitization logic if needed
        $this->attributes['html'] = trim($value);
    }
}

#### Inizio File: /home/fabio/EGI/app/Models/Membership.php ####

<?php

namespace App\Models;

use Laravel\Jetstream\Membership as JetstreamMembership;

class Membership extends JetstreamMembership
{
    /**
     * Indicates if the IDs are auto-incrementing.
     *
     * @var bool
     */
    public $incrementing = true;
}

#### Inizio File: /home/fabio/EGI/app/Models/Notification.php ####

<?php


namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Traits\UsesUuid;

class Notification extends Model
{
    use UsesUuid;

    protected $fillable = [
        'type',
        'notifiable_type',
        'notifiable_id',
        'outcome',
        'data',
        'read_at',
    ];

    protected $casts = [
        'data' => 'array', // Questo converte automaticamente il JSON in un array associativo
    ];

}

#### Inizio File: /home/fabio/EGI/app/Models/Permission.php ####

<?php

use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

Permission::findOrCreate('manage_roles');
Permission::findOrCreate('manage_icons');

$adminRole = Role::findOrCreate('admin');
$adminRole->givePermissionTo(['manage_roles', 'manage_icons']);

$editorRole = Role::findOrCreate('editor');
$editorRole->givePermissionTo(['manage_icons']); // L'editor può solo gestire le icone

#### Inizio File: /home/fabio/EGI/app/Models/User.php ####

<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use App\Traits\HasTeamRoles;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Fortify\TwoFactorAuthenticatable;
use Laravel\Jetstream\HasProfilePhoto;
use Laravel\Jetstream\HasTeams;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use HasApiTokens;
    use HasRoles;
    use Notifiable;


    /** @use HasFactory<\Database\Factories\UserFactory> */
    use HasFactory;
    use HasProfilePhoto;
    use HasTeams;
    use Notifiable;
    use TwoFactorAuthenticatable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'user_id',
        'name',
        'last_name',
        'email',
        'icon_style',
        'password',
        'language',
        'wallet',
        'wallet_balance',
        'consent',
        'bio_title',
        'bio_story',
        'title',
        'job_role',
        'username',
        'usertype',
        'street',
        'city',
        'region',
        'state',
        'zip',
        'home_phone',
        'cell_phone',
        'work_phone',
        'site_url',
        'facebook',
        'social_x',
        'tiktok',
        'instagram',
        'snapchat',
        'twitch',
        'linkedin',
        'discord',
        'telegram',
        'other',
        'birth_date',
        'fiscal_code',
        'tax_id_number',
        'doc_typo',
        'doc_num',
        'doc_issue_date',
        'doc_expired_date',
        'doc_issue_from',
        'doc_photo_path_f',
        'doc_photo_path_r',
        'org_name',
        'org_email',
        'org_street',
        'org_city',
        'org_region',
        'org_state',
        'org_zip',
        'org_site_url',
        'annotation',
        'org_phone_1',
        'org_phone_2',
        'org_phone_3',
        'rea',
        'org_fiscal_code',
        'org_vat_number',
        'current_team_id',
        'profile_photo_path',
    ];

    protected $casts = [
        'email_verified_at' => 'datetime',
        'birth_date' => 'date',
        'doc_issue_date' => 'date',
        'doc_expired_date' => 'date',
        'wallet_balance' => 'decimal:4',
        'consent' => 'boolean',
    ];


    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
        'two_factor_recovery_codes',
        'two_factor_secret',
    ];

    /**
     * The accessors to append to the model's array form.
     *
     * @var array<int, string>
     */
    protected $appends = [
        'profile_photo_url',
    ];

    public function getIconStyleAttribute(): string
    {
        // Ritorna l'icon_style dall'attributo o un valore di default
        return $this->attributes['icon_style'] ?? config('icons.default');
    }


    public function wallets()
    {
        return $this->hasMany(Wallet::class);
    }


    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    // protected function casts(): array
    // {
    //     return [
    //         'email_verified_at' => 'datetime',
    //         'password' => 'hashed',
    //     ];
    // }
}

#### Inizio File: /home/fabio/EGI/app/Models/Wallet.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Wallet extends Model
{
    use HasFactory;

    protected $fillable = [
        'collection_id',
        'user_id',
        'wallet',
        'royalty_mint',
        'royalty_rebind',
        'is_anonymous',
        'metadata',
    ];

    protected $casts = [
        'is_anonymous' => 'boolean',
        'metadata' => 'array',
    ];

    public function collection()
    {
        return $this->belongsTo(Collection::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }


}

#### Inizio File: /home/fabio/EGI/app/Models/WalletChangeApproval.php ####

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class WalletChangeApproval extends Model
{
    use HasFactory;

    /**
     * La tabella associata al modello.
     *
     * @var string
     */
    protected $table = 'wallet_change_approvals';

    /**
     * Gli attributi assegnabili in massa.
     *
     * @var array
     */
    protected $fillable = [
        'id',
        'wallet_id',
        'requested_by_user_id',
        'approver_user_id',
        'change_type',
        'change_details',
        'status',
        'type', // Nuovo campo
        'rejection_reason',
    ];

        /**
     * The accessors to append to the model's array form.
     *
     * @var array<int, string>
     */
    protected $appends = [
        'notification_id',
    ];

    /**
     * Gli attributi che devono essere castati.
     *
     * @var array
     */
    protected $casts = [
        'change_details' => 'array', // Il campo JSON viene automaticamente convertito in array
    ];

    /**
     * Relazione con il modello Wallet.
     */
    public function wallet()
    {
        return $this->belongsTo(Wallet::class);
    }

    /**
     * Relazione con il modello User per l'utente che ha richiesto la modifica.
     */
    public function requestedBy()
    {
        return $this->belongsTo(User::class, 'requested_by_user_id');
    }

    /**
     * Relazione con il modello User per l'utente che approva la modifica.
     */
    public function approver()
    {
        return $this->belongsTo(User::class, 'approver_user_id');
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/CollectionInvitationNotification.php ####

<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class CollectionInvitationNotification extends Notification
{
    protected $invitationId;

    public function __construct($invitationId)
    {
        $this->invitationId = $invitationId;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {
        return [
            'message' => 'You have been invited to join a team.',
            'invitation_id' => $this->invitationId,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/WalletChangeRequest.php ####

<?php

namespace App\Notifications;

use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;
use Illuminate\Support\Facades\Log;

class WalletChangeRequest extends Notification
{
    private $approval;

    public function __construct($approval)
    {
        $this->approval = $approval;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {

        Log::channel('florenceegi')->info('WalletChangeRequest:toDatabase', [
            'notifiable' => $notifiable
        ]);

        return [
            'message' => $this->approval->change_type === 'create'
                ? __('A new wallet has been proposed for you.')
                : __('A change has been requested for your wallet.'),
            'wallet_address' => $this->approval->change_details['wallet_address'],
            'royalty_mint' => $this->approval->change_details['royalty_mint'],
            'royalty_rebind' => $this->approval->change_details['royalty_rebind'],
            'wallet_change_approvals_id' => $this->approval->id,
            'requested_by' => $this->approval->requested_by_user_id,
            'type' => $this->approval->change_type, // Aggiunto per distinguere i tipi di notifica
            'status' => 'proposal', // Definisce questa notifica come una [proposta]
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Notifications/WalletChangeResponse.php ####

<?php


namespace App\Notifications;

use Illuminate\Notifications\Notification;
use Illuminate\Notifications\Messages\DatabaseMessage;

class WalletChangeResponse extends Notification
{
    private $approval;
    private $status;

    public function __construct($approval, $status)
    {
        $this->approval = $approval;
        $this->status = $status;
    }

    public function via($notifiable)
    {
        return ['database'];
    }

    public function toDatabase($notifiable)
    {
        return [
            'message' => $this->status === 'approved'
                ? __('Your wallet change has been approved.')
                : __('Your wallet change has been declined. Reason: ') . $this->approval->rejection_reason,
            'wallet_change_approvals_id' => $this->approval->id,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/CollectionPolicy.php ####

<?php

namespace App\Policies;

use App\Models\Collection;
use App\Models\User;
use Illuminate\Auth\Access\Response;

class CollectionPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Collection $collection): bool
    {
        return $user->can('read_collection');
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return $user->can('create_collection');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Collection $collection): bool
    {
        return $user->can('update_collection');
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Collection $collection): bool
    {
        return $user->can('delete_collection');
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, Collection $collection): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, Collection $collection): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/EgiPolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use Illuminate\Auth\Access\Response;

class EgiPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user): bool
    {
        return $user->can('read_egi');
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return $user->can('create_egi');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user): bool
    {
        return $user->can('update_egi');
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user): bool
    {
        return $user->can('delete_egi');
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/ProfilePolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use Illuminate\Auth\Access\Response;

class ProfilePolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, User $profileOwner)
    {
        return $user->id === $profileOwner->id;
    }
    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, User $model): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, User $model): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/TeamPolicy.php ####

<?php

namespace App\Policies;

use App\Models\Team;
use App\Models\User;
use Illuminate\Auth\Access\HandlesAuthorization;

class TeamPolicy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return true;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Team $team): bool
    {
        return $user->belongsToTeam($team);
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return true;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can add team members.
     */
    public function addTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can update team member permissions.
     */
    public function updateTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can remove team members.
     */
    public function removeTeamMember(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Team $team): bool
    {
        return $user->ownsTeam($team);
    }
}

#### Inizio File: /home/fabio/EGI/app/Policies/TeamWalletPolicy.php ####

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\TeamWallet as Wallet;
use Illuminate\Auth\Access\Response;

class TeamWalletPolicy
{
    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user): bool
    {
        return false;
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Wallet $wallet)
    {
        return $user->id === $wallet->user_id;
    }
    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, Wallet $wallet): bool
    {
        return false;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, Wallet $wallet): bool
    {
        return false;
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/AppServiceProvider.php ####

<?php

namespace App\Providers;


use App\Repositories\IconRepository;
use App\Services\FileStorageService;
use Illuminate\Support\ServiceProvider;


use App\Models\User;
use App\Models\TeamWallet as Wallet;
use App\Models\Collection;
use App\Models\Egi;
use App\Policies\ProfilePolicy;
use App\Policies\TeamWalletPolicy as WalletPolicy;
use App\Policies\CollectionPolicy;
use App\Policies\EgiPolicy;

class AppServiceProvider extends ServiceProvider
{

    protected $policies = [
        User::class => ProfilePolicy::class,
        Wallet::class => WalletPolicy::class,
        Collection::class => CollectionPolicy::class,
        // Egi::class => EgiPolicy::class,
    ];

    /**
     * Register any application services.
     */
    public function register(): void
    {
        $this->app->singleton(IconRepository::class);

        // Registra il servizio di storage dei file
        $this->app->singleton(FileStorageService::class, function () {
            return new FileStorageService();
        });
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/FileHelperServiceProvider.php ####

<?php


namespace App\Providers;

use App\Helpers\FileHelper;
use Illuminate\Support\ServiceProvider;

class FileHelperServiceProvider extends ServiceProvider
{
    public function register()
    {
        $this->app->singleton('file-helper', function () {
            return new FileHelper();
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/FortifyServiceProvider.php ####

<?php

namespace App\Providers;

use App\Actions\Fortify\CreateNewUser;
use App\Actions\Fortify\ResetUserPassword;
use App\Actions\Fortify\UpdateUserPassword;
use App\Actions\Fortify\UpdateUserProfileInformation;
use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Str;
use Laravel\Fortify\Fortify;

class FortifyServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        Fortify::createUsersUsing(CreateNewUser::class);
        Fortify::updateUserProfileInformationUsing(UpdateUserProfileInformation::class);
        Fortify::updateUserPasswordsUsing(UpdateUserPassword::class);
        Fortify::resetUserPasswordsUsing(ResetUserPassword::class);

        RateLimiter::for('login', function (Request $request) {
            $throttleKey = Str::transliterate(Str::lower($request->input(Fortify::username())).'|'.$request->ip());

            return Limit::perMinute(5)->by($throttleKey);
        });

        RateLimiter::for('two-factor', function (Request $request) {
            return Limit::perMinute(5)->by($request->session()->get('login.id'));
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/JetstreamServiceProvider.php ####

<?php

namespace App\Providers;

use App\Actions\Jetstream\AddTeamMember;
use App\Actions\Jetstream\CreateTeam;
use App\Actions\Jetstream\DeleteTeam;
use App\Actions\Jetstream\DeleteUser;
use App\Actions\Jetstream\InviteTeamMember;
use App\Actions\Jetstream\RemoveTeamMember;
use App\Actions\Jetstream\UpdateTeamName;
use Illuminate\Support\ServiceProvider;
use Laravel\Jetstream\Jetstream;

class JetstreamServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        $this->configurePermissions();

        Jetstream::createTeamsUsing(CreateTeam::class);
        Jetstream::updateTeamNamesUsing(UpdateTeamName::class);
        Jetstream::addTeamMembersUsing(AddTeamMember::class);
        Jetstream::inviteTeamMembersUsing(InviteTeamMember::class);
        Jetstream::removeTeamMembersUsing(RemoveTeamMember::class);
        Jetstream::deleteTeamsUsing(DeleteTeam::class);
        Jetstream::deleteUsersUsing(DeleteUser::class);
    }

    /**
     * Configure the roles and permissions that are available within the application.
     */
    protected function configurePermissions(): void
    {
        Jetstream::defaultApiTokenPermissions(['read']);

        Jetstream::role('admin', 'Administrator', [
            'create',
            'read',
            'update',
            'delete',
        ])->description('Administrator users can perform any action.');

        Jetstream::role('superadmin', 'SuperAdmin', [
            'read-config',
            'create-config',
            'update-config',
            'delete-config',
        ])->description('Ruolo amministrativo con accesso completo alle configurazioni.');

        Jetstream::role('editor', 'Editor', [
            'read',
            'create',
            'update',
        ])->description('Editor users have the ability to read, create, and update.');
    }
}

#### Inizio File: /home/fabio/EGI/app/Providers/ViewDebugServiceProvider.php ####

<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\View;

class ViewDebugServiceProvider extends ServiceProvider
{
    public function boot()
    {
        View::composer('*', function ($view) {
            $relativePath = str_replace(
                base_path('resources/views/') . '/',
                '',
                $view->getPath()
            );

            view()->share('__current_view_path', $relativePath);

            if (app()->environment('local')) {
                logger()->info('Current view: ' . $relativePath);
            }
        });
    }
}

#### Inizio File: /home/fabio/EGI/app/Repositories/IconRepository.php ####

<?php

namespace App\Repositories;

use App\Models\Icon;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Log;

class IconRepository
{
    /**
     * Recupera un'icona specifica dal database o dalla cache.
     *
     * @param string $name  Nome dell'icona.
     * @param string $style Stile dell'icona.
     * @param string|null $customClass Classe personalizzata (opzionale).
     * @return string|null  Contenuto HTML dell'icona.
     */
    public function getIcon(string $name, string $style, ?string $customClass = null): ?string
    {

        $this->clearCache($name, $style, $customClass);

        // Log::channel('florenceegi')->info( 'Class IconRepository. Method: getIcon. Action: customClass: (' . $customClass .  ') name: (' . $name .')');

        // Costruisce la chiave della cache
        $cacheKey = $this->buildCacheKey($name, $style, $customClass);
        // Log::channel('florenceegi')->info('Cache Key Generated', ['key' => $cacheKey, 'name' => $name, 'style' => $style, 'customClass' => $customClass]);

        // Controlla se l'elemento è già in cache
        $cachedValue = Cache::get($cacheKey);
        if ($cachedValue) {
            // Log::channel('florenceegi')->info('Cache Hit', ['key' => $cacheKey, 'cachedValue' => $cachedValue]);

            // Sostituisce il segnaposto %class% con la classe personalizzata o quella di default
            $finalClass = $customClass ?? 'default-class';
            $processedValue = str_replace('%class%', $finalClass, $cachedValue);
            // Log::channel('florenceegi')->info('Processed Cached Value', ['processedValue' => $processedValue, 'finalClass' => $finalClass]);

            return $processedValue;
        }

        // Cache miss: esegue la closure per calcolare il valore
        // Log::channel('florenceegi')->info('Class IconRepository. Method: getIcon. Action: Icon name', ['name' => $name]);

        return Cache::remember($cacheKey, 3600, function () use ($name, $style, $customClass) {
            // Log::channel('florenceegi')->info('Querying Database', ['name' => $name, 'style' => $style]);

            $query_icon = Icon::where('name', $name)->where('style', $style)->first();

            if (!$query_icon) {
                Log::channel('florenceegi')->warning('Class IconRepository. Method: getIcon. Action: Icon Not Found', ['name' => $name, 'style' => $style]);

                $fallback_icon = Icon::where('name', 'fallback')->where('style', $style)->first();

                if ($fallback_icon) {
                    return $fallback_icon->html;
                }

                return 'fallback'; // Puoi specificare un'icona di fallback
            }

            if ($customClass) {
                $finalClass = $customClass;
            } else {
                $finalClass = $query_icon->class;
            }

            // Log::channel('florenceegi')->info('Class IconRepository. Method: getIcon. Action: Processed', ['$finalClass' => $finalClass]);
            $processedHtml = str_replace('%class%', $finalClass, $query_icon->html);

            return $processedHtml;
        });
    }

    /**
     * Recupera un'icona con lo stile predefinito.
     *
     * @param string $name Nome dell'icona.
     * @return string      Contenuto HTML dell'icona (o fallback).
     */
    public function getDefaultIcon(string $name): string
    {
        $defaultStyle = config('icons.default');

        // Determina lo stile dell'utente autenticato
        if (Auth::check()) {
            $defaultStyle = Auth::user()->icon_style ?? $defaultStyle;
        }

        return $this->getIcon($name, $defaultStyle) ?? $this->getFallbackIcon();
    }


    /**
     * Recupera un'icona di fallback se quella richiesta non esiste.
     *
     * @return string Contenuto HTML dell'icona di fallback.
     */
    protected function getFallbackIcon(): string
    {
        return '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m2 0a2 2 0 00-2-2H9a2 2 0 00-2 2m8 0a2 2 0 01-2 2H9a2 2 0 01-2-2m6 0H9"></path>
                </svg>';
    }

    /**
     * Rimuove un'icona dalla cache.
     *
     * @param string|null $name  Nome dell'icona (opzionale).
     * @param string|null $style Stile dell'icona (opzionale).
     */
    public function clearCache(?string $name = null, ?string $style = null, ?string $customClass): void
    {
        if ($name && $style) {
            $cacheKey = $this->buildCacheKey($name, $style, $customClass);
            Cache::forget($cacheKey);
        } else {
            // Elimina tutte le icone dalla cache
            Cache::tags(['icons'])->flush();
        }
    }

    /**
     * Precarica tutte le icone in cache.
     */
    public function preloadIcons(): void
    {
        Icon::all()->each(function ($icon) {
            $cacheKey = $this->buildCacheKey($icon->name, $icon->style, $icon->customClass);
            Cache::put($cacheKey, $icon->html, 3600);
        });
    }

    /**
     * Costruisce la chiave della cache per un'icona.
     *
     * @param string $name  Nome dell'icona.
     * @param string $style Stile dell'icona.
     * @return string Chiave della cache.
     */
    protected function buildCacheKey(string $name, string $style, ?string $customClass = null): string
    {
        // Usa un hash per evitare che la chiave sia troppo lunga
        $rawKey = "icon:{$style}:{$name}:{$customClass}";
        return 'icon:' . md5($rawKey);
    }

}

#### Inizio File: /home/fabio/EGI/app/Services/EGIImageService.php ####

<?php

namespace App\Services;

use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class EGIImageService
{
    /**
     * Elimina tutti i file che iniziano con $prefix in $pathKey, su tutti i servizi attivi.
     */
    public static function removeOldImage(string $prefix, int $collectionId, string $pathKey): bool
    {
        $activeHostings = static::getActiveHostings();
        $folderPath = static::resolveFolderPath($pathKey, $collectionId);

        foreach ($activeHostings as $hostingName => $hostingConfig) {
            try {
                $disk = Storage::disk($hostingConfig['disk']);
                $files = $disk->files($folderPath);

                foreach ($files as $file) {
                    // Str::startsWith serve a controllare se il filename inizia col prefisso
                    if (Str::startsWith(basename($file), $prefix)) {
                        $disk->delete($file);
                    }
                }
            } catch (\Exception $e) {
                Log::channel('florenceegi')->error('Errore durante la rimozione del vecchio file', [
                    'error'        => $e->getMessage(),
                    'prefix'       => $prefix,
                    'collectionId' => $collectionId,
                    'pathKey'      => $pathKey,
                ]);
                return false;
            }
        }

        return true;
    }

    /**
     * Salva il file $filename sul disco di tutti i servizi attivi.
     * Ritorna true se almeno un caricamento va a buon fine.
     */
    public static function saveEGIImage(
        int $collectionId,
        string $filename,
        $file,
        string $pathKey
    ): bool {
        $activeHostings = static::getActiveHostings();
        $folderPath = static::resolveFolderPath($pathKey, $collectionId);

        $atLeastOneSuccess = false;

        foreach ($activeHostings as $hostingName => $hostingConfig) {
            try {
                $disk = Storage::disk($hostingConfig['disk']);
                // Invece di costruire manualmente il filePath e fare file_get_contents,
                // usiamo putFileAs(), che si occupa di caricare il file correttamente.
                $disk->putFileAs($folderPath, $file, $filename);

                $atLeastOneSuccess = true;
            } catch (\Exception $e) {
                Log::channel('florenceegi')->error('Errore salvataggio immagine EGI', [
                    'error'        => $e->getMessage(),
                    'filename'     => $filename,
                    'collectionId' => $collectionId,
                    'hosting'      => $hostingName,
                ]);
            }
        }

        return $atLeastOneSuccess;
    }


    /**
     * Ritorna l'URL (o percorso) dal caching; se non presente in cache, lo costruisce e lo salva.
     */
    public static function getCachedEGIImagePath(
        int $collectionId,
        string $filename,
        bool $isPublished,
        ?string $hostingService = null,
        string $pathKey = 'head.banner'
    ): ?string {
        if (!$filename) {
            return null;
        }

        // Creiamo una chiave univoca per la cache
        $cacheKey = "EGIImagePath_{$collectionId}_{$filename}_{$hostingService}";

        return Cache::remember($cacheKey, now()->addDay(), function () use (
            $collectionId, $filename, $pathKey, $hostingService, $isPublished
        ) {
            // Se non c'è hostingService, usa quello predefinito
            $hostingToUse = $hostingService ?: static::getDefaultHosting();

            // Ottieni i dettagli dell'hosting
            $hostingConfig = config("paths.hosting.$hostingToUse");
            if (!$hostingConfig) {
                return null;
            }

            $folderPath = static::resolveFolderPath($pathKey, $collectionId);

            $baseUrl = rtrim($hostingConfig['url'], '/');
            $fullUrl = "{$baseUrl}/{$folderPath}{$filename}";

            // Se l'EGI non è pubblicato, potresti gestire un placeholder o simile
            if (!$isPublished) {
                // Esempio, potresti loggare o ritornare un'immagine placeholder
            }

            return $fullUrl;
        });
    }

    /**
     * Invalida la cache per un certo file.
     */
    public static function invalidateEGIImageCache(
        int $collectionId,
        string $filename,
        ?string $hostingService = null
    ): void {
        $cacheKey = "EGIImagePath_{$collectionId}_{$filename}_{$hostingService}";
        Cache::forget($cacheKey);
    }


    /**
     * Recupera i soli hosting con 'is_active' => true
     */
    protected static function getActiveHostings(): array
    {
        $allHostings = config('paths.hosting', []);
        return array_filter($allHostings, fn($hosting) => $hosting['is_active'] === true);
    }

    /**
     * Restituisce il nome dell'hosting di default (es. "Local") o "Digital Ocean".
     */
    protected static function getDefaultHosting(): string
    {
        $default = config('paths.default_hosting', 'Local');
        return $default;
    }

    /**
     * Risolve la path prendendola da config('paths.paths') e sostituendo {collectionId}.
     */
    protected static function resolveFolderPath(string $pathKey, int $collectionId): string
    {
        $keys = explode('.', $pathKey);
        $pathsConfig = config('paths.paths', []);

        $current = $pathsConfig;
        foreach ($keys as $key) {
            if (!isset($current[$key])) {
                return '';
            }
            $current = $current[$key];
        }

        // Ora $current è una stringa che contiene "{collectionId}"
        return str_replace('{collectionId}', $collectionId, $current);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/FileStorageService.php ####

<?php

namespace App\Services;

use Illuminate\Support\Facades\Log;
use Livewire\WithFileUploads;
use Exception;
use Illuminate\Support\Facades\Storage;
use App\Models\Collection;

class FileStorageService
{
    use WithFileUploads; // Necessario per sfruttare le funzionalità di Livewire

    /**
     * Salva un file Livewire in una posizione specifica e aggiorna il percorso nel database.
     *
     * @param \Livewire\TemporaryUploadedFile $file
     * @param mixed $file
     * @param string $filename
     * @param string $disk
     * @param int $collectionId
     * @param string $imageType
     * @return string
     * @throws Exception
     */
    public function saveFile($file, string $path, ?string $filename = null, string $disk = 'public', int $collectionId, string $imageType): string
    {
        try {
            // Usa storeAs per salvare il file
            if ($filename) {
                $savedPath = $file->storeAs($path, $filename, $disk);
            } else {
                $savedPath = $file->store($path, $disk);
            }

            Log::channel('florenceegi')->info('File salvato:', ['path' => $savedPath]);

            // Verifica se il file esiste usando il disco passato
            if (!Storage::disk($disk)->exists($savedPath)) {
                Log::channel('florenceegi')->error('File non trovato dopo storeAs.', ['path' => $savedPath]);
                throw new Exception('Errore durante il salvataggio del file.');
            }

            // Aggiorna il percorso nel database
            $this->updateCollectionImagePath($collectionId, $savedPath, $imageType);

            return $savedPath; // Restituisce il percorso relativo
        } catch (Exception $e) {
            Log::channel('florenceegi')->error('Errore nel salvataggio del file:', ['message' => $e->getMessage()]);
            throw $e;
        }
    }

    /**
     * Aggiorna il percorso dell'immagine nella tabella collections.
     *
     * @param int $collectionId
     * @param string $savedPath
     * @param string $imageType
     * @throws Exception
     */
    protected function updateCollectionImagePath(int $collectionId, string $savedPath, string $imageType): void
    {
        $collection = Collection::findOrFail($collectionId);

        switch ($imageType) {
            case 'banner':
                $collection->path_image_banner = $savedPath;
                break;
            case 'card':
                $collection->path_image_card = $savedPath;
                break;
            case 'avatar':
                $collection->path_image_avatar = $savedPath;
                break;
            case 'EGI':
                $collection->path_image_EGI = $savedPath;
                break;
            default:
                throw new Exception("Tipo di immagine non supportato: $imageType");
        }

        $collection->save();

        Log::channel('florenceegi')->info('Percorso immagine aggiornato nel database.', [
            'collection_id' => $collectionId,
            'image_type' => $imageType,
            'path' => $savedPath,
        ]);
    }
}


#### Inizio File: /home/fabio/EGI/app/Services/Menu/ContextMenus.php ####

<?php

namespace App\Services\Menu;

use App\Services\Menu\Items\PermissionsRolesMenu;
use App\Services\Menu\Items\AssignRolesMenu;
use App\Services\Menu\Items\AssignPermissionsMenu;
use App\Services\Menu\Items\OpenCollectionMenu;
use App\Services\Menu\Items\NewCollectionMenu;

class ContextMenus
{
    public static function getMenusForContext(string $context): array
    {
        $menus = [];

        switch ($context) {
            case 'dashboard':
                $adminMenu = new MenuGroup('Admin Tools', '<i class="fas fa-tools"></i>', [
                    new PermissionsRolesMenu(),
                    new AssignRolesMenu(),
                    new AssignPermissionsMenu(),
                ]);
                $menus[] = $adminMenu;

                $collectionsMenu = new MenuGroup('Collections', '<i class="fas fa-folder-open"></i>', [
                    new OpenCollectionMenu(),
                    new NewCollectionMenu(),
                ]);
                $menus[] = $collectionsMenu;

                break;

            case 'collections':
                $collectionsMenu = new MenuGroup('Collections', '<i class="fas fa-folder-open"></i>', [
                    new OpenCollectionMenu(),
                    new NewCollectionMenu(),
                ]);
                $menus[] = $collectionsMenu;
                break;

            default:
                $defaultMenu = new MenuGroup('General', '<i class="fas fa-cogs"></i>', []);
                $menus[] = $defaultMenu;
                break;
        }

        return $menus;
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/AssignPermissionsMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class AssignPermissionsMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Assign Permissions', 'admin.assign.permissions.form', 'assign_permissions', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/AssignRolesMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class AssignRolesMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Assign Roles', 'admin.assign.role.form', 'assign_roles', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/BackToDashboardMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class BackToDashboardMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Back to Dashboard', 'dashboard', 'back', 'view_dashboard');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/NewCollectionMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class NewCollectionMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('New Collection', 'collections.create', 'new_collection', 'create_collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/OpenCollectionMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class OpenCollectionMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Open Collection', 'collections.open', 'open', 'view_collection');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/Items/PermissionsRolesMenu.php ####

<?php

namespace App\Services\Menu\Items;

use App\Services\Menu\MenuItem;

class PermissionsRolesMenu extends MenuItem
{
    public function __construct()
    {
        parent::__construct('Permissions & Roles', 'admin.roles.index', 'permissions_roles', 'manage_roles');
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuConditionEvaluator.php ####

<?php

namespace App\Services\Menu;

use Illuminate\Support\Facades\Auth;

class MenuConditionEvaluator
{
    /**
     * Verifica se una voce di menu può essere visualizzata in base ai permessi dell'utente.
     *
     * @param MenuItem $menuItem
     * @return bool
     */
    public function shouldDisplay(MenuItem $menuItem): bool
    {

        // dump([
        //     'item' => $menuItem->name,
        //     'permission' => $menuItem->permission,
        //     'user' => Auth::check() ? Auth::user()->toArray() : null,
        //     'can' => Auth::check() && Auth::user()->can($menuItem->permission),
        // ]);

        // Se non è richiesto un permesso specifico, mostra la voce di menu
        if (empty($menuItem->permission)) {
            return true;
        }

        // Controlla se l'utente autenticato ha il permesso richiesto
        return Auth::check() && Auth::user()->can($menuItem->permission);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuGroup.php ####

<?php

namespace App\Services\Menu;

class MenuGroup
{
    public string $name;
    public ?string $icon;
    public array $items;

    public function __construct(string $name, ?string $icon = null, array $items = [])
    {
        $this->name = $name;
        $this->icon = $icon;
        $this->items = $items;
    }

    /**
     * Aggiunge un item al menu.
     *
     * @param MenuItem $item
     */
    public function addItem(MenuItem $item): void
    {
        $this->items[] = $item;
    }

    /**
     * Verifica se il menu ha item visibili.
     *
     * @return bool
     */
    public function hasVisibleItems(): bool
    {
        return !empty($this->items);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuItem.php ####

<?php

namespace App\Services\Menu;

class MenuItem
{
    public string $name;
    public string $route;
    public ?string $icon;
    public ?string $permission;
    /** @var MenuItem[]|null */
    public ?array $children;

    public function __construct(
        string $name,
        string $route,
        ?string $icon = null,
        ?string $permission = null,
        ?array $children = null
    ) {
        $this->name = $name;
        $this->route = $route;
        $this->icon = $icon;
        $this->permission = $permission;
        $this->children = $children;
    }

    public function hasChildren(): bool
    {
        return !empty($this->children);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Menu/MenuScanner.php ####

<?php

namespace App\Services\Menu;

use Illuminate\Support\Facades\File;

class MenuScanner
{
    protected string $itemsPath = 'app/Services/Menu/Items';

    /**
     * @return array<string, MenuItem[]>
     *
     * Restituisce un array associativo con chiave = contesto, valore = array di MenuItem
     */
    public function getMenuGroups(): array
    {
        // Supponiamo che le classi menu abbiano dei naming convention tipo: Admin*, Dashboard*, Collections*, ...
        // O che magari tu abbia un metodo più intelligente per capire il contesto.
        // Qui ipotizziamo di fare i raggruppamenti in base alle route: per esempio route 'admin.xxx' => 'admin'

        // Per semplicità, immaginiamo che il metodo seguente esista o lo implementi tu:
        // loadAllMenuItems(): ritorna un array di istanze MenuItem caricate dinamicamente
        $allItems = $this->loadAllMenuItems();

        $groups = [];
        foreach ($allItems as $item) {
            // Estraiamo il contesto dalla route
            $context = explode('.', $item->route)[0] ?? 'dashboard';
            $groups[$context][] = $item;
        }

        return $groups;
    }

    protected function loadAllMenuItems(): array
    {
        $items = [];
        // Carica tutte le classi in app/Services/Menu/Items
        $files = File::files(base_path($this->itemsPath));
        foreach ($files as $file) {
            $className = 'App\\Services\\Menu\\Items\\' . $file->getFilenameWithoutExtension();
            if (class_exists($className)) {
                $instance = new $className();
                if ($instance instanceof MenuItem) {
                    $items[] = $instance;
                }
            }
        }
        return $items;
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/InvitationNotificationHandler.php ####

<?php


namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;
use Illuminate\Notifications\DatabaseNotification;
use App\Models\CollectionInvitation;
use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;

class InvitationNotificationHandler implements NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action)
    {
        $invitationId = $notification->data['invitation_id'];

        if ($action === 'accept') {
            $invitation = CollectionInvitation::findOrFail($invitationId);
            $invitation->update(['status' => 'accepted']);

            CollectionUser::create([
                'collection_id' => $invitation->collection_id,
                'user_id' => Auth::id(),
                'role' => $invitation->role,
            ]);

            $notification->update(['outcome' => 'accepted']);
        } elseif ($action === 'decline') {
            $invitation = CollectionInvitation::findOrFail($invitationId);
            $invitation->update(['status' => 'declined']);

            $notification->update(['outcome' => 'declined']);
        } else {
            throw new \Exception("Azione '{$action}' non supportata per InvitationNotification.");
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/NotificationHandlerFactory.php ####

<?php

namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;

class NotificationHandlerFactory
{
    public static function getHandler(string $type): NotificationHandlerInterface
    {
        $handlers = [
            'App\Notifications\WalletChangeRequest' => WalletChangeRequestHandler::class,
            'App\Notifications\InvitationNotification' => InvitationNotificationHandler::class,
        ];

        if (!isset($handlers[$type])) {
            throw new \Exception("Gestore per il tipo '{$type}' non trovato.");
        }

        return app($handlers[$type]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Notifications/WalletChangeRequestHandler.php ####

<?php

namespace App\Services\Notifications;

use App\Contracts\NotificationHandlerInterface;
use Illuminate\Notifications\DatabaseNotification;
use App\Models\WalletChangeApproval;

class WalletChangeRequestHandler implements NotificationHandlerInterface
{
    public function handle(DatabaseNotification $notification, string $action)
    {
        $approvalId = $notification->data['approval_id'];

        if ($action === 'accept') {
            // Logica per approvare
            WalletChangeApproval::findOrFail($approvalId)->update(['status' => 'approved']);
            $notification->update(['outcome' => 'accepted']);
        } elseif ($action === 'decline') {
            // Logica per declinare
            WalletChangeApproval::findOrFail($approvalId)->update(['status' => 'declined']);
            $notification->update(['outcome' => 'declined']);
        } else {
            throw new \Exception("Azione '{$action}' non supportata per WalletChangeRequest.");
        }
    }
}


#### Inizio File: /home/fabio/EGI/app/Services/Proposals/Handlers/WalletProposalHandler.php ####

<?php

namespace App\Services\Proposals\Handlers;

use App\Contracts\ProposalHandlerInterface;
use App\Models\WalletChangeApproval;
use App\Notifications\ProposalDeclinedNotification;
use Exception;

class WalletProposalHandler implements ProposalHandlerInterface
{
    /**
     * Gestisce il declino di una proposta di modifica del wallet.
     *
     * @param int $proposalId
     * @param string $reason
     * @return void
     * @throws Exception
     */
    public function decline(int $proposalId, string $reason): void
    {
        $proposal = WalletChangeApproval::findOrFail($proposalId);

        if ($proposal->status !== 'pending') {
            throw new Exception("The proposal is not in a pending state.");
        }

        // Aggiorna lo stato della proposta e aggiunge la motivazione
        $proposal->update([
            'status' => 'declined',
            'rejection_reason' => $reason,
        ]);

        // Invia una notifica al proponente
        $proposal->requestedBy->notify(
            new ProposalDeclinedNotification($proposal, $reason)
        );
    }
}

#### Inizio File: /home/fabio/EGI/app/Services/Proposals/ProposalHandlerFactory.php ####

<?php

namespace App\Services\Proposals;

use App\Contracts\ProposalHandlerInterface;
use Exception;

class ProposalHandlerFactory
{
    /**
     * Restituisce il gestore appropriato in base al contesto.
     *
     * @param string $context
     * @return ProposalHandlerInterface
     * @throws Exception
     */
    public function getHandler(string $context): ProposalHandlerInterface
    {
        $handlers = [
            'wallet' => \App\Services\Proposals\Handlers\WalletProposalHandler::class,
            'invitation' => \App\Services\Proposals\Handlers\InvitationProposalHandler::class,
            // Aggiungere altri handler qui
        ];

        if (!isset($handlers[$context])) {
            throw new Exception("Handler for context '{$context}' not found.");
        }

        return app($handlers[$context]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasCreateDefaultCollectionWallets.php ####

<?php

namespace App\Traits;

use App\Models\Collection;
use App\Models\Wallet;
use Illuminate\Support\Facades\DB;

trait HasCreateDefaultCollectionWallets
{
    /**
     * Genera i wallet di default per una collection.
     *
     * @param  Collection  $collection
     * @param  string  $wallet_creator
     */
    public function generateDefaultWallets(Collection $collection, string $wallet_creator, $creator_id): void
    {
        $natan_wallet_address = config('app.natan_wallet_address');
        $natan_royalty_mint = config('app.natan_royalty_mint');
        $natan_royalty_rebind = config('app.natan_royalty_rebind');
        $mediator_royalty_mint = config('app.mediator_royalty_mint');
        $mediator_royalty_rebind = config('app.mediator_royalty_rebind');
        $epp_wallet_address = config('app.epp_wallet_address');
        $epp_royalty_mint = config('app.epp_royalty_mint');
        $epp_royalty_rebind = config('app.epp_royalty_rebind');
        $creator_royalty_mint = config('app.creator_royalty_mint');
        $creator_royalty_rebind = config('app.creator_royalty_rebind');
        $natan_id = config('app.natan_id');
        $epp_id = config('app.epp_id');

        DB::transaction(function () use (
            $collection,
            $natan_wallet_address,
            $natan_royalty_mint,
            $natan_royalty_rebind,
            $mediator_royalty_mint,
            $mediator_royalty_rebind,
            $epp_wallet_address,
            $epp_royalty_mint,
            $epp_royalty_rebind,
            $wallet_creator,
            $creator_royalty_mint,
            $creator_royalty_rebind,
            $natan_id,
            $epp_id,
            $creator_id
        ) {
            // Wallet per natan
            $this->createWallet('natan', $natan_wallet_address, $natan_royalty_mint, $natan_royalty_rebind, $collection, $natan_id);

            // Wallet per il Mediator (di default uguale a natan)
            // PER IL MOMENTO NON GESTITO
            // $this->createWallet('Mediator', $natan_wallet_address, $mediator_royalty_mint, $mediator_royalty_rebind, $collection);

            // Wallet per EPP
            $this->createWallet('EPP', $epp_wallet_address, $epp_royalty_mint, $epp_royalty_rebind, $collection, $epp_id);

            // Wallet per il Creator
            $this->createWallet('Creator', $wallet_creator, $creator_royalty_mint, $creator_royalty_rebind, $collection, $creator_id);
        });
    }

    /**
     * Crea un wallet per una collection.
     *
     * @param  string  $role
     * @param  string  $address
     * @param  string  $royalty_mint
     * @param  string  $royalty_rebind
     * @param  Collection  $collection
     */
    protected function createWallet(string $role, string $address, string $royalty_mint, string $royalty_rebind, Collection $collection, $id): void
    {
        Wallet::create([
            'collection_id' => $collection->id,
            'user_id' => $id,
            'platform_role' => $role,
            'wallet' => $address,
            'royalty_mint' => $royalty_mint,
            'royalty_rebind' => $royalty_rebind,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasPermissionTrait.php ####

<?php

namespace App\Traits;

use App\Models\CollectionUser;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Spatie\Permission\Models\Role;

trait HasPermissionTrait
{
    /**
     * Verifica se l'utente autenticato ha il permesso specificato per una collezione.
     *
     * @param  $collection
     * @param  string  $permission
     * @return bool
     * @throws \Illuminate\Auth\Access\AuthorizationException
     */
    public function hasPermission($collection, string $permission): bool
    {
        // Recupera l'utente autenticato
        $user = Auth::user();

        Log::channel('florenceegi')->info('HasPermissionTraits: User: ' . $user->id);

        // Leggi il ruolo dell'utente nella tabella collection_user
        $roleName = $collection->users()
            ->where('user_id', $user->id)
            ->pluck('role')
            ->first();

            Log::channel('florenceegi')->info('HasPermissionTraits: Debug Info', [
                'User ID' => $user->id,
                'Collection ID' => $collection->id,
                'Role Name' => $roleName
            ]);

        if (!$roleName) {
            // Lancia un'eccezione se l'utente non è associato alla collezione
            throw new \Illuminate\Auth\Access\AuthorizationException('user id: '. $user->name . ' '. $user->last_name.  ' Non sei associato a questa collezione.');
        }

        // Verifica se il ruolo dell'utente ha il permesso richiesto
        $hasPermission = Role::where('name', $roleName)
            ->whereHas('permissions', function ($query) use ($permission) {
                $query->where('name', $permission);
            })
            ->exists();

        if (!$hasPermission) {
            // Lancia un'eccezione se il permesso non è presente
            throw new \Illuminate\Auth\Access\AuthorizationException('Non hai i permessi necessari per eseguire questa azione.');
        }

        return true;
    }

    public function userHasPermissionInCollection($collectionId, $permission)
    {
        $userId = Auth::id();

        // Recupera il ruolo dell'utente nella collection
        $role = CollectionUser::where('collection_id', $collectionId)
            ->where('user_id', $userId)
            ->pluck('role')
            ->first();

        // Verifica se il ruolo ha il permesso specifico
        return Role::where('name', $role)
            ->whereHas('permissions', function ($query) use ($permission) {
                $query->where('name', $permission);
            })
            ->exists();
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasTeamRoles.php ####

<?php

namespace App\Traits;

use Spatie\Permission\Traits\HasRoles;

trait HasTeamRoles
{
    use HasRoles;

    /**
     * Assegna un ruolo all'utente in un contesto di team specifico.
     */
    public function assignRoleToTeam(string $role, $team)
    {
        $this->assignRole($role, $team);
    }

    /**
     * Verifica se l'utente ha un ruolo specifico in un team.
     */
    public function hasRoleInTeam(string $role, $team): bool
    {
        return $this->hasRole($role, $team);
    }

    /**
     * Relazione con i ruoli assegnati in un contesto di team.
     */
    public function roles()
    {
        return $this->morphToMany(
            config('permission.models.role'),
            'model',
            config('permission.table_names.model_has_roles'),
            'model_id',
            'role_id'
        )->withPivot('team_id');
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasTeams.php ####

<?php

namespace Laravel\Jetstream;

use Illuminate\Support\Str;
use Laravel\Sanctum\HasApiTokens;

trait HasTeams
{
    /**
     * Determine if the given team is the current team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function isCurrentTeam($team)
    {
        return $team->id === $this->currentTeam->id;
    }

    /**
     * Get the current team of the user's context.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function currentTeam()
    {
        if (is_null($this->current_team_id) && $this->id) {
            $this->switchTeam($this->personalTeam());
        }

        return $this->belongsTo(Jetstream::teamModel(), 'current_team_id');
    }

    /**
     * Switch the user's context to the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function switchTeam($team)
    {
        if (! $this->belongsToTeam($team)) {
            return false;
        }

        $this->forceFill([
            'current_team_id' => $team->id,
        ])->save();

        $this->setRelation('currentTeam', $team);

        return true;
    }

    /**
     * Get all of the teams the user owns or belongs to.
     *
     * @return \Illuminate\Support\Collection
     */
    public function allTeams()
    {
        return $this->ownedTeams->merge($this->teams)->sortBy('name');
    }

    /**
     * Get all of the teams the user owns.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function ownedTeams()
    {
        return $this->hasMany(Jetstream::teamModel());
    }

    /**
     * Get all of the teams the user belongs to.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function teams()
    {
        return $this->belongsToMany(Jetstream::teamModel(), Jetstream::membershipModel())
                        ->withPivot('role')
                        ->withTimestamps()
                        ->as('membership');
    }

    /**
     * Get the user's "personal" team.
     *
     * @return \App\Models\Team
     */
    public function personalTeam()
    {
        return $this->ownedTeams->where('personal_team', true)->first();
    }

    /**
     * Determine if the user owns the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function ownsTeam($team)
    {
        if (is_null($team)) {
            return false;
        }

        return $this->id == $team->{$this->getForeignKey()};
    }

    /**
     * Determine if the user belongs to the given team.
     *
     * @param  mixed  $team
     * @return bool
     */
    public function belongsToTeam($team)
    {
        if (is_null($team)) {
            return false;
        }

        return $this->ownsTeam($team) || $this->teams->contains(function ($t) use ($team) {
            return $t->id === $team->id;
        });
    }

    /**
     * Get the role that the user has on the team.
     *
     * @param  mixed  $team
     * @return \Laravel\Jetstream\Role|null
     */
    public function teamRole($team)
    {
        if ($this->ownsTeam($team)) {
            return new OwnerRole;
        }

        if (! $this->belongsToTeam($team)) {
            return;
        }

        $role = $team->users
            ->where('id', $this->id)
            ->first()
            ->membership
            ->role;

        return $role ? Jetstream::findRole($role) : null;
    }

    /**
     * Determine if the user has the given role on the given team.
     *
     * @param  mixed  $team
     * @param  string  $role
     * @return bool
     */
    public function hasTeamRole($team, string $role)
    {
        if ($this->ownsTeam($team)) {
            return true;
        }

        return $this->belongsToTeam($team) && optional(Jetstream::findRole($team->users->where(
            'id', $this->id
        )->first()->membership->role))->key === $role;
    }

    /**
     * Get the user's permissions for the given team.
     *
     * @param  mixed  $team
     * @return array
     */
    public function teamPermissions($team)
    {
        if ($this->ownsTeam($team)) {
            return ['*'];
        }

        if (! $this->belongsToTeam($team)) {
            return [];
        }

        return (array) optional($this->teamRole($team))->permissions;
    }

    /**
     * Determine if the user has the given permission on the given team.
     *
     * @param  mixed  $team
     * @param  string  $permission
     * @return bool
     */
    public function hasTeamPermission($team, string $permission)
    {
        if ($this->ownsTeam($team)) {
            return true;
        }

        if (! $this->belongsToTeam($team)) {
            return false;
        }

        if (in_array(HasApiTokens::class, class_uses_recursive($this)) &&
            ! $this->tokenCan($permission) &&
            $this->currentAccessToken() !== null) {
            return false;
        }

        $permissions = $this->teamPermissions($team);

        return in_array($permission, $permissions) ||
               in_array('*', $permissions) ||
               (Str::endsWith($permission, ':create') && in_array('*:create', $permissions)) ||
               (Str::endsWith($permission, ':update') && in_array('*:update', $permissions));
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/HasUtilitys.php ####

<?php

namespace App\Traits;

use App\Exceptions\ErrorDispatcher;
use App\Exceptions\ErrorResult;
use App\Mail\ErrorOccurredMailable;
use App\Services\TestingConditionsManager;
use Defuse\Crypto\Crypto;
use Defuse\Crypto\Exception\BadFormatException;
use Defuse\Crypto\Exception\EnvironmentIsBrokenException;
use Defuse\Crypto\Exception\WrongKeyOrModifiedCiphertextException;
use Defuse\Crypto\Key;
use Exception;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Cookie;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Storage;

trait HasUtilitys
{
    /**
     * Get the disk that profile photos should be stored on.
     */
    protected function folderRoot(): string
    {
        return isset($_ENV['FOLDER_ROOT']) ? $_ENV['FOLDER_ROOT'] : 'storage';
    }

    /**
     * Encrypt and decrypt
     *
     * @author Nazmul Ahsan <n.mukto@gmail.com>
     *
     * @link http://nazmulahsan.me/simple-two-way-function-encrypt-decrypt-string
     *
     * @param  string  $string  string to be encrypted/decrypted
     * @param  string  $action  what to do with this? e for encrypt, d for decrypt
     */
    public function my_simple_crypt($string, $action = 'e'): bool|string
    {
        // you may change these values to your own
        $secret_key = 'my_simple_secret_key';
        $secret_iv = 'my_simple_secret_iv';

        $output = false;
        $encrypt_method = 'AES-256-CBC';
        $key = hash('sha256', $secret_key);
        $iv = substr(hash('sha256', $secret_iv), 0, 16);

        if ($action == 'e') {
            $output = base64_encode(openssl_encrypt($string, $encrypt_method, $key, 0, $iv));
        } elseif ($action == 'd') {
            $output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
        }

        return $output;
    }

    /**
     * Cripta o decripta una stringa utilizzando la chiave di crittografia fornita.
     *
     * @param  string  $string  La stringa da criptare o decriptare.
     * @param  string  $action  L'azione da eseguire: 'e' per criptare, 'd' per decriptare.
     * @return bool|string Restituisce la stringa criptata/decriptata o false in caso di errore.
     *
     * @throws EnvironmentIsBrokenException Se l'ambiente di esecuzione non supporta la crittografia sicura.
     * @throws BadFormatException Se la chiave fornita ha un formato errato.
     * @throws WrongKeyOrModifiedCiphertextException Se la chiave fornita non è valida o se la stringa criptata è stata modificata.
     *
     * Note: Assicurarsi di non perdere la chiave di crittografia. Senza di essa, non sarà possibile decriptare i dati.
     */
    public function my_advanced_crypt($string, $action = 'e'): bool|string
    {

        if (empty($string) || empty($action) || $string == null || $action == null) {
            return false;
        }

        // Utilizza una chiave esistente dalla sua rappresentazione ASCII safe
        $key_ascii = config('app.data_crypto_key');  // Recupera questa chiave da un posto sicuro (es. .env)

        try {

            $key = Key::loadFromAsciiSafeString($key_ascii);

        } catch (BadFormatException $e) {

            $yourErrorDetails = [
                'Error' => 'Error n. 0001.',
                'Trait' => 'HasUtility',
                'Method' => 'my_advanced_crypt',
                'Situation' => $e->getMessage(),
                'SystemError' => $e->getCode(),
            ];

            Log::channel('upload')->error(json_encode($yourErrorDetails));

            return false;
        }

        if ($action == 'e') {

            try {

                return Crypto::encrypt($string, $key);

            } catch (EnvironmentIsBrokenException|Exception $e) {
                // Questa eccezione si verifica se l'ambiente di esecuzione non è sicuro.
                Log::channel('upload')->error(json_encode([
                    'message' => $e->getMessage(),
                    'code' => $e->getCode()
                ]));
                return false;
            }

        } elseif ($action == 'd') {

            try {

                return Crypto::decrypt($string, $key);

            } catch (WrongKeyOrModifiedCiphertextException|EnvironmentIsBrokenException|Exception $e) {
                Log::channel('upload')->error(json_encode([
                    'message' => $e->getMessage(),
                    'code' => $e->getCode()
                    ]));
                return false;
            }
        }

        return false;
    }

    /**
     * Get the disk that profile photos should be stored on.
     */
    protected function defProfilePhotoDisk(): string
    {
        return isset($_ENV['VAPOR_ARTIFACT_NAME']) ? 's3' : config('jetstream.profile_photo_disk', 'public');
    }

    public function formatPriceInAlgo(int $amount): string
    {
        return number_format($amount, 2, '.', ',').' Algo';
    }

    /**
     * Format the size in megabytes.
     *
     * @param  int  $sizeInBytes  The size in bytes to be formatted.
     * @return string The formatted size in megabytes.
     */
    public function formatSizeInMegabytes(int $sizeInBytes): string
    {
        $megabytes = $sizeInBytes / (1024 * 1024);

        return number_format($megabytes, 2).' MB';
    }

    /**
     * Gestisce e aggiorna la lingua dell'utente basata sulla lingua locale.
     *
     * 1. Legge la lingua locale.
     * 2. Aggiorna la lingua nella sessione.
     * 3. Imposta un cookie per conservare le preferenze di lingua dell'utente per 30 giorni.
     *
     * @return string Ritorna la lingua attualmente impostata.
     */
    public function languageHandling(): string
    {
        // 1. Legge la lingua locale.
        $language = App::getLocale();

        // 2. Aggiorna la lingua nella sessione.
        session()->put('locale', $language);

        // 3. Imposta un cookie per conservare le preferenze di lingua dell'utente.
        // (Nota: è importante gestire il consenso dell'utente per i cookie in conformità con il GDPR)
        Cookie::queue('language', $language, 60 * 24 * 30); // Il cookie scade dopo 30 giorni.

        return $language;
    }

    /**
     * Send an error email.
     *
     * @param  array  $yourErrorDetails  Details of the error to be sent.
     * @param  string|null  $emailAddress  Optional email address to send the error to.
     * @return bool Returns true if the email is sent successfully and false if not.
     */
    public function sendErrorEmail(array $yourErrorDetails, ?string $emailAddress = null): bool
    {
        if ($emailAddress === null) {
            $emailAddress = config('app.errors_email');
        }

        try {
            Mail::to($emailAddress)->send(new ErrorOccurredMailable($yourErrorDetails));

            // L'e-mail è stata inviata con successo
            return true;

        } catch (\Exception $e) {

            // L'e-mail non è stata inviata
            $yourErrorDetails = [
                'error' => 'Error n. 999.',
                'Trait' => 'HasUtility',
                'method' => 'sendErrorEmail',  // nome del metodo corretto
                'situation' => $e->getMessage(),
            ];
            Log::channel('nft_transaction')->error(json_encode($yourErrorDetails));

            return false;
        }
    }

    private function generateFakeAlgorandAddress(): string
    {
        $characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        $address = '';
        for ($i = 0; $i < 36; $i++) {
            $address .= $characters[rand(0, strlen($characters) - 1)];
        }

        return $address;
    }

    /**
     * Verifica l'esistenza di una directory e ne garantisce i permessi corretti.
     *
     * Questa funzione controlla se la directory specificata esiste; se non esiste, tenta di crearla
     * con i permessi forniti come argomento. In seguito, controlla i permessi attuali della directory
     * e, se necessario, li modifica. Se l'operazione fallisce (creazione o modifica dei permessi),
     * restituisce un codice di errore predefinito.
     *
     * @param string $directory           Il percorso della directory da verificare o creare.
     * @param int $requiredPermissions    I permessi da applicare alla directory (default: 0755).
     *
     * @return string                     Restituisce `NOT_ERROR` se la directory esiste o viene creata/modificata con successo,
     *                                    altrimenti un codice di errore (stringa) definito in 'error_constants'.
     *
     * Logica:
     * - Se la directory non esiste, tenta di crearla.
     * - Se i permessi della directory non corrispondono a quelli richiesti, tenta di modificarli.
     * - Se fallisce in una di queste operazioni, registra un errore nei log e restituisce un codice di errore.
     *
     * Logging:
     * - Registra nei log il successo o il fallimento di ogni azione, inclusi classe, metodo e azione specifica
     *   per un migliore debugging nei sistemi di log centralizzati.
     *
     * Esempio d'uso:
     * $result = ensureDirectoryPermissions('/path/to/directory');
     * if ($result !== true) {
     *     // Gestire l'errore basato sul codice restituito
     * }
     */

    function ensureDirectoryPermissions($directory, $requiredPermissions = 0755): string {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'ensureDirectoryPermissions',
        ];

        Log::channel('upload')->info(json_encode($logParams), [
            'Action' => 'Tentativo di creazione della directory',
            'directory' => $directory]);

        // Simula un errore durante la creazione della directory
        if (TestingConditionsManager::getInstance()->isTesting('UNABLE_TO_CREATE_DIRECTORY')) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Simulazione di errore durante la creazione della directory',
                'directory' => $directory]);

            return 'UNABLE_TO_CREATE_DIRECTORY';
        }

        // Verifica se la directory esiste
        if (!file_exists($directory)) {
            // La directory non esiste, tenta di crearla
            try {
                if (!mkdir($directory, $requiredPermissions, true)) {

                    Log::channel('upload')->error(json_encode($logParams), [
                        'Action' => 'Impossibile creare la directory',
                        'directory' => $directory]);

                    return 'UNABLE_TO_CREATE_DIRECTORY';

                }
            } catch (\Exception $e) {

                Log::channel('upload')->error(json_encode($logParams), [
                    'Action' => 'Impossibile creare la directory',
                    'directory' => $directory]);

                return 'UNABLE_TO_CREATE_DIRECTORY';

            }
        }

        // Simula un errore durante la modifica dei permessi della directory
        if (TestingConditionsManager::getInstance()->isTesting('UNABLE_TO_CHANGE_PERMISSIONS')) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Simulazione di errore durante la modifica dei permessi della directory',
                'directory' => $directory]);

            return 'UNABLE_TO_CHANGE_PERMISSIONS';

        }

        // Controlla i permessi attuali
        $currentPermissions = fileperms($directory) & 0777;
        if ($currentPermissions !== $requiredPermissions) {
            // I permessi della directory non corrispondono a quelli richiesti, tenta di modificarli
            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Modifica dei permessi della directory necessaria',
                'currentPermissions' => $currentPermissions,
                'directory' => $directory]);

            try {
                if (!chmod($directory, $requiredPermissions)) {

                    Log::channel('upload')->error(json_encode($logParams), [
                        'Action' => ' Impossibile cambiare i permessi della directory',
                        'currentPermissions' => $currentPermissions,
                        'directory' => $directory]);

                return 'UNABLE_TO_CHANGE_PERMISSIONS';

                }
            } catch (\Exception $e) {

                Log::channel('upload')->error(json_encode($logParams), [
                    'Action' => 'Errore durante la modifica dei permessi',
                    'error' => $e->getMessage(),
                    'directory' => $directory]);

                return 'UNABLE_TO_CHANGE_PERMISSIONS';
            }
        }

        Log::channel('upload')->info(json_encode($logParams), [
            'Action' => 'Directory esistente e permessi corretti',
            'directory' => $directory,
            'codeError' => 'NOT_ERROR']);

        return 'NOT_ERROR';
    }

    /**
    * Cambia i permessi di un file o di una directory.
    *
    * @param string $path
    * @param string $type ('file' o 'directory')
    * @return bool True se i permessi sono stati cambiati con successo, False altrimenti
    */
    private function changePermissions($path, $type)
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'changePermissions',
        ];

        try {
            chmod($path, $type === 'file' ? 0664 : 0775);

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Permessi cambiati con successo su ' . $type,
                'path' => $path]);

            return true;

        } catch (Exception $e) {

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore cambiando permessi su ' . $type,
                'error' => $e->getMessage(),
                'path' => $path]);

            return false;

        }
    }

    /**
     * Gestisce l'eliminazione e ricreazione della directory.
     *
     * @param string $path
     * @return void
     * @throws Exception
     */
    private function handleDirectoryError($path):void
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'handleDirectoryError',
        ];

        try {
            // Elimina la directory
            Storage::deleteDirectory($path);

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Directory eliminata con successo',
                'path' => $path]);

            // Ricrea la directory con permessi 0775
            Storage::makeDirectory($path, 0775, true);

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Directory ricreata con successo',
                'path' => $path]);

            // Prova a cambiare i permessi della nuova directory
            if (!$this->changePermissions($path, 'directory')) {
                throw new Exception("Impossibile cambiare i permessi della directory dopo la ricreazione: {$path}");
            }

        } catch (Exception $e) {

            $errorMessage = $e->getMessage();

            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore durante la cancellazione e ricreazione della directory',
                'error' => $errorMessage,
                'path' => $path]);

            throw new Exception($errorMessage);
        }
    }

    /**
     * Crea una directory con permessi specifici.
     *
     * @param string $path
     * @return void
     * @throws Exception
     */
    private function createDirectory($path)
    {

        $logParams = [
            'Traits' => 'HasUtility',
            'Method' => 'createDirectory',
        ];

        try {
            // Tentativo di creare la directory con permessi 0775
            if (!mkdir($path, 0775, true) && !is_dir($path)) {
                throw new Exception("Impossibile creare la directory temporanea: {$path}");
            }

            Log::channel('upload')->info(json_encode($logParams), [
                'Action' => 'Directory creata con successo',
                'path' => $path]);


        } catch (Exception $e) {

            $errorMessage = $e->getMessage();
            Log::channel('upload')->error(json_encode($logParams), [
                'Action' => 'Errore durante la creazione della directory',
                'error' => $errorMessage,
                'path' => $path]);

            throw new Exception($errorMessage);
        }
    }

}

#### Inizio File: /home/fabio/EGI/app/Traits/SaveCollectionTraits.php ####

<?php

namespace App\Traits;

use App\Models\Collection;
use Illuminate\Support\Facades\Log;

trait SaveCollectionTraits
{

    use HasPermissionTrait;

    /**
     * Salva una nuova collezione nel database.
     */

    public function save($collectionId)
    {
        try {
            // Esegui la validazione basata sui decorator
            $this->validate();

            // Recupera la collection
            $collection = Collection::findOrFail($collectionId);

            // Verifica il permesso "update_collection"
            $this->hasPermission($collection, 'update_collection');

            // Aggiorna la collection con i dati validati
            $collection->update([
                'collection_name' => $this->collection_name,
                'type' => $this->type,
                'position' => $this->position,
                'EGI_number' => $this->EGI_number,
                'floor_price' => $this->floor_price,
                'description' => $this->description,
                'is_published' => $this->is_published,
                'url_collection_site' => $this->url_collection_site,
            ]);

            // Ricarica i dati aggiornati dal database
            $this->collection = Collection::find($collectionId);

            // Flash del messaggio di successo
            session()->flash('message', 'Collezione aggiornata con successo!');

        } catch (\Illuminate\Database\Eloquent\ModelNotFoundException $e) {
            // Gestisci il caso in cui la collection non viene trovata
            Log::channel('florenceegi')->error('Collection not found: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Errore',
                'text' => 'La collezione specificata non esiste.',
            ]);
        } catch (\Illuminate\Auth\Access\AuthorizationException $e) {
            // Gestisci i problemi di autorizzazione
            Log::channel('florenceegi')->warning('Autorizzazione fallita: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Autorizzazione Negata',
                'text' => $e->getMessage(),
            ]);
        } catch (\Exception $e) {
            // Gestisci altre eccezioni generiche
            Log::channel('florenceegi')->error('Errore durante l\'aggiornamento della collezione: ' . $e->getMessage());
            $this->dispatch('swal:error', [
                'title' => 'Errore Inaspettato',
                'text' => 'Si è verificato un errore durante l\'aggiornamento della collezione. Riprova più tardi.',
            ]);
        }
    }
}

#### Inizio File: /home/fabio/EGI/app/Traits/UsesUuid.php ####

<?php


namespace App\Traits;

use Illuminate\Support\Str;

trait UsesUuid
{
    protected static function bootUsesUuid()
    {
        static::creating(function ($model) {
            if (!$model->getKey()) {
                $model->{$model->getKeyName()} = (string) Str::uuid();
            }
        });
    }

    public function getIncrementing()
    {
        return false;
    }

    public function getKeyType()
    {
        return 'string';
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/AppLayout.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AppLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.app');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/AuthSessionStatus.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AuthSessionStatus extends Component
{
    public function __construct(
        public ?string $status = null
    ) {}

    public function render(): View
    {
        return view('components.auth-session-status');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/BackButton.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class BackButton extends Component
{
    public $label;

    /**
     * Create a new component instance.
     *
     * @param string $label
     */
    public function __construct($label = 'Torna Indietro')
    {
        $this->label = __('label.came_to_back');
    }

    /**
     * Get the view / contents that represent the component.
     *
     * @return \Illuminate\View\View|string
     */
    public function render()
    {
        return view('components.back-button');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/CollectionCard.php ####

<?php

namespace App\View\Components;

use App\Models\Collection;
use Closure;
use Illuminate\Contracts\View\View;
use Illuminate\View\Component;

class CollectionCard extends Component
{
    public $collection;
    public $id;

    /**
     * Create a new component instance.
     */
    public function __construct($id)
    {

        $this->id = $id;

        // Carica la collection usando l'ID
        $this->collection = Collection::findOrFail($id);
    }

    /**
     * Get the view / contents that represent the component.
     */
    public function render(): View|Closure|string
    {
        return view('components.collection-card', [
            'collection' => $this->collection,
            'id' => $this->id
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/FormButton.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;

class FormButton extends Component
{
    public function __construct(
        public string $type = 'button',
        public ?string $style = 'primary',
        public ?string $size = null,
        public ?string $class = '',
    ) {}

    public function render()
    {
        return view('components.form-button');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/FormInput.php ####

<?php

namespace App\View\Components;

use App\Repositories\IconRepository;
use Illuminate\Support\Facades\Log;
use Illuminate\View\Component;

class FormInput extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $type,
        public string $label,
        public string $model,
        public string $id,
        public bool $required = false,
        public ?string $class = '',
        public ?string $placeholder = '',
        public ?string $icon = null, // Nome dell'icona da recuperare
        public ?string $iconClass = null, // Classe personalizzata per l'icona
        public string $datatip,
        public string $style = 'primary',
    ) {
        // Validate style
        $validStyles = ['primary', 'secondary', 'accent', 'info', 'success', 'warning', 'error'];
        if (! in_array($style, $validStyles)) {
            throw new \InvalidArgumentException('Style must be one of: '.implode(', ', $validStyles));
        }

        // Log::channel('florenceegi')->info( 'FormInput: iconClass: (' . $iconClass .  ') name: (' . $icon .')');

        // Recupera l'icona dal repository
        if ($icon) {
            $repository = app(IconRepository::class);
            $this->iconHtml = $repository->getIcon($icon, 'elegant', $iconClass);

        }
    }

    public function render()
    {
        return view('components.form-input');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/FormInputIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class FormInputIcon extends Component
{
    public function __construct(
        public string $type = 'text',
        public string $label = '',
        public string $model = '',
        public string $id = '',
        public bool $required = false,
        public string $class = '',
        public string $placeholder = '',
        public string $icon = '',
        public string $iconPosition = 'right', // 'left' o 'right'
        public string $value = ''
    ) {}

    public function render()
    {
        return view('components.form-input-icon');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/FormSelect.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class FormSelect extends Component
{
    /**
     * Create a new component instance.
     */
    public function __construct(
        public string $label,
        public string $model,
        public string $id,
        public bool $required = false,
        public string $class = '',
        public string $style = 'primary',
        public string $maxWidth = 'xs'
    ) {
        // Validate style
        $validStyles = ['primary', 'secondary', 'accent', 'info', 'success', 'warning', 'error'];
        if (!in_array($style, $validStyles)) {
            throw new \InvalidArgumentException("Style must be one of: " . implode(', ', $validStyles));
        }

        // Validate maxWidth
        $validWidths = ['xs', 'sm', 'md', 'lg', 'xl'];
        if (!in_array($maxWidth, $validWidths)) {
            throw new \InvalidArgumentException("MaxWidth must be one of: " . implode(', ', $validWidths));
        }
    }

    /**
     * Get the view / contents that represent the component.
     */
    public function render()
    {
        return view('components.form-select');
    }
} 

#### Inizio File: /home/fabio/EGI/app/View/Components/GuestLayout.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class GuestLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.guest');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/GuestWelcomeLayout.php ####

<?php

declare(strict_types=1);

namespace App\View\Components;

use Illuminate\View\Component;

class GuestWelcomeLayout extends Component
{
    public function render()
    {
        return view('layouts.guest-welcome');
    }
} 
#### Inizio File: /home/fabio/EGI/app/View/Components/ImageUploader.php ####

<?php

namespace App\View\Components;

use App\Models\Collection;
use Illuminate\Support\Facades\Log;
use Illuminate\View\Component;
use App\Repositories\IconRepository;

class ImageUploader extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $model,
        public string $id,
        public string $label,
        public $image ='',
        public string $removeMethod = 'removeImage',
        public ?string $icon = null, // Nome dell'icona da recuperare
        public ?string $iconClass = null // Classe personalizzata per l'icona
    ) {

        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: iconClass: (' . $iconClass .  ') name: (' . $icon .')');
        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: model: (' . $model .  ')');
        // Log::channel('florenceegi')->info( 'Class: ImageUploader. Method: Construct(). Action: image: (' . $image .  ')');

        // Recupera l'icona dal repository
        if ($icon) {

            $repository = app(IconRepository::class);
            $this->iconHtml = $repository->getIcon($icon, 'elegant', $iconClass);
        }
    }

    public function render()
    {

        return view('components.image-uploader');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/RepoIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use App\Repositories\IconRepository;

class RepoIcon extends Component
{
    public ?string $iconHtml = null;

    public function __construct(
        public string $name,
        public ?string $class = null
    ) {
        $repository = app(IconRepository::class);
        $this->iconHtml = $repository->getIcon($name, 'elegant', $class);
    }

    public function render()
    {
        return view('components.repo-icon');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/Separator.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class Separator extends Component
{
    public $class;

    /**
     * Create a new component instance.
     *
     * @param string $class
     */
    public function __construct($class = 'border-gray-200 dark:border-gray-600')
    {
        $this->class = $class;
    }

    /**
     * Get the view / contents that represent the component.
     *
     * @return \Illuminate\View\View|string
     */
    public function render()
    {
        return view('components.separator');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/SuggestionIcon.php ####

<?php

namespace App\View\Components;

use Illuminate\View\Component;

class SuggestionIcon extends Component
{
    public string $tooltip;
    public string $iconColor;

    public function __construct(string $tooltip = 'Suggestion', string $iconColor = '#5f6368')
    {
        $this->tooltip = $tooltip;
        $this->iconColor = $iconColor;
    }

    public function render()
    {
        return view('components.suggestion-icon');
    }
}

#### Inizio File: /home/fabio/EGI/app/View/Components/auth-session-status.blade.php ####

@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'alert alert-success']) }}>
        {{ $status }}
    </div>
@endif

#### Inizio File: /home/fabio/EGI/bootstrap/app.php ####

<?php

use App\Http\Middleware\CheckCollectionPermission;
use App\Http\Middleware\SetLanguage;
use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;
use Spatie\Permission\Middleware\RoleOrPermissionMiddleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        api: __DIR__.'/../routes/api.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        $middleware->alias([
            'collection_can' => CheckCollectionPermission::class,
            'role_or_permission' => RoleOrPermissionMiddleware::class,
        ]);

        // Middleware groups per le rotte web
        $middleware->appendToGroup('web',[SetLanguage::class]);


    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();

#### Inizio File: /home/fabio/EGI/bootstrap/cache/packages.php ####

<?php return array (
  'laravel/fortify' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Fortify\\FortifyServiceProvider',
    ),
  ),
  'laravel/jetstream' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    ),
  ),
  'laravel/pail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Pail\\PailServiceProvider',
    ),
  ),
  'laravel/sail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/sanctum' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    ),
  ),
  'laravel/tinker' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'livewire/flux' => 
  array (
    'aliases' => 
    array (
      'Flux' => 'Flux\\Flux',
    ),
    'providers' => 
    array (
      0 => 'Flux\\FluxServiceProvider',
    ),
  ),
  'livewire/livewire' => 
  array (
    'aliases' => 
    array (
      'Livewire' => 'Livewire\\Livewire',
    ),
    'providers' => 
    array (
      0 => 'Livewire\\LivewireServiceProvider',
    ),
  ),
  'nesbot/carbon' => 
  array (
    'providers' => 
    array (
      0 => 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' => 
  array (
    'providers' => 
    array (
      0 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' => 
  array (
    'providers' => 
    array (
      0 => 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'spatie/laravel-permission' => 
  array (
    'providers' => 
    array (
      0 => 'Spatie\\Permission\\PermissionServiceProvider',
    ),
  ),
);
#### Inizio File: /home/fabio/EGI/bootstrap/cache/services.php ####

<?php return array (
  'providers' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    2 => 'Illuminate\\Bus\\BusServiceProvider',
    3 => 'Illuminate\\Cache\\CacheServiceProvider',
    4 => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    5 => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    6 => 'Illuminate\\Cookie\\CookieServiceProvider',
    7 => 'Illuminate\\Database\\DatabaseServiceProvider',
    8 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    9 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    10 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    11 => 'Illuminate\\Hashing\\HashServiceProvider',
    12 => 'Illuminate\\Mail\\MailServiceProvider',
    13 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    14 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    15 => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    16 => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    17 => 'Illuminate\\Queue\\QueueServiceProvider',
    18 => 'Illuminate\\Redis\\RedisServiceProvider',
    19 => 'Illuminate\\Session\\SessionServiceProvider',
    20 => 'Illuminate\\Translation\\TranslationServiceProvider',
    21 => 'Illuminate\\Validation\\ValidationServiceProvider',
    22 => 'Illuminate\\View\\ViewServiceProvider',
    23 => 'Laravel\\Fortify\\FortifyServiceProvider',
    24 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    25 => 'Laravel\\Pail\\PailServiceProvider',
    26 => 'Laravel\\Sail\\SailServiceProvider',
    27 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    28 => 'Laravel\\Tinker\\TinkerServiceProvider',
    29 => 'Flux\\FluxServiceProvider',
    30 => 'Livewire\\LivewireServiceProvider',
    31 => 'Carbon\\Laravel\\ServiceProvider',
    32 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    33 => 'Termwind\\Laravel\\TermwindServiceProvider',
    34 => 'Spatie\\Permission\\PermissionServiceProvider',
    35 => 'App\\Providers\\AppServiceProvider',
    36 => 'App\\Providers\\FortifyServiceProvider',
    37 => 'App\\Providers\\JetstreamServiceProvider',
    38 => 'App\\Providers\\ViewDebugServiceProvider',
    39 => 'App\\Providers\\FileHelperServiceProvider',
  ),
  'eager' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Cookie\\CookieServiceProvider',
    2 => 'Illuminate\\Database\\DatabaseServiceProvider',
    3 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    4 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    5 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    6 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    7 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    8 => 'Illuminate\\Session\\SessionServiceProvider',
    9 => 'Illuminate\\View\\ViewServiceProvider',
    10 => 'Laravel\\Fortify\\FortifyServiceProvider',
    11 => 'Laravel\\Jetstream\\JetstreamServiceProvider',
    12 => 'Laravel\\Pail\\PailServiceProvider',
    13 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    14 => 'Flux\\FluxServiceProvider',
    15 => 'Livewire\\LivewireServiceProvider',
    16 => 'Carbon\\Laravel\\ServiceProvider',
    17 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    18 => 'Termwind\\Laravel\\TermwindServiceProvider',
    19 => 'Spatie\\Permission\\PermissionServiceProvider',
    20 => 'App\\Providers\\AppServiceProvider',
    21 => 'App\\Providers\\FortifyServiceProvider',
    22 => 'App\\Providers\\JetstreamServiceProvider',
    23 => 'App\\Providers\\ViewDebugServiceProvider',
    24 => 'App\\Providers\\FileHelperServiceProvider',
  ),
  'deferred' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastManager' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Factory' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Broadcaster' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\QueueingDispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\BatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\DatabaseBatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'cache' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.store' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.psr6' => 'Illuminate\\Cache\\CacheServiceProvider',
    'memcached.connector' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Cache\\RateLimiter' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Foundation\\Console\\AboutCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ForgetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClearCompiledCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Auth\\Console\\ClearResetsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DbCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\PruneCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\WipeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DownCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\Console\\InvokeSerializedClosureCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\KeyGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PackageDiscoverCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\PruneStaleTagsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FlushFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ForgetFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListenCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneBatchesCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneFailedJobsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RestartCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryBatchCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\WorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DumpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleFinishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleRunCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleTestCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleWorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleInterruptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowModelCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageLinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageUnlinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\UpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ApiInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\BroadcastingInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\CacheTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\CastMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClassMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ComponentMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConsoleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\ControllerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DocsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnumMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ExceptionMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\InterfaceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\LangPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ListenerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\MailMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\MiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ModelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\NotificationMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Notifications\\Console\\NotificationTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ObserverMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PolicyMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ProviderMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FailedTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\BatchesTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RequestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ResourceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RuleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ScopeMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Session\\Console\\SessionTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ServeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StubPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TraitMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\VendorPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.repository' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.creator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\FreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\InstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RefreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\ResetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RollbackCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\StatusCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'composer' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\ConcurrencyManager' => 'Illuminate\\Concurrency\\ConcurrencyServiceProvider',
    'hash' => 'Illuminate\\Hashing\\HashServiceProvider',
    'hash.driver' => 'Illuminate\\Hashing\\HashServiceProvider',
    'mail.manager' => 'Illuminate\\Mail\\MailServiceProvider',
    'mailer' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Mail\\Markdown' => 'Illuminate\\Mail\\MailServiceProvider',
    'auth.password' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'auth.password.broker' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'Illuminate\\Contracts\\Pipeline\\Hub' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'pipeline' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'queue' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.connection' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.failer' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.listener' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.worker' => 'Illuminate\\Queue\\QueueServiceProvider',
    'redis' => 'Illuminate\\Redis\\RedisServiceProvider',
    'redis.connection' => 'Illuminate\\Redis\\RedisServiceProvider',
    'translator' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'translation.loader' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'validator' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'validation.presence' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Illuminate\\Contracts\\Validation\\UncompromisedVerifier' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Laravel\\Sail\\Console\\InstallCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'Laravel\\Sail\\Console\\PublishCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'command.tinker' => 'Laravel\\Tinker\\TinkerServiceProvider',
  ),
  'when' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastServiceProvider' => 
    array (
    ),
    'Illuminate\\Bus\\BusServiceProvider' => 
    array (
    ),
    'Illuminate\\Cache\\CacheServiceProvider' => 
    array (
    ),
    'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider' => 
    array (
    ),
    'Illuminate\\Concurrency\\ConcurrencyServiceProvider' => 
    array (
    ),
    'Illuminate\\Hashing\\HashServiceProvider' => 
    array (
    ),
    'Illuminate\\Mail\\MailServiceProvider' => 
    array (
    ),
    'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider' => 
    array (
    ),
    'Illuminate\\Pipeline\\PipelineServiceProvider' => 
    array (
    ),
    'Illuminate\\Queue\\QueueServiceProvider' => 
    array (
    ),
    'Illuminate\\Redis\\RedisServiceProvider' => 
    array (
    ),
    'Illuminate\\Translation\\TranslationServiceProvider' => 
    array (
    ),
    'Illuminate\\Validation\\ValidationServiceProvider' => 
    array (
    ),
    'Laravel\\Sail\\SailServiceProvider' => 
    array (
    ),
    'Laravel\\Tinker\\TinkerServiceProvider' => 
    array (
    ),
  ),
);
#### Inizio File: /home/fabio/EGI/bootstrap/providers.php ####

<?php

return [
    App\Providers\AppServiceProvider::class,
    App\Providers\FortifyServiceProvider::class,
    App\Providers\JetstreamServiceProvider::class,
    App\Providers\ViewDebugServiceProvider::class,
    App\Providers\FileHelperServiceProvider::class,
];

#### Inizio File: /home/fabio/EGI/config/app.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Hosting Services Configuration
    |--------------------------------------------------------------------------
    |
    | This configuration option allows you to define multiple hosting services
    | that your application may use. Each service is defined with its name and
    | a flag indicating whether it is the default hosting provider. This setting
    | is useful for dynamically referencing the appropriate hosting service in
    | notifications or alerts, allowing you to easily scale the application
    | when switching between different hosting services without modifying the
    | application code.
    |
    |--------------------------------------------------------------------------
    */
    'hosting_services' => [
        ['name' => 'Digital Ocean', 'is_default' => true],
        ['name' => 'AWS', 'is_default' => false],
        ['name' => 'Google Cloud', 'is_default' => false],
        ['name' => 'IPFS', 'is_default' => false],
    ],



    /*
    |--------------------------------------------------------------------------
    | EGI Asset
    |--------------------------------------------------------------------------
    |
    | Questo parametro determina se gli EGI asset sono abilitati o meno.
    |
    */
    'egi_asset' => env('EGI_ASSET', false),

    /*
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application. This value is used when the
    | framework needs to place the application's name in a notification or
    | any other location as required by the application or its packages.
     */
    'natan' => env('NATAN'),
    'natan_webp' => env('NATAN_WEBP'),
    'natan_png' => env('NATAN_PNG'),
    'natan_tr' => env('NATAN_TR'),
    'natan_01' => env('NATAN_01'),
    'logo_tr' => env('LOGO_TR'),
    'logo_01' => env('LOGO_01'),
    'logo_02' => env('LOGO_02'),
    'logo_03' => env('LOGO_03'),
    'logo_04' => env('LOGO_04'),
    'favicon' => env('FAVICON'),
    'default_cover' => env('DEFAULT_COVER'),
    'welcome_background' => env('WELCOME_BACKGROUD'),

    'platform_slogan' => env('PLATFORM_SLOGAN', 'pazzia'),

     /*
    |--------------------------------------------------------------------------
    | Royalty di default per Frangette
    |--------------------------------------------------------------------------
    |
     */
    'natan_wallet_address' => env('NATAN_WALLET_ADDRESS'),
    'natan_royalty_mint' => env('NATAN_ROYALTY_MINT'),
    'natan_royalty_rebind' => env('NATAN_ROYALTY_REBIND'),
    'epp_wallet_address' => env('EPP_WALLET_ADDRESS'),
    'epp_royalty_mint' => env('EPP_ROYALTY_BIND'),
    'epp_royalty_rebind' => env('EPP_ROYALTY_REBIND'),
    'mediator_royalty_mint' => env('MEDIATOR_ROYALTY_MINT'),
    'mediator_royalty_rebind' => env('MEDIATOR_ROYALTY_REBIND'),
    'creator_royalty_mint' => env('CREATOR_ROYALTY_MINT'),
    'creator_royalty_rebind' => env('CREATOR_ROYALTY_REBIND'),

    /*
    |--------------------------------------------------------------------------
    | Bucket Path File Folder
    |--------------------------------------------------------------------------
    |
     */
    'bucket_folder_temp' => env('BUCKET_FOLDER_TEMP'),
    'bucket_temp_file_folder' => env('BUCKET_TMP_FILE_FOLDER'),
    'local_server' => env('LOCAL_SERVER'),
    'bucket_path_file_folder' => env('BUCKET_PATH_FILE_FOLDER'),
    'bucket_root_file_folder' => env('BUCKET_ROOT_FILE_FOLDER'),
    'bucket_root_utilities_files' => env('FOLDER_ROOT_UTILITY_FILES'),
    'bucket_uri_end_utilities_files' => env('FOLDER_URI_END_UTILITY_FILES'),
    'bucket_path_file_folder_metadata' => env('BUCKET_ROOT_FILE_FOLDER_METADATA'),
    'bucket_path_file_folder_read' => env('BUCKET_PATH_FILE_FOLDER_READ'),
    'do_access_key_id' => env('DO_ACCESS_KEY_ID'),
    'do_secret_access_key' => env('DO_SECRET_ACCESS_KEY'),
    'do_default_region' => env('DO_DEFAULT_REGION'),
    'do_bucket' => env('DO_BUCKET'),
    'do_use_path_style_endpoint' => env('DO_USE_PATH_STYLE_ENDPOINT'),
    'do_endpoint' => env('DO_ENDPOINT'),
    'do_bucket_folder' => env('DO_BUCKET_FOLDER'),


    /*
    |--------------------------------------------------------------------------
    | Wallet balance per la simulazione del minting e rebinding
    |--------------------------------------------------------------------------
    |
     */
    'virtual_wallet_balance' => 1000000,
    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' => env('APP_TIMEZONE', 'UTC'),

    /*
    |--------------------------------------------------------------------------
    | L'id dell'utente di sistema
    |--------------------------------------------------------------------------
     */
    'natan_id' => env('NATAN_ID', 1),

    /*
    |--------------------------------------------------------------------------
    | ID predefinito dell'utente EPP
    |--------------------------------------------------------------------------
     */
    'epp_id' => env('EPP_ID', 2),

    /*
    |--------------------------------------------------------------------------
    | Application build version
    |--------------------------------------------------------------------------
     */
    'version' => env('APP_VERSION'),

    /*
    |--------------------------------------------------------------------------
    | EMAIL DI SERVIZIO
    |--------------------------------------------------------------------------
    |
     */
    'errors_email' => env('MAIL_ERRORS'),

    /*
    |--------------------------------------------------------------------------
    | Chiave di crittografia
    |--------------------------------------------------------------------------
    |
     */
    'data_crypto_key' => env('DATA_CRYPTO_KEY'),

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' => env('APP_LOCALE', 'en'),
    'languages' => [
        'it' => 'Italiano',
        'en' => 'English',
        'es' => 'Español',
        'pt' => 'Português',
        'fr' => 'Français',
        'de' => 'Deutsch'
    ],



    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/auth.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];

#### Inizio File: /home/fabio/EGI/config/cache.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];

#### Inizio File: /home/fabio/EGI/config/context.php ####

<?php

return [
    'route_contexts' => [
        'dashboard' => 'general',
        'collections.index' => 'collection',
        'collections.create' => 'collection',
        'collections.edit' => 'collection',
        'egi.index' => 'egi',
        'admin.roles.index' => 'admin',
        'profile.is_published' => 'profile',
    ],
];

#### Inizio File: /home/fabio/EGI/config/database.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for database operations. This is
    | the connection which will be utilized unless another connection
    | is explicitly specified when you execute a query / statement.
    |
    */

    'default' => env('DB_CONNECTION', 'sqlite'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Below are all of the database connections defined for your application.
    | An example configuration is provided for each database system which
    | is supported by Laravel. You're free to add / remove connections.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DB_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
            'busy_timeout' => null,
            'journal_mode' => null,
            'synchronous' => null,
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'mariadb' => [
            'driver' => 'mariadb',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run on the database.
    |
    */

    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as Memcached. You may define your connection settings here.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

#### Inizio File: /home/fabio/EGI/config/filesystems.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app'),
            'permissions' => [
                'file' => [
                    'public' => 0644,
                    'private' => 0600,
                ],
                'dir' => [
                    'public' => 0755,
                    'private' => 0700,
                ],
            ],
            'throw' => false,
        ],


        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

        'do' => [
            'driver' => 's3',
            'key' => env('DO_ACCESS_KEY_ID'),
            'secret' => env('DO_SECRET_ACCESS_KEY'),
            'region' => env('DO_DEFAULT_REGION'),
            'bucket' => env('DO_BUCKET'),
            'url' => env('DO_URL'),
            'endpoint' => env('DO_ENDPOINT'),
            'use_path_style_endpoint' => env('DO_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/fortify.php ####

<?php

use Laravel\Fortify\Features;

return [

    /*
    |--------------------------------------------------------------------------
    | Fortify Guard
    |--------------------------------------------------------------------------
    |
    | Here you may specify which authentication guard Fortify will use while
    | authenticating users. This value should correspond with one of your
    | guards that is already present in your "auth" configuration file.
    |
    */

    'guard' => 'web',

    /*
    |--------------------------------------------------------------------------
    | Fortify Password Broker
    |--------------------------------------------------------------------------
    |
    | Here you may specify which password broker Fortify can use when a user
    | is resetting their password. This configured value should match one
    | of your password brokers setup in your "auth" configuration file.
    |
    */

    'passwords' => 'users',

    /*
    |--------------------------------------------------------------------------
    | Username / Email
    |--------------------------------------------------------------------------
    |
    | This value defines which model attribute should be considered as your
    | application's "username" field. Typically, this might be the email
    | address of the users but you are free to change this value here.
    |
    | Out of the box, Fortify expects forgot password and reset password
    | requests to have a field named 'email'. If the application uses
    | another name for the field you may define it below as needed.
    |
    */

    'username' => 'email',

    'email' => 'email',

    /*
    |--------------------------------------------------------------------------
    | Lowercase Usernames
    |--------------------------------------------------------------------------
    |
    | This value defines whether usernames should be lowercased before saving
    | them in the database, as some database system string fields are case
    | sensitive. You may disable this for your application if necessary.
    |
    */

    'lowercase_usernames' => true,

    /*
    |--------------------------------------------------------------------------
    | Home Path
    |--------------------------------------------------------------------------
    |
    | Here you may configure the path where users will get redirected during
    | authentication or password reset when the operations are successful
    | and the user is authenticated. You are free to change this value.
    |
    */

    'home' => '/dashboard',

    /*
    |--------------------------------------------------------------------------
    | Fortify Routes Prefix / Subdomain
    |--------------------------------------------------------------------------
    |
    | Here you may specify which prefix Fortify will assign to all the routes
    | that it registers with the application. If necessary, you may change
    | subdomain under which all of the Fortify routes will be available.
    |
    */

    'prefix' => '',

    'domain' => null,

    /*
    |--------------------------------------------------------------------------
    | Fortify Routes Middleware
    |--------------------------------------------------------------------------
    |
    | Here you may specify which middleware Fortify will assign to the routes
    | that it registers with the application. If necessary, you may change
    | these middleware but typically this provided default is preferred.
    |
    */

    'middleware' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | Rate Limiting
    |--------------------------------------------------------------------------
    |
    | By default, Fortify will throttle logins to five requests per minute for
    | every email and IP address combination. However, if you would like to
    | specify a custom rate limiter to call then you may specify it here.
    |
    */

    'limiters' => [
        'login' => 'login',
        'two-factor' => 'two-factor',
    ],

    /*
    |--------------------------------------------------------------------------
    | Register View Routes
    |--------------------------------------------------------------------------
    |
    | Here you may specify if the routes returning views should be disabled as
    | you may not need them when building your own application. This may be
    | especially true if you're writing a custom single-page application.
    |
    */

    'views' => true,

    /*
    |--------------------------------------------------------------------------
    | Features
    |--------------------------------------------------------------------------
    |
    | Some of the Fortify features are optional. You may disable the features
    | by removing them from this array. You're free to only remove some of
    | these features or you can even remove all of these if you need to.
    |
    */

    'features' => [
        Features::registration(),
        Features::resetPasswords(),
        Features::emailVerification(),
        Features::updateProfileInformation(),
        Features::updatePasswords(),
        Features::twoFactorAuthentication([
            'confirm' => true,
            'confirmPassword' => true,
            // 'window' => 0,
        ]),
    ],

];

#### Inizio File: /home/fabio/EGI/config/icons.php ####

<?php

return [
    'styles' => [
        'elegant' => [
            [
                'name' => 'fallback',
                'type' => 'solid',
                'class' => 'h-6 w-6',
                'host'=>'',
                'name_on_host'=>'',
                'html' => '
                    <svg xmns="http://www.w3.org/2000/svg" viewBox="0 0 123.01 120.38" width="40" height="40"><defs><style>.cls-1{fill:none;stroke:#333;stroke-linecap:round;stroke-miterlimit:10;stroke-width:4px}.cls-3{fill:#333}</style></defs><g id="Layer_2" data-name="Layer 2"><g id="General_-_Icon" data-name="General - Icon"><g id="General_-_Icon-2" data-name="General - Icon">
                        <path class="cls-1" d="m26.59 87.36 1.12-6.55A6.1 6.1 0 0 0 26 75.42L3.85 53.86a6.09 6.09 0 0 1 3.37-10.39L37.78 39a6.11 6.11 0 0 0 4.59-3.33L57.89 4.24a4 4 0 0 1 7.22 0l13.3 27M91.73 41.32 117.38 45c3.12.53 5.39 5.3 1.77 8.82L97 75.42a6.1 6.1 0 0 0-1.75 5.39l5.22 30.44a6.09 6.09 0 0 1-8.84 6.42L64.34 103.3a6.13 6.13 0 0 0-5.68 0l-27.33 14.37a6.09 6.09 0 0 1-8.84-6.42l1.33-7.77"/><path d="M66.79 33.5s4.46 13.5 7.83 15.86 16.59 4.23 16.59 4.23" style="stroke-linejoin:round;stroke-width:2px;fill:none;stroke:#333;stroke-linecap:round"/><circle class="cls-3" cx="97.5" cy="54.57" r="1"/><circle class="cls-3" cx="25.5" cy="94.57" r="2"/></g></g></g>
                    </svg>',
            ],
            [
                'name' => 'email',
                'type' => 'solid',
                'class' => 'h-4 w-4 opacity-70',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='%class%'>
                        <path d='M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z' />
                        <path d='M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z' />
                    </svg>",
            ],
            [
                'name' => 'camera',
                'type' => 'solid',
                'class' => 'w-6 h-6 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z'/>
                        <path d='M15 13a3 3 0 11-6 0 3 3 0 016 0z'/>
                    </svg>",
            ],
            [
                'name' => 'collection-name',
                'type' => 'solid',
                'class' => 'w-12 h-12 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path d='M3 3h6v6H3V3zm0 9h6v6H3v-6zm9-9h6v6h-6V3zm0 9h6v6h-6v-6z'></path>
                    </svg>",
            ],
            [
                'name' => 'url',
                'type' => 'solid',
                'class' => 'w-12 h-12 opacity-50 text-base-content',
                'host'=>'',
                'name_on_host'=>'',
                'html' => "
                    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' class='%class%'>
                        <path d='M10.59 13.41L9.17 12l2.83-2.83a3 3 0 014.24 4.24L14.83 15l1.42 1.41 2.83-2.83a5 5 0 00-7.07-7.07L7.76 10.24a5 5 0 007.07 7.07L13.41 15l-2.82 2.82a3 3 0 01-4.24-4.24l2.82-2.82z'/>
                    </svg>",
            ],
            [
                'name' => 'collection-number',
                'type' => 'material',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'pin',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>pin</span>",
            ],
            [
                'name' => 'collection-position',
                'type' => 'material-symbols-outlined',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'stacks',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>stacks</span>",
            ],

            [
                'name' => 'egi-base-price',
                'type' => 'material',
                'class' => 'w-6 h-6 opacity-50 material-symbols-outlined text-base-content',
                'host'=>'https://fonts.google.com/icons',
                'name_on_host'=>'payments',
                'html' => "<span class='w-6 h-6 opacity-50 material-symbols-outlined text-base-content'>payments</span>",
            ],
            [
                'name' => 'permissions_roles',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Authorization Manager',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40"> xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M361.6 370s0 .1 0 0c0 .6.1 1.1.1 1.6v.4c0 .4.1.8.1 1.2 0 .2 0 .4.1.5 0 .4.1.8.2 1.1 0 .2 0 .3.1.5.1.5.2 1.1.3 1.6.1.5.2.9.3 1.4.2.9.5 1.8.8 2.7.1.4.3.9.4 1.3 2 5.6 5 10.2 8.6 13.2.8.7 1.7 1.3 2.5 1.8.6.4 1.2.7 1.8.9.6.3 1.2.5 1.8.7.6.2 1.2.3 1.8.4 1.9.3 3.7.2 5.6-.4l.9-.3c.1 0 .2-.1.3-.1.2-.1.4-.2.6-.2.1-.1.2-.1.3-.2.2-.1.3-.2.5-.3.1-.1.2-.1.4-.2s.3-.2.5-.3c.1-.1.2-.2.4-.2.1-.1.3-.2.4-.3.1 0 .1-.1.2-.1 15.4 40.6 46.9 75.5 83.4 75.5s68-34.9 83.4-75.5c.1 0 .1.1.2.1.1.1.3.2.4.3.1.1.2.2.4.2.1.1.3.2.5.3.1.1.2.1.4.2s.3.2.5.3c.1.1.2.1.3.2.2.1.4.2.6.2.1 0 .2.1.3.1l.9.3c1.9.6 3.7.7 5.6.4.6-.1 1.2-.2 1.8-.4s1.2-.4 1.8-.7l1.8-.9c.9-.5 1.7-1.1 2.5-1.8 4.7-3.9 8.4-10.5 10.1-18.6.1-.5.2-1.1.3-1.6 0-.2 0-.3.1-.5.1-.4.1-.8.2-1.2 0-.2 0-.3.1-.5 0-.4.1-.8.1-1.2v-.4c0-.5.1-1 .1-1.5v-3.7c0-.5 0-.9-.1-1.4v-.2c0-.5-.1-1-.2-1.5-1.2-9.6-6-17.4-12.8-19.4-1.9-.6-3.9-.7-5.8-.3.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2v.1c-1.9-.3-3.9-.2-5.8.3-6.9 2.1-11.6 9.8-12.8 19.4-.1.5-.1 1-.2 1.5v.2c0 .4-.1.9-.1 1.4V368.2c-.4.7-.4 1.2-.4 1.8zM735.1 567.4c-3.2-1.3-6.3-2.5-9.5-3.6v-30.3c0-48-39-87-87-87s-87 39-87 87v10.4c-2.5 7.9-5.4 15.6-8.4 23.2-.4.1-.7.3-1.1.4v2.3c-9.7 23.2-21.9 44.7-36.3 63.8L490.4 557l6.9-9.4 7.7-10.5c.3-.3.5-.6.7-1 .1-.1.1-.2.2-.3.2-.2.3-.5.4-.7.1-.1.2-.3.2-.4.1-.2.2-.4.3-.7.1-.2.2-.3.2-.5.1-.2.2-.4.3-.7.1-.2.1-.4.2-.5.1-.2.1-.4.2-.7.1-.2.1-.4.2-.6.1-.2.1-.4.2-.6l.3-1.5c0-.1 0-.2.1-.3 0-.3.1-.6.1-.9v-.4c0-.3 0-.6.1-.9v-1.6c0-.3 0-.7-.1-1v-.1c-.1-1.6-.5-3.1-1-4.6-.4-1-.8-1.9-1.3-2.8l-12.9-18.1c-2.3-3.8-5.8-6.1-9.5-6.1h-20.3c-3.7 0-7.2 2.3-9.5 6.1l-12.9 18.1c-.5.9-1 1.9-1.3 2.8-.5 1.5-.9 3-1 4.6v.1c0 .3 0 .7-.1 1v1.6c0 .3 0 .6.1.9v.4c0 .3.1.6.1.9 0 .1 0 .2.1.3l.3 1.5c0 .2.1.4.2.6.1.2.1.4.2.6.1.2.1.4.2.7.1.2.1.4.2.5.1.2.2.4.3.7.1.2.1.3.2.5s.2.4.3.7c.1.1.2.3.2.4.1.2.3.5.4.7.1.1.1.2.2.3.2.3.5.7.7 1l7.7 10.5 6.9 9.4-11.2 56-4.1 20.6c-25.5-33.7-44-74.9-54.1-119.7-1.5-6.7-6.8-10.6-12-9L297.6 530c-9.9 3.2-17.3 13.9-18.7 26.9l-13.3 124.2-.4 3.6c-.2 1.8-.3 3.6-.2 5.4.3 12.4 6 23.3 14.4 28.4 1.2.7 2.5 1.3 3.7 1.8.9.3 1.7.6 2.7.8 1.4.3 2.7.4 4.2.4h254.2c12.1 4.8 24.4 8.6 36.8 11.5h.1c7.9 1.8 15.8 3.3 23.8 4.4h.1c8 1.1 15.9 1.8 23.9 2.1 6.4.2 12.8.2 19.2 0 8-.3 16-1 23.9-2.1h.1c7.9-1.1 15.9-2.5 23.8-4.4h.1c6.3-1.5 12.6-3.2 18.9-5.2 6.8-2.1 13.5-4.5 20.2-7.2V567.4zM638.6 477c31.1 0 56.5 25.3 56.5 56.5v21.3c-9.2-2.1-18.4-3.7-27.6-4.7-2.8-9.8-9.3-17.4-17.4-20.1l-62.7-20.2c8.9-19.3 28.5-32.8 51.2-32.8z" />
                                        </g>
                                        <g>
                                            <path fill="#A44995"
                                                d="m504.9 517-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-4.5-5.4-5.1-14.3-1.4-20.6l12.9-18.1c2.3-3.8 5.8-6.1 9.5-6.1H484c3.7 0 7.2 2.3 9.5 6.1l12.9 18.1c3.7 6.3 3.1 15.2-1.5 20.6z" />
                                            <path fill="#952584"
                                                d="m504.9 504.1-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-1.2-1.4-2.1-3.1-2.7-4.9-2.1 6-1.1 13.2 2.7 17.8l23 31.4c4.6 5.5 11.6 5.5 16.2 0l23-31.4c3.9-4.6 4.9-11.8 2.7-17.8-.6 1.8-1.5 3.5-2.7 4.9z" />
                                            <path fill="#FFF"
                                                d="M398.4 346.1c3.1 15.2-2.3 30-12.3 33s-20.5-6.9-23.6-22.1c-3.1-15.2 2.3-30 12.3-33 9.8-3 20.4 6.8 23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M386.1 369c-9.9 3-20.5-6.9-23.6-22.1-.2-1.2-.4-2.4-.6-3.5-.5 4.3-.4 8.9.6 13.5 3.1 15.2 13.7 25.1 23.6 22.1 9.1-2.8 14.5-15.5 12.8-29.4-1.2 9.6-5.9 17.4-12.8 19.4z" />
                                            <path fill="#FFF"
                                                d="M549.3 346.1c-3.1 15.2 2.3 30 12.3 33 9.9 3 20.5-6.9 23.6-22.1 3.1-15.2-2.3-30-12.3-33-9.9-3-20.5 6.8-23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M585.2 346.9c-3.1 15.2-13.7 25.1-23.6 22.1-6.9-2.1-11.6-9.8-12.8-19.4-1.7 13.9 3.7 26.7 12.8 29.4 9.9 3 20.5-6.9 23.6-22.1 1-4.7 1.1-9.3.6-13.5-.2 1.2-.4 2.4-.6 3.5z" />
                                            <path fill="#FFF"
                                                d="M567.2 325.5c0 57-41.8 126.8-93.3 126.8s-93.3-69.7-93.3-126.8 41.8-103.2 93.3-103.2 93.3 46.2 93.3 103.2z" />
                                            <path fill="#DADADA"
                                                d="M473.8 432.3c-48.5 0-88.4-61.8-92.9-116.6-.3 3.3-.4 6.5-.4 9.9 0 57 41.8 126.8 93.3 126.8s93.3-69.7 93.3-126.8c0-3.3-.1-6.6-.4-9.9-4.5 54.8-44.4 116.6-92.9 116.6z" />
                                            <path fill="#A44995" d="M517.8 673.8h-88L462 513.3h23.6z" />
                                            <path fill="#952584"
                                                d="m517.8 673.8-16.2-80.9c-2.3 2.9-4.6 5.7-7 8.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 601.3c-2.4-2.7-4.7-5.6-7-8.4l-16.2 80.9h88z" />
                                            <path fill="#A44995"
                                                d="M448 276.3s13 24.3 50.4 36.7c20.2 6.7 47.7 9 68.7 10.6.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2 0 0 20.7-3.4 39.1-15.3 18.4-11.9 28.4-31.9 28.4-31.9z" />
                                            <path fill="#952584" d="M457.3 525.3h33.1v11.6h-33.1z" />
                                            <path fill="#36A9E1"
                                                d="M668.8 536.9c-1.4-13.1-8.8-23.7-18.7-26.9l-78.2-25.2c-5.2-1.7-10.5 2.3-12 9-11.5 51.1-33.9 97.5-65.2 133.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 627.2c-31.3-36-53.7-82.3-65.2-133.4-1.5-6.7-6.8-10.6-12-9L297.6 510c-9.9 3.2-17.3 13.9-18.7 26.9l-13.7 127.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-13.8-127.8z" />
                                            <path fill="#0091C5"
                                                d="M681.3 654c-3.4 12.5-12.6 21.7-23.6 21.7H289.9c-11 0-20.2-9.2-23.6-21.7l-1.2 10.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-1.2-10.8z" />
                                            <path fill="#0091C5"
                                                d="M657.7 701.5c15.2 0 26.8-17.3 24.8-36.8l-12.3-114.3c-29.3-3.7-59-2.3-88.1 4.4v-21.3c0-15.6 6.4-29.8 16.7-40l-26.9-8.7c-1.9-.6-3.8-.5-5.5.2-3.1 4.6-5.8 9.5-8 14.7-1.8 7.2-3.7 14.3-5.9 21.3-.6 4.1-.9 8.2-.9 12.4v30.3c-3.2 1.2-6.4 2.4-9.5 3.6v134.1h115.6z" />
                                            <g>
                                                <path fill="#FFF"
                                                    d="M725.6 615h-30.5V513.5c0-31.1-25.3-56.5-56.5-56.5-31.1 0-56.5 25.3-56.5 56.5V615h-30.5V513.5c0-48 39-87 87-87s87 39 87 87V615z" />
                                                <path fill="#DADADA"
                                                    d="M638.6 444.1c-38.1 0-69.1 27.4-69.1 61.1V615h12.6V513.5c0-31.1 25.3-56.5 56.5-56.5 31.1 0 56.5 25.3 56.5 56.5V615h12.6V505.2c-.1-33.7-31-61.1-69.1-61.1z" />
                                                <path fill="#952584"
                                                    d="M735.1 700.7c-62.8 25.4-130.2 25.4-193.1 0V547.4c58.8-23.8 121.7-25.3 181-4.5 4 1.4 8.1 2.9 12.1 4.5v153.3z" />
                                                <path fill="#A44995"
                                                    d="M562.3 540.2v167.7c50.1 15.7 102.5 15.7 152.6 0V540.2c-50.1-15.7-102.5-15.7-152.6 0z" />
                                                <circle fill="#36A9E1" cx="638.6" cy="601.7" r="26.1" />
                                                <path fill="#36A9E1"
                                                    d="M647.4 666.3h-17.6c-3.7 0-6.7-3-6.7-6.7v-58.2H654v58.2c0 3.7-2.9 6.7-6.6 6.7z" />
                                                <path fill="#2C3088"
                                                    d="M641.7 659.9h-6.3c-1.8 0-3.2-1.4-3.2-3.2v-47.9h12.7v47.9c0 1.7-1.4 3.2-3.2 3.2z" />
                                                <circle fill="#2C3088" cx="638.6" cy="601.7" r="15.5" />
                                                <path fill="#DADADA"
                                                    d="M735.1 561.3c-3.5-1.4-6.9-2.7-10.4-3.9-60.1-21-123.2-19.6-182.6 3.9v10.4c.6 0 1.3-.1 1.9-.4 57.7-23.3 119.1-24.9 177.5-4.5 4 1.4 7.9 2.9 11.8 4.5.6.2 1.2.4 1.9.4l-.1-10.4zM542 685.8c3.5 1.4 6.9 2.7 10.4 3.9 28.3 9.9 57.2 14.8 86.1 14.8 32.5 0 65-6.3 96.5-18.7v-10.4c-.6 0-1.3.1-1.9.4-57.7 23.3-119.1 24.9-177.5 4.5-4-1.4-7.9-2.9-11.8-4.5-.6-.2-1.2-.4-1.9-.4v10.4z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>',
            ],
            [
                'name' => 'assign_roles',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Protection',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48" width="40" height="40">
                                <defs>
                                    <linearGradient id="c" x1="19.5" y1="47.82" x2="19.5"
                                        y2="-42.52" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#273a9b" />
                                        <stop offset=".56" stop-color="#202f65" />
                                        <stop offset="1" stop-color="#021e2f" />
                                    </linearGradient>
                                    <linearGradient id="a" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#27e9de" />
                                        <stop offset=".52" stop-color="#03a4ec" />
                                        <stop offset="1" stop-color="#2547a8" />
                                    </linearGradient>
                                    <linearGradient id="e" x1="19.5" y1="33.53" x2="19.5"
                                        y2="15.56" xlink:href="#a" />
                                    <linearGradient id="f" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" xlink:href="#a" />
                                    <linearGradient id="b" x1="33" y1="33.92" x2="33"
                                        y2="15.04" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#fff" />
                                        <stop offset=".52" stop-color="#cce2e6" />
                                        <stop offset="1" stop-color="#8fa1bb" />
                                    </linearGradient>
                                    <linearGradient id="g" x1="27.88" y1="28.99" x2="20.63"
                                        y2="16.24" xlink:href="#b" />
                                    <linearGradient id="h" y1="26.44" y2="38.78" xlink:href="#b" />
                                    <linearGradient id="i" x1="33" y1="56.25" x2="33"
                                        y2="3.66" xlink:href="#c" />
                                    <linearGradient id="j" x1="33" y1="36.81" x2="33"
                                        y2="42.75" xlink:href="#c" />
                                    <linearGradient id="d" x1="33" y1="48.03" x2="33"
                                        y2="33.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#f3c57a" />
                                        <stop offset=".49" stop-color="#f39369" />
                                        <stop offset="1" stop-color="#e94867" />
                                    </linearGradient>
                                    <linearGradient id="k" x1="33" y1="41.5" x2="33"
                                        y2="34.55" xlink:href="#d" />
                                </defs>
                                <circle cx="19.5" cy="19.5" r="16.5" style="fill:url(#c)" />
                                <path
                                    d="M19.5 24.27a16.46 16.46 0 0 0-12.61 5.86 16.48 16.48 0 0 0 25.21 0 16.46 16.46 0 0 0-12.6-5.86z"
                                    style="fill:url(#a)" />
                                <path
                                    d="M19.5 24.27a16.37 16.37 0 0 0-6.06 1.18 6.6 6.6 0 0 0 12.12 0 16.37 16.37 0 0 0-6.06-1.18z"
                                    style="fill:url(#e)" />
                                <circle cx="19.5" cy="16.22" r="6.61" style="fill:url(#f)" />
                                <path d="M40.5 39h-15V28.5a7.5 7.5 0 0 1 15 0zm-12-3h9v-7.5a4.5 4.5 0 0 0-9 0z"
                                    style="fill:url(#b)" />
                                <path d="M31.5 36h-3v-7.5a4.49 4.49 0 0 1 3-4.22v-3.13a7.51 7.51 0 0 0-6 7.35V39h6z"
                                    style="fill:url(#g)" />
                                <path
                                    d="M40.5 30.12a2.17 2.17 0 0 0-.69-.12H37.5v6h-9v-6h-2.31a2.17 2.17 0 0 0-.69.12V39h15z"
                                    style="fill:url(#h)" />
                                <rect x="24" y="31.5" width="18" height="13.5" rx="2.19" ry="2.19"
                                    style="fill:url(#i)" />
                                <path d="M26.19 31.5a2.18 2.18 0 0 0-2.07 1.5h17.76a2.18 2.18 0 0 0-2.07-1.5z"
                                    style="fill:url(#j)" />
                                <path
                                    d="M35.16 38.16a2.16 2.16 0 0 0-4.26-.52 2.14 2.14 0 0 0 .42 1.87 1.15 1.15 0 0 1 .24.73v.32A1.44 1.44 0 0 0 33 42a1.44 1.44 0 0 0 1.44-1.44v-.32a1.18 1.18 0 0 1 .25-.74 2.13 2.13 0 0 0 .47-1.34z"
                                    style="fill:url(#d)" />
                                <path
                                    d="M35 38.92a2.16 2.16 0 0 0-2.59-1.35A2.13 2.13 0 0 0 31 38.91a2.16 2.16 0 0 0 .33.6 1.15 1.15 0 0 1 .24.73v.32a1.44 1.44 0 1 0 2.88 0v-.32a1.18 1.18 0 0 1 .25-.74 2.16 2.16 0 0 0 .3-.58z"
                                    style="fill:url(#k)" />
                            </svg>',
            ],
            [
                'name' => 'assign_permissions',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'System Protection',
                'html' => ' <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M690.9 656.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9v4.5c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-4.5c-.1-9.9-8.1-17.9-18-17.9zM708.8 601.9V393c0-13.8-11.2-25-25-25H612v-53.4c0-11.5-6.6-22-17-26.9-60.1-28.6-129.9-28.6-190 0-10.4 4.9-17 15.4-17 26.9V368h-71.8c-13.8 0-25 11.2-25 25v218.9c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10h-.1z" />
                                        </g>
                                        <g>
                                            <path fill="#952584"
                                                d="M683.8 684.3H316.2c-13.8 0-25-11.2-25-25v-4.5h417.7v4.5c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#A44995"
                                                d="M690.9 636.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9 0 9.9 8 17.9 17.9 17.9h381.8c9.9 0 17.9-8 17.9-17.9 0-9.9-8-17.9-17.9-17.9zM683.8 616.9H316.2c-13.8 0-25-11.2-25-25V373c0-13.8 11.2-25 25-25h367.7c13.8 0 25 11.2 25 25v218.9c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#952584"
                                                d="M683.8 606.9H316.2c-13.8 0-25-11.2-25-25v10c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#36A9E1"
                                                d="M669.1 581.9H330.9c-6.9 0-12.6-5.6-12.6-12.6V375.6c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v193.7c0 7-5.7 12.6-12.6 12.6z" />
                                            <path fill="#0091C5"
                                                d="M669.1 363H330.9c-6.9 0-12.6 5.6-12.6 12.6v10c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v-10c0-7-5.7-12.6-12.6-12.6z" />
                                            <path fill="#FFF"
                                                d="M364.7 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3s-2.8 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M364.7 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1 2.3-3.2 3.8-5.8 3.8z" />
                                            <path fill="#FFF"
                                                d="M672.1 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3-.1 3.5-2.9 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M672.1 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1.1 2.3-3.3 3.8-5.8 3.8z" />
                                            <circle fill="#36A9E1" cx="612.8" cy="654.8" r="6.2" />
                                            <path fill="#0091C5"
                                                d="M612.8 656c-2.5 0-4.7-1.5-5.6-3.7-.3.8-.5 1.6-.5 2.5 0 3.4 2.8 6.2 6.2 6.2 3.4 0 6.2-2.8 6.2-6.2 0-.9-.2-1.7-.5-2.5-1.1 2.2-3.3 3.7-5.8 3.7z" />
                                            <g>
                                                <path fill="#0091C5"
                                                    d="m589.1 485.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 470.7 388 451 388 430.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#FFF"
                                                    d="m589.1 465.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 450.7 388 431 388 410.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#DADADA"
                                                    d="M599.5 404.6V303.2c0-10-5.9-19.2-15.1-23.5-53.4-25-115.4-25-168.8 0-9.2 4.3-15.1 13.5-15.1 23.5v101.4c0 17.9 7.3 35.1 20.3 47.7l65.7 63.6c7.5 7.3 19.5 7.3 27 0l65.7-63.6c13-12.5 20.3-29.7 20.3-47.7z" />
                                                <path fill="#A44995"
                                                    d="m572.4 448-60.1 59.1c-6.9 6.7-17.9 6.7-24.7 0l-60-59.1a62.263 62.263 0 0 1-18.6-44.4v-94.3c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v94.3c0 16.8-6.7 32.7-18.6 44.4z" />
                                                <path fill="#952584"
                                                    d="M577.2 287.6c-48.8-23.3-105.6-23.3-154.4 0-8.4 4-13.8 12.5-13.8 21.9v13c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v-13c0-9.4-5.4-17.9-13.8-21.9z" />
                                            </g>
                                            <g>
                                                <path fill="#952584"
                                                    d="M489.6 447.5c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22l-61.4 79.2c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#FFF"
                                                    d="M489.6 433.8c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22L504.6 428c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#DADADA"
                                                    d="m563.4 326.9-71.1 91.8-39.4-53c-3.1-4.1-7.2-6.9-11.8-8.4-3.9 5.4-4.1 12.9.1 18.6l38.5 51.8c2.4 3.3 6 5.4 9.9 6.1.8.1 1.6.2 2.5.2 4.9.1 9.5-2.2 12.5-6.1l61.4-79.2c5.2-6.8 4-16.5-2.6-21.8z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>',
            ],
            [
                'name' => 'open',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Open Door',
                'html' => '<svg xmlns="http://www.w3.org/2000/svg" width="37.504" height="48">
                            <path fill="#c6c6c6" d="M4.129 6.375h29.25v38.532H4.129z"/><path d="M3 5.25v40.782h31.5V5.25zm29.25 38.532h-27V7.5h27z" fill="#7a8e9b"/>
                            <path fill="#525c6b" d="M37.504 46.032H0l3.001-3.282h31.503l3 3.282z"/><path fill="#e49a61" d="M24.128 2.829v42.342l2.25-.524V3.355l-2.25-.526zM34.504 5.25l-3.125-.728V43.48l3.125-.73V5.25zM12.004 0v48l10.375-2.421V2.421L12.004 0z"/>
                            <path fill="#f1bb6b" d="M26.378 3.355v41.292l5.001-1.167V4.522l-5.001-1.167zM22.379 2.421v43.158l1.749-.408V2.829l-1.749-.408z"/><ellipse cx="17.004" cy="25.157" rx="1.688" ry="2.25" fill="#525c6b"/><ellipse cx="17.754" cy="25.157" rx="1.688" ry="2.25" fill="#c6c6c6"/>
                           </svg>',
            ],
            [
                'name' => 'art_therapy',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Art Therapy',
                'html' => '
                    <svg version="1.1" id="Icon_Set" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 512 512" width="40" height="40" style="enable-background:new 0 0 512 512" xml:space="preserve"><style>.st1{fill:#fd919e}.st2{fill:#4c4372}.st3{fill:#d3e6f8}.st5{fill:#7babf1}.st6{fill:#fff}</style><g id="Art_Theraphy"><circle cx="256" cy="256" r="207" style="fill:#f0c48a"/><path class="st5" d="M316.468 394.034H132.605c-9.804 0-17.752-7.948-17.752-17.752V135.718c0-9.804 7.948-17.752 17.752-17.752h183.863c9.804 0 17.752 7.948 17.752 17.752v240.564c.001 9.804-7.947 17.752-17.752 17.752z"/>
                        <path class="st6" d="M141.233 143.654h166.609v224.692H141.233z"/>
                        <path class="st3" d="M141.233 286h166.609v82.346H141.233z"/><path class="st3" d="M284.743 143.654h23.099v224.692h-23.099z"/>
                        <path style="fill:#a4cff2" d="M284.743 286h23.099v82.346h-23.099z"/><path class="st6" d="M183.163 286h-27.841l13.921-24.111 13.92-24.11 13.92 24.11L211.004 286z"/>
                        <path class="st1" d="M252.377 286h-41.373l20.686-35.831 20.687-35.831 20.687 35.831L293.751 286z"/><circle class="st1" cx="202.568" cy="188.714" r="20.405"/>
                        <path class="st2" d="M316.468 400.034H132.605c-13.097 0-23.752-10.655-23.752-23.752V135.718c0-13.097 10.655-23.752 23.752-23.752h183.863c13.097 0 23.752 10.655 23.752 23.752v240.563c.001 13.098-10.655 23.753-23.752 23.753zM132.605 123.966c-6.48 0-11.752 5.272-11.752 11.752v240.563c0 6.48 5.272 11.752 11.752 11.752h183.863c6.48 0 11.752-5.272 11.752-11.752V135.718c0-6.48-5.272-11.752-11.752-11.752H132.605z"/><path class="st2" d="M307.841 374.346H141.232a6 6 0 0 1-6-6V143.654a6 6 0 0 1 6-6h166.609a6 6 0 0 1 6 6v224.692a6 6 0 0 1-6 6zm-160.609-12h154.609V149.654H147.232v212.692z"/><path class="st2" d="M307.841 374.346H141.232a6 6 0 0 1-6-6V286a6 6 0 0 1 6-6h166.609a6 6 0 0 1 6 6v82.346a6 6 0 0 1-6 6zm-160.609-12h154.609V292H147.232v70.346z"/><path class="st2" d="M211.003 292h-55.681a6 6 0 0 1-5.196-9l27.841-48.221a6.002 6.002 0 0 1 10.392 0L216.2 283a5.999 5.999 0 0 1-5.197 9zm-45.288-12h34.896l-17.448-30.221L165.715 280z"/><path class="st2" d="M293.751 292h-82.748a6 6 0 0 1-5.196-9l41.374-71.662a6.002 6.002 0 0 1 10.392 0L298.948 283a5.999 5.999 0 0 1-5.197 9zm-72.355-12h61.963l-30.981-53.662L221.396 280z"/><g><path class="st2" d="M202.568 215.12c-14.56 0-26.405-11.845-26.405-26.405s11.845-26.405 26.405-26.405 26.405 11.845 26.405 26.405-11.845 26.405-26.405 26.405zm0-40.811c-7.943 0-14.405 6.462-14.405 14.405s6.462 14.405 14.405 14.405 14.405-6.462 14.405-14.405-6.462-14.405-14.405-14.405z"/></g><g><path class="st1" d="m375.141 388.153-19.448-37.35c-7.458-14.323 2.218-31.953 18.35-32.68a23.535 23.535 0 0 1 2.196 0c16.132.727 25.808 18.357 18.35 32.68l-19.448 37.35z"/><path style="fill:#e8677d" d="M358.559 356.306h33.165l-16.583 31.847z"/><path class="st5" d="M375.141 318.098a14.182 14.182 0 0 1-14.095-12.614c-3.317-29.825-3.317-139.198 0-169.023a14.182 14.182 0 0 1 28.19 0c3.317 29.825 3.317 139.198 0 169.023a14.18 14.18 0 0 1-14.095 12.614z"/><path class="st2" d="M375.142 324.098a20.162 20.162 0 0 1-20.059-17.951c-3.363-30.249-3.363-140.1 0-170.349a20.162 20.162 0 0 1 20.058-17.951 20.162 20.162 0 0 1 20.059 17.951c3.363 30.25 3.363 140.101 0 170.35a20.162 20.162 0 0 1-20.058 17.95zm0-194.251a8.175 8.175 0 0 0-8.132 7.278c-3.224 28.994-3.224 138.702 0 167.696a8.173 8.173 0 0 0 8.131 7.277 8.173 8.173 0 0 0 8.131-7.277c3.224-28.994 3.224-138.703 0-167.697a8.171 8.171 0 0 0-8.13-7.277z"/><path class="st2" d="M375.141 394.153a6 6 0 0 1-5.322-3.229l-19.448-37.35c-4.527-8.693-4.296-18.973.617-27.496 4.788-8.308 13.306-13.522 22.785-13.949a30.145 30.145 0 0 1 2.739 0c9.476.427 17.994 5.641 22.782 13.949 4.913 8.523 5.144 18.803.617 27.496l-19.448 37.35a5.999 5.999 0 0 1-5.322 3.229zm.001-70.055c-.276 0-.551.006-.825.019-5.448.246-10.16 3.145-12.932 7.954-2.855 4.955-2.994 10.922-.37 15.962l14.126 27.129 14.126-27.129c2.625-5.04 2.486-11.007-.37-15.962-2.772-4.809-7.484-7.708-12.929-7.953a16.29 16.29 0 0 0-.826-.02z"/></g></g>
                    </svg>',
            ],
            [
                'name' => 'dahsboard',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'Dashboard',
                'html' => '
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="40" height="40"><defs><style>.cls-1{fill:#7c7d7d}.cls-2{fill:#919191}.cls-3{fill:#dad7e5}.cls-4{fill:#edebf2}.cls-7{fill:#c6c3d8}.cls-9{fill:#fc6}.cls-10{fill:#ffde76}</style></defs><g id="Dashboard"><path class="cls-1" d="M6 31h36v16H6z"/>
                        <path class="cls-2" d="M42 31v14H11a3 3 0 0 1-3-3V31z"/>
                        <path class="cls-3" d="M18 36v3h-6v-3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z"/>
                        <path class="cls-4" d="M18 36v1h-2a2 2 0 0 1-2-2h3a1 1 0 0 1 1 1z"/>
                        <path class="cls-3" d="M18 39v3a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-3z"/>
                        <path class="cls-4" d="M18 39v2h-3a1 1 0 0 1-1-1v-1zM38 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM38 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 40h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 44h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM38 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM32 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2zM26 36h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/>
                        <path class="cls-1" d="M6 1h36v30H6z"/><path class="cls-2" d="M42 1v28H11a3 3 0 0 1-3-3V1z"/><path style="fill:#9fdbf3" d="M10 5h14v10H10z"/><path d="M24 5v8h-9a3 3 0 0 1-3-3V5z" style="fill:#b2e5fb"/><path class="cls-4" d="M29 15V5a1 1 0 0 1 2 0v10a1 1 0 0 1-2 0z"/><path class="cls-7" d="M31 14h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/><path class="cls-4" d="M35 15V5a1 1 0 0 1 2 0v10a1 1 0 0 1-2 0z"/>
                        <path class="cls-7" d="M37 10h-2a1 1 0 0 1 0-2h2a1 1 0 0 1 0 2z"/><path d="M24 9.5v2c-2.08 0-2.17-1.7-3.62-.69a3.17 3.17 0 0 1-4 0 1.2 1.2 0 0 0-1.63 0 3.16 3.16 0 0 1-4 0 1.18 1.18 0 0 0-.75-.31v-2c1.67 0 1.93 1 2.8 1s1.15-1 2.8-1 1.94 1 2.79 1 1.15-1 2.81-1 1.94 1 2.8 1z" style="fill:#8bd1ea"/>
                        <path class="cls-9" d="M14 23a2 2 0 1 1-2.82-1.82A2 2 0 0 1 14 23z"/><path class="cls-10" d="M13.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64z"/><circle class="cls-9" cx="20" cy="23" r="2"/><circle class="cls-9" cx="28" cy="23" r="2"/><circle class="cls-9" cx="36" cy="23" r="2"/>
                        <path class="cls-10" d="M21.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64zM29.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64zM37.82 23.82a2 2 0 0 1-2.64-2.64 2 2 0 0 1 2.64 2.64z"/></g>
                    </svg>',
            ],
            [
                'name' => 'back',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host'=>'https://www.reshot.com/free-svg-icons/',
                'name_on_host'=>'back',
                'html' => '
                    <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" width="40" height="40" class="rounded-full" style="shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;fill-rule:evenodd;clip-rule:evenodd" viewBox="0 0 6.827 6.827">
                        <path style="fill:#424242" d="M0 0h6.827v6.827H0z"/>
                        <path d="M.853 3.413a2.56 2.56 0 1 1 5.12 0 2.56 2.56 0 0 1-5.12 0zM4.72 2.8H3.413a.08.08 0 0 1-.08-.08v-.5L2.14 3.413l1.193 1.194v-.5a.08.08 0 0 1 .08-.08H4.72V2.8zm-3.413.613a2.1 2.1 0 0 1 .617-1.49 2.1 2.1 0 0 1 1.49-.616 2.1 2.1 0 0 1 1.489.617 2.1 2.1 0 0 1 .617 1.49 2.1 2.1 0 0 1-.617 1.489 2.1 2.1 0 0 1-1.49.617 2.1 2.1 0 0 1-1.49-.617 2.1 2.1 0 0 1-.616-1.49zm.73-1.376a1.94 1.94 0 0 0-.57 1.376c0 .538.218 1.025.57 1.377.352.352.839.57 1.376.57a1.94 1.94 0 0 0 1.377-.57 1.94 1.94 0 0 0 .57-1.377 1.94 1.94 0 0 0-.57-1.376 1.94 1.94 0 0 0-1.377-.57 1.94 1.94 0 0 0-1.376.57z" style="fill:#fffffe"/>
                    </svg>',
            ],
            [
                'name' => 'new_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'new_collection',
                'html' => '<img src="/images/default/new_collection.webp" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],
            [
                'name' => 'open_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'open_collection',
                'html' => '<img src="/images/default/open_collection.webp" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],
            [
                'name' => 'manage_collection',
                'type' => 'solid',
                'class' => 'w-12 h-12 text-base-content',
                'host' => 'DALL-E',
                'name_on_host' => 'manage_collection',
                'html' => '<img src="/images/default/manage_collection.jpeg" alt="Nuova Collezione" class="w-12 h-12 text-base-content rounded-full">',

            ],

        ],

        // [
        //     'name' => 'description',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'type',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_banner',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_card',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'path_image_avatar',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
        // [
        //     'name' => 'url_collection_site',
        //     'type' => 'solid',
        //     'class' => 'icon-class',
        //     'html' => '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="..."></path></svg>',
        // ],
    ],
    'default' => 'elegant',
];

#### Inizio File: /home/fabio/EGI/config/jetstream.php ####

<?php

use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Middleware\AuthenticateSession;

return [

    /*
    |--------------------------------------------------------------------------
    | Jetstream Stack
    |--------------------------------------------------------------------------
    |
    | This configuration value informs Jetstream which "stack" you will be
    | using for your application. In general, this value is set for you
    | during installation and will not need to be changed after that.
    |
    */

    'stack' => 'livewire',

    /*
    |--------------------------------------------------------------------------
    | Jetstream Route Middleware
    |--------------------------------------------------------------------------
    |
    | Here you may specify which middleware Jetstream will assign to the routes
    | that it registers with the application. When necessary, you may modify
    | these middleware; however, this default value is usually sufficient.
    |
    */

    'middleware' => ['web'],

    'auth_session' => AuthenticateSession::class,

    /*
    |--------------------------------------------------------------------------
    | Jetstream Guard
    |--------------------------------------------------------------------------
    |
    | Here you may specify the authentication guard Jetstream will use while
    | authenticating users. This value should correspond with one of your
    | guards that is already present in your "auth" configuration file.
    |
    */

    'guard' => 'sanctum',

    /*
    |--------------------------------------------------------------------------
    | Features
    |--------------------------------------------------------------------------
    |
    | Some of Jetstream's features are optional. You may disable the features
    | by removing them from this array. You're free to only remove some of
    | these features or you can even remove all of these if you need to.
    |
    */

    'features' => [
        Features::termsAndPrivacyPolicy(),
        Features::profilePhotos(),
        Features::api(),
        Features::teams(['invitations' => true]),
        Features::accountDeletion(),
    ],

    /*
    |--------------------------------------------------------------------------
    | Profile Photo Disk
    |--------------------------------------------------------------------------
    |
    | This configuration value determines the default disk that will be used
    | when storing profile photos for your application's users. Typically
    | this will be the "public" disk but you may adjust this if needed.
    |
    */

    'profile_photo_disk' => 'public',

];

#### Inizio File: /home/fabio/EGI/config/logging.php ####

<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'with' => [
                'stream' => 'php://stderr',
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'florenceegi' => [
            'driver' => 'daily',
            'path' => storage_path('logs/florenceegi.log'),
            'level' => 'debug',
            'days' => 7,  // Numero di giorni per cui conservare i log
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];

#### Inizio File: /home/fabio/EGI/config/mail.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];

#### Inizio File: /home/fabio/EGI/config/paths.php ####

<?php
// config/paths.php

return [
    'default_hosting' => env('DEFAULT_HOSTING', 'Local'),

    'hosting' => [
        'Local' => [
            'url' => '/storage/',
            'disk' => 'public',
            'is_default' => true,
            'is_active' => true,
        ],
        'Digital Ocean' => [
            'url' => env('BUCKET_PATH_FILE_FOLDER_READ', 'https://frangettediskspace.fra1.digitaloceanspaces.com'),
            'disk' => 'do',
            'is_default' => false,
            'is_active' => true,
        ],
        'AWS' => [
            'url' => env('AWS_URL', 'https://aws.example.com'),
            'disk' => 's3',
            'is_default' => false,
            'is_active' => false,
        ],
        'IPFS' => [
            'url' => 'https://ipfs.io/ipfs/',
            'disk' => 'ipfs',
            'is_default' => false,
            'is_active' => false,
        ],
    ],


    'paths' => [
        'collections' => 'users_files/collections_{collectionId}/',
        'head' => [
            'root' => 'users_files/collections_{collectionId}/head/',
            'banner' => 'users_files/collections_{collectionId}/head/banner/',
            'card' => 'users_files/collections_{collectionId}/head/card/',
            'avatar' => 'users_files/collections_{collectionId}/head/avatar/',
            'EGI_asset' => 'users_files/collections_{collectionId}/head/EGI_asset/',
        ],
        'EGIs' => 'users_files/collections_{collectionId}/EGIs/',
        'user_data' => [
            'root' => 'users_files/users-data/',
            'documents' => 'users_files/users-data/documents/',
        ],
        'icons' => env('PATH_ICONS', 'https://frangettediskspace.fra1.digitaloceanspaces.com/assets/images/icons/'),
        'temp' => env('BUCKET_TMP_FILE_FOLDER', 'temp'),
    ],
];

#### Inizio File: /home/fabio/EGI/config/permission.php ####

<?php

return [

    'models' => [

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your permissions. Of course, it
         * is often just the "Permission" model but you may use whatever you like.
         *
         * The model you want to use as a Permission model needs to implement the
         * `Spatie\Permission\Contracts\Permission` contract.
         */

        'permission' => Spatie\Permission\Models\Permission::class,

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your roles. Of course, it
         * is often just the "Role" model but you may use whatever you like.
         *
         * The model you want to use as a Role model needs to implement the
         * `Spatie\Permission\Contracts\Role` contract.
         */

        'role' => Spatie\Permission\Models\Role::class,

    ],

    'table_names' => [

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'roles' => 'roles',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your permissions. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'permissions' => 'permissions',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your models permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_permissions' => 'model_has_permissions',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your models roles. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_roles' => 'model_has_roles',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'role_has_permissions' => 'role_has_permissions',
    ],

    'column_names' => [
        /*
         * Change this if you want to name the related pivots other than defaults
         */
        'role_pivot_key' => null, //default 'role_id',
        'permission_pivot_key' => null, //default 'permission_id',

        /*
         * Change this if you want to name the related model primary key other than
         * `model_id`.
         *
         * For example, this would be nice if your primary keys are all UUIDs. In
         * that case, name this `model_uuid`.
         */

        'model_morph_key' => 'model_id',

        /*
         * Change this if you want to use the teams feature and your related model's
         * foreign key is other than `team_id`.
         */

        'team_foreign_key' => 'team_id',
    ],

    /*
     * When set to true, the method for checking permissions will be registered on the gate.
     * Set this to false if you want to implement custom logic for checking permissions.
     */

    'register_permission_check_method' => true,

    /*
     * When set to true, Laravel\Octane\Events\OperationTerminated event listener will be registered
     * this will refresh permissions on every TickTerminated, TaskTerminated and RequestTerminated
     * NOTE: This should not be needed in most cases, but an Octane/Vapor combination benefited from it.
     */
    'register_octane_reset_listener' => false,

    /*
     * Teams Feature.
     * When set to true the package implements teams using the 'team_foreign_key'.
     * If you want the migrations to register the 'team_foreign_key', you must
     * set this to true before doing the migration.
     * If you already did the migration then you must make a new migration to also
     * add 'team_foreign_key' to 'roles', 'model_has_roles', and 'model_has_permissions'
     * (view the latest version of this package's migration file)
     */

    'teams' => false,

    /*
     * Passport Client Credentials Grant
     * When set to true the package will use Passports Client to check permissions
     */

    'use_passport_client_credentials' => false,

    /*
     * When set to true, the required permission names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_permission_in_exception' => false,

    /*
     * When set to true, the required role names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_role_in_exception' => false,

    /*
     * By default wildcard permission lookups are disabled.
     * See documentation to understand supported syntax.
     */

    'enable_wildcard_permission' => false,

    /*
     * The class to use for interpreting wildcard permissions.
     * If you need to modify delimiters, override the class and specify its name here.
     */
    // 'permission.wildcard_permission' => Spatie\Permission\WildcardPermission::class,

    /* Cache-specific settings */

    'cache' => [

        /*
         * By default all permissions are cached for 24 hours to speed up performance.
         * When permissions or roles are updated the cache is flushed automatically.
         */

        'expiration_time' => \DateInterval::createFromDateString('24 hours'),

        /*
         * The cache key used to store all permissions.
         */

        'key' => 'spatie.permission.cache',

        /*
         * You may optionally indicate a specific cache driver to use for permission and
         * role caching using any of the `store` drivers listed in the cache.php config
         * file. Using 'default' here means to use the `default` set in cache.php.
         */

        'store' => 'default',
    ],
];

#### Inizio File: /home/fabio/EGI/config/queue.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];

#### Inizio File: /home/fabio/EGI/config/sanctum.php ####

<?php

use Laravel\Sanctum\Sanctum;

return [

    /*
    |--------------------------------------------------------------------------
    | Stateful Domains
    |--------------------------------------------------------------------------
    |
    | Requests from the following domains / hosts will receive stateful API
    | authentication cookies. Typically, these should include your local
    | and production domains which access your API via a frontend SPA.
    |
    */

    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
        '%s%s',
        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
        Sanctum::currentApplicationUrlWithPort()
    ))),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Guards
    |--------------------------------------------------------------------------
    |
    | This array contains the authentication guards that will be checked when
    | Sanctum is trying to authenticate a request. If none of these guards
    | are able to authenticate the request, Sanctum will use the bearer
    | token that's present on an incoming request for authentication.
    |
    */

    'guard' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | Expiration Minutes
    |--------------------------------------------------------------------------
    |
    | This value controls the number of minutes until an issued token will be
    | considered expired. This will override any values set in the token's
    | "expires_at" attribute, but first-party sessions are not affected.
    |
    */

    'expiration' => null,

    /*
    |--------------------------------------------------------------------------
    | Token Prefix
    |--------------------------------------------------------------------------
    |
    | Sanctum can prefix new tokens in order to take advantage of numerous
    | security scanning initiatives maintained by open source platforms
    | that notify developers if they commit tokens into repositories.
    |
    | See: https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning
    |
    */

    'token_prefix' => env('SANCTUM_TOKEN_PREFIX', ''),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Middleware
    |--------------------------------------------------------------------------
    |
    | When authenticating your first-party SPA with Sanctum you may need to
    | customize some of the middleware Sanctum uses while processing the
    | request. You may change the middleware listed below as required.
    |
    */

    'middleware' => [
        'authenticate_session' => Laravel\Sanctum\Http\Middleware\AuthenticateSession::class,
        'encrypt_cookies' => Illuminate\Cookie\Middleware\EncryptCookies::class,
        'validate_csrf_token' => Illuminate\Foundation\Http\Middleware\ValidateCsrfToken::class,
    ],

];

#### Inizio File: /home/fabio/EGI/config/services.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];

#### Inizio File: /home/fabio/EGI/config/session.php ####

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];

#### Inizio File: /home/fabio/EGI/database/factories/CollectionFactory.php ####

<?php

namespace Database\Factories;

use App\Models\Collection;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

class CollectionFactory extends Factory
{
    protected $model = Collection::class;

    public function definition()
    {
        return [
            'creator_id' => User::factory(), // Associa automaticamente un nuovo utente
            'owner_id' => null, // Sarà impostato manualmente
            'epp_id' => 2,
            'collection_name' => $this->faker->word . "'s Collection",
            'description' => $this->faker->sentence,
            'type' => 'image', // Default: standard collection
            'status' => 'draft', // Default: draft
            'is_published' => false,
            'position' => 1,
            'EGI_number' => $this->faker->randomDigit,
            'floor_price' => $this->faker->randomFloat(2, 0, 100), // Prezzo minimo casuale
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/TeamFactory.php ####

<?php

namespace Database\Factories;

use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Team>
 */
class TeamFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => $this->faker->unique()->company(),
            'user_id' => User::factory(),
            'personal_team' => true,
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/UserFactory.php ####

<?php

namespace Database\Factories;

use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Spatie\Permission\Models\Role;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'), // Default password
            'two_factor_secret' => null,
            'two_factor_recovery_codes' => null,
            'remember_token' => Str::random(10),
            'profile_photo_path' => null,
            'wallet' => Str::random(42), // Genera un indirizzo wallet casuale
            'wallet_balance' => $this->faker->randomFloat(2, 0, 1000), // Saldo casuale
        ];
    }

    /**
     * Assegna il ruolo di creator all'utente dopo la creazione.
     */
    public function configure(): static
    {
        return $this->afterCreating(function (User $user) {
            // Recupera il ruolo di creator o crealo se non esiste
            $role = Role::find(7) ?? Role::firstOrCreate(['id' => 7, 'name' => 'creator']);

            // Assegna il ruolo all'utente
            $user->assignRole($role);
        });
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/database/factories/WalletFactory.php ####

<?php

namespace Database\Factories;

use App\Models\Wallet;
use App\Models\Collection;
use Illuminate\Database\Eloquent\Factories\Factory;

class WalletFactory extends Factory
{
    protected $model = Wallet::class;

    public function definition()
    {
        return [
            'collection_id' => Collection::factory(),
            'platform_role' => $this->faker->randomElement(['Frangette', 'Mediator', 'Creator']),
            'wallet' => $this->faker->unique()->regexify('[a-zA-Z0-9]{42}'),
            'royalty_mint' => $this->faker->randomFloat(2, 0, 50),
            'royalty_rebind' => $this->faker->randomFloat(2, 0, 10),
        ];
    }
}

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000000_create_users_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->foreignId('current_team_id')->nullable();
            $table->string('profile_photo_path', 2048)->nullable();

            // Add last_name fields
            $table->string('last_name')->nullable();

            // Add language and wallet fields
            $table->string('language', 2)->nullable();
            $table->text('wallet')->nullable();
            $table->decimal('wallet_balance', 20, 4)->default(0.00)->nullable();
            $table->boolean('terms')->default(false)->nullable();

            $table->string('icon_style', 20)->nullable();

            // Biography fields
            $table->string('bio_title', 50)->nullable();
            $table->text('bio_story')->nullable();

            // Job fields
            $table->string('title', 50)->nullable();
            $table->string('job_role', 40)->nullable();
            $table->string('username', 40)->nullable()->unique();
            $table->string('usertype', 10)->default('creator');

            // Address fields
            $table->string('street')->nullable();
            $table->string('city', 100)->nullable();
            $table->string('region', 100)->nullable();
            $table->string('state', 20)->nullable();
            $table->string('zip', 20)->nullable();

            // Phone fields
            $table->string('home_phone', 20)->nullable();
            $table->string('cell_phone', 20)->nullable();
            $table->string('work_phone', 20)->nullable();

            // Social media fields
            $table->text('site_url')->nullable();
            $table->text('facebook')->nullable();
            $table->text('social_x')->nullable();
            $table->text('tiktok')->nullable();
            $table->text('instagram')->nullable();
            $table->text('snapchat')->nullable();
            $table->text('twitch')->nullable();
            $table->text('linkedin')->nullable();
            $table->text('discord')->nullable();
            $table->text('telegram')->nullable();
            $table->string('other')->nullable();

            // Personal info
            $table->date('birth_date')->nullable();

            // Tax and document fields
            $table->string('fiscal_code', 16)->nullable()->unique();
            $table->string('tax_id_number', 11)->nullable()->unique();
            $table->string('doc_typo', 30)->nullable();
            $table->string('doc_num', 30)->nullable()->unique();
            $table->date('doc_issue_date')->nullable();
            $table->date('doc_expired_date')->nullable();
            $table->string('doc_issue_from')->nullable();
            $table->string('doc_photo_path_f', 2048)->nullable();
            $table->string('doc_photo_path_r', 2048)->nullable();

            // Organization fields
            $table->string('org_name')->nullable();
            $table->string('org_email', 256)->nullable();
            $table->string('org_street')->nullable();
            $table->string('org_city', 100)->nullable();
            $table->string('org_region', 100)->nullable();
            $table->string('org_state', 20)->nullable();
            $table->string('org_zip', 20)->nullable();
            $table->string('org_site_url', 2048)->nullable();
            $table->text('annotation')->nullable();
            $table->string('org_phone_1', 20)->nullable();
            $table->string('org_phone_2', 20)->nullable();
            $table->string('org_phone_3', 20)->nullable();
            $table->string('rea', 30)->nullable()->unique();
            $table->string('org_fiscal_code', 20)->nullable()->unique();
            $table->string('org_vat_number', 20)->nullable()->unique();

            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000001_create_cache_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/0001_01_01_000002_create_jobs_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_063504_add_two_factor_columns_to_users_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Laravel\Fortify\Fortify;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->text('two_factor_secret')
                ->after('password')
                ->nullable();

            $table->text('two_factor_recovery_codes')
                ->after('two_factor_secret')
                ->nullable();

            if (Fortify::confirmsTwoFactorAuthentication()) {
                $table->timestamp('two_factor_confirmed_at')
                    ->after('two_factor_recovery_codes')
                    ->nullable();
            }
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(array_merge([
                'two_factor_secret',
                'two_factor_recovery_codes',
            ], Fortify::confirmsTwoFactorAuthentication() ? [
                'two_factor_confirmed_at',
            ] : []));
        });
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_163525_create_personal_access_tokens_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('personal_access_tokens', function (Blueprint $table) {
            $table->id();
            $table->morphs('tokenable');
            $table->string('name');
            $table->string('token', 64)->unique();
            $table->text('abilities')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('personal_access_tokens');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_07_165429_create_permission_tables.php ####

<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        $teams = config('permission.teams');
        $tableNames = config('permission.table_names');
        $columnNames = config('permission.column_names');
        $pivotRole = $columnNames['role_pivot_key'] ?? 'role_id';
        $pivotPermission = $columnNames['permission_pivot_key'] ?? 'permission_id';

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not loaded. Run [php artisan config:clear] and try again.');
        }
        if ($teams && empty($columnNames['team_foreign_key'] ?? null)) {
            throw new \Exception('Error: team_foreign_key on config/permission.php not loaded. Run [php artisan config:clear] and try again.');
        }

        Schema::create($tableNames['permissions'], function (Blueprint $table) {
            //$table->engine('InnoDB');
            $table->bigIncrements('id'); // permission id
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });

        Schema::create($tableNames['roles'], function (Blueprint $table) use ($teams, $columnNames) {
            //$table->engine('InnoDB');
            $table->bigIncrements('id'); // role id
            if ($teams || config('permission.testing')) { // permission.testing is a fix for sqlite testing
                $table->unsignedBigInteger($columnNames['team_foreign_key'])->nullable();
                $table->index($columnNames['team_foreign_key'], 'roles_team_foreign_key_index');
            }
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();
            if ($teams || config('permission.testing')) {
                $table->unique([$columnNames['team_foreign_key'], 'name', 'guard_name']);
            } else {
                $table->unique(['name', 'guard_name']);
            }
        });

        Schema::create($tableNames['model_has_permissions'], function (Blueprint $table) use ($tableNames, $columnNames, $pivotPermission, $teams) {
            $table->unsignedBigInteger($pivotPermission);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_permissions_model_id_model_type_index');

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_permissions_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            } else {
                $table->primary([$pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            }

        });

        Schema::create($tableNames['model_has_roles'], function (Blueprint $table) use ($tableNames, $columnNames, $pivotRole, $teams) {
            $table->unsignedBigInteger($pivotRole);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_roles_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            } else {
                $table->primary([$pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            }
        });

        Schema::create($tableNames['role_has_permissions'], function (Blueprint $table) use ($tableNames, $pivotRole, $pivotPermission) {
            $table->unsignedBigInteger($pivotPermission);
            $table->unsignedBigInteger($pivotRole);

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');

            $table->primary([$pivotPermission, $pivotRole], 'role_has_permissions_permission_id_role_id_primary');
        });

        app('cache')
            ->store(config('permission.cache.store') != 'default' ? config('permission.cache.store') : null)
            ->forget(config('permission.cache.key'));
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        $tableNames = config('permission.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['role_has_permissions']);
        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['model_has_permissions']);
        Schema::drop($tableNames['roles']);
        Schema::drop($tableNames['permissions']);
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_14_090414_create_collections_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
{
    Schema::create('collections', function (Blueprint $table) {
        $table->id();

        // Relazioni
        $table->foreignId('creator_id')->nullable()->constrained('users')->onDelete('cascade'); // Creator della collection
        $table->foreignId('owner_id')->nullable()->constrained('users')->onDelete('cascade');   // Owner della collection

        // Identificatori esterni
        $table->bigInteger('epp_id')->nullable()->index();          // ID del progetto EPP
        $table->bigInteger('EGI_asset_id')->nullable()->index();    // ID dell'asset EGI

        // Dati della collection
        $table->string('collection_name')->index()->nullable();     // Nome della collection
        $table->text('description')->nullable();                   // Descrizione
        $table->string('type', 10)->index()->nullable();           // Tipo (es. standard, single_egi)

        // Immagini e percorsi
        $table->string('image_banner', 1024)->nullable();          // Banner
        $table->string('image_card', 1024)->nullable();            // Card
        $table->string('image_avatar', 1024)->nullable();          // Avatar
        $table->string('path_image_to_ipfs')->nullable();          // Percorso immagine IPFS
        $table->string('url_image_ipfs')->nullable();              // URL immagine IPFS
        $table->string('url_collection_site')->nullable();         // URL del sito della collection

        // Stato e pubblicazione
        $table->string('status')->default('draft')->index();       // Stato: draft, pending_approval, published
        $table->boolean('is_published')->default(false)->index();  // Booleano per indicare se è pubblicata

        // Dati associati agli EGI
        $table->integer('position')->nullable();                  // Posizione della collection
        $table->integer('EGI_number')->nullable();                // Numero di EGI nella collection
        $table->float('floor_price')->nullable();                 // Prezzo minimo
        $table->text('EGI_asset_roles')->nullable();              // Ruoli relativi all'EGI

        // Timestamps
        $table->timestamps();
        $table->softDeletes(); // Soft delete per gestione più flessibile delle eliminazioni
    });


}


    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('collections');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_11_18_122016_create_icons_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('icons', function (Blueprint $table) {
            $table->id();
            $table->string('name'); // Nome dell'icona, es: 'camera', 'user'
            $table->string('style'); // Stile dell'icona, es: 'elegant', 'classic'
            $table->string('type'); // Tipo dell'icona, es: 'solid', 'regular', 'light', 'duotone', 'brands'
            $table->string('class'); // Altezza dell'icona, es: '448'
            $table->text('html'); // Contenuto HTML generico (SVG, tag <i>, ecc.)
            $table->string('host'); // Host di provenienza dell'icona, es: 'fontawesome.com'
            $table->string('name_on_host'); // Nome dell'icona sul host di provenienza, es: 'camera'
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('icons');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_10_171308_create_egi_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('egi', function (Blueprint $table) {
            $table->id();

            // Relazione con la tabella collections
            $table->foreignId('collection_id')
                  ->constrained('collections')
                  ->onUpdate('cascade')
                  ->onDelete('restrict');

            // Campi esistenti
            $table->unsignedBigInteger('key_file')->nullable()->index();
            $table->string('token_EGI', 255)->nullable();
            $table->json('jsonMetadata')->nullable();
            $table->unsignedBigInteger('user_id')->nullable()->index();
            $table->unsignedBigInteger('auction_id')->nullable()->index();
            $table->unsignedBigInteger('owner_id')->nullable()->index();
            $table->unsignedBigInteger('drop_id')->nullable()->index();
            $table->string('upload_id', 255)->nullable();
            $table->string('creator', 255)->nullable();
            $table->string('owner_wallet', 255)->nullable();
            $table->string('drop_title', 255)->nullable();
            $table->string('title', 60)->index()->nullable();
            $table->text('description')->nullable();
            $table->string('extension', 10)->nullable();
            $table->boolean('media')->default(false)->nullable();
            $table->string('type', 10)->nullable();
            $table->integer('bind')->nullable();
            $table->integer('paired')->nullable();
            $table->decimal('price', 20, 2)->nullable();
            $table->decimal('floorDropPrice', 20, 2)->nullable();
            $table->integer('position')->nullable();
            $table->date('creation_date')->nullable();
            $table->text('size')->nullable();
            $table->text('dimension')->nullable();
            $table->boolean('is_published')->default(false)->nullable();
            $table->boolean('mint')->default(false)->nullable();
            $table->boolean('rebind')->default(true)->nullable();
            $table->text('file_crypt')->nullable();
            $table->text('file_hash')->nullable();
            $table->text('file_IPFS')->nullable();
            $table->text('file_mime')->nullable();

            // Nuovi campi suggeriti
            $table->string('status', 20)->default('draft');
            $table->boolean('is_public')->default(true);
            $table->foreignId('updated_by')->nullable()->constrained('users');

            // Soft delete
            $table->softDeletes();

            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('egi');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_10_171834_create_egi_audits_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('egi_audits', function (Blueprint $table) {
            $table->id();
            $table->foreignId('egi_id')->constrained('egi')->onDelete('cascade');
            $table->foreignId('user_id')->constrained('users'); // Utente che ha effettuato la modifica
            $table->json('old_values')->nullable();
            $table->json('new_values')->nullable();
            $table->string('action'); // create, update, delete
            $table->timestamps();
        });

    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('egi_audits');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_23_143829_create_notifications_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('notifications', function (Blueprint $table) {
            $table->char('id', 36)->primary(); // Utilizza char(36) per l'UUID
            $table->string('type');
            $table->morphs('notifiable');
            $table->string('outcome')->nullable()->default('pending'); // Nuovo campo per l'esito
            $table->text('data');
            $table->timestamp('read_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('notifications');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_102951_create_collection_user_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('collection_user', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Relazione con collections
            $table->string('status')->default('pending')->index();
            $table->foreignId('user_id')->constrained()->onDelete('cascade'); // Relazione con users
            $table->string('role')->nullable(); // Ruolo (es. admin, editor, viewer)
            $table->boolean('is_owner')->default(false); // Indica il proprietario della collection
            $table->timestamp('joined_at')->nullable(); // Data di aggiunta
            $table->timestamp('removed_at')->nullable(); // Data di rimozione
            $table->json('metadata')->nullable(); // Eventuali dati dinamici
            $table->timestamps();
            $table->unique(['collection_id', 'user_id']); // Relazione unica per collection-user
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('collection_user');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_104339_create_wallets_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('wallets', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Relazione con collections
            $table->foreignId('user_id')->nullable()->constrained('users')->nullOnDelete(); // Nullable per wallet anonimi
            $table->string('wallet', 255)->nullable(); // Indirizzo del wallet
            $table->string('platform_role', 25)->nullable(); // Tipo di wallet (es. 'metamask', 'sollet')
            $table->float('royalty_mint')->nullable(); // Percentuale della prima vendita
            $table->float('royalty_rebind')->nullable(); // Percentuale del mercato secondario
            $table->boolean('is_anonymous')->default(true); // Indica se il wallet è anonimo
            $table->json('metadata')->nullable(); // Eventuali dati dinamici
            $table->timestamps();
        });


    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('wallets');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_27_104350_create_wallet_change_approvals_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('wallet_change_approvals', function (Blueprint $table) {
            $table->id();
            $table->foreignId('wallet_id')->constrained('wallets')->onDelete('cascade')->unsignedBigInteger(); // Relazione con il wallet
            $table->foreignId('requested_by_user_id')->constrained('users')->onDelete('cascade'); // Chi richiede la modifica
            $table->foreignId('approver_user_id')->nullable()->constrained('users')->onDelete('cascade'); // Chi approva (se esiste)
            $table->string('change_type'); // Esempi: 'creation', 'update', 'delete'
            // notification_id
            $table->string('notification_id')->nullable(); // ID della notifica associata
            $table->json('change_details'); // Dettagli della modifica (es. vecchi e nuovi valori)
            $table->string('status')->default('pending'); // Valori: 'pending', 'approved', 'rejected'
            $table->string('approval')->default('approved'); // Valori: 'pending', 'approved'
            $table->string('type')->default('update'); // Valori: 'update', 'create'
            $table->json('previous_values')->nullable(); // Per tenere traccia dei vecchi valori in caso di rifiuto
            $table->text('rejection_reason')->nullable(); // Motivo del rifiuto, se applicabile
            $table->timestamps();
        });

    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('wallet_change_approvals');
    }
};

#### Inizio File: /home/fabio/EGI/database/migrations/2024_12_28_131757_create_collection_invitations_table.php ####

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Esegui la migrazione.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('collection_invitations', function (Blueprint $table) {
            $table->id();
            $table->foreignId('collection_id')->constrained()->onDelete('cascade'); // Associazione alla collection
            $table->string('email'); // Email dell'invitato
            $table->string('role'); // Ruolo proposto per l'invitato
            $table->enum('status', ['pending', 'accepted', 'rejected'])->default('pending'); // Stato dell'invito
            $table->timestamps();
        });
    }

    /**
     * Elimina la migrazione.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('collection_invitations');
    }
};

#### Inizio File: /home/fabio/EGI/database/seeders/AdminUserSeeder.php ####

<?php

declare(strict_types=1);

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;

class AdminUserSeeder extends Seeder
{
    public function run(): void
    {
        $adminEmail = 'fabiocherici@gmail.com';

        $user = User::where('email', $adminEmail)->first();

        if (!$user) {
            $this->command->error("Utente con email {$adminEmail} non trovato!");
            return;
        }

        $adminRole = Role::where('name', 'admin')->first();

        if (!$adminRole) {
            $this->command->error('Ruolo admin non trovato! Esegui prima il seeder dei ruoli.');
            return;
        }

        $user->assignRole($adminRole);
        $this->command->info("Ruolo admin assegnato con successo a {$adminEmail}!");
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/DatabaseSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        $this->call([
            InitialSetupSeeder::class,
            RolesAndPermissionsSeeder::class,
            IconSeeder::class,
            FakeUserSeeder::class,
        ]);
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/FakeUserSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Collection;
use App\Traits\HasCreateDefaultCollectionWallets;

class FakeUserSeeder extends Seeder
{
    use HasCreateDefaultCollectionWallets;

    public function run()
    {
        User::factory(5)->create()->each(function ($user) {
            // Creazione della collection
            $collection = Collection::factory()->create([
                'creator_id' => $user->id,
                'owner_id' => $user->id,
            ]);

            // Associazione nella tabella pivot collection_user
            $collection->users()->attach($user->id, ['role' => 'creator', 'is_owner' => true]);

            // Creazione dei wallet di default
            $this->generateDefaultWallets($collection, $user->wallet, $user->id);
        });

        $this->command->info('Creati 5 utenti con relative collection e wallet di default.');
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/IconSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Icon;

class IconSeeder extends Seeder
{
    public function run()
    {
        // Carica le icone dal file di configurazione
        $icons = config('icons.styles.elegant');

        foreach ($icons as $icon) {
            Icon::updateOrCreate(
                [
                    'name' => $icon['name'],
                    'style' => 'elegant', // Stile fisso (puoi modificarlo dinamicamente se necessario)
                ],
                [
                    'type' => $icon['type'],
                    'class' => $icon['class'],
                    'html' => $icon['html'],
                    'host' => $icon['host'],
                    'name_on_host' => $icon['name_on_host'],
                ]
            );
        }
    }
}


#### Inizio File: /home/fabio/EGI/database/seeders/InitialSetupSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Collection;
use Spatie\Permission\Models\Role;
use Illuminate\Support\Facades\Hash;

class InitialSetupSeeder extends Seeder
{
    public function run(): void
    {
        $this->createUserWithCollection([
            'id' => 1,
            'name' => 'Natan',
            'email' => 'natan@gmail.com',
            'password' => 'password',
            'role' => 'superadmin',
            'collection_name' => 'Natan\'s Collection',
        ]);

        $this->createUserWithCollection([
            'id' => 2,
            'name' => 'EPP',
            'email' => 'epp@gmail.com',
            'password' => 'password',
            'role' => 'admin',
            'collection_name' => 'EPP\'s Collection',
        ]);

        $this->createUserWithCollection([
            'id' => 3,
            'name' => 'Fabio',
            'email' => 'fabiocherici@gmail.com',
            'password' => 'password',
            'role' => 'creator',
            'collection_name' => 'Fabio\'s Collection',
        ]);

        $this->command->info('Tutti i primi account e relative collections creati con successo.');
    }

    private function createUserWithCollection(array $data): void
    {
        // Creazione o aggiornamento dell'utente
        $user = User::updateOrCreate(
            ['id' => $data['id']],
            [
                'name' => $data['name'],
                'email' => $data['email'],
                'password' => Hash::make($data['password']),
                'created_at' => now(),
                'updated_at' => now(),
            ]
        );

        // Creazione o aggiornamento del ruolo
        $role = Role::firstOrCreate(['name' => $data['role']]);

        if (!$user->hasRole($data['role'])) {
            $user->assignRole($role);
        }

        // Creazione della collection
        $collection = Collection::updateOrCreate(
            [
                'creator_id' => $user->id,
                'collection_name' => $data['collection_name'],
            ],
            [
                'owner_id' => $user->id,
                'description' => "{$data['collection_name']} - Default collection for {$data['name']}",
                'type' => 'standard',
                'status' => 'draft',
                'is_published' => false,
                'position' => 1,
                'EGI_number' => 0,
                'floor_price' => 0.0,
                'created_at' => now(),
                'updated_at' => now(),
            ]
        );

        // Associazione del ruolo di proprietario nella tabella pivot collection_user
        $collection->users()->attach($user->id, ['role' => 'creator', 'is_owner' => true]);
    }
}


#### Inizio File: /home/fabio/EGI/database/seeders/RolesAndPermissionsSeeder.php ####

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\PermissionRegistrar;

class RolesAndPermissionsSeeder extends Seeder
{
    /**
     * Permessi e ruoli predefiniti.
     */
    private $permissions = [
        // Permessi Generali

        'manage_roles',
        'manage_permissions',

        // Permessi per il Team
        'create_team',
        'update_team',
        'delete_team',
        'add_team_member',
        'remove_team_member',
        'modify_team_roles',

        // Permessi per le Collection
        'create_collection',
        'update_collection',
        'update_collection_image_header',
        'delete_collection',
        'read_collection_header',

        // Permessi per gli EGI
        'create_EGI',
        'update_EGI',
        'delete_EGI',

        // Permessi per i Wallet
        'create_wallet',
        'update_wallet',
        'approve_wallet',
        'reject_wallet',

        // Permessi per le views
        'view_dashboard',
        'view_team',
        'view_collection',
        'view_collection_header',
        'view_EGI',
        'view_user',
        'view_profile',
        'view_bio',
        'view_settings',
        'view_notifications',
        'view_logs',
    ];

    private $roles = [
        'superadmin' => ['all'],
        'creator' => [
            // Team
            'create_team', 'read_team', 'update_team', 'delete_team',
            'add_team_member', 'remove_team_member', 'modify_team_roles',

            // Collection
            'create_collection', 'update_collection', 'delete_collection','update_collection_image_header',

            // EGI
            'create_EGI', 'update_EGI', 'delete_EGI',

            // Wallet
            'create_wallet', 'update_wallet', 'approve_wallet', 'reject_wallet',

            // Views
            'view_user', 'view_profile', 'view_team', 'view_dashboard', 'view_bio', 'view_settings',
            'view_notifications', 'view_logs',  'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'admin' => [
            // Team
            'add_team_member', 'remove_team_member', 'modify_team_roles',

            // Collection
            'update_collection', 'update_collection_image_header',

            // EGI
            'create_EGI', 'update_EGI', 'delete_EGI',

            // Views
            'view_user', 'view_profile', 'view_team', 'view_dashboard', 'view_bio', 'view_settings',
            'view_notifications', 'view_logs',  'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'editor' => [

            // EGI
            'update_EGI',

            // Collection
            'update_collection_image_header',

            // Views
            'view_profile', 'view_team', 'view_dashboard', 'view_collection', 'view_EGI', 'view_collection_header'
        ],

        'guest' => [
            // Collection
            'view_collection_header', 'view_dashboard',

            // EGI
            'view_EGI',
        ],
    ];

    public function run(): void
    {
        // Reset cached roles and permissions
        app()[PermissionRegistrar::class]->forgetCachedPermissions();

        // Creare tutti i permessi
        foreach ($this->permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
        }

        // Creare i ruoli e assegnare i permessi
        foreach ($this->roles as $roleName => $rolePermissions) {
            $role = Role::firstOrCreate(['name' => $roleName]);

            if (in_array('all', $rolePermissions)) {
                $role->givePermissionTo(Permission::all());
            } else {
                $role->givePermissionTo($rolePermissions);
            }
        }

        $this->command->info('Ruoli e permessi creati con successo.');
    }
}

#### Inizio File: /home/fabio/EGI/database/seeders/SuperAdminUserSeeder.php ####

<?php

declare(strict_types=1);

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;

class SuperAdminUserSeeder extends Seeder
{
    public function run(): void
    {
        $adminEmail = 'natan@gmail.com';

        $user = User::where('email', $adminEmail)->first();

        if (!$user) {
            $this->command->error("Utente con email {$adminEmail} non trovato!");
            return;
        }

        $adminRole = Role::where('name', 'superadmin')->first();

        if (!$adminRole) {
            $this->command->error('Ruolo admin non trovato! Esegui prima il seeder dei ruoli.');
            return;
        }

        $user->assignRole($adminRole);
        $this->command->info("Ruolo admin assegnato con successo a {$adminEmail}!");
    }
}

#### Inizio File: /home/fabio/EGI/helpers.php ####

<?php

use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

if (!function_exists('livewire_tmp_path')) {
    function livewire_tmp_path() {
        $disk = config('livewire.temporary_file_upload.disk', 'local');
        $directory = config('livewire.temporary_file_upload.directory', 'livewire-tmp');

        if (is_null($directory)) {
            $directory = 'livewire-tmp';
        }

        return Storage::disk($disk)->path($directory);
    }
}

if (!function_exists('getDynamicBucketUrl')) {
    /**
     * Determina dinamicamente l'URL del bucket tra Digital Ocean e CDN.
     *
     * @return string
     */
    function getDynamicBucketUrl(): string
    {
        $doUrl = config('paths.hosting.Digital_Ocean.url');
        $cdnUrl = config('paths.hosting.CDN.url');

        // Controlla la disponibilità di Digital Ocean
        if (checkUrlAvailability($doUrl)) {
            Log::info("Utilizzo di Digital Ocean: {$doUrl}");
            return $doUrl;
        }

        // Controlla la disponibilità della CDN
        if (checkUrlAvailability($cdnUrl)) {
            Log::info("Utilizzo della CDN: {$cdnUrl}");
            return $cdnUrl;
        }

        // Fallback su un valore di default
        $defaultUrl = '/storage/';
        Log::warning("Nessun servizio disponibile, uso il disco locale: {$defaultUrl}");
        return $defaultUrl;
    }

    /**
     * Verifica se un URL è disponibile.
     *
     * @param string $url
     * @return bool
     */
    function checkUrlAvailability(string $url): bool
    {
        try {
            $response = Http::head($url);
            return $response->successful();
        } catch (\Exception $e) {
            Log::error("Errore nella verifica dell'URL: {$url}", ['error' => $e->getMessage()]);
            return false;
        }
    }
}

#### Inizio File: /home/fabio/EGI/newOwner.php ####

<?php

use App\Models\Team;
use App\Models\User;

$teams = Team::all();

foreach ($teams as $team) {
    $team->users()->syncWithoutDetaching([$team->user_id => ['role' => 'creator']]);
}

#### Inizio File: /home/fabio/EGI/public/index.php ####

<?php

use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
(require_once __DIR__.'/../bootstrap/app.php')
    ->handleRequest(Request::capture());

#### Inizio File: /home/fabio/EGI/resources/lang/de/collection.php ####

<?php
/*
|--------------------------------------------------------------------------
| Traduzione in tedesco di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
|
 */

return [
    'invite_collection_member' => 'Mitglied zur Sammlung einladen',
    'came_back_to_collection' => 'Zurück zur Sammlung',
    'confirm_delete_title' => 'Sind Sie sicher?',
    'confirm_delete_text' => 'Diese Aktion löscht das :type dauerhaft!',
    'confirm_delete_button' => 'Ja, löschen!',
    'cancel_delete_button' => 'Abbrechen',
    'deleted_title' => 'Gelöscht!',
    'deleted_text' => 'Das Bannerbild wurde erfolgreich gelöscht.',
    'delete_card' => 'Karte löschen',
    'delete_banner' => 'Banner löschen',
    'delete_avatar' => 'Avatar löschen',
    'delete_EGI' => 'EGI löschen',
    'save_card' => 'Karte speichern',
    'save_banner' => 'Banner speichern',
    'save_avatar' => 'Avatar speichern',
    'save_EGI' => 'EGI speichern',
    'create_validation_error' => 'Validierungsfehler',
    'creation_failed' => 'Erstellung fehlgeschlagen',
    'collection_delete' => 'Sammlung löschen',
    'avatar_image' => 'Avatarbild',
    'card_image' => 'Kartenbild',
    'EGI_image' => 'EGI-Bild',
    'banner_image' => 'Bannerbild',
    'edit_collection_data' => 'Daten der Sammlung bearbeiten',
    'modifies_EGI' => 'EGI ändern',
    'new_collection' => 'Neue Sammlung',
    'open_collection' => 'Sammlung öffnen',
    'team_members_description' => 'Hier können Sie alle Teammitglieder sehen, die Zugriff auf diese Sammlung haben',
    'collection_members' => 'Sammlungsmitglieder',
    'manage_head_images' => 'Kopfbilder verwalten',
    'manage_collection' => 'Sammlung verwalten',
    'collection' => 'Sammlung',
    'collections' => 'Sammlungen',
    'collection_data' => 'Kopfdaten der Sammlung',
    'collection_name' => 'Name der Sammlung',
    'collection_id' => 'ID der Sammlung',
    'collection_description_placeholder' => 'Geben Sie eine Beschreibung der Sammlung ein',
    'collection_description_suggest' => 'Eine klare und ansprechende Beschreibung hilft Benutzern, Ihre Sammlung besser zu verstehen und erhöht ihre Attraktivität. Erzählen Sie, was sie einzigartig macht!',
    'collection_description' => 'Geben Sie alle Daten zur Sammlung ein, seien Sie sehr genau',
    'collection_image' => 'Bild der Sammlung',
    'collection_image_alt' => 'Alternativer Text des Sammlungsbildes',
    'add_epp' => 'EPP hinzufügen',
    'add_epp_placeholder' => 'Geben Sie ein EPP ein',
    'need_to_associate_epp' => 'Bis Sie Ihre Galerie mit einem EPP verknüpft haben, können Sie sie nicht veröffentlichen',
    'EGI_floor_price' => 'Mindestpreis EGI',
    'set_base_EcoNFT_price' => 'Legen Sie einen Basispreis fest, den Sie für jedes EGI dieser Sammlung berechnen möchten',
    'collection_site_URL' => 'URL der Sammlungsseite',
    'collection_site_URL_suggest' => 'Vorschlag: Geben Sie die URL der Sammlungsseite ein',
    'position_for_mor_than_one_collection' => 'Wenn Sie mehr als eine Sammlung haben, können Sie entscheiden, an welcher Stelle Sie diese platzieren möchten',
    'publish_collection' => 'Die Sammlung veröffentlichen',
    'image_for_EcoNFT_collection' => 'Bild für die EGI-Sammlung',
    'image_description' => 'Dies ist das Bild, das die gesamte Sammlung darstellt',
    'image_alt' => 'Bild, das die gesamte Sammlung darstellt',
    'image_title' => 'Bild, das die gesamte Sammlung darstellt',
    'select_new_EcoNFT_photo' => 'Wählen Sie ein neues Foto für das EGI aus',
    'switch_collection' => 'Sammlung wechseln',
    'goto_collection' => 'Zur Sammlung gehen',
    'type' => 'Typ',
    'select_content_type' => 'Wählen Sie den Inhaltstyp aus',
    'type_image' => 'Bild',
    'type_ebook' => 'E-Book',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'EGI-Nummer',
    'position' => 'Position',
    'updated_successfully' => 'Sammlung erfolgreich gespeichert',
    'save_failed' => 'Speichern fehlgeschlagen',
    'collection_not_found' => 'Sammlung nicht gefunden',
    'tips_to_optimize_your_collection' => 'Tipps zur Optimierung Ihrer Sammlung',
    'tips_for_your_collection_images' => 'Tipps für die Bilder Ihrer Sammlung',
    'image_section_title' => 'Bilder der Sammlung',
    'image_section_description' => 'Wählen Sie sorgfältig die Bilder aus, die Ihre Sammlung repräsentieren',
    'data_section_title' => 'Sammlungsdaten',
    'data_section_description' => 'Wählen Sie sorgfältig die Daten aus, die Ihre Sammlung repräsentieren',
    'this_is_default_collection_of_the_team' => 'Dies ist die Standardkollektion des Teams',
    'wallet' => [
        'write_royalty_mint' => 'Geben Sie den Prozentsatz der Royalties für Mint ein',
        'write_royalty_rebind' => 'Geben Sie den Prozentsatz der Royalties für Rebind ein',
        'user_role' => 'Rolle',
        'role_unknown' => 'Keine Rolle',
        'address' => 'Wallet-Adresse',
        'balance' => 'Wallet-Guthaben',
        'name' => 'Wallet-Name',
        'status' => 'Wallet-Status',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Mint-Royalties',
        'royalty_rebind' => 'Rebind-Royalties',
        'manage_wallet' => 'Wallet verwalten',
        'remove_photo' => 'Foto entfernen',
        'wallet' => 'Wallet',
        'cancellation' => 'Wallet-Stornierung',
        'select_a_wallet_connect' => 'Wählen Sie ein Wallet',
        'button_wallet_connect' => 'Ein Wallet verbinden',
        'button_wallet_disconnect' => 'Trennen',
        'create_the_wallet' => 'Erstellen Sie ein neues Wallet',
        'username' => 'Benutzername',
        'create' => 'Ein Wallet erstellen',
        'delete_wallet' => 'Sind Sie sicher, dass Sie dieses Wallet löschen möchten?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in tedesco di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Zugriff nicht autorisiert',
    'SCAN_ERROR' => 'Scan-Fehler',
    'VIRUS_FOUND' => 'Virus gefunden',
    'INVALID_FILE_EXTENSION' => 'Ungültige Dateierweiterung',
    'MAX_FILE_SIZE' => 'Die Datei darf :max Byte nicht überschreiten.',
    'INVALID_FILE_PDF' => 'Ungültige PDF-Datei',
    'MIME_TYPE_NOT_ALLOWED' => 'Dateityp nicht erlaubt.',
    'INVALID_IMAGE_STRUCTURE' => 'Ungültige Bildstruktur',
    'INVALID_FILE_NAME' => 'Ungültiger Dateiname',
    'ERROR_GETTING_PRESIGNED_URL' => 'Fehler beim Abrufen der vorab signierten URL',
    'ERROR_DURING_FILE_UPLOAD' => 'Fehler beim Hochladen der Datei',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Datei konnte nicht gespeichert werden',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Ordner konnte nicht erstellt werden',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Ordnerberechtigungen konnten nicht geändert werden',
    'IMPOSSIBLE_SAVE_FILE' => 'Datei konnte nicht gespeichert werden',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Internes Problem, der Support wurde bereits benachrichtigt',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Fehler bei der Verschlüsselung des Dateinamens',
    'IMAGICK_NOT_AVAILABLE' => 'Internes Problem, der Support wurde bereits benachrichtigt',
    'JSON_ERROR_IN_DISPATCHER' => 'JSON-Fehler im Dispatcher',
    'GENERIC_SERVER_ERROR' => 'Generischer Serverfehler, das technische Team wurde informiert',
    'FILE_NOT_FOUND' => 'Datei nicht gefunden',
    'UNEXPECTED_ERROR' => 'Generischer Serverfehler, das technische Team wurde informiert',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Fehler beim Löschen der lokalen temporären Datei',

    'unexpected_error' => 'Unerwarteter Fehler',
    'scan_error' => 'Fehler beim Scannen',
    'virus_found' => 'Virus gefunden',
    'required' => 'Das Feld ist erforderlich.',
    'file' => 'Beim Hochladen der Datei ist ein Fehler aufgetreten.',
    'file_extension_not_valid' => 'Dateierweiterung ungültig',
    'mimes' => 'Die Datei muss vom Typ sein: :values.',
    'max_file_size' => 'Die Datei darf :max Byte nicht überschreiten.',
    'invalid_pdf_file' => 'Ungültige PDF-Datei',
    'mime_type_not_allowed' => 'Dateityp nicht erlaubt.',
    'invalid_image_structure' => 'Ungültige Bildstruktur',
    'invalid_file_name' => 'Ungültiger Dateiname',
    'error_getting_presigned_URL' => 'Fehler beim Abrufen der vorab signierten URL',
    'error_getting_presigned_URL_for_user' => 'Fehler beim Abrufen der vorab signierten URL für Benutzer',
    'error_during_file_upload' => 'Fehler beim Hochladen der Datei',
    'error_deleting_file' => 'Fehler beim Löschen der Datei',
    'upload_finished' => 'Hochladen',
    'some_errors' => 'einige Fehler',
    'upload_failed' => 'Hochladen fehlgeschlagen',
    'error_creating_folder' => 'Fehler beim Erstellen des Ordners',
    'error_changing_folder_permissions' => 'Fehler beim Ändern der Ordnerberechtigungen',
    'local_save_failed_file_saved_to_external_disk_only' => 'Lokales Speichern fehlgeschlagen, Datei nur auf externer Festplatte gespeichert',
    'external_save_failed_file_saved_to_local_disk_only' => 'Externe Speicherung fehlgeschlagen, Datei nur auf lokaler Festplatte gespeichert',
    'file_scanning_may_take_a_long_time_for_each_file' => 'Das Scannen von Dateien kann für jede Datei viel Zeit in Anspruch nehmen',
    'all_files_are_saved' => 'Alle Dateien sind gespeichert',
    'loading_finished_you_can_proceed_with_saving' => 'Das Laden ist abgeschlossen, Sie können mit dem Speichern fortfahren',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Das Laden ist abgeschlossen, Sie können mit dem Speichern und Scannen fortfahren',
    'im_uploading_the_file' => 'Ich lade die Datei hoch',


    'exception' => [
        'NotAllowedTermException' => 'Nicht erlaubter Begriff',
        'MissingCategory' => 'Sie müssen eine Kategorie eingeben.',
        'DatabaseException' => 'Ein Datenbankfehler ist aufgetreten',
        'ValidationException' => 'Ein Validierungsfehler ist aufgetreten',
        'HttpException' => 'Ein HTTP-Fehler ist aufgetreten',
        'ModelNotFoundException' => 'Modell nicht gefunden',
        'QueryException' => 'Abfragefehler',
        'MintingException' => 'Fehler beim Prägen',
        'FileNotFoundException' => 'Datei nicht gefunden',
        'InvalidArgumentException' => 'Ungültiges Argument',
        'UnexpectedValueException' => 'Unerwarteter Wert',
        'ItemNotFoundException' => 'Element nicht gefunden',
        'MultipleItemsFoundException' => 'Mehrere Elemente gefunden',
        'LogicException' => 'Logikfehler',
        'EntryNotFoundException' => 'Eintrag nicht gefunden',
        'RuntimeException' => 'Laufzeitfehler',
        'BadMethodCallException' => 'Ungültiger Methodenaufruf',
        'LockTimeoutException' => 'Sperrzeitüberschreitung',
        'InvalidIntervalException' => 'Ungültiges Intervall',
        'InvalidPeriodParameterException' => 'Ungültiger Periodenparameter',
        'EndLessPeriodException' => 'Endloses Zeitintervall',
        'UnreachableException' => 'Nicht erreichbare Ausnahme',
        'InvalidTimeZoneException' => 'Ungültige Zeitzone',
        'ImmutableException' => 'Unveränderliche Ausnahme',
        'InvalidFormatException' => 'Ungültiges Format',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Lieber Benutzer,</p>
            </br>
            <p>Der von Ihnen eingegebene Text verstößt gegen unsere Gemeinschaftsrichtlinien und -normen. Bitte ändern Sie den Inhalt und versuchen Sie es erneut.</p>
            </br>
            <p>Wenn Sie nicht verstehen, warum dieser Begriff verboten ist, lesen Sie bitte die Klauseln der Vereinbarung, die Sie zum Zeitpunkt der Registrierung akzeptiert haben.
            <p>Wir danken Ihnen für Ihr Verständnis und Ihre Mitarbeit.</p>
            </br>
            <p>Mit freundlichen Grüßen,
            <br>
            Das Frangette-Team</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Siehe die Seite mit den Gemeinschaftsregeln.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'Der ForbiddenTermChecker wurde nicht korrekt initialisiert',
    'table_not_exist' => 'Die Tabelle existiert nicht',
    'unique' => 'Dieser Wert ist bereits in Ihrer Traits-Bibliothek vorhanden.',
    'the_category_name_cannot_be_empty' => 'Der Kategoriename darf nicht leer sein',
    'nathing_to_save' => 'Nichts zu speichern',
    'an_error_occurred' => 'Hoppla! Entschuldigung, ein Fehler ist aufgetreten!',
    'error_number' => 'Fehlernummer:',
    'reason' => [
        'reason' => 'Grund',
        'wallet_not_valid' => 'Ungültige Brieftasche',
        'something_went_wrong' => 'Etwas ist schief gelaufen',
    ],
    'solution' => [
        'solution' => 'Lösung',
        'create_a_new_wallet_and_try_again' => 'Erstellen Sie eine neue Brieftasche und versuchen Sie es erneut',
        'we_are_already_working_on_solving_the_problem' => 'Wir arbeiten bereits daran, das Problem zu lösen',
    ],
    'min' => [
        'string' => 'Das Feld muss mindestens :min Zeichen lang sein.',
    ],
    'max' => [
        'string' => 'Das Feld darf maximal :max Zeichen lang sein.',
    ],
    'id_epp_not_found' => 'ID EPP nicht gefunden',
    'minting' => [
        'error_generating_token' => 'Fehler beim Generieren des Tokens',
        'insufficient_wallet_balance' => 'Unzureichendes Guthaben in der Brieftasche, um dieses EcoNFT zu kaufen',
        'error_during_save_the_metadataFile' => 'Fehler beim Speichern der Metadaten in der Datei',
        'error_during_save_the_metadata_on_database' => 'Fehler beim Speichern der Metadaten in der Datenbank',
        'error_during_create_metadata_file' => 'Fehler beim Erstellen der Metadatendatei',
        'error_during_save_the_buyer' => 'Fehler beim Speichern des Käufers',
        'buyer_not_exist' => 'Käufer existiert nicht',
        'this_wallet_does_not_belong_to_any_buyer' => 'Diese Brieftasche gehört zu keinem Käufer',
        'seller_not_exist' => 'Verkäufer existiert nicht',
        'seller_owner_not_found' => 'Verkäuferbesitzer nicht gefunden',
        'seller_wallet_address_not_found' => 'Adresse der Verkäuferbrieftasche nicht gefunden',
        'error_during_save_the_seller' => 'Fehler beim Speichern des Verkäufers',
        'error_during_save_the_buyer_transaction' => 'Fehler beim Speichern der Käufertransaktion',
        'error_during_the_saving_of_the_payment' => 'Fehler beim Speichern der Zahlung',
        'error_during_save_the_natan' => 'Fehler beim Speichern der Daten', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Fehler beim Speichern der Transaktion',
        'seller_not_found' => 'Verkäufer nicht gefunden',
        'error_during_the_minting' => 'Fehler beim Prägen',
        'error_uploading_file' => 'Fehler beim Hochladen der Datei',
        'insufficient_balance' => 'Unzureichendes Guthaben',
        'eco_nft_not_found' => 'EcoNFT nicht gefunden',
        'no_traits_found' => 'Keine Merkmale gefunden',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in tedesco
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Zurück',
    "file_deleted_successfully" => "Datei erfolgreich gelöscht",
    'extension_not_allowed' => 'Erweiterung nicht erlaubt!',
    'title_file_type_not_allowed' => 'Dateityp nicht erlaubt!',
    'title_file_size_exceeds' => 'Dateigröße überschreitet das Limit!',
    'title_invalid_file_name' => 'Ungültiger Dateiname!',
    'file_extension_not_allowed' => 'Dateityp nicht erlaubt: :extension. Erlaubte Dateitypen haben die folgenden Erweiterungen: :extensions.',
    'file_type_not_allowed' => 'Dateityp nicht erlaubt: :type. Erlaubte MIME-Typen sind: :mimetypes.',
    'file_size_exceeds' => 'Die Dateigröße überschreitet die maximal zulässige Größe von :size MB.',
    'invalid_file_name' => 'Ungültiger Dateiname: :filename. Der Dateiname enthält ungültige Zeichen.',
    'allowed_extensions' => 'Erlaubte Erweiterungen sind: :extensions.',
    'allowed_mime_types' => 'Erlaubte MIME-Typen sind: :mimetypes.',
    "file_infected" => "Datei infiziert",
    "scan_error" => "Scan-Fehler",
    "starting_scan" => "Scan starten",
    "error_uploading_file" => "Fehler beim Hochladen der Datei",
    "error_getting_presigned_url" => "Fehler beim Abrufen der vorab signierten URL",
    "error_deleting_file" => "Fehler beim Löschen der Datei",
    "upload_finished" => "Hochladen abgeschlossen",
    "some_errors" => "einige Fehler",
    "upload_failed" => "Hochladen fehlgeschlagen",
    "file_scanning_may_take_a_long_time_for_each_file" => "Die Dateiscan kann für jede Datei viel Zeit in Anspruch nehmen",
    "all_files_are_saved" => "Alle Dateien sind gespeichert",
    "loading_finished_you_can_proceed_with_saving" => "Laden abgeschlossen, Sie können mit dem Speichern fortfahren",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Laden abgeschlossen, Sie können mit dem Speichern und Scannen fortfahren",
    "im_uploading_the_file" => "Ich lade die Datei hoch",
    "virus_scan_disabled" => "Virenscan deaktiviert",
    "virus_scan_enabled" => "Virenscan aktiviert",
    "file_is_clean" => "Die Datei ist sauber",
    "the_uploaded_file_was_detected_as_infected" => "Die hochgeladene Datei wurde als infiziert erkannt",
    "antivirus_scan_in_progress" => "Antivirus-Scan läuft",
    'scanning_stopped' => 'Scannen gestoppt',
    "emogy_sad" => "Emogy traurig",
    "emogy_happy" => 'Emogy glücklich',
    "emogy_angry" => 'Emogy wütend',
    "im_checking_the_validity_of_the_file" => 'Ich überprüfe die Gültigkeit der Datei',
    "im_recording_the_information_in_the_database" => 'Ich nehme die Informationen in der Datenbank auf',
    "im_saving_the_image" => 'Ich speichere das Bild',
    "file_saved_successfully" => 'Datei: :fileCaricato erfolgreich gespeichert',
    "all_files_were_scanned_no_infected_files" => 'Alle Dateien wurden gescannt, keine infizierten Dateien',
    "one_or_more_files_were_found_infected" => 'Eine oder mehrere Dateien wurden als infiziert erkannt, sie wurden vom Hochladen ausgeschlossen',
    "file_scanned_successfully" => 'Datei: :fileCaricato erfolgreich gescannt',
    "file_uploaded_successfully" => 'Datei: :fileCaricato erfolgreich hochgeladen',
    "no_file_uploaded" => "Keine Datei hochgeladen",
    "error_during_file_upload" => "Fehler beim Hochladen der Datei",
    'starting_uplad' => 'Upload starten',
    'uploaded' => 'Hochgeladen',
    'successfully' => 'erfolgreich',
    'starting_upload' => 'Upload starten',
    "starting_saving" => "Speichern beginnen",
    'waiting' => 'Warten...',
    'upload_status' => 'Upload-Status',
    'return_to_collection' => 'Zurück zur Sammlung',
    'EGI_image' =>'EGI-Bild',
    'error_in_the_files' => 'Fehler in den Dateien',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'EGI-Vorschau',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Ziehen Sie Ihre Dateien hierher oder klicken Sie, um auszuwählen',
    'upload_your_EGI_Files' => 'Laden Sie Ihre EGI-Dateien hoch',
    'wait_for_the_files_to_load' => 'Warten Sie, bis die Dateien geladen sind',
    'access_the_control_panel' => 'Zugriff auf das Kontrollfeld',
    'of' => 'von',
    'errors_in_the_files' => 'Fehler in den Dateien',
    'loading' => 'Laden...',
    'utilities_image_file' => 'Dienstprogramme, Bild- und Datei-Upload',
    'file_upload' => 'Datei-Upload',
    'select_files' => 'Dateien auswählen',
    'max_file_size_reminder' => 'Denken Sie daran: Die maximale Größe für jede Datei beträgt 100 MB. Für Dateien über 30 MB empfehlen wir den Einzelupload, um Netzwerkprobleme zu vermeiden.',
    'upload_your_files' => 'Laden Sie Ihre Dateien hoch',
    'file_format_not_supported_for_viewing' => 'Dateiformat zum Anzeigen nicht unterstützt',
    'cancel_upload' => 'Hochladen abbrechen',
    'save_the_files' => 'Dateien speichern',
    'open' => 'Öffnen',
    'user_management' => 'Benutzerverwaltung',
    'sign_in' => 'Anmelden',
    'sign_out' => 'Abmelden',
    "who_is_natan_frangette" => "Wer ist Natan Frangette",
    'home' => 'Zuhause',
    'remove_photo' => 'Foto entfernen',
    'username' => 'Nutzername',
    'bind' => 'Binden',
    'value' => 'Wert',
    'title' => 'Titel',
    'dimension' => 'Dimension',
    'size' => 'Größe: ',
    'description' => 'Beschreibung',
    'name' => 'Name',
    'date_start' => 'Startdatum',
    'date_end' => 'Enddatum',
    'unknown' => 'Unbekannt',
    'active' => 'Aktiv',
    'inactive' => 'Inaktiv',
    'existing' => 'Bestehend',
    'welcome' => 'Willkommen im Natan-Hub',
    'done' => 'Fertig',
    'create' => 'Erstellen',
    'saving'=> 'Ich speichere...',
    'save' => 'Speichern',
    'saved' => 'Gespeichert!',
    'remember_to_save' => 'Denken Sie daran, zu speichern',
    'cancel' => 'Stornieren',
    'update' => 'Aktualisieren',
    'cancelled' => 'Abgebrochen',
    'delete' => 'Löschen',
    'deleted' => 'Gelöscht',
    'edit' => 'Bearbeiten',
    'add' => 'Hinzufügen',
    'confirm' => 'Bestätigen',
    'disable' => 'Deaktivieren',
    'close' => 'Schließen',
    'delete_confirm' => 'Möchten Sie diesen Datensatz wirklich löschen?',
    'whoops_something_went_wrong' => 'Hoppla! Etwas ist schief gelaufen!',
    'action_confirm' => 'Operation erfolgreich abgeschlossen!',
    'search' => 'Suche',
    'traits' => 'Eigenschaften',
    'utility' => 'Dienstprogramm',
    'zoom' => 'Zoom',
    'product_image' => 'Produktbild',
    'micro_logo' => 'Mikrologo, Gleichgewichtsmolekül',
    'logo' => 'Logo, Gleichgewichtsmolekül',
    'manage_utility' => 'Dienstprogramm verwalten',
    'item_zoom' => 'Originalgröße',
    'esternal_transfert' => 'externe Übertragung',
    'internal_transfert' => 'interne Übertragung',
    'back_to_item' => 'Zurück zum Element',
    'position' => 'Position',
    'head_photo_page' => 'Foto-Seite',
    'handle_collection_data' => 'Sammlungsdaten bearbeiten',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Titelbild',
    'edit_item' => [
        'title' => 'Element bearbeiten',
        'description' => 'Elementinformationen bearbeiten',
        'back_to_collection' => 'Zurück zur Sammlung',
        'this_item_cannot_be_transfered' => 'Dieser Artikel kann nicht übertragen werden',
        'are_you_sure_you_want_to_transfer_this_item' => 'Möchten Sie diesen Artikel von <span class="font-bold"> :collectionNameFrom </span> nach <span class="font-bold"> :collectionNameTo </span> übertragen?',
        'personal_collection_for_this_user_not_exists' => 'Die persönliche Sammlung für diesen Benutzer existiert nicht, Übertragung unmöglich',
        'not_exist_user_width_this_email' => 'Der Benutzer mit der E-Mail :emailExternalTransfer existiert nicht.',
        'transfer' => 'Transfer',
        'internal_transfer' => 'Interne Übertragung',
        'external_transfer' => 'Externe Übertragung',
        'max_25_char' => 'Maximal 25 Zeichen',
        'max_1000_char' => 'Maximal 1000 Zeichen',
        'write_the_description' => 'Beschreibung schreiben',
        'date_of_creation' => 'Erstellungsdatum',
        'publish' => 'Veröffentlichen',
        'unpublish' => 'Veröffentlichung aufheben',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Dieser Artikel kann nicht gelöscht werden, da damit keine Dateien verknüpft sind',
    ],
    'bio' => [
        'your_biography' => 'Ihre Biografie',
        'bio_title' => 'Biografietitel',
        'manage_biography' => 'Biografie verwalten',
        'manage_chapter' => 'Kapitel verwalten',
        'back_to_biography' => 'Zurück zur Biografie',
        'back_to_profile' => 'Zurück zum Profil',
        'chapter' => 'Kapitel',
        'chapter_start_date' => 'Beginndatum des Kapitels',
        'chapter_end_date' => 'Enddatum des Kapitels',
        'chapter_title' => 'Kapiteltitel',
        'chapter_biography' => 'Kapitelbiografie',
        'remove_biography' => 'Biografie entfernen',
        'remove_chapter' => 'Kapitel entfernen',
        'removed_chapter' => 'Kapitel entfernt',
        'add_chapter' => 'Kapitel hinzufügen',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Sind Sie sicher, dass Sie dieses Kapitel entfernen möchten?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Sind Sie sicher, dass Sie diese Biografie entfernen möchten?',
    ],

    'drop' => [
        'remove_from_drop' => 'Aus der Drop entfernen',
        'add_to_drop' => 'Zur Drop hinzufügen',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Sind Sie sicher, dass Sie :itemremoved aus dem Drop entfernen möchten?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: tedesco
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Bitte melden Sie sich bei Ihrem Konto an',
    'email' => 'E-Mail-Addresse',
    'password' => 'Passwort',
    'remember_me' => 'Erinnere dich an mich',
    'forgot_your_password' => 'Passwort vergessen?',
    'login' => 'Anmeldung',
    'register' => 'Registrieren',
    'please_register_now' => 'Bitte registrieren Sie sich jetzt',
    'name' => 'Name',
    'first_name' => 'Vorname',
    'last_name' => 'Nachname',
    'confirm_password' => 'Passwort bestätigen',
    'reset_password' => 'Passwort zurücksetzen',
    'current_password' => 'Aktuelles Passwort',
    'new_password' => 'Neues Kennwort',
    'have_an_account' => 'Haben Sie ein Konto?',
    'dont_have_an_account' => 'Haben Sie kein Konto?',
    'i_agree_to' => 'Ich stimme den',
    'terms_of_service' => 'Servicebedingungen',
    'and' => 'und',
    'privacy_policy' => 'Datenschutz-Bestimmungen',
    'welcome_to_the_natan_site' => 'Willkommen auf der Natan-Website',
    'welcome_to_the_first_artist_business_builder' => 'Willkommen im Portal von Natan Frangette, dem ersten und einzigen Business Builder für Künstler',
    'join_us' => 'Schließen Sie sich einem Team an, das den Unterschied macht!',
    'express_your_creativity' => 'Drücken Sie Ihre Kreativität mit Ihren EcoNFTs aus',
    'change_the_world_with_every_sale' => 'Ändern Sie die Welt mit jedem Verkauf',
    'innovative_partnerships' => 'Innovative Partnerschaften',
    'bring_your_artistic_biography_to_life' => 'Bringen Sie Ihre künstlerische Biografie zum Leben',
    'impact_community' => 'Auswirkungsgemeinschaft',
    'register_now' => 'Registrieren Sie sich noch heute und werden Sie Teil einer künstlerischen Revolution mit positiven Auswirkungen auf Gesellschaft und Umwelt!',
    'change_language' => 'Sprache ändern',
    'for_your_security_please_confirm_your_password_to_continue' => 'Zu Ihrer Sicherheit bestätigen Sie bitte Ihr Passwort, um fortzufahren.',
    'two_factor' => [
        'title' => 'Zwei-Faktor-Authentifizierung',
        'description' => 'Fügen Sie Ihrem Konto zusätzliche Sicherheit hinzu, indem Sie die Zwei-Faktor-Authentifizierung verwenden.',
        'finish_enabled' => 'Beenden Sie die Aktivierung der Zwei-Faktor-Authentifizierung.',
        'enabled' => 'Die Zwei-Faktor-Authentifizierung wurde für Ihr Konto aktiviert!',
        'not_enabled' => 'Sie haben die Zwei-Faktor-Authentifizierung nicht aktiviert.',
        'prompt' => 'Wenn die Zwei-Faktor-Authentifizierung aktiviert ist, werden Sie während der Authentifizierung nach einem sicheren, zufälligen Token gefragt. Diesen Token können Sie aus Ihrer Google Authenticator App auf Ihrem Telefon abrufen.',
        'QRCode' => [
            'title' => 'Scannen Sie den untenstehenden QR-Code in Ihre Telefon-Authentifizierungs-App.',
            'alt' => 'QR-Code',
            'finish_enabled' => 'Um die Aktivierung der Zwei-Faktor-Authentifizierung abzuschließen, scannen Sie den folgenden QR-Code mit Ihrer Telefon-Authentifizierungs-App oder geben Sie den Einrichtungsschlüssel ein und geben Sie den generierten OTP-Code ein.',
            'enabled' => 'Die Zwei-Faktor-Authentifizierung ist jetzt aktiviert. Scannen Sie den folgenden QR-Code mit Ihrer Telefon-Authentifizierungs-App oder geben Sie den Einrichtungsschlüssel ein.',
            'setup_key' => 'Einrichtungsschlüssel',
            'code' => 'Code',
            'showing_recovery_codes' => 'Speichern Sie diese Wiederherstellungscodes in einem sicheren Passwort-Manager. Sie können verwendet werden, um den Zugriff auf Ihr Konto wiederherzustellen, wenn Ihr Zwei-Faktor-Authentifizierungsgerät verloren geht.',
            'regenerate_recory_codes' => 'Wiederherstellungscodes regenerieren',
            'show_recory_codes' => 'Wiederherstellungscodes anzeigen',
        ],
    ],
    'browser_session' => [
        'title' => 'Browsersitzung',
        'description' => 'Verwalten und abmelden Ihrer aktiven Sitzungen auf anderen Browsern und Geräten.',
        'prompt' => 'Bei Bedarf können Sie sich von allen anderen Browsersitzungen auf all Ihren Geräten abmelden. Einige Ihrer letzten Sitzungen sind unten aufgeführt; diese Liste ist jedoch möglicherweise nicht vollständig. Wenn Sie glauben, dass Ihr Konto gefährdet ist, sollten Sie auch Ihr Passwort aktualisieren.',
        'this_device' => 'Dieses Gerät',
        'last_active' => 'Zuletzt Aktiv',
        'log_out_other_browser_sessions' => 'Andere Browsersitzungen abmelden',
        'please_enter_your_password_to_confirm' => 'Bitte geben Sie Ihr Passwort ein, um zu bestätigen, dass Sie sich von anderen Browsersitzungen auf all Ihren Geräten abmelden möchten.',
    ],
    'delete_account' => [
        'title' => 'Konto Löschen',
        'description' => 'Löschen Sie Ihr Konto dauerhaft.',
        'prompt' => 'Sind Sie sicher, dass Sie Ihr Konto löschen möchten? Einmal gelöscht, werden alle Ihre Daten und Ressourcen dauerhaft gelöscht. Bitte geben Sie Ihr Passwort ein, um zu bestätigen, dass Sie Ihr Konto dauerhaft löschen möchten.',
        'once_your_account_is_deleted' => 'Wenn Ihr Konto gelöscht wird, werden alle Ihre Daten und Ressourcen dauerhaft gelöscht. Bevor Sie Ihr Konto löschen, laden Sie alle Daten oder Informationen herunter, die Sie behalten möchten.',
        'delete_account' => 'Konto Löschen',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/de/profile.php ####

<?php
/*
|
|    Traduzione in tedesco per la pagina di profilo dell'utente
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografie',
    'account' => 'Konto',
    'first_name' => 'Vorname',
    'last_name' => 'Nachname',
    'email' => 'E-Mail',
    'wallet' => 'Brieftasche',
    'your_email_address_is_unverified' => 'Ihre E-Mail-Adresse ist nicht verifiziert',
    'click_here_to_re-send_the_verification_email' => 'Klicken Sie hier, um die Bestätigungs-E-Mail erneut zu senden',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Ein neuer Bestätigungslink wurde an Ihre E-Mail-Adresse gesendet.',
    'language' => 'Sprache',
    'creator' => 'Ersteller',
    'email_verified_at' => 'E-Mail bestätigt am',
    'password' => 'Passwort',
    'remember_token' => 'Erinnerungstoken',
    'current_team_id' => 'Aktuelle Team-ID',
    'profile_photo_path' => 'Profilbildpfad',
    'consent' => 'Einverständnis',
    'bio_title' => 'Bio-Titel',
    'bio_story' => 'Bio-Geschichte',
    'title' => 'Titel',
    'mr_miss_dott' => 'Herr / Frau / Dr.',
    'job_role' => 'Berufsbezeichnung',
    'user_name' => 'Benutzername',
    'user_type' => 'Benutzertyp',
    'street' => 'Straße',
    'city' => 'Stadt',
    'region' => 'Region',
    'state' => 'Bundesland',
    'zip' => 'Postleitzahl',
    'home_phone' => 'Festnetznummer',
    'cell_phone' => 'Handynummer',
    'work_phone' => 'Arbeitstelefon',
    'site_url' => 'Website',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Andere',
    'birth_date' => 'Geburtsdatum',
    'fiscal_code' => 'Steuernummer',
    'tax_id_number' => 'Steueridentifikationsnummer',
    'doc_typo' => 'Dokumenttyp',
    'doc_num' => 'Dokumentnummer',
    'doc_issue_date' => 'Ausstellungsdatum des Dokuments',
    'doc_expired_date' => 'Ablaufdatum des Dokuments',
    'doc_issue_from' => 'Dokument ausgestellt von',
    'doc_photo_path_f' => 'Dokumentfoto-Pfad vorne',
    'doc_photo_path_r' => 'Dokumentfoto-Pfad hinten',
    'org_data_sheet' => 'Organisationsdatenblatt',
    'please_update_your_company_information' => 'Bitte aktualisieren Sie Ihre Unternehmensdaten',
    'insert_a_valid_url' => 'Geben Sie eine gültige URL ein',
    'enter_annotation' => 'Geben Sie eine Anmerkung ein',
    'org_name' => 'Organisationsname',
    'org_email' => 'Organisations-E-Mail',
    'org_street' => 'Organisationsstraße',
    'org_city' => 'Organisationsstadt',
    'org_region' => 'Organisationsregion',
    'org_state' => 'Organisationsbundesland',
    'org_zip' => 'Organisationspostleitzahl',
    'org_site_url' => 'Organisationswebsite',
    'annotation' => 'Anmerkung',
    'org_phone_1' => 'Organisationstelefon 1',
    'org_phone_2' => 'Organisationstelefon 2',
    'org_phone_3' => 'Organisationstelefon 3',
    'rea' => 'Unternehmensregister', // Tradotto come da tua indicazione
    'org_fiscal_code' => 'Organisations-Steuernummer',
    'org_vat_number' => 'Organisations-USt-IdNr.',
    'select_a_photo' => 'Wählen Sie ein Foto',
    'upload_a_photo' => 'Ein Foto hochladen',
    'remove_photo' => 'Foto entfernen',
    'select_a_language' => 'Wählen Sie eine Sprache',
    'photo' => 'Foto',
    'profile_information' => 'Profilinformation',
    'update_your_profile_data' => 'Aktualisieren Sie Ihre Profildaten',
    'biography' => 'Biografie',
    'document_data' => 'Dokumentendaten',
    'please_enter_your_ID_details' => 'Bitte geben Sie Ihre Ausweisdaten ein',
    'document_type' => 'Dokumententyp',
    'drive_licenze' => 'Führerschein',
    'passport' => 'Reisepass',
    'identity_card' => 'Personalausweis',
    'front_photograph_of_the_document' => 'Vorderseite des Dokuments',
    'back_photograph_of_the_document' => 'Rückseite des Dokuments',
    'social_media' => 'Soziale Medien',
    'please_enter_your_social_media_details' => 'Bitte geben Sie Ihre Social-Media-Daten ein',
    'update_password' => 'Passwort aktualisieren',
    'ensure_your_account' => 'Stellen Sie sicher, dass Ihr Konto über ein langes, zufälliges Passwort verfügt, um sicherzustellen, dass es sicher ist.',
    'enter_your_new_password' => 'Geben Sie Ihr neues Passwort ein',
    'confirm_your_new_password' => 'Bestätigen Sie Ihr neues Passwort',
    'two_factor_authentication' => 'Zwei-Faktor-Authentifizierung',
    'two_factor_authentication_add_additional_security' => 'Fügen Sie Ihrem Konto zusätzliche Sicherheit hinzu, indem Sie die Zwei-Faktor-Authentifizierung verwenden.',
    'You have not enabled two_factor_authentication.' => 'Sie haben die Zwei-Faktor-Authentifizierung nicht aktiviert.',
    'text_for_two_factor_authentication' => 'Wenn die Zwei-Faktor-Authentifizierung aktiviert ist, werden Sie während der Authentifizierung nach einem sicheren, zufälligen Token gefragt. Sie können dieses Token aus der Google Authenticator-App auf Ihrem Handy abrufen.',
    'browser_sessions' => 'Browsersitzungen',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Verwalten und melden Sie sich von Ihren aktiven Sitzungen auf anderen Browsern und Geräten ab.',
    'text_for_sessione' => 'Wenn nötig, können Sie sich von allen anderen Browsersitzungen auf all Ihren Geräten abmelden. Einige Ihrer letzten Sitzungen sind unten aufgeführt; diese Liste ist jedoch möglicherweise nicht vollständig. Wenn Sie glauben, dass Ihr Konto gefährdet ist, sollten Sie auch Ihr Passwort aktualisieren.',
    'log_out_other_browser_sessions' => 'Andere Browsersitzungen abmelden',
];

#### Inizio File: /home/fabio/EGI/resources/lang/de/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Übersetzung auf Deutsch für alle Daten der Sidebar und der Navigationsleiste
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Sammlungen Verwalten',
        'collections' => 'Sammlungen',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Berechtigungen',
    ],

    'open_collection' => 'Sammlung Öffnen',
    'new_collection' => 'Neue Sammlung',
    'permissions_roles' => 'Rollen und Berechtigungen',
    'assign_roles' => 'Rollen Zuweisen',
    'assign_permissions' => 'Berechtigungen Zuweisen',
    'manage_roles' => 'Rollen Verwalten',

];


#### Inizio File: /home/fabio/EGI/resources/lang/de/traits.php ####

<?php

/*
|
|    Traduzione in tedesco per i dati dei traits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Sind Sie sicher, dass Sie dieses Merkmal zuordnen möchten?',
    'yes_match_it' => 'Ja, passen Sie es an',
    'the_trait_was_matched' => 'Das Merkmal wurde zugeordnet',
    'trait_added' => 'Merkmal hinzugefügt',
    'category_added' => 'Kategorie hinzugefügt',
    'key_added' => 'Schlüssel hinzugefügt',
    'value_added' => 'Wert hinzugefügt',
    'new_category' => 'Neue Kategorie',
    'new_key' => 'Neuer Schlüssel',
    'key_deletion_error' => 'Dieser Schlüssel ist mit einigen Merkmalen verknüpft und kann nicht entfernt werden. Wenn Sie ihn löschen möchten, müssen Sie zuerst die zugehörigen Merkmale löschen.',
    'create_a_new_trait_for_this_key' => 'Erstellen Sie ein neues Merkmal für diesen Schlüssel',
    'click_for_selected' => 'Klicken Sie, um auszuwählen',
    'trait_icon' => 'Eigenschaftssymbol',
    'EGI_with_traits' => 'EGI mit Eigenschaften',
    'traits_library' => 'Eigenschaftsbibliothek',
    'collection' => 'Sammlung',
    'manage_traits' => 'Eigenschaften verwalten',
    'manage_key' => 'Schlüssel verwalten',
    'manage_category' => 'Kategorien verwalten',
    'delete_traits' => 'Eigenschaften löschen',
    'applyTraits' => 'Zurück zu Eigenschaften anwenden',
    'open_manage' => 'Verwaltung öffnen',
    'close_manage' => 'Verwaltung schließen',
    'apply_traits' => 'Eigenschaften anwenden',
    'create_new_key' => 'Erstellen Sie einen neuen Schlüssel',
    'key_deletion' => 'Schlüssellöschung',
    'key_deletion_confirm' => 'Sind Sie sicher, dass Sie diesen Schlüssel löschen möchten: :key?',
    'key_not_possible_delete' => 'Es ist nicht möglich, diesen Schlüssel zu löschen',
    'key_deleted' => 'Schlüssel gelöscht',
    'key_search' => 'Schlüssel suchen',
    'make_a_new_key' => 'Einen neuen Schlüssel erstellen',
    'key_created' => 'Schlüssel erstellt',
    'key_updated' => 'Schlüssel aktualisiert',
    'key_not_possible_update' => 'Es ist nicht möglich, diesen Schlüssel zu aktualisieren',
    'key_not_found' => 'Schlüssel nicht gefunden',
    'key_not_possible_create' => 'Es ist nicht möglich, diesen Schlüssel zu erstellen',
    'key_not_possible_find' => 'Es ist nicht möglich, diesen Schlüssel zu finden',
    'bind' => 'Binden',
    'unbind' => 'Entbinden',
    'binded' => 'Gebundene Schlüssel',
    'unbinded' => 'Zu bindende Schlüssel',
    'make' => 'Erstellen',
    'create_a_new_category' => 'Eine neue Kategorie erstellen',
    'category_created' => 'Kategorie erstellt',
    'create_a_new_key' => 'Einen neuen Schlüssel erstellen',
    'select_a_category' => 'Eine Kategorie auswählen',
    'category' => 'Kategorie',
    'select_a_key' => 'Einen Schlüssel auswählen',
    'key' => 'Schlüssel',
    'value_for_key' => 'Wert für den Schlüssel',
    'select_all' => 'Alles auswählen',
    'select_one_or_more_EGI' => 'Wählen Sie ein oder mehrere EGI aus',
    'unselect_all' => 'Alles abwählen',
    'many_to_many' => 'Viele zu viele',
    'one_to_many' => 'Eins zu viele',
    'zoom_in' => 'Vergrößern',
    'zoom_out' => 'Verkleinern',
    'traits_on :numberItems items_in_this_collection' => 'Eigenschaften von :numberItems Artikeln in dieser Sammlung',
    'are_you_sure_remove :traitKey' => 'Sind Sie sicher, dass Sie <span class="font-bold"> :traitKey<span> entfernen möchten?',
    'all_the_traits_you_created' => 'Alle von Ihnen erstellten Eigenschaften',
    'traits_categories' => 'Eigenschaften Kategorien',
    'traits' => 'Eigenschaften',
    'update_category' => 'Kategorie aktualisieren',
    'update_key' => 'Schlüssel aktualisieren',
    'category' => 'Kategorie',
    'explanation_apply_traits' => 'Weisen Sie die Merkmale zu, die Sie den einzelnen Elementen Ihrer Sammlung zuordnen möchten',
    'explanation_manage_category' => 'Verwalten Sie die Eigenschaftskategorien. In diesem Abschnitt können Sie neue Kategorien erstellen, vorhandene aktualisieren oder löschen. Sie können dasselbe mit Schlüsseln tun und sie auch Kategorien zuordnen. Sie können alle Schlüssel sehen, die bereits zugeordnet wurden, und sie bei Bedarf durch Rechtsklick auf die entsprechende Karte entbinden. Sie können auch alle Schlüssel sehen, die noch zugeordnet werden müssen: Sie können einen oder mehrere auswählen (beachten Sie, dass der Schlüssel beim Auswählen rot werden sollte, sonst wurde er nicht korrekt ausgewählt) und beim Rechtsklick wird eine Liste der verfügbaren Kategorien angezeigt. Durch Auswahl einer Kategorie wird die Zuordnung erstellt.',
    'trait_value' => 'Eigenschaftswert',
    'view_your_all_traits' => 'Alle Ihre Eigenschaften anzeigen',
    'view_your_traits_this_collection' => 'Sehen Sie Ihre Eigenschaften nur für diese Sammlung',
    'back_to_apply_traits' => 'Zurück zu Eigenschaften anwenden',
    'back_to_gallery' => 'Zurück zur Galerie',
    'this_traits_non_cannot_be_removed' => 'Diese Eigenschaften können nicht entfernt werden',
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/auth.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are used during authentication for various
    | messages that we need to display to the user. You are free to modify
    | these language lines according to your application's requirements.
    |
    */

    'failed' => 'These credentials do not match our records.',
    'password' => 'The provided password is incorrect.',
    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invite a member to the collection',
    'came_back_to_collection' => 'Back to the collection',
    'confirm_delete_title' => 'Are you sure?',
    'confirm_delete_text' => 'This action will permanently delete the :type image!',
    'confirm_delete_button' => 'Yes, delete!',
    'cancel_delete_button' => 'Cancel',
    'deleted_title' => 'Deleted!',
    'deleted_text' => 'The banner image has been successfully deleted.',
    'delete_card' => 'Delete card',
    'delete_banner' => 'Delete banner',
    'delete_avatar' => 'Delete avatar',
    'delete_EGI' => 'Delete EGI',
    'save_card' => 'Save card',
    'save_banner' => 'Save banner',
    'save_avatar' => 'Save avatar',
    'save_EGI' => 'Save EGI',
    'create_validation_error' => 'Validation error',
    'creation_failed' => 'Creation failed',
    'collection_delete' => 'Delete collection',
    'avatar_image' => 'Avatar image',
    'card_image' => 'Card image',
    'EGI_image' => 'EGI image',
    'banner_image' => 'Banner image',
    'edit_collection_data' => 'Edit collection data',
    'modifies_EGI' => 'Modifies EGI',
    'new_collection' => 'New collection',
    'open_collection' => 'Open collection',
    'team_members_description' => 'Here you can see all the team members who have access to this collection',
    'collection_members' => 'Collection members',
    'manage_head_images' => 'Manage head images',
    'manage_collection' => 'Manage collection',
    'collection' => 'Collection',
    'collections' => 'Collections',
    'collection_data' => 'Header data of the collection',
    'collection_name' => 'Name of the collection',
    'collection_id' => 'ID of the collection',
    'collection_description_placeholder' => 'Enter a description of the collection',
    'collection_description_suggest' => 'A clear and engaging description helps users better understand your collection and increases its appeal. Tell what makes it unique!',
    'collection_description' => 'Enter all the data pertaining to the collection, be very accurate',
    'collection_image' => 'Image of the collection',
    'collection_image_alt' => 'Alternative text of the collection image',
    'add_epp' => 'Add an EPP',
    'add_epp_placeholder' => 'Enter an EPP',
    'need_to_associate_epp' => 'Until you have associated your gallery to an EPP, you will not be able to publish it',
    'EGI_floor_price' => 'Minimum EGI price',
    'set_base_EcoNFT_price' => 'Set a base price you wish to charge for each EGI of this collection',
    'collection_site_URL' => 'URL of the collection site',
    'collection_site_URL_suggest' => 'Suggestion: enter the URL of the collection site',
    'position_for_mor_than_one_collection' => 'If you have more than one collection, you can decide where to put this one',
    'publish_collection' => 'Publish the collection',
    'image_for_EcoNFT_collection' => 'Image for the EGI collection',
    'image_description' => 'This is the image that represents the entire collection',
    'image_alt' => 'Image representing the entire collection',
    'image_title' => 'Image representing the entire collection',
    'select_new_EcoNFT_photo' => 'Select a new photo for the EGI',
    'switch_collection' => 'Switch collection',
    'goto_collection' => 'Go to the collection',
    'type' => 'Type',
    'select_content_type' => 'Select the content type',
    'type_image' => 'Image',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'EGI Number',
    'position' => 'Position',
    'updated_successfully' => 'Collection saved successfully',
    'save_failed' => 'Save failed',
    'collection_not_found' => 'Collection not found',
    'tips_to_optimize_your_collection' => 'Tips to optimize your collection',
    'tips_for_your_collection_images' => 'Tips for your collection images',
    'image_section_title' => 'Collection images',
    'image_section_description' => 'Choose carefully the images that represent your collection',
    'data_section_title' => 'Collection data',
    'data_section_description' => 'Choose carefully the data that represent your collection',
    'this_is_default_collection_of_the_team' => 'This is the default collection of the team',
    'wallet' => [
        'write_royalty_mint' => 'Enter the royalty percentage for minting',
        'write_royalty_rebind' => 'Enter the royalty percentage for rebind',
        'user_role' => 'Role',
        'role_unknown' => 'No role',
        'address' => 'Wallet address',
        'balance' => 'Wallet balance',
        'name' => 'Wallet name',
        'status' => 'Wallet status',
        'royalty' => 'Royalty',
        'royalty_mint' => 'Mint royalty',
        'royalty_rebind' => 'Rebind royalty',
        'manage_wallet' => 'Manage wallet',
        'remove_photo' => 'Remove photo',
        'wallet' => 'Wallet',
        'cancellation' => 'Wallet cancellation',
        'select_a_wallet_connect' => 'Select a wallet',
        'button_wallet_connect' => 'Connect a wallet',
        'button_wallet_disconnect' => 'Disconnect',
        'create_the_wallet' => 'Create a new wallet',
        'username' => 'Username',
        'create' => 'Create a wallet',
        'delete_wallet' => 'Are you sure you want to delete this wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Unauthorized access',
    'SCAN_ERROR' => 'Scan error',
    'VIRUS_FOUND' => 'Virus found',
    'INVALID_FILE_EXTENSION' => 'Invalid file extension',
    'MAX_FILE_SIZE' => 'The file cannot exceed :max byte.',
    'INVALID_FILE_PDF' => 'Invalid PDF file',
    'MIME_TYPE_NOT_ALLOWED' => 'File type not allowed.',
    'INVALID_IMAGE_STRUCTURE' => 'Invalid image structure',
    'INVALID_FILE_NAME' => 'Invalid file name',
    'ERROR_GETTING_PRESIGNED_URL' => 'Error getting presigned URL',
    'ERROR_DURING_FILE_UPLOAD' => 'Error during file upload',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossible save file.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Unable to create folder',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Unable to change folder permissions',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossible save file',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Internal problem, support has already been alerted',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Error during file name encryption',
    'IMAGICK_NOT_AVAILABLE' => 'Internal problem, support has already been alerted',
    'JSON_ERROR_IN_DISPATCHER' => 'JSON error in dispatcher',
    'GENERIC_SERVER_ERROR' => 'Generic server error, technical team has been informed',
    'FILE_NOT_FOUND' => 'File not found',
    'UNEXPECTED_ERROR' => 'Generic server error, technical team has been informed',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Error deleting local temporary file',

    'scan_error' => 'Scan error',
    'virus_found' => 'Virus found',
    'required' => 'The field is required.',
    'file' => 'An error occurred while uploading the file.',
    'file_extension_not_valid' => 'File extension not valid',
    'mimes' => 'The file must be of type: :values.',
    'max_file_size' => 'The file cannot exceed :max byte.',
    'invalid_pdf_file' => 'Invalid PDF file',
    'mime_type_not_allowed' => 'File type not allowed.',
    'invalid_image_structure' => 'Invalid image structure',
    'invalid_file_name' =>  'Invalid file name',
    'error_getting_presigned_URL' => 'Error getting presigned URL',
    'error_getting_presigned_URL_for_user' => 'Error getting presigned URL for user',
    'error_during_file_upload' => 'Error during file upload',
    'error_deleting_file' => 'Error deleting file',
    'upload_finished' => 'Upload finished',
    'some_errors' => 'some errors',
    'upload_failed' => 'upload failed',
    'error_creating_folder' => 'Error creating folder',
    'error_changing_folder_permissions' => 'Error changing folder permissions',
    'local_save_failed_file_saved_to_external_disk_only' => 'Local save failed, file saved to external disk only',
    'external_save_failed_file_saved_to_local_disk_only' => 'External save failed, file saved to local disk only',
    'file_scanning_may_take_a_long_time_for_each_file' => 'File scanning may take a long time for each file',
    'all_files_are_saved' => 'All files are saved',
    'loading_finished_you_can_proceed_with_saving' => 'Loading finished, you can proceed with saving',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Loading finished, you can proceed with saving and scan',
    'im_uploading_the_file' => 'I\'m uploading the file',


    'exception' => [
        'NotAllowedTermException' => 'Term not allowed',
        'MissingCategory' => 'You must enter a category.',
        'DatabaseException' => 'A database error occurred',
        'ValidationException' => 'A validation error occurred',
        'HttpException' => 'An HTTP error occurred',
        'ModelNotFoundException' => 'Model not found',
        'QueryException' => 'Query error',
        'MintingException' => 'Error during minting',
        'FileNotFoundException' => 'File not found',
        'InvalidArgumentException' => 'Invalid argument',
        'UnexpectedValueException' => 'Unexpected value',
        'ItemNotFoundException' => 'Item not found',
        'MultipleItemsFoundException' => 'Multiple items found',
        'LogicException' => 'Logic exception',
        'EntryNotFoundException' => 'Entry not found',
        'RuntimeException' => 'Runtime error',
        'BadMethodCallException' => 'Invalid method call',
        'LockTimeoutException' => 'Lock timeout',
        'InvalidIntervalException' => 'Invalid interval',
        'InvalidPeriodParameterException' => 'Invalid period parameter',
        'EndLessPeriodException' => 'Endless period',
        'UnreachableException' => 'Unreachable exception',
        'InvalidTimeZoneException' => 'Invalid time zone',
        'ImmutableException' => 'Immutable exception',
        'InvalidFormatException' => 'Invalid format',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Dear User,</p>
            </br>
            <p>The text you entered violates our community guidelines and norms. Please modify the content and try again.</p>
            </br>
            <p>If you do not understand why this term is prohibited, please refer to the clauses of the agreement you accepted at the time of registration.
            <p>We appreciate your understanding and cooperation.</p>
            </br>
            <p>Best regards,
            <br>
            The Frangette Team</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            See the community rules page.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker was not initialized correctly',
    'table_not_exist' => 'The table does not exist',
    'unique' => 'This value is already present in your traits library.',
    'the_category_name_cannot_be_empty' => 'The category name cannot be empty',
    'nathing_to_save' => 'Nothing to save',
    'an_error_occurred' => 'Oops! Sorry, an error occurred!',
    'error_number' => 'Error number:',
    'reason' => [
        'reason' => 'reason',
        'wallet_not_valid' => 'Wallet not valid',
        'something_went_wrong' => 'Something went wrong',
    ],
    'solution' => [
        'solution' => 'solution',
        'create_a_new_wallet_and_try_again' => 'Create a new wallet and try again',
        'we_are_already_working_on_solving_the_problem' => 'We are already working on solving the problem',
    ],
    'min' => [
        'string' => 'The field must be at least :min characters.',
    ],
    'max' => [
        'string' => 'The field must be at most :max characters.',
    ],
    'id_epp_not_found' => 'ID EPP not found',
    'minting' => [
        'error_generating_token' => 'Error generating token',
        'insufficient_wallet_balance' => 'Insufficient balance in wallet to purchase this EcoNFT',
        'error_during_save_the_metadataFile' => 'Error saving metadata to file',
        'error_during_save_the_metadata_on_database' => 'Error saving metadata to database',
        'error_during_create_metadata_file' => 'Error creating metadata file',
        'error_during_save_the_buyer' => 'Error saving buyer',
        'buyer_not_exist' => 'Buyer does not exist',
        'this_wallet_does_not_belong_to_any_buyer' => 'This wallet does not belong to any buyer',
        'seller_not_exist' => 'Seller does not exist',
        'seller_owner_not_found' => 'Seller owner not found',
        'seller_wallet_address_not_found' => 'Seller wallet address not found',
        'error_during_save_the_seller' => 'Error saving seller',
        'error_during_save_the_buyer_transaction' => 'Error saving buyer transaction',
        'error_during_the_saving_of_the_payment' => 'Error saving payment',
        'error_during_save_the_natan' => 'Error saving data', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Error saving transaction',
        'seller_not_found' => 'Seller not found',
        'error_during_the_minting' => 'Error during minting',
        'error_uploading_file' => 'Error uploading file',
        'insufficient_balance' => 'Insufficient balance',
        'eco_nft_not_found' => 'EcoNFT not found',
        'no_traits_found' => 'No traits found',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in inglese
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Back',
    "file_deleted_successfully" => "File deleted successfully",
    'extension_not_allowed' => 'Extension not allowed!',
    'title_file_type_not_allowed' => 'File type not allowed!',
    'title_file_size_exceeds' => 'File size exceeds the limit!',
    'title_invalid_file_name' => 'Invalid file name!',
    'file_extension_not_allowed' => 'File type not allowed: :extension. Allowed file types have the following extensions: :extensions.',
    'file_type_not_allowed' => 'File type not allowed: :type. Allowed MIME types are: :mimetypes.',
    'file_size_exceeds' => 'File size exceeds the maximum allowed size of :size MB.',
    'invalid_file_name' => 'Invalid file name: :fileName. The file name contains invalid characters.',
    'allowed_extensions' => 'Allowed extensions are: :extensions.',
    'allowed_mime_types' => 'Allowed MIME types are: :mimetypes.',
    "scan_error" => "Scan error",
    "file_infected" => "File infected",
    "starting_scan" => "Starting scan",
    "error_uploading_file" => "Error uploading file",
    "error_getting_presigned_url" => "Error getting presigned URL",
    "error_deleting_file" => "Error deleting file",
    "upload_finished" => "Upload finished",
    "some_errors" => "some errors",
    "upload_failed" => "upload failed",
    "file_scanning_may_take_a_long_time_for_each_file" => "File scanning may take a long time for each file",
    "all_files_are_saved" => "All files are saved",
    "loading_finished_you_can_proceed_with_saving" => "Loading finished, you can proceed with saving",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Loading finished, you can proceed with saving and scan",
    "im_uploading_the_file" => "I'm uploading the file",
    "virus_scan_disabled" => "Virus scan disabled",
    "virus_scan_enabled" => "Virus scan enabled",
    "file_is_clean" => "The file is clean",
    "the_uploaded_file_was_detected_as_infected" => "The uploaded file was detected as infected",
    "antivirus_scan_in_progress" => "Antivirus scan in progress",
    'scanning_stopped' => 'Scanning stopped',
    "emogy_sad" => "Emogy sad",
    "emogy_happy" => 'Emogy happy',
    "emogy_angry" => 'Emogy angry',
    "im_checking_the_validity_of_the_file" => 'I\'m checking the validity of the file',
    "im_recording_the_information_in_the_database" => 'I\'m recording the information in the database',
    "im_saving_the_image" => 'I\'m saving the image',
    "file_saved_successfully" => 'File: :fileCaricato saved successfully',
    "file_scanned_successfully" => 'File: :fileCaricato scanned successfully',
    "all_files_were_scanned_no_infected_files" => 'All files were scanned, no infected files',
    "one_or_more_files_were_found_infected" => 'One or more files were found infected, they have been excluded from uploading',
    "file_uploaded_successfully" => 'File: :fileCaricato uploaded successfully',
    "no_file_uploaded" => "No file uploaded",
    "error_during_file_upload" => "Error during file upload",
    'starting_uplad' => 'Starting upload',
    "starting_saving" => "Starting saving",
    'uploaded' => 'Uploaded',
    'successfully' => 'successfully',
    'starting_upload' => 'Starting upload',
    'waiting' => 'Waiting...',
    'upload_status' => 'Upload status',
    'return_to_collection' => 'Return to collection',
    'EGI_image' =>'EGI image',
    'error_in_the_files' => 'Error in the files',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'EGI preview',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Drag and drop your files here or click to select',
    'upload_your_EGI_Files' => 'Upload your EGI files',
    'wait_for_the_files_to_load' => 'Wait for the files to load',
    'access_the_control_panel' => 'Access the control panel',
    'of' => 'of',
    'errors_in_the_files' => 'Errors in the files',
    'loading' => 'Loading...',
    'utilities_image_file' => 'Utilities, image and file upload',
    'file_upload' => 'File upload',
    'select_files' => 'Select files',
    'max_file_size_reminder' => 'Remember: the maximum size for each file is 100MB. For files over 30MB, we recommend uploading them individually to avoid network issues.',
    'upload_your_files' => 'Upload your files',
    'file_format_not_supported_for_viewing' => 'File format not supported for viewing',
    'cancel_upload' => 'Cancel upload',
    'save_the_files' => 'Save the files',
    'open' => 'Open',
    'user_management' => 'User management',
    'sign_in' => 'Sign in',
    'sign_out' => 'Sign out',
    "who_is_natan_frangette" => "Who is Natan Frangette?",
    'home' => 'Home',
    'remove_photo' => 'Remove photo',
    'username' => 'Username',
    'bind' => 'Bind',
    'value' => 'Value',
    'title' => 'title',
    'dimension' => 'dimension',
    'size' => 'size: ',
    'description' => 'description',
    'name' => 'name',
    'date_start' => 'start date',
    'date_end' => 'end date',
    'unknown' => 'Unknown',
    'active' => 'Active',
    'inactive' => 'Inactive',
    'existing' => 'Existing',
    'welcome' => 'Welcome to Natan hub',
    'done' => 'Done',
    'create' => 'Create',
    'saving' => 'I\'m saving...',
    'save' => 'Save',
    'saved' => 'Saved!',
    'remember_to_save' => 'Remember to save',
    'cancel' => 'Cancel',
    'update' => 'Update',
    'cancelled' => 'Cancelled',
    'delete' => 'Delete',
    'deleted' => 'Deleted',
    'edit' => 'Edit',
    'add' => 'Add',
    'confirm' => 'Confirm',
    'disable' => 'Disable',
    'close' => 'Close',
    'delete_confirm' => 'Are you sure you want to delete this item?',
    'whoops_something_went_wrong' => 'Whoops, something went wrong',
    'action_confirm' => 'Operation completed successfully!',
    'search' => 'Search',
    'traits' => 'traits',
    'utility' => 'Utility',
    'zoom' => 'Zoom',
    'product_image' => 'Product image',
    'micro_logo' => 'Micro logo, Equilibrium molecule',
    'logo' => 'Logo, Equilibrium molecule',
    'manage_utility' => 'Manage utility',
    'item_zoom' => 'Original size',
    'esternal_transfert' => 'external transfer',
    'internal_transfert' => 'internal transfer',
    'back_to_item' => 'Back to item',
    'position' => 'Position',
    'head_photo_page' => 'Page header photo',
    'handle_collection_data' => 'Edit collection data',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'This item cannot be deleted because there are any files associated with it',
    'edit_item' => [
        'title' => 'Edit item',
        'description' => 'Edit item information',
        'back_to_collection' => 'Back to collection',
        'this_item_cannot_be_transfered' => 'This item cannot be transferred',
        'are_you_sure_you_want_to_transfer_this_item' => 'Are you sure you want to transfer this item from <span class="font-bold"> :collectionNameFrom </span> to <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'Personal collection for this user does not exist, impossible to transfer',
        'not_exist_user_width_this_email' => 'The user with email :emailExternalTransfer does not exist.',
        'transfer' => 'Transfer',
        'internal_transfer' => 'Internal transfer',
        'external_transfer' => 'External transfer',
        'max_25_char' => 'Maximum 25 characters',
        'max_1000_char' => 'Maximum 1000 characters',
        'write_the_description' => 'Write the description',
        'date_of_creation' => 'Date of creation',
        'publish' => 'Publish',
        'unpublish' => 'Unpublish',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'This item cannot be deleted because there are any files associated with it',
    ],
    'bio' => [
        'your_biography' => 'Your biography',
        'bio_title' => 'Biography title',
        'manage_biography' => 'Manage biography',
        'manage_chapter' => 'Manage chapters',
        'back_to_biography' => 'Back to biography',
        'back_to_profile' => 'Back to profile',
        'chapter' => 'Chapter',
        'chapter_start_date' => 'Chapter start date',
        'chapter_end_date' => 'Chapter end date',
        'chapter_title' => 'Chapter title',
        'chapter_biography' => 'Chapter biography',
        'remove_biography' => 'Remove biography',
        'remove_chapter' => 'Remove chapter',
        'removed_chapter' => 'Chapter removed',
        'add_chapter' => 'Add chapter',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Are you sure you would like to remove this chapter?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Are you sure you would like to remove this biography?',
    ],

    'drop' => [
        'remove_from_drop' => 'Remove from the Drop',
        'add_to_drop' => 'Add to the Drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Are you sure you would like to remove :itemremoved from the drop?',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: INGLESE
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Please login to your account',
    'email' => 'Email address',
    'password' => 'Password',
    'remember_me' => 'Remember me',
    'forgot_your_password' => 'Forgot your password?',
    'login' => 'Login',
    'register' => 'Register',
    'please_register_now' => 'Please register now to join our community',
    'first_name' => 'First Name',
    'last_name' => 'Last Name',
    'confirm_password' => 'Confirm Password',
    'reset_password' => 'Reset Password',
    'current_password' => 'Current Password',
    'new_password' => 'New Password',
    'have_an_account' => 'Already have an account?',
    'dont_have_an_account' => 'Don\'t have an account?',
    'logout' => 'Logout',
    'i_agree_to' => 'I agree to the',
    'terms_of_service' => 'Terms of Service',
    'and' => 'and',
    'privacy_policy' => 'Privacy Policy',
    'welcome_to_the_first_artist_business_builder' => 'Welcome to the portal of Natan Frangette, the first and only Business Builder for Artists',
    'welcome_to_the_natan_site' => 'Welcome to the Natan site',
    'join_us' => 'Join a team that will make the difference!',
    'express_your_creativity' => 'Express your creativity with your EcoNFTs',
    'change_the_world_with_every_sale' => 'Change the World with Every Sale',
    'innovative_partnerships' => 'Innovative Partnerships',
    'bring_your_artistic_biography_to_life' => 'Bring your artistic biography to life',
    'impact_community' => 'Impact community',
    'register_now' => 'Register today and become part of an artistic revolution with a positive impact on society and the environment!',
    'change_language' => 'Change language',
    'for_your_security_please_confirm_your_password_to_continue' => 'For your security, please confirm your password to continue.',
    'two_factor' => [
        'title' => 'Two Factor Authentication',
        'description' => 'Add additional security to your account using two factor authentication.',
        'finish_enabled' => 'Finish enabling two factor authentication.',
        'enabled' => 'Two factor authentication has been enabled for your account!',
        'not_enabled' => 'You have not enabled two factor authentication.',
        'prompt' => 'When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone\'s Google Authenticator application.',
        'QRCode' => [
            'title' => 'Scan the QR code below into your phones authenticator application.',
            'alt' => 'QR Code',
            'finish_enabled' => 'To finish enabling two factor authentication, scan the following QR code using your phone\'s authenticator application or enter the setup key and provide the generated OTP code.',
            'enabled' => 'Two factor authentication is now enabled. Scan the following QR code using your phone\'s authenticator application or enter the setup key.',
            'setup_key' => 'Setup Key',
            'code' => 'Code',
            'showing_recovery_codes' => 'Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.',
            'enable' => 'Enable',
            'disable' => 'Disable',
            'regenerate_recory_codes' => 'Regenerate Recovery Codes',
            'confirm' => 'Confirm',
            'cancel' => 'Cancel',
            'show_recory_codes' => 'Show Recovery Codes',
        ],
    ],
    'browser_session' => [
        'title' => 'Browser Session',
        'description' => 'Manage and log out your active sessions on other browsers and devices.',
        'prompt' => 'If needed, you can log out of all other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list might not be exhaustive. If you believe your account has been compromised, you should also update your password.',
        'this_device' => 'This Device',
        'last_active' => 'Last Active',
        'log_out_other_browser_sessions' => 'Log Out Other Browser Sessions',
        'please_enter_your_password_to_confirm' => 'Please enter your password to confirm you wish to log out of other browser sessions on all your devices.',
    ],
    'delete_account' => [
        'title' => 'Delete Account',
        'description' => 'Permanently delete your account.',
        'prompt' => 'Are you sure you want to delete your account? Once deleted, all of your data and resources will be permanently deleted. Please enter your password to confirm that you wish to permanently delete your account.',
        'once_your_account_is_deleted' => 'Once your account is deleted, all of your data and resources will be permanently deleted. Before deleting your account, download any data or information you wish to retain.',
        'delete_account' => 'Delete Account',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/notification.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in inglese di tutti i dati delle notifiche
|--------------------------------------------------------------------------
|
 */

// English
return [
    'proposal_declined_subject' => 'Your proposal has been declined',
    'proposal_declined_line' => 'Your proposal has been declined.',
    'proposal_declined_reason' => 'Reason:',
    'proposal_declined_id' => 'Proposal ID:',
    'view_details' => 'View details',
    'thank_you' => 'Thank you for using our platform.',
    'proposal_declined' => 'Proposal declined',
    'proposal_declined_message' => 'Your proposal has been declined.',
    'reply' => 'Reply',
    'wallet_changes_approved' => 'Wallet changes have been approved',
    'no_pending_notifications' => 'No pending notifications available.',
    'hide_processed_notifications' => 'Hide Processed Notifications.',
    'show_processed_notifications' => 'Show Processed Notifications.',
    'confirm_delete' => 'Are you sure you want to delete this notification?',
    'proposer' => 'Proposer',
    'receiver' => 'Receiver',
    'proposed_creation_new_wallet' => 'You have proposed the creation of a new wallet',
    'proposed_change_to_a_wallet' => 'You have proposed a change to a wallet',
];


#### Inizio File: /home/fabio/EGI/resources/lang/en/pagination.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Pagination Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are used by the paginator library to build
    | the simple pagination links. You are free to change them to anything
    | you want to customize your views to better match your application.
    |
    */

    'previous' => '&laquo; Previous',
    'next' => 'Next &raquo;',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/passwords.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Password Reset Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines are the default lines which match reasons
    | that are given by the password broker for a password update attempt
    | has failed, such as for an invalid token or invalid new password.
    |
    */

    'reset' => 'Your password has been reset!',
    'sent' => 'We have emailed your password reset link!',
    'throttled' => 'Please wait before retrying.',
    'token' => 'This password reset token is invalid.',
    'user' => "We can't find a user with that email address.",

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/profile.php ####

<?php
/*
|
|    Traduzione in inglese per la pagina di profilo dell'utente
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biography',
    'account' => 'Account',
    'first_name' => 'First Name',
    'last_name' => 'Last Name',
    'email' => 'Email',
    'wallet' => 'Wallet',
    'your_email_address_is_unverified' => 'Your email address is unverified.',
    'click_here_to_re-send_the_verification_email' => 'Click here to re-send the verification email.',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'A new verification link has been sent to your email address.',
    'language' => 'Language',
    'creator' => 'Creator',
    'email_verified_at' => 'Email Verified On',
    'password' => 'Password',
    'remember_token' => 'Remember Token',
    'current_team_id' => 'Current Team ID',
    'profile_photo_path' => 'Profile Photo Path',
    'consent' => 'Consent',
    'bio_title' => 'Bio Title',
    'bio_story' => 'Bio Story',
    'title' => 'Title',
    'mr_miss_dott' => 'Mr. / Miss / Dott.',
    'job_role' => 'Job Role',
    'user_name' => 'Username',
    'user_type' => 'User Type',
    'street' => 'Street',
    'city' => 'City',
    'region' => 'Country',
    'state' => 'State',
    'zip' => 'Postal Code',
    'home_phone' => 'Home Phone',
    'cell_phone' => 'Mobile Phone',
    'work_phone' => 'Work Phone',
    'site_url' => 'Website',
    'facebook' => 'Facebook',
    'social_x' => 'Social_X',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Other',
    'birth_date' => 'Birth Date',
    'fiscal_code' => 'Tax Code',
    'tax_id_number' => 'Tax ID Number',
    'doc_typo' => 'Document Type',
    'doc_num' => 'Document Number',
    'doc_issue_date' => 'Document Issue Date',
    'doc_expired_date' => 'Document Expiry Date',
    'doc_issue_from' => 'Document Issued By',
    'doc_photo_path_f' => 'Front Document Photo Path',
    'doc_photo_path_r' => 'Back Document Photo Path',
    'org_data_sheet' => 'Company Data Sheet',
    'please_update_your_company_information' => 'Please Update Your Company Information',
    'insert_a_valid_url' => 'Insert a valid URL',
    'enter_annotation' => 'Enter Annotation',
    'org_email' => 'Organization Email',
    'org_street' => 'Organization Street',
    'org_city' => 'Organization City',
    'org_region' => 'Organization Region',
    'org_state' => 'Organization State',
    'org_zip' => 'Organization Postal Code',
    'org_site_url' => 'Organization Website',
    'annotation' => 'Annotation',
    'org_phone_1' => 'Organization Phone 1',
    'org_phone_2' => 'Organization Phone 2',
    'org_phone_3' => 'Organization Phone 3',
    'rea' => 'Administrative Economic Repertoire (REA)', // Translated REA based on your information
    'org_fiscal_code' => 'Organization Tax Code',
    'org_vat_number' => 'Organization VAT Number',
    'select_a_photo' => 'Select a Photo',
    'upload_a_photo' => 'Upload a Photo',
    'remove_photo' => 'Remove Photo',
    'select_a_language' => 'Select a Language',
    'photo' => 'Photo',
    'profile_information' => 'Profile Information',
    'update_your_profile_data' => 'Update Your Profile Data',
    'biography' => 'Biography',
    'document_data' => 'Document Data',
    'please_enter_your_ID_details' => 'Please Enter Your ID Details',
    'document_type' => 'Document Type',
    'drive_licenze' => 'Driving License',
    'passport' => 'Passport',
    'identity_card' => 'Identity Card',
    'front_photograph_of_the_document' => 'Front Photograph of the Document',
    'back_photograph_of_the_document' => 'Back Photograph of the Document',
    'social_media' => 'Social Media',
    'please_enter_your_social_media_details' => 'Please Enter Your Social Media Details',
    'update_password' => 'Update Password',
    'ensure_your_account' => 'Ensure your account is using a long, random password to stay secure.',
    'enter_your_new_password' => 'Enter Your New Password',
    'confirm_your_new_password' => 'Confirm Your New Password',
    'two_factor_authentication' => 'Two-Factor Authentication',
    'two factor authentication_add_additional_security' => 'Add additional security to your account by using two-factor authentication.',
    'You have not enabled two factor authentication.' => 'You have not enabled two-factor authentication.',
    'text_for_two_factor_authentication' => 'When two-factor authentication is enabled, you will be asked for a secure, random token during authentication. You can retrieve this token from the Google Authenticator app on your phone.',
    'browser_sessions' => 'Browser Sessions',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Manage and log out your active sessions on other browsers and devices.',
    'text_for_sessione' => 'If needed, you can log out of all other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list might not be exhaustive. If you believe your account has been compromised, you should also update your password.',
    'log out other browser sessions' => 'Log Out Other Browser Sessions',
];

#### Inizio File: /home/fabio/EGI/resources/lang/en/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| English translation of all sidebar and navbar data
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Manage Collections',
        'collections' => 'Collections',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Authorizations',
    ],

    'open_collection' => 'Open Collection',
    'new_collection' => 'New Collection',
    'permissions_roles' => 'Roles and Permissions',
    'assign_roles' => 'Assign Roles',
    'assign_permissions' => 'Assign Permissions',
    'manage_roles' => 'Manage Roles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/traits.php ####

<?php

/*
|
|    Traduzione Inglese per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Are you sure you want to match this trait?',
    'yes_match_it' => 'Yes, Match It',
    'the_trait_was_matched' => 'The Trait Was Matched',
    'trait_added' => 'Trait Added',
    'category_added' => 'Category Added',
    'key_added' => 'Key Added',
    'value_added' => 'Value Added',
    'new_category' => 'New Category',
    'new_key' => 'New Key',
    'key_deletion_error' => 'This key is linked to some traits and cannot be removed. If you wish to delete it, you must first delete the associated traits.',
    'create_a_new_trait_for_this_key' => 'Create a New Trait for This Key',
    'click_for_selected' => 'Click for Selected',
    'trait_icon' => 'Trait Icon',
    'EGI_with_traits' => 'EGI with Traits',
    'traits_library' => 'Traits Library',
    'collection' => 'Collection',
    'manage_traits' => 'Manage Traits',
    'manage_key' => 'Manage Keys',
    'manage_category' => 'Manage Categories',
    'delete_traits' => 'Delete Traits',
    'applyTraits' => 'Return to Apply Traits',
    'open_manage' => 'Open Management',
    'close_manage' => 'Close Management',
    'apply_traits' => 'Apply Traits',
    'create_new_key' => 'Create a New Key',
    'key_deletion' => 'Key Deletion',
    'key_deletion_confirm' => 'Are you sure you want to delete this key: :key?',
    'key_not_possible_delete' => 'It is not possible to delete this key',
    'key_deleted' => 'Key Deleted',
    'key_search' => 'Search Key',
    'make_a_new_key' => 'Make a New Key',
    'key_created' => 'Key Created',
    'key_updated' => 'Key Updated',
    'key_not_possible_update' => 'It is not possible to update this key',
    'key_not_found' => 'Key Not Found',
    'key_not_possible_create' => 'It is not possible to create this key',
    'key_not_possible_find' => 'It is not possible to find this key',
    'bind' => 'Bind',
    'unbind' => 'Unbind',
    'binded' => 'Keys Bound',
    'unbinded' => 'Keys to Bind',
    'make' => 'Make',
    'create_a_new_category' => 'Create a New Category',
    'category_created' => 'Category Created',
    'create_a_new_key' => 'Create a New Key',
    'select_a_category' => 'Select a Category',
    'select_one_or_more_EGI' => 'Select One or More EGI',
    'category' => 'Category',
    'select_a_key' => 'Select a Key',
    'key' => 'Key',
    'value_for_key' => 'Value for Key',
    'select_all' => 'Select All',
    'unselect_all' => 'Unselect All',
    'many_to_many' => 'Many to Many',
    'one_to_many' => 'One to Many',
    'zoom_in' => 'Zoom In',
    'zoom_out' => 'Zoom Out',
    'traits_on :numberItems items_in_this_collection' => 'Traits on :numberItems Items in This Collection',
    'are_you_sure_remove :traitKey' => 'Are you sure you want to remove <span class="font-bold">:traitKey</span>?',
    'all_the_traits_you_created' => 'All the Traits You Created',
    'traits_categories' => 'Traits Categories',
    'traits' => 'Traits',
    'update_category' => 'Update Category',
    'update_key' => 'Update Key',
    'explanation_apply_traits' => 'Assign the traits you want to apply to individual items in your collection',
    'explanation_manage_category' => 'Manage the categories of traits. From this section, you can create new categories, update or delete existing ones. You can do the same with keys and also associate them with categories. You can view all the keys that have already been associated and, if necessary, disassociate them by right-clicking on the corresponding card. In addition, you can view all the keys that have yet to be associated: you can select one or more (note that when you select the key it must turn red, otherwise it means it has not been selected correctly) and, by right-clicking, you will be shown the list of available categories. By choosing a category, you will create the association.',
    'trait_value' => 'Trait Value',
    'view_your_all_traits' => 'View All Your Traits',
    'view_your_traits_this_collection' => 'View Your Traits of This Collection Only',
    'back_to_apply_traits' => 'Return to Apply Traits',
    'back_to_gallery' => 'Return to Gallery',
    'this_traits_non_cannot_be_removed' => 'These Traits Cannot Be Removed',

];

#### Inizio File: /home/fabio/EGI/resources/lang/en/validation.php ####

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Validation Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines contain the default error messages used by
    | the validator class. Some of these rules have multiple versions such
    | as the size rules. Feel free to tweak each of these messages here.
    |
    */

    'accepted' => 'The :attribute must be accepted.',
    'accepted_if' => 'The :attribute must be accepted when :other is :value.',
    'active_url' => 'The :attribute is not a valid URL.',
    'after' => 'The :attribute must be a date after :date.',
    'after_or_equal' => 'The :attribute must be a date after or equal to :date.',
    'alpha' => 'The :attribute must only contain letters.',
    'alpha_dash' => 'The :attribute must only contain letters, numbers, dashes and underscores.',
    'alpha_num' => 'The :attribute must only contain letters and numbers.',
    'array' => 'The :attribute must be an array.',
    'before' => 'The :attribute must be a date before :date.',
    'before_or_equal' => 'The :attribute must be a date before or equal to :date.',
    'between' => [
        'array' => 'The :attribute must have between :min and :max items.',
        'file' => 'The :attribute must be between :min and :max kilobytes.',
        'numeric' => 'The :attribute must be between :min and :max.',
        'string' => 'The :attribute must be between :min and :max characters.',
    ],
    'boolean' => 'The :attribute field must be true or false.',
    'confirmed' => 'The :attribute confirmation does not match.',
    'current_password' => 'The password is incorrect.',
    'date' => 'The :attribute is not a valid date.',
    'date_equals' => 'The :attribute must be a date equal to :date.',
    'date_format' => 'The :attribute does not match the format :format.',
    'declined' => 'The :attribute must be declined.',
    'declined_if' => 'The :attribute must be declined when :other is :value.',
    'different' => 'The :attribute and :other must be different.',
    'digits' => 'The :attribute must be :digits digits.',
    'digits_between' => 'The :attribute must be between :min and :max digits.',
    'dimensions' => 'The :attribute has invalid image dimensions.',
    'distinct' => 'The :attribute field has a duplicate value.',
    'doesnt_end_with' => 'The :attribute may not end with one of the following: :values.',
    'doesnt_start_with' => 'The :attribute may not start with one of the following: :values.',
    'email' => 'The :attribute must be a valid email address.',
    'ends_with' => 'The :attribute must end with one of the following: :values.',
    'enum' => 'The selected :attribute is invalid.',
    'exists' => 'The selected :attribute is invalid.',
    'file' => 'The :attribute must be a file.',
    'filled' => 'The :attribute field must have a value.',
    'gt' => [
        'array' => 'The :attribute must have more than :value items.',
        'file' => 'The :attribute must be greater than :value kilobytes.',
        'numeric' => 'The :attribute must be greater than :value.',
        'string' => 'The :attribute must be greater than :value characters.',
    ],
    'gte' => [
        'array' => 'The :attribute must have :value items or more.',
        'file' => 'The :attribute must be greater than or equal to :value kilobytes.',
        'numeric' => 'The :attribute must be greater than or equal to :value.',
        'string' => 'The :attribute must be greater than or equal to :value characters.',
    ],
    'image' => 'The :attribute must be an image.',
    'in' => 'The selected :attribute is invalid.',
    'in_array' => 'The :attribute field does not exist in :other.',
    'integer' => 'The :attribute must be an integer.',
    'ip' => 'The :attribute must be a valid IP address.',
    'ipv4' => 'The :attribute must be a valid IPv4 address.',
    'ipv6' => 'The :attribute must be a valid IPv6 address.',
    'json' => 'The :attribute must be a valid JSON string.',
    'lowercase' => 'The :attribute must be lowercase.',
    'lt' => [
        'array' => 'The :attribute must have less than :value items.',
        'file' => 'The :attribute must be less than :value kilobytes.',
        'numeric' => 'The :attribute must be less than :value.',
        'string' => 'The :attribute must be less than :value characters.',
    ],
    'lte' => [
        'array' => 'The :attribute must not have more than :value items.',
        'file' => 'The :attribute must be less than or equal to :value kilobytes.',
        'numeric' => 'The :attribute must be less than or equal to :value.',
        'string' => 'The :attribute must be less than or equal to :value characters.',
    ],
    'mac_address' => 'The :attribute must be a valid MAC address.',
    'max' => [
        'array' => 'The :attribute must not have more than :max items.',
        'file' => 'The :attribute must not be greater than :max kilobytes.',
        'numeric' => 'The :attribute must not be greater than :max.',
        'string' => 'The :attribute must not be greater than :max characters.',
    ],
    'max_digits' => 'The :attribute must not have more than :max digits.',
    'mimes' => 'The :attribute must be a file of type: :values.',
    'mimetypes' => 'The :attribute must be a file of type: :values.',
    'min' => [
        'array' => 'The :attribute must have at least :min items.',
        'file' => 'The :attribute must be at least :min kilobytes.',
        'numeric' => 'The :attribute must be at least :min.',
        'string' => 'The :attribute must be at least :min characters.',
    ],
    'min_digits' => 'The :attribute must have at least :min digits.',
    'multiple_of' => 'The :attribute must be a multiple of :value.',
    'not_in' => 'The selected :attribute is invalid.',
    'not_regex' => 'The :attribute format is invalid.',
    'numeric' => 'The :attribute must be a number.',
    'password' => [
        'letters' => 'The :attribute must contain at least one letter.',
        'mixed' => 'The :attribute must contain at least one uppercase and one lowercase letter.',
        'numbers' => 'The :attribute must contain at least one number.',
        'symbols' => 'The :attribute must contain at least one symbol.',
        'uncompromised' => 'The given :attribute has appeared in a data leak. Please choose a different :attribute.',
    ],
    'present' => 'The :attribute field must be present.',
    'prohibited' => 'The :attribute field is prohibited.',
    'prohibited_if' => 'The :attribute field is prohibited when :other is :value.',
    'prohibited_unless' => 'The :attribute field is prohibited unless :other is in :values.',
    'prohibits' => 'The :attribute field prohibits :other from being present.',
    'regex' => 'The :attribute format is invalid.',
    'required' => 'The :attribute field is required.',
    'required_array_keys' => 'The :attribute field must contain entries for: :values.',
    'required_if' => 'The :attribute field is required when :other is :value.',
    'required_if_accepted' => 'The :attribute field is required when :other is accepted.',
    'required_unless' => 'The :attribute field is required unless :other is in :values.',
    'required_with' => 'The :attribute field is required when :values is present.',
    'required_with_all' => 'The :attribute field is required when :values are present.',
    'required_without' => 'The :attribute field is required when :values is not present.',
    'required_without_all' => 'The :attribute field is required when none of :values are present.',
    'same' => 'The :attribute and :other must match.',
    'size' => [
        'array' => 'The :attribute must contain :size items.',
        'file' => 'The :attribute must be :size kilobytes.',
        'numeric' => 'The :attribute must be :size.',
        'string' => 'The :attribute must be :size characters.',
    ],
    'starts_with' => 'The :attribute must start with one of the following: :values.',
    'string' => 'The :attribute must be a string.',
    'timezone' => 'The :attribute must be a valid timezone.',
    'unique' => 'The :attribute has already been taken.',
    'uploaded' => 'The :attribute failed to upload.',
    'uppercase' => 'The :attribute must be uppercase.',
    'url' => 'The :attribute must be a valid URL.',
    'uuid' => 'The :attribute must be a valid UUID.',

    /*
    |--------------------------------------------------------------------------
    | Custom Validation Language Lines
    |--------------------------------------------------------------------------
    |
    | Here you may specify custom validation messages for attributes using the
    | convention "attribute.rule" to name the lines. This makes it quick to
    | specify a specific custom language line for a given attribute rule.
    |
    */

    'custom' => [
        'attribute-name' => [
            'rule-name' => 'custom-message',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Custom Validation Attributes
    |--------------------------------------------------------------------------
    |
    | The following language lines are used to swap our attribute placeholder
    | with something more reader friendly such as "E-Mail Address" instead
    | of "email". This simply helps us make our message more expressive.
    |
    */

    'attributes' => [],

];

#### Inizio File: /home/fabio/EGI/resources/lang/es/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in spagnolo di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invitar a un miembro a la colección',
    'came_back_to_collection' => 'Volver a la colección',
    'confirm_delete_title' => '¿Estás seguro?',
    'confirm_delete_text' => '¡Esta acción eliminará la imagen del :type de forma permanente!',
    'confirm_delete_button' => '¡Sí, eliminar!',
    'cancel_delete_button' => 'Cancelar',
    'deleted_title' => '¡Eliminado!',
    'deleted_text' => '¡La imagen del banner se ha eliminado correctamente!',
    'delete_card' => 'Eliminar tarjeta',
    'delete_banner' => 'Eliminar banner',
    'delete_avatar' => 'Eliminar avatar',
    'delete_EGI' => 'Eliminar EGI',
    'save_card' => 'Guardar tarjeta',
    'save_banner' => 'Guardar banner',
    'save_avatar' => 'Guardar avatar',
    'save_EGI' => 'Guardar EGI',
    'create_validation_error' => 'Error de validación',
    'creation_failed' => 'Creación fallida',
    'collection_delete' => 'Eliminar colección',
    'avatar_image' => 'Imagen de avatar',
    'card_image' => 'Imagen de la tarjeta',
    'EGI_image' => 'Imagen de EGI',
    'banner_image' => 'Imagen del banner',
    'edit_collection_data' => 'Editar datos de la colección',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nueva colección',
    'open_collection' => 'Abrir colección',
    'team_members_description' => 'Aquí puedes ver todos los miembros del equipo que tienen acceso a esta colección',
    'collection_members' => 'Miembros de la colección',
    'manage_head_images' => 'Gestionar imágenes de cabecera',
    'manage_collection' => 'Gestionar colección',
    'collection' => 'Colección',
    'collections' => 'Colecciones',
    'collection_data' => 'Datos de encabezado de la colección',
    'collection_name' => 'Nombre de la colección',
    'collection_id' => 'ID de la colección',
    'collection_description_placeholder' => 'Ingrese una descripción de la colección',
    'collection_description_suggest' => 'Una descripción clara y atractiva ayuda a los usuarios a comprender mejor su colección y aumenta su atractivo. ¡Cuéntanos qué la hace única!',
    'collection_description' => 'Ingrese todos los datos relacionados con la colección, sea muy preciso',
    'collection_image' => 'Imagen de la colección',
    'collection_image_alt' => 'Texto alternativo de la imagen de la colección',
    'add_epp' => 'Agregar un EPP',
    'add_epp_placeholder' => 'Ingrese un EPP',
    'need_to_associate_epp' => 'Hasta que asocie su galería a un EPP, no podrá publicarla',
    'EGI_floor_price' => 'Precio mínimo EGI',
    'set_base_EcoNFT_price' => 'Establezca un precio base que desee cobrar por cada EGI de esta colección',
    'collection_site_URL' => 'URL del sitio de la colección',
    'collection_site_URL_suggest' => 'Sugerencia: ingrese la URL del sitio de la colección',
    'position_for_mor_than_one_collection' => 'Si tiene más de una colección, puede decidir en qué posición colocar esta',
    'publish_collection' => 'Publicar colección',
    'image_for_EcoNFT_collection' => 'Imagen para la colección EGI',
    'image_description' => 'Esta es la imagen que representa toda la colección',
    'image_alt' => 'Imagen que representa toda la colección',
    'image_title' => 'Imagen que representa toda la colección',
    'select_new_EcoNFT_photo' => 'Seleccione una nueva foto para el EGI',
    'switch_collection' => 'Cambiar colección',
    'goto_collection' => 'Ir a la colección',
    'type' => 'Tipo',
    'select_content_type' => 'Seleccione el tipo de contenido',
    'type_image' => 'Imagen',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'Número EGI',
    'position' => 'Posición',
    'updated_successfully' => 'Colección guardada con éxito',
    'save_failed' => 'Error al guardar',
    'collection_not_found' => 'Colección no encontrada',
    'tips_to_optimize_your_collection' => 'Consejos para optimizar tu colección',
    'tips_for_your_collection_images' => 'Consejos para las imágenes de tu colección',
    'image_section_title' => 'Imágenes de la colección',
    'image_section_description' => 'Elige cuidadosamente las imágenes que representan tu colección',
    'data_section_title' => 'Datos de la colección',
    'data_section_description' => 'Elige cuidadosamente los datos que representan tu colección',
    'this_is_default_collection_of_the_team' => 'Esta es la colección predeterminada del equipo',
    'wallet' => [
        'write_royalty_mint' => 'Ingresa el porcentaje de regalías para el mint',
        'write_royalty_rebind' => 'Ingresa el porcentaje de regalías para el rebind',
        'user_role' => 'Rol',
        'role_unknown' => 'Sin rol',
        'address' => 'Dirección del wallet',
        'balance' => 'Saldo del wallet',
        'name' => 'Nombre del wallet',
        'status' => 'Estado del wallet',
        'royalty' => 'Regalías',
        'royalty_mint' => 'Regalías del mint',
        'royalty_rebind' => 'Regalías del rebind',
        'manage_wallet' => 'Gestionar wallet',
        'remove_photo' => 'Eliminar foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancelación del wallet',
        'select_a_wallet_connect' => 'Selecciona un wallet',
        'button_wallet_connect' => 'Conectar un wallet',
        'button_wallet_disconnect' => 'Desconectar',
        'create_the_wallet' => 'Crear un nuevo wallet',
        'username' => 'Nombre de usuario',
        'create' => 'Crear un wallet',
        'delete_wallet' => '¿Estás seguro de que deseas eliminar este wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in spagnolo di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Acceso no autorizado',
    'SCAN_ERROR' => 'Error de escaneo',
    'VIRUS_FOUND' => 'Virus encontrado',
    'INVALID_FILE_EXTENSION' => 'Extensión de archivo no válida',
    'MAX_FILE_SIZE' => 'El archivo no puede exceder :max byte.',
    'INVALID_FILE_PDF' => 'Archivo PDF no válido',
    'MIME_TYPE_NOT_ALLOWED' => 'Tipo de archivo no permitido.',
    'INVALID_IMAGE_STRUCTURE' => 'Estructura de imagen no válida',
    'INVALID_FILE_NAME' => 'Nombre de archivo no válido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Error al obtener la URL prefirmada',
    'ERROR_DURING_FILE_UPLOAD' => 'Error durante la carga del archivo',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Imposible guardar el archivo.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Imposible crear la carpeta',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Imposible cambiar los permisos de la carpeta',
    'IMPOSSIBLE_SAVE_FILE' => 'Imposible guardar el archivo',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Error durante la creación del registro EGI en la base de datos',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Error durante la encriptación del nombre del archivo',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, el soporte ya ha sido alertado',
    'JSON_ERROR_IN_DISPATCHER' => 'Error JSON en el despachador',
    'GENERIC_SERVER_ERROR' => 'Error genérico del servidor, el equipo técnico ha sido informado',
    'FILE_NOT_FOUND' => 'Archivo no encontrado',
    'UNEXPECTED_ERROR' => 'Error genérico del servidor, el equipo técnico ha sido informado',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Error al eliminar el archivo temporal local',

    'scan_error' => 'Error de escaneo',
    'virus_found' => 'Virus encontrado',
    'required' => 'El campo es obligatorio.',
    'file' => 'Se produjo un error al cargar el archivo.',
    'file_extension_not_valid' => 'Extensión de archivo no válida',
    'mimes' => 'El archivo debe ser de tipo: :values.',
    'max_file_size' => 'El archivo no puede exceder :max byte.',
    'invalid_pdf_file' => 'Archivo PDF no válido',
    'mime_type_not_allowed' => 'Tipo de archivo no permitido.',
    'invalid_image_structure' => 'Estructura de imagen no válida',
    'invalid_file_name' => 'Nombre de archivo no válido',
    'error_getting_presigned_URL' => 'Error al obtener la URL prefirmada',
    'error_getting_presigned_URL_for_user' => 'Error al cargar el archivo',
    'error_during_file_upload' => 'Error durante la carga del archivo',
    'error_deleting_file' => 'Error al eliminar el archivo',
    'upload_finished' => 'Carga final',
    'some_errors' => 'algunos errores',
    'upload_failed' => 'carga fallida',
    'error_creating_folder' => 'Error al crear la carpeta',
    'error_changing_folder_permissions' => 'Error al cambiar los permisos de la carpeta',
    'local_save_failed_file_saved_to_external_disk_only' => 'El guardado local falló, archivo guardado solo en el disco externo',
    'external_save_failed_file_saved_to_local_disk_only' => 'El guardado externo falló, archivo guardado solo en el disco local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'El escaneo de archivos puede llevar mucho tiempo para cada archivo',
    'all_files_are_saved' => 'Todos los archivos están guardados',
    'loading_finished_you_can_proceed_with_saving' => 'Carga finalizada, puede proceder con el guardado',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Carga finalizada, puede proceder con el guardado y el escaneo',
    'im_uploading_the_file' => 'Estoy subiendo el archivo',


    'exception' => [
        'NotAllowedTermException' => 'Término no permitido',
        'MissingCategory' => 'Es necesario insertar una categoría.',
        'DatabaseException' => 'Se produjo un error de base de datos',
        'ValidationException' => 'Se produjo un error de validación',
        'HttpException' => 'Se produjo un error HTTP',
        'ModelNotFoundException' => 'Modelo no encontrado',
        'QueryException' => 'Error de consulta',
        'MintingException' => 'Error durante el minting',
        'FileNotFoundException' => 'Archivo no encontrado',
        'InvalidArgumentException' => 'Argumento no válido',
        'UnexpectedValueException' => 'Valor inesperado',
        'ItemNotFoundException' => 'Elemento no encontrado',
        'MultipleItemsFoundException' => 'Múltiples elementos encontrados',
        'LogicException' => 'Excepción lógica',
        'EntryNotFoundException' => 'Entrada no encontrada',
        'RuntimeException' => 'Error de tiempo de ejecución',
        'BadMethodCallException' => 'Llamada de método incorrecta',
        'LockTimeoutException' => 'Tiempo de espera de bloqueo',
        'InvalidIntervalException' => 'Intervalo no válido',
        'InvalidPeriodParameterException' => 'Parámetro de período no válido',
        'EndLessPeriodException' => 'Período sin fin',
        'UnreachableException' => 'Excepción inalcanzable',
        'InvalidTimeZoneException' => 'Zona horaria no válida',
        'ImmutableException' => 'Excepción inmutable',
        'InvalidFormatException' => 'Formato no válido',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Estimado usuario,</p>
            </br>
            <p>El texto que ha introducido viola nuestras normas y directrices de la comunidad. Por favor, modifique el contenido e inténtelo de nuevo.</p>
            </br>
            <p>Si no entiende por qué este término está prohibido, consulte las cláusulas del acuerdo que aceptó en el momento del registro.
            <p>Agradecemos su comprensión y colaboración.</p>
            </br>
            <p>Atentamente,
            <br>
            El equipo de Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulte la página de normas de la comunidad.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker no se inicializó correctamente',
    'table_not_exist' => 'La tabla no existe',
    'unique' => 'Este valor ya está presente en su biblioteca de traits.',
    'the_category_name_cannot_be_empty' => 'El nombre de la categoría no puede estar vacío',
    'nathing_to_save' => 'Nada que guardar',
    'an_error_occurred' => '¡Ups! Lo siento, ¡se produjo un error!',
    'error_number' => 'Número de error:',
    'reason' => [
        'reason' => 'razón',
        'wallet_not_valid' => 'Cartera no válida',
        'something_went_wrong' => 'Algo salió mal',
    ],
    'solution' => [
        'solution' => 'solución',
        'create_a_new_wallet_and_try_again' => 'Crea una nueva cartera y vuelve a intentarlo',
        'we_are_already_working_on_solving_the_problem' => 'Ya estamos trabajando en resolver el problema',
    ],
    'min' => [
        'string' => 'El campo debe tener al menos :min caracteres.',
    ],
    'max' => [
        'string' => 'El campo debe tener como máximo :max caracteres.',
    ],
    'id_epp_not_found' => 'ID EPP no encontrado',
    'minting' => [
        'error_generating_token' => 'Error al generar el token',
        'insufficient_wallet_balance' => 'Saldo insuficiente en la cartera para comprar este EcoNFT',
        'error_during_save_the_metadataFile' => 'Error al guardar los metadatos en el archivo',
        'error_during_save_the_metadata_on_database' => 'Error al guardar los metadatos en la base de datos',
        'error_during_create_metadata_file' => 'Error al crear el archivo de metadatos',
        'error_during_save_the_buyer' => 'Error al guardar el comprador',
        'buyer_not_exist' => 'El comprador no existe',
        'this_wallet_does_not_belong_to_any_buyer' => 'Esta cartera no pertenece a ningún comprador',
        'seller_not_exist' => 'El vendedor no existe',
        'seller_owner_not_found' => 'No se encuentra el propietario del vendedor',
        'seller_wallet_address_not_found' => 'No se encontró la dirección de la cartera del vendedor',
        'error_during_save_the_seller' => 'Error al guardar el vendedor',
        'error_during_save_the_buyer_transaction' => 'Error al guardar la transacción del comprador',
        'error_during_the_saving_of_the_payment' => 'Error al guardar el pago',
        'error_during_save_the_natan' => 'Error al guardar los datos', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Error al guardar la transacción',
        'seller_not_found' => 'Vendedor no encontrado',
        'error_during_the_minting' => 'Error durante la creación',
        'error_uploading_file' => 'Error al subir el archivo',
        'insufficient_balance' => 'Saldo insuficiente',
        'eco_nft_not_found' => 'EcoNFT no encontrado',
        'no_traits_found' => 'No se encontraron rasgos',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in spagnolo
|--------------------------------------------------------------------------
|
 */

return [
    'came_to_back' => 'Volver',
    "file_deleted_successfully" => "Archivo eliminado con éxito",
    'extension_not_allowed' => '¡Extensión no permitida!',
    'title_file_type_not_allowed' => '¡Tipo de archivo no permitido!',
    'title_file_size_exceeds' => '¡Tamaño de archivo excesivo!',
    'title_invalid_file_name' => '¡Nombre de archivo no válido!',
    'file_extension_not_allowed' => 'Tipo de archivo no permitido: :extension. Los tipos de archivo permitidos tienen las siguientes extensiones: :extensions.',
    'file_type_not_allowed' => 'Tipo de archivo no permitido: :type. Los tipos MIME permitidos son: :mimetypes.',
    'file_size_exceeds' => 'El tamaño del archivo supera el tamaño máximo permitido de :size MB.',
    'invalid_file_name' => 'Nombre de archivo no válido: :filename. El nombre del archivo contiene caracteres no permitidos.',
    'allowed_extensions' => 'Las extensiones permitidas son: :extensions.',
    'allowed_mime_types' => 'Los tipos MIME permitidos son: :mimetypes.',
    "file_infected" => "Archivo infectado",
    "scan_error" => "Error de escaneo",
    "starting_scan" => "Iniciando escaneo",
    "error_uploading_file" => "Error al subir el archivo",
    "error_getting_presigned_url" => "Error al obtener la URL prefirmada",
    "error_deleting_file" => "Error al eliminar el archivo",
    "upload_finished" => "Carga completada",
    "some_errors" => "algunos errores",
    "upload_failed" => "carga fallida",
    "file_scanning_may_take_a_long_time_for_each_file" => "La exploración de archivos puede llevar mucho tiempo para cada archivo",
    "all_files_are_saved" => "Todos los archivos están guardados",
    "loading_finished_you_can_proceed_with_saving" => "Carga finalizada, puedes proceder con el guardado",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Carga finalizada, puedes proceder con el guardado y el escaneo",
    "im_uploading_the_file" => "Estoy subiendo el archivo",
    "virus_scan_disabled" => "Escaneo de virus desactivado",
    "virus_scan_enabled" => "Escaneo de virus habilitado",
    "file_is_clean" => "El archivo está limpio",
    "the_uploaded_file_was_detected_as_infected" => "El archivo subido fue detectado como infectado",
    "antivirus_scan_in_progress" => "Escaneo de antivirus en progreso",
    'scanning_stopped' => 'Escaneo detenido',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy feliz',
    "emogy_angry" => 'Emogy enojado',
    "im_checking_the_validity_of_the_file" => 'Estoy comprobando la validez del archivo',
    "im_recording_the_information_in_the_database" => 'Estoy registrando la información en la base de datos',
    "im_saving_the_image" => 'Estoy guardando la imagen',
    "file_saved_successfully" => 'Archivo: :fileCaricato guardado con éxito',
    "file_scanned_successfully" => 'Archivo: :fileCaricato escaneado con éxito',
    "file_uploaded_successfully" => 'Archivo: :fileCaricato subido con éxito',
    "all_files_were_scanned_no_infected_files" => 'Todos los archivos fueron escaneados, no hay archivos infectados',
    "one_or_more_files_were_found_infected" => 'Se encontró uno o más archivos infectados, se han excluido de la carga',
    "no_file_uploaded" => "Ningún archivo subido",
    "error_during_file_upload" => "Error durante la carga del archivo",
    'starting_uplad' => 'Iniciando carga',
    'uploaded' => 'Subido',
    'successfully' => 'con éxito',
    'starting_upload' => 'Iniciando carga',
    "starting_saving" => "Iniciando guardado",
    'waiting' => 'Esperando...',
    'upload_status' => 'Estado de carga',
    'return_to_collection' => 'Volver a la colección',
    'EGI_image' =>'Imagen EGI',
    'error_in_the_files' => 'Error en los archivos',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Vista previa de EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Arrastra y suelta tus archivos aquí o haz clic para seleccionar',
    'upload_your_EGI_Files' => 'Sube tus archivos EGI',
    'wait_for_the_files_to_load' => 'Espera a que se carguen los archivos',
    'access_the_control_panel' => 'Accede al panel de control',
    'of' => 'de',
    'errors_in_the_files' => 'Errores en los archivos',
    'loading' => 'Cargando...',
    'utilities_image_file' => 'Utilidades, imagen y carga de archivos',
    'file_upload' => 'Carga de archivos',
    'select_files' => 'Selecciona los archivos',
    'max_file_size_reminder' => 'Recuerda: el tamaño máximo para cada archivo es de 100MB. Para archivos mayores de 30MB, recomendamos la carga individual para evitar problemas de red',
    'upload_your_files' => 'Sube tus archivos',
    'file_format_not_supported_for_viewing' => 'Formato de archivo no compatible para ver',
    'cancel_upload' => 'Cancelar la carga',
    'save_the_files' => 'Guardar los archivos',
    'open' => 'Abrir',
    'user_management' => 'Gestión de usuarios',
    'sign_in' => 'Iniciar sesión',
    'sign_out' => 'Cerrar sesión',
    "who_is_natan_frangette" => "¿Quién es Natan Frangette?",
    'home' => 'Inicio',
    'remove_photo' => 'Eliminar foto',
    'username' => 'Nombre de usuario',
    'bind' => 'Enlazar',
    'value' => 'Valor',
    'title' => 'Título',
    'dimension' => 'Dimensión',
    'size' => 'Tamaño: ',
    'description' => 'Descripción',
    'name' => 'Nombre',
    'date_start' => 'Fecha de inicio',
    'date_end' => 'Fecha de finalización',
    'unknown' => 'Desconocido',
    'active' => 'Activo',
    'inactive' => 'Inactivo',
    'existing' => 'Existente',
    'welcome' => 'Bienvenido al hub Natan',
    'done' => 'Hecho',
    'create' => 'Crear',
    'saving' => 'Guardando...',
    'save' => 'Guardar',
    'saved' => 'Guardado!',
    'remember_to_save' => 'Recuerda guardar',
    'cancel' => 'Cancelar',
    'delete' => 'Eliminar',
    'deleted' => 'Eliminado',
    'edit' => 'Editar',
    'update' => 'Actualizar',
    'cancelled' => 'Cancelado',
    'add' => 'Añadir',
    'confirm' => 'Confirmar',
    'disable' => 'Desactivar',
    'close' => 'Cerrar',
    'delete_confirm' => '¿Estás seguro de que quieres eliminar este elemento?',
    'search' => 'Buscar',
    'whoops_something_went_wrong' => 'Whoops, algo salió mal',
    'action_confirm' => 'Operación completada con éxito!',
    'traits' => 'Rasgos',
    'utility' => 'Utilidad',
    'zoom' => 'Zoom',
    'product_image' => 'Imagen del producto',
    'micro_logo' => 'Micro logo, molécula de Equilibrium',
    'logo' => 'Logo, molécula de Equilibrium',
    'manage_utility' => 'Gestionar utilidad',
    'item_zoom' => 'Tamaño original',
    'esternal_transfert' => 'Transferencia externa',
    'internal_transfert' => 'Transferencia interna',
    'back_to_item' => 'Volver al elemento',
    'position' => 'Posición',
    'head_photo_page' => 'Foto de cabecera de la página',
    'handle_collection_data' => 'Editar datos de la colección',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este elemento no se puede eliminar porque hay archivos asociados con él',
    'edit_item' => [
        'title' => 'Editar elemento',
        'description' => 'Editar la información del elemento',
        'back_to_collection' => 'Volver a la colección',
        'write_the_buyers_email' => 'Escriba el correo electrónico del comprador',
        'this_item_cannot_be_transfered' => 'Este elemento no se puede transferir',
        'are_you_sure_you_want_to_transfer_this_item' => '¿Estás seguro de que quieres transferir este elemento de <span class="font-bold"> :collectionNameFrom </span> a <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'La colección personal para este usuario no existe, no se puede realizar la transferencia',
        'not_exist_user_width_this_email' => 'El usuario con el correo electrónico :emailExternalTransfer no existe.',
        'transfer' => 'Transferir',
        'internal_transfer' => 'Transferencia interna',
        'external_transfer' => 'Transferencia externa',
        'max_25_char' => 'Máximo 25 caracteres',
        'max_1000_char' => 'Máximo 1000 caracteres',
        'write_the_description' => 'Escriba la descripción',
        'date_of_creation' => 'Fecha de creación',
        'publish' => 'Publicar',
        'unpublish' => 'Despublicar',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este elemento no se puede eliminar porque hay archivos asociados con él',
    ],
    'bio' => [
        'your_biography' => 'Tu biografía',
        'bio_title' => 'Título de la biografía',
        'manage_biography' => 'Gestionar biografía',
        'manage_chapter' => 'Gestionar capítulos',
        'back_to_biography' => 'Volver a la biografía',
        'back_to_profile' => 'Volver al perfil',
        'chapter' => 'Capítulo',
        'chapter_start_date' => 'Fecha de inicio del capítulo',
        'chapter_end_date' => 'Fecha de finalización del capítulo',
        'chapter_title' => 'Título del capítulo',
        'chapter_biography' => 'Biografía del capítulo',
        'remove_biography' => 'Eliminar biografía',
        'remove_chapter' => 'Eliminar capítulo',
        'removed_chapter' => 'Capítulo eliminado',
        'add_chapter' => 'Agregar capítulo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => '¿Estás seguro de que deseas eliminar este capítulo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => '¿Estás seguro de que deseas eliminar esta biografía?',
    ],

    'drop' => [
        'remove_from_drop' => 'Eliminar de la Drop',
        'add_to_drop' => 'Añadir a la Drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => '¿Estás seguro de que quieres eliminar :itemremoved del drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: spagnolo
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Por favor, inicie sesión en su cuenta',
    'email' => 'Dirección de correo electrónico',
    'password' => 'Contraseña',
    'remember_me' => 'Recuérdame',
    'forgot_your_password' => '¿Olvidaste tu contraseña?',
    'login' => 'Iniciar sesión',
    'register' => 'Registrarse',
    'please_register_now' => 'Por favor, regístrese ahora',
    'first_name' => 'Nombre',
    'last_name' => 'Apellido',
    'confirm_password' => 'Confirmar contraseña',
    'reset_password' => 'Restablecer la contraseña',
    'current_password' => 'Contraseña actual',
    'new_password' => 'Nueva contraseña',
    'have_an_account' => '¿Tienes una cuenta?',
    'dont_have_an_account' => '¿No tienes una cuenta?',
    'logout' => 'Cerrar sesión',
    'i_agree_to' => 'Estoy de acuerdo con',
    'terms_of_service' => 'Términos de servicio',
    'and' => 'y',
    'privacy_policy' => 'Política de privacidad',
    'welcome_to_the_first_artist_business_builder' => 'Bienvenido al portal de Natan Frangette, el primer y único Generador de Negocios para Artistas',
    'welcome_to_the_natan_site' => 'Bienvenido al sitio de Natan',
    'join_us' => '¡Únete a un equipo que hará la diferencia!',
    'express_your_creativity' => 'Expresa tu creatividad con tus EcoNFT',
    'change_the_world_with_every_sale' => 'Cambia el mundo con cada compra',
    'innovative_partnerships' => 'Asociaciones innovadoras',
    'bring_your_artistic_biography_to_life' => 'Trae tu biografía artística a la vida',
    'impact_community' => 'Comunidad de impacto',
    'register_now' => '¡Regístrese hoy y sea parte de una revolución artística con un impacto positivo en la sociedad y el medio ambiente!',
    'change_language' => 'Cambiar idioma',
    'for_your_security_please_confirm_your_password_to_continue' => 'Por su seguridad, confirme su contraseña para continuar.',
    'two_factor' => [
        'title' => 'Autenticación de Dos Factores',
        'description' => 'Agrega seguridad adicional a tu cuenta usando la autenticación de dos factores.',
        'finish_enabled' => 'Finaliza la activación de la autenticación de dos factores.',
        'enabled' => 'La autenticación de dos factores ha sido activada para tu cuenta.',
        'not_enabled' => 'No has activado la autenticación de dos factores.',
        'prompt' => 'Cuando se activa la autenticación de dos factores, se te pedirá un token seguro y aleatorio durante la autenticación. Puedes obtener este token desde la aplicación Google Authenticator en tu teléfono.',
        'QRCode' => [
            'title' => 'Escanea el código QR abajo en tu aplicación de autenticación del teléfono.',
            'alt' => 'Código QR',
            'finish_enabled' => 'Para finalizar la activación de la autenticación de dos factores, escanea el código QR siguiente con la aplicación de autenticación de tu teléfono o ingresa la clave de configuración y proporciona el código OTP generado.',
            'enabled' => 'La autenticación de dos factores está activada. Escanea el siguiente código QR con la aplicación de autenticación de tu teléfono o introduce la clave de configuración.',
            'setup_key' => 'Clave de Configuración',
            'code' => 'Código',
            'showing_recovery_codes' => 'Guarda estos códigos de recuperación en un gestor de contraseñas seguro. Se pueden usar para recuperar el acceso a tu cuenta si pierdes tu dispositivo de autenticación de dos factores.',
            'enable' => 'Activar',
            'disable' => 'Desactivar',
            'regenerate_recory_codes' => 'Regenerar Códigos de Recuperación',
            'confirm' => 'Confirmar',
            'cancel' => 'Cancelar',
            'show_recory_codes' => 'Mostrar Códigos de Recuperación',
            'confirm_password' => 'Confirmar Contraseña',
        ],
    ],
    'browser_session' => [
        'title' => 'Sesión del Navegador',
        'description' => 'Gestiona y desconecta sesiones activas en otros navegadores y dispositivos.',
        'prompt' => 'Si es necesario, puedes desconectar todas las demás sesiones del navegador en todos tus dispositivos. Algunas de tus sesiones recientes están listadas a continuación; sin embargo, esta lista puede no ser exhaustiva. Si crees que tu cuenta ha sido comprometida, también deberías actualizar tu contraseña.',
        'this_device' => 'Este Dispositivo',
        'last_active' => 'Última Actividad',
        'log_out_other_browser_sessions' => 'Desconectar otras sesiones del navegador',
        'please_enter_your_password_to_confirm' => 'Por favor, introduce tu contraseña para confirmar que deseas desconectar las demás sesiones del navegador en todos tus dispositivos.',
    ],
    'delete_account' => [
        'title' => 'Eliminar Cuenta',
        'description' => 'Elimina tu cuenta permanentemente.',
        'prompt' => '¿Estás seguro de que deseas eliminar tu cuenta? Una vez eliminada, todos tus datos y recursos serán eliminados permanentemente. Introduce tu contraseña para confirmar que deseas eliminar tu cuenta de forma permanente.',
        'once_your_account_is_deleted' => 'Una vez que tu cuenta sea eliminada, todos tus datos y recursos serán eliminados permanentemente. Antes de eliminar tu cuenta, descarga cualquier dato o información que quieras conservar.',
        'delete_account' => 'Eliminar Cuenta',
    ],

];
#### Inizio File: /home/fabio/EGI/resources/lang/es/profile.php ####

<?php
/*
|
|    Traduzione in spagnolo
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografía',
    'account' => 'Cuenta',
    'first_name' => 'Nombre',
    'last_name' => 'Apellido',
    'email' => 'Correo electrónico',
    'wallet' => 'Billetera',
    'your_email_address_is_unverified' => 'Tu dirección de correo electrónico no está verificada',
    'click_here_to_re-send_the_verification_email' => 'Haz clic aquí para reenviar el correo de verificación',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Se ha enviado un nuevo enlace de verificación a tu dirección de correo electrónico.',
    'language' => 'Idioma',
    'creator' => 'Creador',
    'email_verified_at' => 'Correo verificado el',
    'password' => 'Contraseña',
    'remember_token' => 'Recordar token',
    'current_team_id' => 'ID del equipo actual',
    'profile_photo_path' => 'Ruta de la foto de perfil',
    'consent' => 'Consentimiento',
    'bio_title' => 'Título de biografía',
    'bio_story' => 'Historia biográfica',
    'title' => 'Título',
    'mr_miss_dott' => 'Sr. / Sra. / Dr.',
    'job_role' => 'Puesto de trabajo',
    'user_name' => 'Nombre de usuario',
    'user_type' => 'Tipo de usuario',
    'street' => 'Calle',
    'city' => 'Ciudad',
    'region' => 'Región',
    'state' => 'Estado',
    'zip' => 'Código postal',
    'home_phone' => 'Teléfono de casa',
    'cell_phone' => 'Teléfono móvil',
    'work_phone' => 'Teléfono de trabajo',
    'site_url' => 'Sitio web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch', // Asumo que "Twich" fue un error tipográfico
    'Other' => 'Otro',
    'birth_date' => 'Fecha de nacimiento',
    'fiscal_code' => 'Código fiscal',
    'tax_id_number' => 'Número de identificación fiscal',
    'doc_typo' => 'Tipo de documento',
    'doc_num' => 'Número de documento',
    'doc_issue_date' => 'Fecha de emisión del documento',
    'doc_expired_date' => 'Fecha de caducidad del documento',
    'doc_issue_from' => 'Documento emitido por',
    'doc_photo_path_f' => 'Ruta de la foto frontal del documento',
    'doc_photo_path_r' => 'Ruta de la foto trasera del documento',
    'org_data_sheet' => 'Hoja de datos de la organización',
    'please_update_your_company_information' => 'Actualiza la información de tu empresa',
    'insert_a_valid_url' => 'Introduce una URL válida',
    'enter_annotation' => 'Introduce una anotación',
    'org_name' => 'Nombre de la organización',
    'org_email' => 'Correo de la organización',
    'org_street' => 'Calle de la organización',
    'org_city' => 'Ciudad de la organización',
    'org_region' => 'Región de la organización',
    'org_state' => 'Estado de la organización',
    'org_zip' => 'Código postal de la organización',
    'org_site_url' => 'Sitio web de la organización',
    'annotation' => 'Anotación',
    'org_phone_1' => 'Teléfono de la organización 1',
    'org_phone_2' => 'Teléfono de la organización 2',
    'org_phone_3' => 'Teléfono de la organización 3',
    'rea' => 'REA', // No traducido ya que no estoy seguro del contexto
    'org_fiscal_code' => 'Código fiscal de la organización',
    'org_vat_number' => 'Número de IVA de la organización',
    'select_a_photo' => 'Selecciona una foto',
    'upload_a_photo' => 'Subir una foto',
    'remove_photo' => 'Eliminar foto',
    'select_a_language' => 'Selecciona un idioma',
    'photo' => 'Foto',
    'profile_information' => 'Información del perfil',
    'update_your_profile_data' => 'Actualiza tus datos de perfil',
    'biography' => 'Biografía',
    'document_data' => 'Datos del documento',
    'please_enter_your_ID_details' => 'Introduce los detalles de tu identificación',
    'document_type' => 'Tipo de documento',
    'drive_licenze' => 'Licencia de conducir',
    'passport' => 'Pasaporte',
    'identity_card' => 'Tarjeta de identidad',
    'front_photograph_of_the_document' => 'Fotografía frontal del documento',
    'back_photograph_of_the_document' => 'Fotografía trasera del documento',
    'social_media' => 'Redes sociales',
    'please_enter_your_social_media_details' => 'Introduce los detalles de tus redes sociales',
    'update_password' => 'Actualizar contraseña',
    'ensure_your_account' => 'Asegura tu cuenta usando una contraseña larga y aleatoria',
    'enter_your_new_password' => 'Introduce tu nueva contraseña',
    'confirm_your_new_password' => 'Confirma tu nueva contraseña',
    'two_factor_authentication' => 'Autenticación de dos factores',
    'two_factor_authentication_add_additional_security' => 'Agrega seguridad adicional a tu cuenta usando la autenticación de dos factores',
    'You_have_not_enabled_two_factor_authentication.' => 'No has habilitado la autenticación de dos factores.',
    'text_for_two_factor_authentication' => 'Cuando está habilitada la autenticación de dos factores, se te solicitará un token seguro y aleatorio al autenticarte. Puedes obtener este token desde la aplicación Google Authenticator en tu teléfono.',
    'browser_sessions' => 'Sesiones del navegador',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Administra y cierra tus sesiones activas en otros navegadores y dispositivos.',
    'text_for_sessione' => 'Si es necesario, puedes cerrar sesión en todas las otras sesiones del navegador en todos tus dispositivos. Algunas de tus sesiones recientes están listadas abajo; sin embargo, esta lista podría no ser completa. Si crees que tu cuenta ha sido comprometida, también deberías actualizar tu contraseña.',
    'log_out_other_browser_sessions' => 'Cerrar las demás sesiones del navegador',
];

#### Inizio File: /home/fabio/EGI/resources/lang/es/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traducción en español de todos los datos de la barra lateral y de la barra de navegación
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gestionar Colecciones',
        'collections' => 'Colecciones',
        'dashboard' => 'Panel de Control',
        'admin' => 'Admin',
        'authorizations' => 'Autorizaciones',
    ],

    'open_collection' => 'Abrir Colección',
    'new_collection' => 'Nueva Colección',
    'permissions_roles' => 'Roles y Permisos',
    'assign_roles' => 'Asignar Roles',
    'assign_permissions' => 'Asignar Permisos',
    'manage_roles' => 'Gestionar Roles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/es/traits.php ####

<?php

/*
|
|    Traduzione spagnolo per i dati dei traits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => '¿Estás seguro de que quieres combinar este rasgo?',
    'yes_match_it' => 'Sí, combínalo',
    'the_trait_was_matched' => 'El rasgo fue combinado',
    'trait_added' => 'Rasgo añadido',
    'category_added' => 'Categoría añadida',
    'key_added' => 'Clave añadida',
    'value_added' => 'Valor añadido',
    'new_category' => 'Nueva categoría',
    'new_key' => 'Nueva clave',
    'key_deletion_error' => 'Esta clave está vinculada a algunos rasgos y no se puede eliminar. Si deseas eliminarla, primero debes eliminar los rasgos asociados.',
    'create_a_new_trait_for_this_key' => 'Crear un nuevo rasgo para esta clave',
    'click_for_selected' => 'Haz clic para seleccionar',
    'trait_icon' => 'Icono de rasgo',
    'EGI_with_traits' => 'EGI con rasgos',
    'traits_library' => 'Librería de rasgos',
    'collection' => 'Colección',
    'manage_traits' => 'Gestionar rasgos',
    'manage_key' => 'Gestionar claves',
    'manage_category' => 'Gestionar categorías',
    'delete_traits' => 'Eliminar rasgos',
    'applyTraits' => 'Regresar a Aplicar Rasgos',
    'open_manage' => 'Abrir gestión',
    'close_manage' => 'Cerrar gestión',
    'apply_traits' => 'Aplicar rasgos',
    'create_new_key' => 'Crear nueva clave',
    'key_deletion' => 'Eliminación de clave',
    'key_deletion_confirm' => '¿Estás seguro de que quieres eliminar esta clave: :key?',
    'key_not_possible_delete' => 'No es posible eliminar esta clave',
    'key_deleted' => 'Clave eliminada',
    'key_search' => 'Buscar clave',
    'make_a_new_key' => 'Crear una nueva clave',
    'key_created' => 'Clave creada',
    'key_updated' => 'Clave actualizada',
    'key_not_possible_update' => 'No es posible actualizar esta clave',
    'key_not_found' => 'Clave no encontrada',
    'key_not_possible_create' => 'No es posible crear esta clave',
    'key_not_possible_find' => 'No es posible encontrar esta clave',
    'bind' => 'Vincular',
    'unbind' => 'Desvincular',
    'binded' => 'Claves vinculadas',
    'unbinded' => 'Claves por vincular',
    'make' => 'Crear',
    'create_a_new_category' => 'Crear una nueva categoría',
    'category_created' => 'Categoría creada',
    'create_a_new_key' => 'Crear una nueva clave',
    'select_a_category' => 'Seleccionar una categoría',
    'category' => 'Categoría',
    'select_a_key' => 'Seleccionar una clave',
    'key' => 'Clave',
    'value_for_key' => 'Valor para la clave',
    'select_all' => 'Seleccionar todo',
    'select_one_or_more_EGI' => 'Seleccionar uno o más EGI',
    'unselect_all' => 'Deseleccionar todo',
    'many_to_many' => 'Muchos a muchos',
    'one_to_many' => 'Uno a muchos',
    'zoom_in' => 'Aumentar zoom',
    'zoom_out' => 'Reducir zoom',
    'traits_on :numberItems items_in_this_collection' => 'Rasgos en :numberItems elementos de esta colección',
    'are_you_sure_remove :traitKey' => '¿Estás seguro de que quieres eliminar <span class="font-bold"> :traitKey<span>?',
    'all_the_traits_you_created' => 'Todos los rasgos que has creado',
    'traits_categories' => 'Categorías de rasgos',
    'traits' => 'Rasgos',
    'update_category' => 'Actualizar categoría',
    'update_key' => 'Actualizar clave',
    'category' => 'Categoría',
    'explanation_apply_traits' => 'Asigna las características que deseas aplicar a los elementos individuales de tu colección',
    'explanation_manage_category' => 'Gestiona las categorías de rasgos. Desde esta sección puedes crear nuevas categorías, actualizar o eliminar las existentes. Puedes hacer lo mismo con las claves y también asociarlas a categorías. Puedes ver todas las claves que ya han sido asociadas y, si es necesario, desvincularlas haciendo clic derecho en la tarjeta correspondiente. Además, puedes ver todas las claves que aún deben ser asociadas: puedes seleccionar una o más (nota que cuando seleccionas la clave debe volverse roja, de lo contrario significa que no fue seleccionada correctamente) y, al hacer clic derecho, se te mostrará una lista de categorías disponibles. Al elegir una categoría, crearás la asociación.',
    'trait_value' => 'Valor del rasgo',
    'view_your_all_traits' => 'Ver todos tus rasgos',
    'view_your_traits_this_collection' => 'Ver tus rasgos solo de esta colección',
    'back_to_apply_traits' => 'Volver a aplicar rasgos',
    'back_to_gallery' => 'Volver a la galería',
    'this_traits_non_cannot_be_removed' => 'Estos rasgos no pueden ser eliminados',
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in francese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Inviter un membre à la collection',
    'came_back_to_collection' => 'Retour à la collection',
    'confirm_delete_title' => 'Êtes-vous sûr?',
    'confirm_delete_text' => 'Cette action supprimera l\'image de la :type de façon permanente!',
    'confirm_delete_button' => 'Oui, supprimer!',
    'cancel_delete_button' => 'Annuler',
    'deleted_title' => 'Supprimé!',
    'deleted_text' => 'L\'image de la bannière a été supprimée avec succès.',
    'delete_card' => 'Supprimer la carte',
    'delete_banner' => 'Supprimer la bannière',
    'delete_avatar' => 'Supprimer l\'avatar',
    'delete_EGI' => 'Supprimer l\'EGI',
    'save_card' => 'Enregistrer la carte',
    'save_banner' => 'Enregistrer la bannière',
    'save_avatar' => 'Enregistrer l\'avatar',
    'save_EGI' => 'Enregistrer l\'EGI',
    'create_validation_error' => 'Erreur de validation',
    'creation_failed' => 'Création échouée',
    'collection_delete' => 'Supprimer la collection',
    'avatar_image' => 'Image d\'avatar',
    'card_image' => 'Image de la carte',
    'EGI_image' => 'Image EGI',
    'banner_image' => 'Image de la bannière',
    'edit_collection_data' => 'Modifier les données de la collection',
    'modifies_EGI' => 'Modifie EGI',
    'new_collection' => 'Nouvelle collection',
    'open_collection' => 'Ouvrir la collection',
    'team_members_description' => 'Ici, vous pouvez voir tous les membres de l\'équipe qui ont accès à cette collection',
    'collection_members' => 'Membres de la collection',
    'manage_head_images' => 'Gérer les images d\'en-tête',
    'manage_collection' => 'Gérer la collection',
    'collection' => 'Collection',
    'collections' => 'Collections',
    'collection_data' => 'Données d\'en-tête de la collection',
    'collection_name' => 'Nom de la collection',
    'collection_id' => 'ID de la collection',
    'collection_description_placeholder' => 'Entrez une description de la collection',
    'collection_description_suggest' => 'Une description claire et attrayante aide les utilisateurs à mieux comprendre votre collection et augmente son attrait. Dites ce qui la rend unique!',
    'collection_description' => 'Entrez toutes les données relatives à la collection, soyez très précis',
    'collection_image' => 'Image de la collection',
    'collection_image_alt' => 'Texte alternatif de l\'image de la collection',
    'add_epp' => 'Ajouter un EPP',
    'add_epp_placeholder' => 'Entrez un EPP',
    'need_to_associate_epp' => 'Tant que vous n\'aurez pas associé votre galerie à un EPP, vous ne pourrez pas la publier',
    'EGI_floor_price' => 'Prix minimum EGI',
    'set_base_EcoNFT_price' => 'Définissez un prix de base que vous souhaitez facturer pour chaque EGI de cette collection',
    'collection_site_URL' => 'URL du site de la collection',
    'collection_site_URL_suggest' => 'Suggestion : entrez l\'URL du site de la collection',
    'position_for_mor_than_one_collection' => 'Si vous avez plus d\'une collection, vous pouvez décider où placer celle-ci',
    'publish_collection' => 'Publier la collection',
    'image_for_EcoNFT_collection' => 'Image pour la collection EGI',
    'image_description' => 'Ceci est l\'image qui représente toute la collection',
    'image_alt' => 'Image représentant toute la collection',
    'image_title' => 'Image représentant toute la collection',
    'select_new_EcoNFT_photo' => 'Sélectionnez une nouvelle photo pour l\'EGI',
    'switch_collection' => 'Changer de collection',
    'goto_collection' => 'Aller à la collection',
    'type' => 'Type',
    'select_content_type' => 'Sélectionnez le type de contenu',
    'type_image' => 'Image',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Vidéo',
    'EGI_number' => 'Numéro EGI',
    'position' => 'Posição',
    'updated_successfully' => 'Collection enregistrée avec succès',
    'save_failed' => 'Échec de l\'enregistrement',
    'collection_not_found' => 'Collection non trouvée',
    'tips_to_optimize_your_collection' => 'Conseils pour optimiser votre collection',
    'tips_for_your_collection_images' => 'Conseils pour les images de votre collection',
    'image_section_title' => 'Images de la collection',
    'image_section_description' => 'Choisissez soigneusement les images qui représentent votre collection',
    'data_section_title' => 'Données de la collection',
    'data_section_description' => 'Choisissez soigneusement les données qui représentent votre collection',
    'this_is_default_collection_of_the_team' => 'Ceci est la collection par défaut de l\'équipe',
    'wallet' => [
        'write_royalty_mint' => 'Entrez le pourcentage de royalties pour le mint',
        'write_royalty_rebind' => 'Entrez le pourcentage de royalties pour le rebind',
        'user_role' => 'Rôle',
        'role_unknown' => 'Aucun rôle',
        'address' => 'Adresse du wallet',
        'balance' => 'Solde du wallet',
        'name' => 'Nom du wallet',
        'status' => 'Statut du wallet',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Royalties pour le mint',
        'royalty_rebind' => 'Royalties pour le rebind',
        'manage_wallet' => 'Gérer le wallet',
        'remove_photo' => 'Supprimer la photo',
        'wallet' => 'Wallet',
        'cancellation' => 'Annulation du wallet',
        'select_a_wallet_connect' => 'Sélectionnez un wallet',
        'button_wallet_connect' => 'Connecter un wallet',
        'button_wallet_disconnect' => 'Déconnecter',
        'create_the_wallet' => 'Créer un nouveau wallet',
        'username' => "Nom d'utilisateur",
        'create' => 'Créer un wallet',
        'delete_wallet' => 'Êtes-vous sûr de vouloir supprimer ce wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in francese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Accès non autorisé',
    'SCAN_ERROR' => 'Erreur de scan',
    'VIRUS_FOUND' => 'Virus trouvé',
    'INVALID_FILE_EXTENSION' => 'Extension de fichier non valide',
    'MAX_FILE_SIZE' => 'Le fichier ne peut pas dépasser :max octets.',
    'INVALID_FILE_PDF' => 'Fichier PDF invalide',
    'MIME_TYPE_NOT_ALLOWED' => 'Type de fichier non autorisé.',
    'INVALID_IMAGE_STRUCTURE' => 'Structure d\'image invalide',
    'INVALID_FILE_NAME' => 'Nom de fichier invalide',
    'ERROR_GETTING_PRESIGNED_URL' => 'Erreur lors de l\'obtention de l\'URL pré-signée',
    'ERROR_DURING_FILE_UPLOAD' => 'Erreur lors du téléchargement du fichier',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossible d\'enregistrer le fichier',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Erreur lors de la création du dossier',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Erreur lors de la modification des autorisations du dossier',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossible d\'enregistrer le fichier',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problème interne, l\'assistance a déjà été alertée',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Erreur lors du cryptage du nom de fichier',
    'IMAGICK_NOT_AVAILABLE' => 'Problème interne, l\'assistance a déjà été alertée',
    'JSON_ERROR_IN_DISPATCHER' => 'Erreur JSON dans le dispatcher',
    'GENERIC_SERVER_ERROR' => 'Erreur générique du serveur, l\'équipe technique a été informée',
    'FILE_NOT_FOUND' => 'Fichier non trouvé',
    'UNEXPECTED_ERROR' => 'Erreur générique du serveur, l\'équipe technique a été informée',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Erreur lors de la suppression du fichier temporaire local',

    'scan_error' => 'Erreur de scan',
    'virus_found' => 'Virus trouvé',
    'required' => 'Le champ est obligatoire.',
    'file' => 'Une erreur s\'est produite lors du téléchargement du fichier.',
    'file_extension_not_valid' => 'Extension de fichier non valide',
    'mimes' => 'Le fichier doit être de type : :values.',
    'max_file_size' => 'Le fichier ne peut pas dépasser :max octets.',
    'invalid_pdf_file' => 'Fichier PDF invalide',
    'mime_type_not_allowed' => 'Type de fichier non autorisé.',
    'invalid_image_structure' => 'Structure d\'image invalide',
    'invalid_file_name' => 'Nom de fichier invalide',
    'error_getting_presigned_URL' => 'Erreur lors de l\'obtention de l\'URL pré-signée',
    'error_getting_presigned_URL_for_user' => 'Erreur lors du chargement du fichier',
    'error_during_file_upload' => 'Erreur lors du téléchargement du fichier',
    'error_deleting_file' => 'Erreur lors de la suppression du fichier',
    'upload_finished' => 'Téléchargement terminé',
    'some_errors' => 'quelques erreurs',
    'upload_failed' => 'échec du téléchargement',
    'error_creating_folder' => 'Erreur lors de la création du dossier',
    'error_changing_folder_permissions' => 'Erreur lors de la modification des autorisations du dossier',
    'local_save_failed_file_saved_to_external_disk_only' => 'L\'enregistrement local a échoué, le fichier a été enregistré uniquement sur le disque externe',
    'external_save_failed_file_saved_to_local_disk_only' => 'L\'enregistrement externe a échoué, le fichier a été enregistré uniquement sur le disque local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'L\'analyse des fichiers peut prendre beaucoup de temps pour chaque fichier',
    'all_files_are_saved' => 'Tous les fichiers sont enregistrés',
    'loading_finished_you_can_proceed_with_saving' => 'Le chargement est terminé, vous pouvez procéder à l\'enregistrement',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Le chargement est terminé, vous pouvez procéder à l\'enregistrement et à l\'analyse',
    'im_uploading_the_file' => 'Je télécharge le fichier',

    'exception' => [
        'NotAllowedTermException' => 'Terme non autorisé',
        'MissingCategory' => 'Vous devez entrer une catégorie.',
        'DatabaseException' => 'Une erreur de base de données s\'est produite',
        'ValidationException' => 'Une erreur de validation s\'est produite',
        'HttpException' => 'Une erreur HTTP s\'est produite',
        'ModelNotFoundException' => 'Modèle non trouvé',
        'QueryException' => 'Erreur de requête',
        'MintingException' => 'Erreur lors du minting',
        'FileNotFoundException' => 'Fichier non trouvé',
        'InvalidArgumentException' => 'Argument invalide',
        'UnexpectedValueException' => 'Valeur inattendue',
        'ItemNotFoundException' => 'Élément non trouvé',
        'MultipleItemsFoundException' => 'Plusieurs éléments trouvés',
        'LogicException' => 'Exception logique',
        'EntryNotFoundException' => 'Entrée non trouvée',
        'RuntimeException' => 'Erreur d\'exécution',
        'BadMethodCallException' => 'Appel de méthode incorrect',
        'LockTimeoutException' => 'Délai d\'attente de verrouillage',
        'InvalidIntervalException' => 'Intervalle invalide',
        'InvalidPeriodParameterException' => 'Paramètre de période invalide',
        'EndLessPeriodException' => 'Période sans fin',
        'UnreachableException' => 'Exception inatteignable',
        'InvalidTimeZoneException' => 'Fuseau horaire invalide',
        'ImmutableException' => 'Exception immuable',
        'InvalidFormatException' => 'Format invalide',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Cher utilisateur,</p>
            </br>
            <p>Le texte que vous avez saisi viole nos règles et directives de la communauté. Veuillez modifier le contenu et réessayer.</p>
            </br>
            <p>Si vous ne comprenez pas pourquoi ce terme est interdit, veuillez vous référer aux clauses de l'accord que vous avez accepté lors de votre inscription.
            <p>Nous vous remercions de votre compréhension et de votre collaboration.</p>
            </br>
            <p>Cordialement,
            <br>
            L\'équipe de Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consultez la page des règles de la communauté.
        </a>.',
    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker n\'a pas été initialisé correctement',
    'table_not_exist' => 'La table n\'existe pas',
    'unique' => 'Cette valeur est déjà présente dans votre bibliothèque de traits.',
    'the_category_name_cannot_be_empty' => 'Le nom de la catégorie ne peut pas être vide',
    'nathing_to_save' => 'Rien à sauvegarder',
    'an_error_occurred' => 'Oops ! Désolé, une erreur s\'est produite !',
    'error_number' => 'Numéro d\'erreur :',
    'reason' => [
        'reason' => 'raison',
        'wallet_not_valid' => 'Portefeuille non valide',
        'something_went_wrong' => 'Quelque chose s\'est mal passé',
    ],
    'solution' => [
        'solution' => 'solution',
        'create_a_new_wallet_and_try_again' => 'Créez un nouveau portefeuille et réessayez',
        'we_are_already_working_on_solving_the_problem' => 'Nous travaillons déjà à résoudre le problème',
    ],
    'min' => [
        'string' => 'Le champ doit comporter au moins :min caractères.',
    ],
    'max' => [
        'string' => 'Le champ doit comporter au maximum :max caractères.',
    ],
    'id_epp_not_found' => 'ID EPP non trouvé',
    'minting' => [
        'error_generating_token' => 'Erreur lors de la génération du jeton',
        'insufficient_wallet_balance' => 'Solde insuffisant dans le portefeuille pour acheter cet EcoNFT',
        'error_during_save_the_metadataFile' => 'Erreur lors de l\'enregistrement des métadonnées dans le fichier',
        'error_during_save_the_metadata_on_database' => 'Erreur lors de l\'enregistrement des métadonnées dans la base de données',
        'error_during_create_metadata_file' => 'Erreur lors de la création du fichier de métadonnées',
        'error_during_save_the_buyer' => 'Erreur lors de l\'enregistrement de l\'acheteur',
        'buyer_not_exist' => 'L\'acheteur n\'existe pas',
        'this_wallet_does_not_belong_to_any_buyer' => 'Ce portefeuille n\'appartient à aucun acheteur',
        'seller_not_exist' => 'Le vendeur n\'existe pas',
        'seller_owner_not_found' => 'Le propriétaire du vendeur est introuvable',
        'seller_wallet_address_not_found' => 'L\'adresse du portefeuille du vendeur est introuvable',
        'error_during_save_the_seller' => 'Erreur lors de l\'enregistrement du vendeur',
        'error_during_save_the_buyer_transaction' => 'Erreur lors de l\'enregistrement de la transaction de l\'acheteur',
        'error_during_the_saving_of_the_payment' => 'Erreur lors de l\'enregistrement du paiement',
        'error_during_save_the_natan' => 'Erreur lors de l\'enregistrement des données', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Erreur lors de l\'enregistrement de la transaction',
        'seller_not_found' => 'Vendeur non trouvé',
        'error_during_the_minting' => 'Erreur lors de la création',
        'error_uploading_file' => 'Erreur lors du téléchargement du fichier',
        'insufficient_balance' => 'Solde insuffisant',
        'eco_nft_not_found' => 'EcoNFT non trouvé',
        'no_traits_found' => 'Aucun trait trouvé',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/label.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in francese
|--------------------------------------------------------------------------
|
 */


return [
    'came_to_back' => 'Retour',
    "file_deleted_successfully" => "Fichier supprimé avec succès",
    'extension_not_allowed' => 'Extension non autorisée!',
    'title_file_type_not_allowed' => 'Type de fichier non autorisé!',
    'title_file_size_exceeds' => 'Taille de fichier excessive!',
    'title_invalid_file_name' => 'Nom de fichier invalide!',
    'file_extension_not_allowed' => 'Type de fichier non autorisé: :extension. Les types de fichiers autorisés ont les extensions suivantes : :extensions.',
    'file_type_not_allowed' => 'Type de fichier non autorisé : :type. Les types MIME autorisés sont : :mimetypes.',
    'file_size_exceeds' => 'La taille du fichier dépasse la taille maximale autorisée de :size Mo.',
    'invalid_file_name' => 'Nom de fichier invalide : :filename. Le nom du fichier contient des caractères non autorisés.',
    'allowed_extensions' => 'Les extensions autorisées sont : :extensions.',
    'allowed_mime_types' => 'Les types MIME autorisés sont : :mimetypes.',
    "file_infected" => "Fichier infecté",
    "scan_error" => "Erreur de scan",
    "starting_scan" => "Démarrage de l'analyse",
    "error_uploading_file" => "Erreur lors du téléchargement du fichier",
    "error_getting_presigned_url" => "Erreur lors de l'obtention de l'URL pré-signée",
    "error_deleting_file" => "Erreur lors de la suppression du fichier",
    "upload_finished" => "Téléchargement terminé",
    "some_errors" => "quelques erreurs",
    "upload_failed" => "échec du téléchargement",
    "file_scanning_may_take_a_long_time_for_each_file" => "L'analyse des fichiers peut prendre beaucoup de temps pour chaque fichier",
    "all_files_are_saved" => "Tous les fichiers sont enregistrés",
    "loading_finished_you_can_proceed_with_saving" => "Chargement terminé, vous pouvez procéder à l'enregistrement",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Chargement terminé, vous pouvez procéder à l'enregistrement et à l'analyse",
    "im_uploading_the_file" => "Je télécharge le fichier",
    "virus_scan_disabled" => "Analyse antivirus désactivée",
    "virus_scan_enabled" => "Analyse antivirus activée",
    "file_is_clean" => "Le fichier est propre",
    "the_uploaded_file_was_detected_as_infected" => "Le fichier téléchargé a été détecté comme infecté",
    "antivirus_scan_in_progress" => "Analyse antivirus en cours",
    'scanning_stopped' => 'Analyse arrêtée',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy heureux',
    "emogy_angry" => 'Emogy en colère',
    "im_checking_the_validity_of_the_file" => 'Je vérifie la validité du fichier',
    "im_recording_the_information_in_the_database" => 'J\'enregistre les informations dans la base de données',
    "im_saving_the_image" => 'Je sauvegarde l\'image',
    "file_saved_successfully" => 'Fichier: :fileCaricato enregistré avec succès',
    "all_files_were_scanned_no_infected_files" => 'Tous les fichiers ont été scannés, aucun fichier infecté',
    "one_or_more_files_were_found_infected" => 'Un ou plusieurs fichiers ont été trouvés infectés, ils ont été exclus du téléchargement',
    "file_scanned_successfully" => 'Fichier: :fileCaricato scanné avec succès',
    "file_uploaded_successfully" => 'Fichier: :fileCaricato téléchargé avec succès',
    "no_file_uploaded" => "Aucun fichier téléchargé",
    "error_during_file_upload" => "Erreur lors du téléchargement du fichier",
    'starting_uplad' => 'Démarrage du téléchargement',
    'uploaded' => 'Téléchargé',
    'successfully' => 'avec succès',
    'starting_upload' => 'Démarrage du téléchargement',
    "starting_saving" => "Démarrage de l'enregistrement",
    'waiting' => 'Attendez...',
    'upload_status' => 'Statut du téléchargement',
    'return_to_collection' => 'Retour à la collection',
    'EGI_image' => 'Image EGI',
    'error_in_the_files' => 'Erreur dans les fichiers',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Aperçu EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Glissez-déposez vos fichiers ici ou cliquez pour sélectionner',
    'upload_your_EGI_Files' => 'Téléchargez vos fichiers EGI',
    'wait_for_the_files_to_load' => 'Attendez le chargement des fichiers',
    'access_the_control_panel' => 'Accéder au panneau de contrôle',
    'of' => 'de',
    'errors_in_the_files' => 'Erreurs dans les fichiers',
    'loading' => 'Chargement...',
    'utilities_image_file' => 'Utilitaires, image et téléchargement de fichiers',
    'file_upload' => 'Téléchargement de fichiers',
    'select_files' => 'Sélectionnez les fichiers',
    'max_file_size_reminder' => 'Rappelez-vous : la taille maximale pour chaque fichier est de 100 Mo. Pour les fichiers de plus de 30 Mo, nous recommandons un téléchargement individuel pour éviter les problèmes de réseau.',
    'upload_your_files' => 'Téléchargez vos fichiers',
    'file_format_not_supported_for_viewing' => 'Format de fichier non pris en charge pour la visualisation',
    'cancel_upload' => 'Annuler le téléchargement',
    'save_the_files' => 'Enregistrer les fichiers',
    'open' => 'Ouvrir',
    'user_management' => 'Gestion des utilisateurs',
    'sign_in' => 'Se connecter',
    'sign_out' => 'Déconnexion',
    "who_is_natan_frangette" => "Qui est Natan Frangette",
    'home' => 'Accueil',
    'remove_photo' => 'Supprimer la photo',
    'username' => 'Nom d\'utilisateur',
    'bind' => 'Lier',
    'value' => 'Valeur',
    'title' => 'Titre',
    'dimension' => 'Dimension',
    'size' => 'Taille: ',
    'description' => 'Description',
    'name' => 'Nom',
    'date_start' => 'Date de début',
    'date_end' => 'Date de fin',
    'unknown' => 'Inconnu',
    'active' => 'Actif',
    'inactive' => 'Inactif',
    'existing' => 'Existant',
    'welcome' => 'Bienvenue sur le hub Natan',
    'done' => 'Fait',
    'create' => 'Créer',
    'saving' => 'Je sauvegarde...',
    'save' => 'Sauvegarder',
    'saved' => 'Sauvegardé!',
    'remember_to_save' => 'N\'oubliez pas de sauvegarder',
    'cancel' => 'Annuler',
    'update' => 'Mettre à jour',
    'cancelled' => 'Annulé',
    'delete' => 'Supprimer',
    'deleted' => 'Supprimé',
    'edit' => 'Modifier',
    'add' => 'Ajouter',
    'confirm' => 'Confirmer',
    'disable' => 'Désactiver',
    'close' => 'Fermer',
    'delete_confirm' => 'Êtes-vous sûr de vouloir supprimer?',
    'whoops_something_went_wrong' => 'Oups! Quelque chose s\'est mal passé!',
    'action_confirm' => 'Opération réussie!',
    'search' => 'Recherche',
    'traits' => 'Traits',
    'utility' => 'Utilité',
    'zoom' => 'Zoom',
    'product_image' => 'Image du produit',
    'micro_logo' => 'Micro logo, molécule d\'équilibre',
    'logo' => 'Logo, molécule d\'équilibre',
    'manage_utility' => 'Gérer les utilitaires',
    'item_zoom' => 'Taille d\'origine',
    'esternal_transfert' => 'Transfert externe',
    'internal_transfert' => 'Transfert interne',
    'back_to_item' => 'Retour à l\'élément',
    'position' => 'Position',
    'head_photo_page' => 'Photo de couverture de la page',
    'handle_collection_data' => 'Gérer les données de la collection',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Cet élément ne peut pas être supprimé car il existe des fichiers associés',
    'edit_item' => [
        'title' => 'Modifier l\'élément',
        'description' => 'Modifiez les informations de l\'élément',
        'back_to_collection' => 'Retour à la collection',
        'this_item_cannot_be_transfered' => 'Cet élément ne peut pas être transféré',
        'are_you_sure_you_want_to_transfer_this_item' => 'Êtes-vous sûr de vouloir transférer cet élément de <span class="font-bold"> :collectionNameFrom </span> à <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'La collection personnelle pour cet utilisateur n\'existe pas, impossible de transférer',
        'not_exist_user_width_this_email' => 'L\'utilisateur avec l\'e-mail :emailExternalTransfer n\'existe pas.',
        'transfer' => 'Transfert',
        'internal_trasfer' => 'Transfert interne',
        'external_trasfer' => 'Transfert externe',
        'max_25_char' => 'Maximum 25 caractères',
        'max_1000_char' => 'Maximum 1000 caractères',
        'write_the_description' => 'Écrivez la description',
        'date_of_creation' => 'Date de création',
        'publish' => 'Publier',
        'unpublish' => 'Dépublier',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Cet élément ne peut pas être supprimé car il existe des fichiers associés',
    ],
    'bio' => [
        'your_biography' => 'Votre biographie',
        'bio_title' => 'Titre de la biographie',
        'manage_biography' => 'Gérer la biographie',
        'manage_chapter' => 'Gérer les chapitres',
        'back_to_biography' => 'Retour à la biographie',
        'back_to_profile' => 'Retour au profil',
        'chapter' => 'Chapitre',
        'chapter_start_date' => 'Date de début du chapitre',
        'chapter_end_date' => 'Date de fin du chapitre',
        'chapter_title' => 'Titre du chapitre',
        'chapter_biography' => 'Biographie du chapitre',
        'remove_biography' => 'Supprimer la biographie',
        'remove_chapter' => 'Supprimer le chapitre',
        'removed_chapter' => 'Chapitre supprimé',
        'add_chapter' => 'Ajouter un chapitre',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Êtes-vous sûr de vouloir supprimer ce chapitre ?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Êtes-vous sûr de vouloir supprimer cette biographie ?',
    ],

    'drop' => [
        'remove_from_drop' => 'Supprimer de la drop',
        'add_to_drop' => 'Ajouter à la drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Êtes-vous sûr de vouloir supprimer :itemremoved de la drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: francese
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'S\'il vous plaît, connectez-vous à votre compte',
    'email' => 'Adresse e-mail',
    'password' => 'Mot de passe',
    'remember_me' => 'Souviens-toi de moi',
    'forgot_your_password' => 'Mot de passe oublié?',
    'login' => 'Connexion',
    'register' => 'S\'inscrire',
    'please_register_now' => 'S\'il vous plaît, inscrivez-vous maintenant',
    'first_name' => 'Prénom',
    'last_name' => 'Nom de famille',
    'confirm_password' => 'Confirmez le mot de passe',
    'reset_password' => 'Réinitialiser le mot de passe',
    'current_password' => 'Mot de passe actuel',
    'new_password' => 'Nouveau mot de passe',
    'have_an_account' => 'Vous avez déjà un compte?',
    'dont_have_an_account' => 'Vous n\'avez pas de compte?',
    'logout' => 'Se déconnecter',
    'i_agree_to' => 'Je suis d\'accord avec',
    'terms_of_service' => 'les conditions d\'utilisation',
    'and' => 'et',
    'privacy_policy' => 'la politique de confidentialité',
    'welcome_to_the_first_artist_business_builder' => 'Bienvenue sur le portail de Natan Frangette, le premier et unique générateur d\'entreprise pour artistes',
    'join_us' => 'Rejoignez l\'équipe qui fera la différence!',
    'express_your_creativity' => 'Exprimez votre créativité avec vos EcoNFT',
    'change_the_world_with_every_sale' => 'Changez le monde à chaque vente',
    'innovative_partnerships' => 'Partenariats innovants',
    'bring_your_artistic_biography_to_life' => 'Donnez vie à votre biographie artistique',
    'impact_community' => 'Communauté d\'impact',
    'register_now' => 'Inscrivez-vous aujourd\'hui et faites partie d\'une révolution artistique ayant un impact positif sur la société et l\'environnement!',
    'change_language' => 'Changer de langue',
    'for_your_security_please_confirm_your_password_to_continue' => 'Pour votre sécurité, veuillez confirmer votre mot de passe pour continuer.',
    'two_factor' => [
        'title' => 'Authentification à Deux Facteurs',
        'description' => 'Ajoutez une sécurité supplémentaire à votre compte en utilisant l’authentification à deux facteurs.',
        'finish_enabled' => 'Terminez l’activation de l’authentification à deux facteurs.',
        'enabled' => 'L’authentification à deux facteurs a été activée pour votre compte!',
        'not_enabled' => 'Vous n’avez pas activé l’authentification à deux facteurs.',
        'prompt' => 'Lorsque l’authentification à deux facteurs est activée, un token sécurisé et aléatoire vous sera demandé lors de l’authentification. Vous pouvez récupérer ce token depuis l’application Google Authenticator sur votre téléphone.',
        'QRCode' => [
            'title' => 'Scannez le code QR ci-dessous dans l’application d’authentification de votre téléphone.',
            'alt' => 'Code QR',
            'finish_enabled' => 'Pour terminer l’activation de l’authentification à deux facteurs, scannez le code QR suivant à l’aide de l’application d’authentification de votre téléphone ou entrez la clé de configuration et fournissez le code OTP généré.',
            'enabled' => 'L’authentification à deux facteurs est maintenant activée. Scannez le code QR suivant avec l’application d’authentification de votre téléphone ou entrez la clé de configuration.',
            'setup_key' => 'Clé de Configuration',
            'code' => 'Code',
            'showing_recovery_codes' => 'Conservez ces codes de récupération dans un gestionnaire de mots de passe sécurisé. Ils peuvent être utilisés pour récupérer l’accès à votre compte si vous perdez votre dispositif d’authentification à deux facteurs.',
            'enable' => 'Activer',
            'disable' => 'Désactiver',
            'regenerate_recory_codes' => 'Régénérer les Codes de Récupération',
            'confirm' => 'Confirmer',
            'cancel' => 'Annuler',
            'show_recory_codes' => 'Afficher les Codes de Récupération',
        ],
    ],
    'browser_session' => [
        'title' => 'Session du Navigateur',
        'description' => 'Gérez et déconnectez les sessions actives sur d’autres navigateurs et appareils.',
        'prompt' => 'Si nécessaire, vous pouvez déconnecter toutes les autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont listées ci-dessous; cependant, cette liste pourrait ne pas être exhaustive. Si vous pensez que votre compte a été compromis, vous devriez également mettre à jour votre mot de passe.',
        'this_device' => 'Cet Appareil',
        'last_active' => 'Dernière Activité',
        'log_out_other_browser_sessions' => 'Déconnecter les autres sessions du navigateur',
        'please_enter_your_password_to_confirm' => 'Veuillez entrer votre mot de passe pour confirmer que vous souhaitez déconnecter les autres sessions de navigateur sur tous vos appareils.',
    ],
    'delete_account' => [
        'title' => 'Supprimer le Compte',
        'description' => 'Supprimez définitivement votre compte.',
        'prompt' => 'Êtes-vous sûr de vouloir supprimer votre compte? Une fois supprimé, toutes vos données et ressources seront définitivement supprimées. Veuillez entrer votre mot de passe pour confirmer que vous souhaitez supprimer votre compte de façon permanente.',
        'once_your_account_is_deleted' => 'Une fois votre compte supprimé, toutes vos données et ressources seront définitivement supprimées. Avant de supprimer votre compte, téléchargez toutes les données ou informations que vous souhaitez conserver.',
        'delete_account' => 'Supprimer le Compte',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/profile.php ####

<?php
/*
|
|    Traduzione in francese per la pagina di profilo
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biographie',
    'first_name' => 'Prénom',
    'last_name' => 'Nom',
    'email' => 'Email',
    'wallet' => 'Portefeuille',
    'your_email_address_is_unverified' => 'Votre adresse email n\'est pas vérifiée',
    'click_here_to_re-send_the_verification_email' => 'Cliquez ici pour renvoyer l\'email de vérification',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Un nouveau lien de vérification a été envoyé à votre adresse email',
    'language' => 'Langue',
    'creator' => 'Créateur',
    'email_verified_at' => 'Email vérifiée le',
    'password' => 'Mot de passe',
    'remember_token' => 'Se souvenir du jeton',
    'current_team_id' => 'ID de l\'équipe actuelle',
    'profile_photo_path' => 'Chemin de la photo de profil',
    'consent' => 'Consentement',
    'bio_title' => 'Titre de la biographie',
    'bio_story' => 'Histoire biographique',
    'title' => 'Titre',
    'mr_miss_dott' => 'Monsieur/Madame/Docteur',
    'job_role' => 'Poste',
    'user_name' => 'Nom d\'utilisateur',
    'user_type' => 'Type d\'utilisateur',
    'street' => 'Rue',
    'city' => 'Ville',
    'region' => 'Région',
    'state' => 'État',
    'zip' => 'Code postal',
    'home_phone' => 'Téléphone fixe',
    'cell_phone' => 'Portable',
    'work_phone' => 'Téléphone professionnel',
    'site_url' => 'Site web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twitch',
    'Other' => 'Autre',
    'birth_date' => 'Date de naissance',
    'fiscal_code' => 'Code fiscal',
    'tax_id_number' => 'Numéro d\'identification fiscale',
    'doc_typo' => 'Type de document',
    'doc_num' => 'Numéro de document',
    'doc_issue_date' => 'Date de délivrance du document',
    'doc_expired_date' => 'Date d\'expiration du document',
    'doc_issue_from' => 'Document délivré par',
    'doc_photo_path_f' => 'Chemin de la photo avant du document',
    'doc_photo_path_r' => 'Chemin de la photo arrière du document',
    'org_data_sheet' => 'Fiche d\'information de l\'organisation',
    'please_update_your_company_information' => 'Veuillez mettre à jour les informations de votre organisation',
    'insert_a_valid_url' => 'Insérez une URL valide',
    'enter_annotation' => 'Entrez une annotation',
    'org_name' => 'Nom de l\'organisation',
    'org_email' => 'Email de l\'organisation',
    'org_street' => 'Rue de l\'organisation',
    'org_city' => 'Ville de l\'organisation',
    'org_region' => 'Région de l\'organisation',
    'org_state' => 'État de l\'organisation',
    'org_zip' => 'Code postal de l\'organisation',
    'org_site_url' => 'Site web de l\'organisation',
    'annotation' => 'Annotation',
    'org_phone_1' => 'Téléphone de l\'organisation 1',
    'org_phone_2' => 'Téléphone de l\'organisation 2',
    'org_phone_3' => 'Téléphone de l\'organisation 3',
    'rea' => 'Numéro RCS',
    'org_fiscal_code' => 'Code fiscal de l\'organisation',
    'org_vat_number' => 'Numéro de TVA de l\'organisation',
    'select_a_photo' => 'Sélectionner une photo',
    'upload_a_photo' => 'Télécharger une photo',
    'remove_photo' => 'Supprimer la photo',
    'select_a_language' => 'Choisir une langue',
    'photo' => 'Photo',
    'profile_information' => 'Informations du profil',
    'update_your_profile_data' => 'Mettez à jour vos données de profil',
    'biography' => 'Biographie',
    'document_data' => 'Données du document',
    'please_enter_your_ID_details' => 'Veuillez entrer vos informations d\'identité',
    'document_type' => 'Type de document',
    'drive_licenze' => 'Permis de conduire',
    'passport' => 'Passeport',
    'identity_card' => 'Carte d\'identité',
    'front_photograph_of_the_document' => 'Photographie avant du document',
    'back_photograph_of_the_document' => 'Photographie arrière du document',
    'social_media' => 'Réseaux sociaux',
    'please_enter_your_social_media_details' => 'Veuillez entrer vos informations sur les réseaux sociaux',
    'update_password' => 'Mettre à jour le mot de passe',
    'ensure_your_account' => 'Assurez la sécurité de votre compte en utilisant un mot de passe long et complexe',
    'enter_your_new_password' => 'Entrez votre nouveau mot de passe',
    'confirm_your_new_password' => 'Confirmez votre nouveau mot de passe',
    'two_factor_authentication' => 'Authentification à deux facteurs',
    'two_factor_authentication_add_additional_security' => 'Ajoutez une sécurité supplémentaire à votre compte en utilisant l\'authentification à deux facteurs',
    'You have not enabled two_factor_authentication.' => 'Vous n\'avez pas activé l\'authentification à deux facteurs.',
    'text_for_two_factor_authentication' => 'Lorsque l\'authentification à deux facteurs est activée, un jeton aléatoire et sécurisé vous sera demandé lors de l\'authentification. Vous pouvez récupérer ce jeton via l\'application Google Authenticator sur votre téléphone.',
    'browser_sessions' => 'Sessions du navigateur',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gérez et déconnectez vos sessions actives sur d\'autres navigateurs et appareils.',
    'text_for_sessione' => 'Si nécessaire, vous pouvez vous déconnecter de toutes les autres sessions de navigateur sur tous vos appareils. Certaines de vos sessions récentes sont listées ci-dessous; cependant, cette liste pourrait ne pas être exhaustive. Si vous pensez que votre compte a été compromis, vous devriez également mettre à jour votre mot de passe.',
    'log_out_other_browser_sessions' => 'Déconnecter les autres sessions du navigateur',
];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduction en français de tous les éléments de la barre latérale et de la barre de navigation
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gérer les Collections',
        'collections' => 'Collections',
        'dashboard' => 'Tableau de Bord',
        'admin' => 'Admin',
        'authorizations' => 'Autorisations',
    ],

    'open_collection' => 'Ouvrir la Collection',
    'new_collection' => 'Nouvelle Collection',
    'permissions_roles' => 'Rôles et Permissions',
    'assign_roles' => 'Attribuer des Rôles',
    'assign_permissions' => 'Attribuer des Permissions',
    'manage_roles' => 'Gérer les Rôles',

];

#### Inizio File: /home/fabio/EGI/resources/lang/fr/traits.php ####

<?php

/*
|
|    Traduzione francese per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Êtes-vous sûr de vouloir associer ce trait?',
    'yes_match_it' => 'Oui, associez-le',
    'the_trait_was_matched' => 'Le trait a été associé',
    'trait_added' => 'Trait ajouté',
    'category_added' => 'Catégorie ajoutée',
    'key_added' => 'Clé ajoutée',
    'value_added' => 'Valeur ajoutée',
    'new_category' => 'Nouvelle catégorie',
    'new_key' => 'Nouvelle clé',
    'key_deletion_error' => 'Cette clé est liée à certains traits et ne peut pas être supprimée. Si vous souhaitez la supprimer, vous devez d\'abord supprimer les traits associés.',
    'create_a_new_trait_for_this_key' => 'Créer un nouveau trait pour cette clé',
    'click_for_selected' => 'Cliquez pour sélectionner',
    'trait_icon' => 'Icône de trait',
    'EGI_with_traits' => 'EGI com traços',
    'traits_library' => 'Bibliothèque de traits',
    'collection' => 'Collection',
    'manage_traits' => 'Gérer les traits',
    'manage_key' => 'Gérer les clés',
    'manage_category' => 'Gérer les catégories',
    'delete_traits' => 'Supprimer les traits',
    'applyTraits' => 'Revenir à Appliquer les traits',
    'create_new_key' => 'Créer une nouvelle clé',
    'open_manage' => 'Ouvrir la gestion',
    'close_manage' => 'Fermer la gestion',
    'apply_traits' => 'Appliquer les traits',
    'key_deletion' => 'Suppression de clé',
    'key_deletion_confirm' => 'Êtes-vous sûr de vouloir supprimer cette clé : :key?',
    'key_not_possible_delete' => 'Il n\'est pas possible de supprimer cette clé',
    'key_deleted' => 'Clé supprimée',
    'key_search' => 'Rechercher une clé',
    'make_a_new_key' => 'Créer une nouvelle clé',
    'key_created' => 'Clé créée',
    'key_updated' => 'Clé mise à jour',
    'key_not_possible_update' => 'Il n\'est pas possible de mettre à jour cette clé',
    'key_not_found' => 'Clé non trouvée',
    'key_not_possible_create' => 'Il n\'est pas possible de créer cette clé',
    'key_not_possible_find' => 'Il n\'est pas possible de trouver cette clé',
    'bind' => 'Lier',
    'unbind' => 'Dissocier',
    'binded' => 'Clés liées',
    'unbinded' => 'Clés à lier',
    'make' => 'Créer',
    'create_a_new_category' => 'Créer une nouvelle catégorie',
    'category_created' => 'Catégorie créée',
    'create_a_new_key' => 'Créer une nouvelle clé',
    'select_a_category' => 'Sélectionnez une catégorie',
    'category' => 'Catégorie',
    'select_a_key' => 'Sélectionnez une clé',
    'key' => 'Clé',
    'value_for_key' => 'Valeur pour la clé',
    'select_all' => 'Tout sélectionner',
    'select_one_or_more_EGI' => 'Sélectionnez un ou plusieurs EGI',
    'unselect_all' => 'Tout désélectionner',
    'many_to_many' => 'Plusieurs à plusieurs',
    'one_to_many' => 'Un à plusieurs',
    'zoom_in' => 'Zoom avant',
    'zoom_out' => 'Zoom arrière',
    'traits_on :numberItems items_in_this_collection' => 'Traits sur :numberItems éléments de cette collection',
    'are_you_sure_remove :traitKey' => 'Êtes-vous sûr de vouloir supprimer <span class="font-bold"> :traitKey<span>?',
    'all_the_traits_you_created' => 'Tous les traits que vous avez créés',
    'traits_categories' => 'Catégories de traits',
    'traits' => 'Traits',
    'update_category' => 'Mettre à jour la catégorie',
    'update_key' => 'Mettre à jour la clé',
    'category' => 'Catégorie',
    'explanation_apply_traits' => 'Attribuez les caractéristiques que vous souhaitez appliquer aux éléments individuels de votre collection',
    'explanation_manage_category' => 'Gérez les catégories de traits. Dans cette section, vous pouvez créer de nouvelles catégories, mettre à jour ou supprimer celles existantes. Vous pouvez en faire autant avec les clés et aussi les associer aux catégories. Vous pouvez voir toutes les clés qui ont déjà été associées et, si nécessaire, les dissocier en faisant un clic droit sur la carte correspondante. De plus, vous pouvez voir toutes les clés qui doivent encore être associées : vous pouvez en sélectionner une ou plusieurs (veuillez noter que lorsque vous sélectionnez la clé, elle doit devenir rouge, sinon cela signifie qu\'elle n\'a pas été correctement sélectionnée) et, en faisant un clic droit, une liste de catégories disponibles vous sera montrée. En choisissant une catégorie, vous créerez l\'association.',
    'trait_value' => 'Valeur du trait',
    'view_your_all_traits' => 'Voir tous vos traits',
    'view_your_traits_this_collection' => 'Voir vos traits uniquement pour cette collection',
    'back_to_apply_traits' => 'Revenir à appliquer les traits',
    'back_to_gallery' => 'Retour à la galerie',
    'this_traits_non_cannot_be_removed' => 'Ces traits ne peuvent pas être supprimés',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|
 */

return [
    'invite_collection_member' => 'Invita un membro alla collection',
    'came_back_to_collection' => 'Torna alla collection',
    'confirm_delete_title' => 'Sei sicuro?',
    'confirm_delete_text' => 'Questa azione eliminerà l\'immagine :type definitivamente!',
    'confirm_delete_button' => 'Sì, elimina!',
    'cancel_delete_button' => 'Annulla',
    'deleted_title' => 'Eliminata!',
    'deleted_text' => 'L\'immagine del banner è stata eliminata con successo.',
    'delete_card' => 'Elimina la card',
    'delete_banner' => 'Elimina il banner',
    'delete_avatar' => 'Elimina l\'avatar',
    'delete_EGI' => 'Elimina l\'EGI',
    'save_card' => 'Salva la card',
    'save_banner' => 'Salva il banner',
    'save_avatar' => 'Salva l\'avatar',
    'save_EGI' => 'Salva l\'EGI',
    'create_validation_error' => 'Errore di validazione',
    'creation_failed' => 'Creazione fallita',
    'collection_delete' => 'Elimina la collezione',
    'avatar_image' => 'Immagine dell\'avatar',
    'card_image' => 'Immagine della card',
    'EGI_image' => 'Immagine EGI',
    'banner_image' => 'Immagine del banner',
    'edit_collection_data' => 'Modifica i dati della collezione',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nuova collection',
    'open_collection' => 'Apri la collezione',
    'collection_members' => 'Membri della collection',
    'team_members_description' => 'Qui puoi vedere tutti i membri del team che hanno accesso a questa collection',
    'manage_collection' => 'Gestisci le collection',
    'manage_head_images' => 'Gestisci le immagini di testata',
    'collection' => 'Collezione',
    'collections' => 'Collezioni',
    'collection_data' => 'Dati di testata delle collection',
    'collection_name' => 'Nome della collection',
    'collection_id' => 'ID della collection',
    'collection_description_placeholder' => 'Inserisci una descrizione della collection',
    'collection_description_suggest' => 'Una descrizione chiara e accattivante aiuta gli utenti a capire meglio la tua collezione e ne aumenta l\'attrattiva. Racconta cosa la rende unica!',
    'collection_description' => 'Inserisci tutti i dati inerenti alla collection, sii molto accurato',
    'collection_image' => 'Immagine della collection',
    'collection_image_alt' => 'Testo alternativo dell\'immagine della collection',
    'add_epp' => 'Aggiungi un EPP',
    'add_epp_placeholder' => 'Inserisci un EPP',
    'need_to_associate_epp' => 'Fino a quando non avrai associato la tua galleria ad un EPP non potrai pubblicarla',
    'EGI_floor_price' => 'Prezzo minimo EGI',
    'set_base_EcoNFT_price' => 'Imposta un prezzo base che desideri scrivere per ogni EGI di questa collezione',
    'collection_site_URL' => 'URL del sito della collection',
    'collection_site_URL_suggest' => 'Suggerimento: inserisci l\'URL del sito della collection',
    'position_for_mor_than_one_collection' => 'Se hai più di una collection puoi decidere in quale posizione inserire questa',
    'publish_collection' => 'Pubblica la collection',
    'image_for_EcoNFT_collection' => 'Immagine per la collection di EGI',
    'image_description' => 'Questa è l\'immagine che rappresenta l\'intera collezione',
    'image_alt' => 'Immagine che rappresenta l\'intera collezione',
    'image_title' => 'Immagine che rappresenta l\'intera collezione',
    'select_new_EcoNFT_photo' => 'Seleziona una nuova foto per l\'EGI',
    'switch_collection' => 'Cambia collection',
    'goto_collection' => 'Vai alla collection',
    'type' => 'Tipo',
    'select_content_type' => 'Seleziona il tipo di contenuto',
    'type_image' => 'Immagine',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Audio',
    'type_video' => 'Video',
    'EGI_number' => 'Numero EGI',
    'position' => 'Posizione',
    'updated_successfully' => 'Collezione salvata con successo',
    'save_failed' => 'Salvataggio fallito',
    'collection_not_found' => 'Collection non trovata',
    'tips_to_optimize_your_collection' => 'Suggerimenti per ottimizzare la tua collection',
    'tips_for_your_collection_images' => 'Suggerimenti per le immagini della tua collection',
    'image_section_title' => 'Immagini della collezione',
    'image_section_description' => 'Scegli con cura le immagini che rappresentano la tua collezione',
    'data_section_title' => 'Anagrafica della collection',
    'data_section_description' => 'Scegli con cura i dati che rappresentano la tua collection',
    'this_is_default_collection_of_the_team' => 'Questa è la collection predefinita del team',
    'wallet' => [
        'write_royalty_mint' => 'Inserisci la percentuale di royalty da applicare al mint',
        'write_royalty_rebind' => 'Inserisci la percentuale di royalty da applicare al rebind',
        'user_role' => 'Ruolo',
        'role_unknown' => 'No role',
        'address' => 'Indirizzo wallet',
        'balance' => 'Saldo wallet',
        'name' => 'Nome wallet',
        'status' => 'Stato wallet',
        'royalty' => 'Royalty',
        'royalty_mint' => 'Royalty mint',
        'royalty_rebind' => 'Royalty rebind',
        'manage_wallet' => 'Gestisci wallet',
        'remove_photo' => 'Rimuovi foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancellazione wallet',
        'select_a_wallet_connect' => 'Scegli un wallet',
        'button_wallet_connect' => 'Connetti un wallet',
        'button_wallet_disconnect' => 'Disconnetti',
        'create_the_wallet' => 'Crea un nuovo wallet',
        'username' => 'Username',
        'create' => 'Crea un wallet',
        'delete_wallet' => 'Are you sure you want to delete this wallet',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [

    'AUTHENTICATION_ERROR' => 'Accesso non autorizzato',
    'SCAN_ERROR' => 'Errore di scansione',
    'VIRUS_FOUND' => 'Virus trovato',
    'INVALID_FILE_EXTENSION' => 'Estensione del file non valida',
    'MAX_FILE_SIZE' => 'Il file non può superare :max byte.',
    'INVALID_FILE_PDF' => 'File PDF non valido',
    'MIME_TYPE_NOT_ALLOWED' => 'Il tipo di file non è consentito.',
    'INVALID_IMAGE_STRUCTURE' => 'Struttura dell\'immagine non valida',
    'INVALID_FILE_NAME' => 'Nome del file non valido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Errore durante il caricamento del file',
    'ERROR_DURING_FILE_UPLOAD' => 'Errore durante il caricamento del file',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossibile salvare il file.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Impossibile creare la cartella',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Impossibile cambiare i permessi della cartella',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossibile salvare il file',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problema interno, l\'assistenza è già allertata',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Errore durante la crittografia del nome del file',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, l\'assistenza è già allertata',
    'JSON_ERROR_IN_DISPATCHER' => 'Errore JSON nel dispatcher',
    'GENERIC_SERVER_ERROR' => 'Errore generico del server, il team tecnico è stato informato',
    'FILE_NOT_FOUND' => 'File non trovato',
    'UNEXPECTED_ERROR' => 'Problema interno, l\'assistenza è già allertata',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Errore durante l\'eliminazione del file temporaneo locale',

    'required' => 'Il campo è obbligatorio.',
    'file' => 'Si è verificato un errore durante il caricamento del file.',
    'mimes' => 'Il file deve essere di tipo: :values.',
    'error_getting_presigned_URL' => 'Errore durante il recupero dell\'URL prefirmato',
    'error_deleting_file' => 'Errore durante l\'eliminazione del file',
    'upload_finished' => 'Caricamento completato',
    'some_errors' => 'alcuni errori',
    'upload_failed' => 'caricamento fallito',
    'error_creating_folder' => 'Errore durante la creazione della cartella',
    'error_changing_folder_permissions' => 'Errore durante la modifica dei permessi della cartella',
    'local_save_failed_file_saved_to_external_disk_only' => 'Salvataggio locale fallito, file salvato solo sul disco esterno',
    'external_save_failed_file_saved_to_local_disk_only' => 'Salvataggio esterno fallito, file salvato solo sul disco locale',
    'file_scanning_may_take_a_long_time_for_each_file' => 'La scansione dei file potrebbe richiedere molto tempo per ciascun file',
    'all_files_are_saved' => 'Tutti i file sono salvati',
    'loading_finished_you_can_proceed_with_saving' => 'Caricamento completato, puoi procedere con il salvataggio',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Caricamento completato, puoi procedere con il salvataggio e la scansione',
    'im_uploading_the_file' => 'Sto caricando il file',

    'exception' => [
        'NotAllowedTermException' => 'Termine non consentito',
        'MissingCategory' => 'E\' necessario inserire una categoria.',
        'DatabaseException' => 'Si è verificato un errore del database',
        'ValidationException' => 'Si è verificato un errore di validazione',
        'HttpException' => 'Si è verificato un errore HTTP',
        'ModelNotFoundException' => 'Modello non trovato',
        'QueryException' => 'Errore di query',
        'MintingException' => 'Errore durante il minting',
        'FileNotFoundException' => 'File non trovato',
        'InvalidArgumentException' => 'Argomento non valido',
        'UnexpectedValueException' => 'Valore inaspettato',
        'ItemNotFoundException' => 'Elemento non trovato',
        'MultipleItemsFoundException' => 'Trovati più elementi',
        'LogicException' => 'Eccezione logica',
        'EntryNotFoundException' => 'Voce non trovata',
        'RuntimeException' => 'Errore di runtime',
        'BadMethodCallException' => 'Chiamata a metodo non valida',
        'LockTimeoutException' => 'Timeout del blocco',
        'InvalidIntervalException' => 'Intervallo non valido',
        'InvalidPeriodParameterException' => 'Parametro di periodo non valido',
        'EndLessPeriodException' => 'Periodo senza fine',
        'UnreachableException' => 'Eccezione irraggiungibile',
        'InvalidTimeZoneException' => 'Fuso orario non valido',
        'ImmutableException' => 'Eccezione immutabile',
        'InvalidFormatException' => 'Formato non valido',

    ],
    'the_input_must_be_a_string' => 'Il valore deve essere una stringa.',
    'forbidden_term_warning' =>"
        <div style=\"text-align: left;\">
            <p>Gentile Utente,</p>
            </br>
            <p>Il testo che hai inserito viola le nostre norme e linee guida sulla comunità. Ti invitiamo a modificare il contenuto e riprovare.</p>
            </br>
            <p>Se non ti è chiaro il motivo per cui questo termine è vietato, ti preghiamo di fare riferimento alle clausole dell'accordo che hai accettato al momento della registrazione.
            <p>Grazie per la tua comprensione e collaborazione.</p>
            </br>
            <p>Cordiali saluti,
            <br>
            Il Team di Frangette</p>
        </div>",

    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulta la pagina delle norme della comunità.
        </a>.',

    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker non è stato inizializzato correttamente',
    'table_not_exist' => 'La tabella non esiste',
    'unique' => 'Questo valore è già presente nella tua libreira dei traits',
    'the_category_name_cannot_be_empty' => 'Il nome della categoria non può essere vuoto',
    'nathing_to_save' => 'Niente da salvare',
    'an_error_occurred' => 'Urgh! ci dispiace, si è verificato un errore!',
    'error_number' => 'Numero di errore:',
    'reason' => [
        'reason' => 'motivo',
        'wallet_not_valid' => 'Wallet non valido',
        'something_went_wrong' => 'Qualcosa è andato storto',

    ],
    'solution' => [
        'solution' => 'soluzione',
        'create_a_new_wallet_and_try_again' => 'Crea un nuovo wallet e prova di nuovo',
        'we_are_already_working_on_solving_the_problem' => 'Stiamo già lavorando per risolvere il problema',

    ],

    'min' => [
        'string' => 'Il campo deve essere di almeno :min caratteri.',
    ],
    'max' => [
        'string' => 'Il campo deve essere di al massimo :max caratteri.',
    ],

    'id_epp_not_found' => 'Id EPP non trovato',

    'minting' => [
        'error_generating_token' => 'Errore durante la generazione del token',
        'insufficient_wallet_balance' => 'Non hai fondi sufficenti per acquistare questo EcoNFT',
        'error_during_save_the_metadataFile' => 'Errore durante il salvataggio dei metadata nel file',
        'error_during_save_the_metadata_on_database' => 'Errore durante il salvataggio dei metadata nel database',
        'error_during_create_metadata_file' => 'Errore durante la creazione del file metadata',
        'error_during_save_the_buyer' => 'Errore durante il salvataggio del buyer',
        'buyer_not_exist' => 'Il buyer non esiste',
        'this_wallet_does_not_belong_to_any_buyer' => 'Questo wallet non appartiene a nessun buyer',
        'seller_not_exist' => 'Il seller non esiste',
        'seller_owner_not_found' => 'Il seller owner non esiste',
        'seller_wallet_address_not_found' => 'L\'indirizzo del wallet del seller non esiste',
        'error_during_save_the_seller' => 'Errore durante il salvataggio del seller',
        'error_during_save_the_buyer_transaction' => 'Errore durante il salvataggio della transazione per il buyer',
        'error_during_the_saving_of_the_payment' => 'Errore durante il salvataggio del pagamento',
        'error_during_save_the_natan' => 'Errore durante il salvataggio dei dati', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Errore durante il salvataggio della transazione',
        'seller_not_found' => 'Seller non trovato',
        'error_during_the_minting' => 'Errore durante il minting',
        'error_uploading_file' => 'Errore durante il caricamento del file',
        'insufficient_balance' => 'Saldo insufficiente',
        'eco_nft_not_found' => 'EcoNFT non trovato',
        'no_traits_found' => 'Nessun trait trovato',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati delle etichette generiche
|--------------------------------------------------------------------------

 */

return [
    'came_to_back' => 'Torna indietro',
    "file_deleted_successfully" => "File eliminato con successo",
    'title_extension_not_allowed' => 'Estensione non consentita!',
    'title_file_type_not_allowed' => 'Tipo di file non consentito!',
    'title_file_size_exceeds' => 'Dimensione del file eccessiva!',
    'title_invalid_file_name' => 'Nome del file non valido!',
    'file_extension_not_allowed' => 'Tipo di file non consentito: :extension. I tipi di file consentiti sono quelli con le seguenti estensioni: :extensions.',
    'file_type_not_allowed' => 'Tipo di file non consentito: :type. I tipi MIME consentiti sono: :mimetypes.',
    'file_size_exceeds' => 'Le dimensioni del file superano il limite massimo consentito di :size MB.',
    'invalid_file_name' => 'Nome del file non valido: :filename. Il nome del file contiene caratteri non consentiti.',
    'allowed_extensions' => 'Le estensioni consentite sono: :extensions.',
    'allowed_mime_types' => 'I tipi MIME consentiti sono: :mimetypes.',
    "file_infected" => "File infetto",
    "scan_error" => "Errore di scansione",
    "starting_scan" => "Inizio scansione",
    "error_uploading_file" => "Errore durante il caricamento del file",
    "error_getting_presigned_url" => "Errore durante l'ottenimento della presigned URL",
    "error_deleting_file" => "Errore durante l'eliminazione del file",
    "upload_finished" => "Caricamento completato",
    "some_errors" => "alcuni errori",
    "upload_failed" => "caricamento fallito",
    "file_scanning_may_take_a_long_time_for_each_file" => "La scansione dei file potrebbe richiedere molto tempo per ciascun file",
    "all_files_are_saved" => "Tutti i file sono salvati",
    "loading_finished_you_can_proceed_with_saving" => "Caricamento completato puoi procedere con il salvataggio",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Caricamento completato puoi procedere con il salvataggio e la scansione",
    "im_uploading_the_file" => "Sto caricando il file",
    "virus_scan_disabled" => "Scansione antivirus disabilitata",
    "virus_scan_enabled" => "Scansione antivirus abilitata",
    "file_is_clean" => "Il file è pulito",
    "the_uploaded_file_was_detected_as_infected" => "Il file caricato è stato rilevato come infetto",
    "antivirus_scan_in_progress" => "Scansione antivirus in corso",
    'scanning_stopped' => 'Scansione interrotta',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy felice',
    "emogy_angry" => 'Emogy arrabbiato',
    "im_checking_the_validity_of_the_file" => 'Sto controllando la validità del file',
    "im_recording_the_information_in_the_database" => 'Sto registrando le informazioni nel database',
    "im_saving_the_image" => 'Sto salvando l\'immagine',
    "file_saved_successfully" => 'File: :fileCaricato salvato con successo',
    "all_files_were_scanned_no_infected_files" => 'Tutti i file sono stati scansionati, nessun file infetto',
    "one_or_more_files_were_found_infected" => 'Uno o più file sono stati trovati infetti, sono stati esclusi dal caricamento',
    "file_scanned_successfully" => 'File: :fileCaricato scansionato con successo',
    "file_uploaded_successfully" => 'File: :fileCaricato caricato con successo',
    "no_file_uploaded" => "Nessun file caricato",
    "error_during_file_upload" => "Errore durante il caricamento del file",
    'starting_uplad' => 'Inizio caricamento',
    "starting_saving" => "Inizio salvataggio",
    'uploaded' => 'caricato',
    'successfully' => 'con successo',
    'starting_upload' => 'Inizio caricamento',
    'waiting' => 'In attesa...',
    'upload_status' => 'Stato caricamento',
    'return_to_collection' => 'Torna alla collezione',
    'EGI_image' => 'Immagine EGI',
    'error_in_the_files' => 'Errori nei file',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Anteprima EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Trascina e rilascia i tuoi file qui o fai clic per selezionare',
    'upload_your_EGI_Files' => 'Carica i tuoi file EGI',
    'wait_for_the_files_to_load' => 'Attendi il caricamento dei file',
    'access_the_control_panel' => 'Accedi al pannello di controllo',
    'of' => 'di',
    'errors_in_the_files' => 'Errori nei file',
    'loading' => 'Caricamento...',
    'utilities_image_file' => 'Utility, immagine e caricamento file',
    'file_upload' => 'Caricamento file',
    'select_files' => 'Seleziona i file',
    'max_file_size_reminder' => 'Ricorda: la dimensione massima per ogni file è di 100MB. Per file superiori a 30MB, ti consigliamo di caricarli singolarmente per evitare problemi di rete.',
    'save_the_files' => 'Salva i file',
    'file_format_not_supported_for_viewing' => 'Formato del file non supportato per la visualizzazione',
    'cancel_upload' => 'Annulla il caricamento',
    'upload_your_files' => 'Carica i tuoi file',
    'open' => 'Apri',
    'user_management' => 'Gestione utenti',
    'sign_in' => 'Accedi',
    'sign_out' => 'Esci',
    "who_is_natan_frangette" => "Chi è Natan Frangette",
    'home' => 'Home',
    'remove_photo' => 'Rimuovi foto',
    'username' => 'Username',
    'bind' => 'Associa',
    'value' => 'Valore',
    'title' => 'Titolo',
    'dimension' => 'Dimensioni',
    'size' => 'Peso: ',
    'description' => 'Descrizione',
    'name' => 'Nome',
    'date_start' => 'Data inizio',
    'date_end' => 'Data fine',
    'unknown' => 'Sconosciuto',
    'active' => 'Attivo',
    'inactive' => 'Inattivo',
    'existing' => 'Esistente',
    'welcome' => 'Benvenuto nel hub di Natan',
    'done' => 'Fatto',
    'create' => 'Crea',
    'saving' => 'Sto salvando...',
    'save' => 'Salva',
    'saved' => 'Salvato!',
    'remember_to_save' => 'Ricordati di salvare',
    'cancel' => 'Annulla',
    'update' => 'Aggiorna',
    'cancelled' => 'Cancellato',
    'delete' => 'Elimina',
    'deleted' => 'Eliminato',
    'edit' => 'Modifica',
    'add' => 'Aggiungi',
    'confirm' => 'Conferma',
    'disable' => 'Disabilita',
    'close' => 'Chiudi',
    'delete_confirm' => 'Sei sicuro di voler eliminare questo elemento?',
    'whoops_something_went_wrong' => 'Ops, qualcosa è andato storto!',
    'action_confirm' => 'Operazione avvenuta con successo!',
    'search' => 'Cerca',
    'traits' => 'Traits',
    'utility' => 'Utility',
    'zoom' => 'Zoom',
    'product_image' => 'Immagine prodotto',
    'micro_logo' => 'Micro logo, molecola di Equilibrium',
    'logo' => 'Logo, molecola di Equilibrium',
    'manage_utility' => 'Gestisci utility',
    'item_zoom' => 'Dimensioni originali',
    'esternal_transfert' => 'Trasferimento esterno',
    'internal_transfert' => 'Trasferimento interno',
    'back_to_item' => 'Torna all\'elemento',
    'position' => 'Posizione',
    'head_photo_page' => 'Foto di testa della pagina',
    'handle_collection_data' => 'Gestisci i dati della collezione',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Questo elemento non può essere eliminato perché ci sono file associati',
    'edit_item' => [
        'title' => 'Modifica elemento',
        'description' => 'Modifica le informazioni dell\'elemento',
        'back_to_collection' => 'Torna alla collezione',
        'write_the_buyers_email' => 'Inserisci l\'email dell\'acquirente',
        'this_item_cannot_be_transfered' => 'Questo elemento non può essere trasferito',
        'are_you_sure_you_want_to_transfer_this_item' => "Sei sicuro di voler trasferire questo elemento da <span class=font-bold'> :collectionNameFrom </span> a <span class='font-bold'> :collectionNameTo </span> ?",
        'personal_collection_for_this_user_not_exists' => 'La collezione personale per questo utente non esiste, impossibile effettuare il trasferimento',
        'not_exist_user_width_this_email' => 'L\'utente con l\'email :emailExternalTransfer non esiste.',
        'transfer' => 'Trasferisci',
        'internal_trasfer' => 'Trasferimento interno',
        'external_trasfer' => 'Trasferimento esterno',
        'max_25_char' => 'Massimo 25 caratteri',
        'max_1000_char' => 'Massimo 1000 caratteri',
        'write_the_description' => 'Inserisci la descrizione',
        'date_of_creation' => 'Data di creazione',
        'publish' => 'Pubblica',
        'unpublish' => 'Non pubblicare',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Questo elemento non può essere eliminato perché ci sono file associati',
        'remove_biography' => 'Rimuovi biografia',
    ],
    'bio' => [
        'your_biography' => 'La tua biografia',
        'bio_title' => 'Titolo biografia',
        'manage_biography' => 'Gestisci biografia',
        'manage_chapter' => 'Gestisci capitoli',
        'back_to_biography' => 'Torna alla biografia',
        'back_to_profile' => 'Torna al profilo',
        'chapter' => 'Capitolo',
        'chapter_start_date' => 'Data inizio capitolo',
        'chapter_end_date' => 'Data fine capitolo',
        'chapter_title' => 'Titolo capitolo',
        'chapter_biography' => 'Biografia capitolo',
        'remove_biography' => 'Rimuovi biografia',
        'remove_chapter' => 'Rimuovi capitolo',
        'removed_chapter' => 'Capitolo rimosso',
        'add_chapter' => 'Aggiungi capitolo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Sei sicuro di voler rimuovere questo capitolo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Sei sicuro di voler rimuovere questa biografia?',
    ],
    'drop' => [
        'remove_from_drop' => 'Rimuovi da drop',
        'add_to_drop' => 'Aggiungi a drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Sei sicuro di voler rimuovere :itemremoved dalla drop?',
    ],
    'utilities' => [
        'utilities' => 'Utility',
        'upload_file' => 'Carica file',

    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/login.php ####

<?php
/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'Per favore, accedi al tuo account',
    'email' => 'Indirizzo email',
    'password' => 'Password',
    'remember_me' => 'Ricordami',
    'forgot_your_password' => 'Hai dimenticato la password?',
    'login' => 'Accesso',
    'register' => 'Registrati',
    'please_register_now' => 'Per favore, registrati ora',
    'first_name' => 'Nome',
    'last_name' => 'Cognome',
    'confirm_password' => 'Conferma password',
    'reset_password' => 'Reimposta la password',
    'current_password' => 'Password attuale',
    'new_password' => 'Nuova password',
    'have_an_account' => 'Hai già un account?',
    'dont_have_an_account' => 'Non hai ancora un account?',
    'logout' => 'Esci',
    'i_agree_to' => 'Accetto',
    'terms_of_service' => 'i termini di servizio',
    'and' => 'e',
    'privacy_policy' => 'della privacy',
    'welcome_to_the_first_artist_business_builder' => 'Benvenuto nell\'hub di Natan Frangette, il primo e unico Generatore di Business per Artisti',
    'welcome_to_the_natan_site' => 'Benvenuto nell\'hub di Natan Frangette',
    'join_us' => 'Unisciti a team che creerà la differenza!',
    'express_your_creativity' => 'Esprimi la tua creatività con i tuoi EcoNFT',
    'change_the_world_with_every_sale' => 'Cambia il Mondo con Ogni Vendita',
    'innovative_partnerships' => 'Partnership innovative',
    'bring_your_artistic_biography_to_life' => 'Porta in vita la tua biografia artistica',
    'impact_community' => 'Comunità di impatto',
    'register_now' => 'Registrati oggi e diventa parte di una parte di una rivoluzione artistica con un impatto positivo sulla società e sull\'ambiente!',
    'change_language' => 'Cambia lingua',
    'for_your_security_please_confirm_your_password_to_continue' => 'Per la tua sicurezza, conferma la tua password per continuare.',
    'two_factor' => [
        'title' => 'Autenticazione a Due Fattori',
        'description' => 'Aggiungi una sicurezza aggiuntiva al tuo account utilizzando l’autenticazione a due fattori.',
        'finish_enabled' => 'Completa l’attivazione dell’autenticazione a due fattori.',
        'enabled' => 'L’autenticazione a due fattori è stata attivata per il tuo account!',
        'not_enabled' => 'Non hai attivato l’autenticazione a due fattori.',
        'prompt' => 'Quando l’autenticazione a due fattori è attiva, ti verrà chiesto un token sicuro e casuale durante l’autenticazione. Puoi recuperare questo token dalla tua applicazione Google Authenticator sul telefono.',
        'QRCode' => [
            'title' => 'Scansiona il codice QR sottostante con l’applicazione autenticatore del tuo telefono.',
            'alt' => 'Codice QR',
            'finish_enabled' => 'Per completare l’attivazione dell’autenticazione a due fattori, scansiona il seguente codice QR usando l’applicazione autenticatore del tuo telefono o inserisci la chiave di configurazione e fornisci il codice OTP generato.',
            'enabled' => 'L’autenticazione a due fattori è ora attivata. Scansiona il seguente codice QR usando l’applicazione autenticatore del tuo telefono o inserisci la chiave di configurazione.',
            'setup_key' => 'Chiave di Configurazione',
            'code' => 'Codice',
            'showing_recovery_codes' => 'Conserva questi codici di recupero in un gestore di password sicuro. Possono essere usati per recuperare l’accesso al tuo account se perdi il tuo dispositivo di autenticazione a due fattori.',
            'regenerate_recory_codes' => 'Rigenera i Codici di Recupero',
            'show_recory_codes' => 'Mostra Codici di Recupero',
        ],
    ],
    'browser_session' => [
        'title' => 'Sessione del Browser',
        'description' => 'Gestisci e disconnetti le sessioni attive su altri browser e dispositivi.',
        'prompt' => 'Se necessario, puoi disconnettere tutte le altre sessioni del browser su tutti i tuoi dispositivi. Alcune delle tue sessioni recenti sono elencate di seguito; tuttavia, questa lista potrebbe non essere esaustiva. Se ritieni che il tuo account sia stato compromesso, dovresti anche aggiornare la tua password.',
        'this_device' => 'Questo Dispositivo',
        'last_active' => 'Ultima Attività',
        'log_out_other_browser_sessions' => 'Disconnetti le altre sessioni del browser',
        'please_enter_your_password_to_confirm' => 'Inserisci la tua password per confermare che desideri disconnetterti dalle altre sessioni del browser su tutti i tuoi dispositivi.',
    ],
    'delete_account' => [
        'title' => 'Elimina Account',
        'description' => 'Elimina in modo permanente il tuo account.',
        'prompt' => 'Sei sicuro di voler eliminare il tuo account? Una volta eliminato il tuo account, tutti i suoi dati e risorse saranno eliminati in modo permanente. Inserisci la tua password per confermare che desideri eliminare permanentemente il tuo account.',
        'once_your_account_is_deleted' => 'Una volta eliminato il tuo account, tutti i suoi dati e risorse saranno eliminati in modo permanente. Prima di eliminare il tuo account, scarica qualsiasi dato o informazione che desideri conservare.',
        'delete_account' => 'Elimina Account',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/it/notification.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati delle notifiche
|--------------------------------------------------------------------------
|
 */

return [
    'proposal_declined_subject' => 'La tua proposta è stata rifiutata',
    'proposal_declined_line' => 'La tua proposta è stata rifiutata.',
    'proposal_declined_reason' => 'Motivo:',
    'proposal_declined_id' => 'ID della proposta:',
    'view_details' => 'Visualizza dettagli',
    'thank_you' => 'Grazie per aver utilizzato la nostra piattaforma.',
    'proposal_declined' => 'Proposta rifiutata',
    'proposal_declined_message' => 'La tua proposta è stata rifiutata.',
    'reply' => 'Risposta',
    'wallet_changes_approved' => 'Le modifiche al portafoglio sono state approvate',
    'no_pending_notifications' => 'Nessuna notifica in sospeso disponibile.',
    'hide_processed_notifications' => 'Hide Processed Notifications.',
    'show_processed_notifications' => 'Show Processed Notifications.',
    'confirm_delete' => 'Sei sicuro di voler eliminare questa notifica?',
    'proposer' => 'Proponente',
    'receiver' => 'Destinatario',
    'proposed_creation_new_wallet' => 'Hai proposto la creazione di un nuovo portafoglio',
    'proposed_change_to_a_wallet' => 'Hai proposto la modifica a un portafoglio',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/profile.php ####

<?php

/*
|
|    Traduzione Italiana per i dati del profilo dell'user
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'biography' => 'Biografia',
    'account' => 'Account',
    'first_name' => 'Nome',
    'last_name' => 'Cognome',
    'email' => 'Email',
    'wallet' => 'Portafoglio',
    'your_email_address_is_unverified' => 'Il tuo indirizzo email non è verificato',
    'click_here_to_re-send_the_verification_email' => 'Clicca qui per inviare nuovamente l\'email di verifica',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Un nuovo link di verifica è stato inviato al tuo indirizzo email',
    'language' => 'Lingua',
    'creator' => 'Creatore',
    'email_verified_at' => 'Email verificata il',
    'password' => 'Password',
    'remember_token' => 'Ricorda token',
    'current_team_id' => 'ID del team corrente',
    'profile_photo_path' => 'Percorso della foto del profilo',
    'consent' => 'Consenso',
    'bio_title' => 'Titolo della biografia',
    'bio_story' => 'Storia della biografia',
    'title' => 'Titolo',
    'mr_miss_dott' => 'Mr. / Miss / Dott.',
    'job_role' => 'Ruolo lavorativo',
    'user_name' => 'Nome utente',
    'user_type' => 'Tipo di utente',
    'street' => 'Via',
    'city' => 'Città',
    'region' => 'Regione',
    'state' => 'Stato',
    'zip' => 'CAP',
    'home_phone' => 'Telefono di casa',
    'cell_phone' => 'Cellulare',
    'work_phone' => 'Telefono del lavoro',
    'site_url' => 'Sito web',
    'facebook' => 'Facebook',
    'twitter' => 'Twitter',
    'instagram' => 'Instagram',
    'snapchat' => 'Snapchat',
    'twich' => 'Twich',
    'Other' => 'Altro',
    'birth_date' => 'Data di nascita',
    'fiscal_code' => 'Codice fiscale',
    'tax_id_number' => 'Numero di identificazione fiscale',
    'doc_typo' => 'Tipo di documento',
    'doc_num' => 'Numero di documento',
    'doc_issue_date' => 'Data di rilascio del documento',
    'doc_expired_date' => 'Data di scadenza del documento',
    'doc_issue_from' => 'Documento rilasciato da',
    'doc_photo_path_f' => 'Percorso della foto del documento frontale',
    'doc_photo_path_r' => 'Percorso della foto del documento posteriore',
    'org_data_sheet' => 'Scheda dati dell\'organizzazione, azienda, ente...',
    'org_name' => 'Nome dell\'organizzazione, azienda, ente',
    'org_email' => 'Email dell\'organizzazione, azienda, ente',
    'please_update_your_company_information' => 'Aggiorna le informazioni della tua organizzazione',
    'org_street' => 'Via dell\'organizzazione, azienda, ente',
    'org_city' => 'Città dell\'organizzazione, azienda, ente',
    'org_region' => 'Regione dell\'organizzazione, azienda, ente',
    'org_state' => 'Stato dell\'organizzazione, azienda, ente',
    'org_zip' => 'CAP dell\'organizzazione, azienda, ente',
    'org_site_url' => 'Sito dell\'organizzazione, azienda, ente',
    'insert_a_valid_url' => 'Inserisci una URL valida',
    'enter_annotation' => 'Inserisci annotazione',
    'annotation' => 'Annotazione',
    'org_phone_1' => 'Telefono 1',
    'org_phone_2' => 'Telefono 2',
    'org_phone_3' => 'Telefono 3',
    'rea' => 'REA',
    'org_fiscal_code' => 'Codice fiscale dell\'organizzazione, azienda, ente',
    'org_vat_number' => 'Numero di partita IVA dell\'organizzazione, azienda, ente',
    'select_a_photo' => 'Seleziona una foto',
    'upload_a_photo' => 'Carica una foto',
    'remove_photo' => 'Rimuovi foto',
    'select_a_language' => 'Seleziona una lingua',
    'photo' => 'Foto',
    'profile_information' => 'Informazioni sul profilo',
    'update_your_profile_data' => 'Aggiorna i tuoi dati di profilo',
    'document_data' => 'Dati del documento',
    'please_enter_your_ID_details' => 'Inserisci i tuoi dati d\'identità',
    'document_type' => 'Tipo di documento',
    'drive_licenze' => 'Patente di guida',
    'passport' => 'Passaporto',
    'identity_card' => 'Carta d\'identità',
    'front_photograph_of_the_document' => 'Foto frontale del documento',
    'back_photograph_of_the_document' => 'Foto posteriore del documento',
    'social_media' => 'Social media',
    'please_enter_your_social_media_details' => 'Inserisci i tuoi dati sui social media',
    'update_password' => 'Aggiorna password',
    'ensure_your_account' => 'Assicurati che il tuo account utilizzi una password lunga e casuale per rimanere sicuro',
    'enter_your_new_password' => 'Inserisci la tua nuova password',
    'confirm_your_new_password' => 'Conferma la tua nuova password',
    'two_factor_authentication' => 'Autenticazione a due fattori',
    'two factor authentication_add_additional_security' => 'Aggiungi sicurezza aggiuntiva al tuo account utilizzando autenticazione a due fattori',
    'You have not enabled two factor authentication.' => 'Non hai abilitato autenticazione a due fattori.',
    'text_for_two_factor_authentication' => 'Quando autenticazione a due fattori è abilitata, ti verrà richiesto un token casuale e sicuro durante autenticazione. Puoi recuperare questo token per applicazione Google Authenticator del tuo telefono.',
    'browser_sessions' => 'Sessioni del browser',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gestisci ed esci dalle tue sessioni attive su altri browser e dispositivi.',
    'text_for_sessione' => 'Se necessario, puoi disconnetterti da tutte le altre sessioni del browser su tutti i tuoi dispositivi. Alcune delle tue sessioni recenti sono elencate di seguito; tuttavia, questo elenco potrebbe non essere esaustivo. Se ritieni che il tuo account sia stato compromesso, dovresti anche aggiornare la tua password.',
    'log out other browser sessions' => 'Disconnetti altre sessioni del browser',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in italiano di tutti i dati della sidebar e della navbar
|--------------------------------------------------------------------------
|
 */

 return [

    'title' => [
        'collection_handling' => 'Gestisci Collezioni',
        'collections' => 'Collezioni',
        'dashboard' => 'Dashboard',
        'admin' => 'Admin',
        'authorizations' => 'Autorizzazioni',
    ],

    'open_collection' => 'Apri Collezione',
    'new_collection' => 'Nuova Collezione',
    'permissions_roles' => 'Ruoli e Permessi',
    'assign_roles' => 'Assegna Ruoli',
    'assign_permissions' => 'Assegna Permessi',
    'manage_roles' => 'Gestisci Ruoli',

];


#### Inizio File: /home/fabio/EGI/resources/lang/it/traits.php ####

<?php

/*
|
|    Traduzione Italiana per i dati dei trits
|    i seguenti sono tutti i campi che devono essere tradotti
|    in caso di aggiunta di nuovi campi, aggiungere anche la traduzione
|
 */

return [
    'sure_you_what_match_this_trait' => 'Sei sicuro di voler abbinare questo tratto?',
    'yes_match_it' => 'Sì, abbinalo',
    'the_trait_was_matched' => 'Il tratto è stato abbinato',
    'trait_added' => 'Tratto aggiunto',
    'category_added' => 'Categoria aggiunta',
    'key_added' => 'Chiave aggiunta',
    'value_added' => 'Valore aggiunto',
    'new_key' => 'Nuova chiave',
    'new_category' => 'Nuova categoria',
    'key_deletion_error' => 'Questa chiave è collegata ad alcuni tratti e non può essere rimossa. Se desideri eliminarla, devi prima eliminare i tratti associati.',
    'create_a_new_trait_for_this_key' => 'Crea un nuovo tratto per questa chiave',
    'click_for_selected' => 'Clicca per selezionare',
    'trait_icon' => 'Icona tratti',
    'EGI_with_traits' => 'EGI con tratti',
    'traits_library' => 'Libreria dei tratti',
    'collection' => 'Collezione',
    'manage_traits' => 'Gestisci tratti',
    'manage_key' => 'Gestisci le chiavi',
    'manage_category' => 'Gestisci le categorie',
    'delete_traits' => 'Elimina tratti',
    'applyTraits' => 'Torna ad Applicare i tratti',
    'open_manage' => 'Apri gestione',
    'close_manage' => 'Chiudi gestione',
    'apply_traits' => 'Applica tratti',
    'create_new_key' => 'Crea una nuova chiave',
    'key_deletion' => 'Eliminazione chiave',
    'key_deletion_confirm' => 'Sei sicuro di voler eliminare questa chiave: :key ?',
    'key_not_possible_delete' => 'Non è possibile eliminare questa chiave',
    'key_deleted' => 'Chiave eliminata',
    'key_search' => 'Cerca chiave',
    'make_a_new_key' => 'Crea una nuova chiave',
    'key_created' => 'Chiave creata',
    'key_updated' => 'Chiave aggiornata',
    'key_not_possible_update' => 'Non è possibile aggiornare questa chiave',
    'key_not_found' => 'Chiave non trovata',
    'key_not_possible_create' => 'Non è possibile creare questa chiave',
    'key_not_possible_find' => 'Non è possibile trovare questa chiave',
    'bind' => 'Associa',
    'unbind' => 'Dissocia',
    'binded' => 'Chiavi associate',
    'unbinded' => 'Chiavi da associare',
    'make' => 'Crea',
    'create_a_new_category' => 'Crea una nuova categoria',
    'category_created' => 'Categoria creata',
    'create_a_new_key' => 'Crea una nuova chiave',
    'select_a_category' => 'Seleziona una categoria',
    'category' => 'Categoria',
    'select_a_key' => 'Seleziona una chiave',
    'key' => 'Chiave',
    'value_for_key' => 'Valore per la chiave',
    'select_all' => 'Seleziona tutti',
    'select_one_or_more_EGI' => 'Seleziona uno o più EGI',
    'unselect_all' => 'Deseleziona tutti',
    'many_to_many' => 'Molti a molti',
    'one_to_many' => 'Uno a molti',
    'zoom_in' => 'Ingrandisci',
    'zoom_out' => 'Riduci',
    'traits_on :numberItems items_in_this_collection' => 'Tratti sui :numberItems elementi di questa collezione',
    'are_you_sure_remove :traitKey' => 'Sei sicuro di voler rimuovere <span class="font-bold"> :traitKey </span> ?',
    'all_the_traits_you_created' => 'Tutti i tratti che hai creato',
    'traits_categories' => 'Categorie dei tratti',
    'traits' => 'Tratti',
    'update_category' => 'Aggiorna categoria',
    'update_key' => 'Aggiorna chiave',
    'explanation_apply_traits' => 'Assegna le caratteristiche che vuoi applicare ai singoli elementi della tua collection',
    'explanation_manage_category' => 'Gestisci le categorie dei tratti. Da questa sezione puoi creare nuove categorie, aggiornare o eliminare quelle già esistenti. Puoi fare lo stesso con le chiavi e anche associarle alle categorie. Puoi visualizzare tutte le chiavi che sono già state associate e, se necessario, disassociarle cliccando con il tasto destro del mouse sulla scheda corrispondente. Inoltre, puoi visualizzare tutte le chiavi che devono ancora essere associate: puoi selezionarne una o più (nota bene che quando selezioni la chiave questa si deve colorare di rosso, altrimenti significa che non è stata selezionata correttamente) e, cliccando con il tasto destro del mouse, ti verrà mostrato l\elenco delle categorie disponibili. Scegliendo una categoria, creerai l\associazione.',
    'trait_value' => 'Valore caratteristica',
    'view_your_all_traits' => 'Visualizza tutti i tuoi tratti',
    'view_your_traits_this_collection' => 'Visualizza i tuoi tratti solo di questa collezione',
    'back_to_apply_traits' => 'Torna ad applicare i tratti',
    'back_to_gallery' => 'Torna alla collezione',
    'this_traits_non_cannot_be_removed' => 'Questi tratti non possono essere rimossi',
    'associated_traits' => 'Tratti associati',
];

#### Inizio File: /home/fabio/EGI/resources/lang/it/utilities.php ####

<?php

return [

    'forms' => [
        'utility_name ' => 'Nome dell\'utility',
        'description' => 'Descrizione',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/collection.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in portoghese di tutti i dati dei dati di testata delle collection
|--------------------------------------------------------------------------
|

 */
return [
    'invite_collection_member' => 'Convidar um membro para a coleção',
    'came_back_to_collection' => 'Voltar para a coleção',
    'confirm_delete_title' => 'Tem certeza?',
    'confirm_delete_text' => 'Esta ação excluirá permanentemente a imagem :type!',
    'confirm_delete_button' => 'Sim, exclua!',
    'cancel_delete_button' => 'Cancelar',
    'deleted_title' => 'Excluído!',
    'deleted_text' => 'A imagem do banner foi excluída com sucesso.',
    'delete_card' => 'Excluir cartão',
    'delete_banner' => 'Excluir banner',
    'delete_avatar' => 'Excluir avatar',
    'delete_EGI' => 'Excluir EGI',
    'save_card' => 'Salvar cartão',
    'save_banner' => 'Salvar banner',
    'save_avatar' => 'Salvar avatar',
    'save_EGI' => 'Salvar EGI',
    'create_validation_error' => 'Erro de validação',
    'creation_failed' => 'Criação falhou',
    'collection_delete' => 'Excluir coleção',
    'avatar_image' => 'Imagem do avatar',
    'card_image' => 'Imagem do cartão',
    'EGI_image' => 'Imagem EGI',
    'banner_image' => 'Imagem do banner',
    'edit_collection_data' => 'Editar dados da coleção',
    'modifies_EGI' => 'Modifica EGI',
    'new_collection' => 'Nova coleção',
    'open_collection' => 'Abrir coleção',
    'collection_members' => 'Membros da coleção',
    'team_members_description' => 'Aqui você pode ver todos os membros da equipe que têm acesso a esta coleção',
    'manage_head_images' => 'Gerenciar imagens de cabeçalho',
    'manage_collection' => 'Gerenciar coleção',
    'collection' => 'Coleção',
    'collections' => 'Coleções',
    'collection_data' => 'Dados de cabeçalho da coleção',
    'collection_name' => 'Nome da coleção',
    'collection_id' => 'ID da coleção',
    'collection_description_placeholder' => 'Insira uma descrição da coleção',
    'collection_description_suggest' => 'Uma descrição clara e atraente ajuda os usuários a entender melhor sua coleção e aumenta seu apelo. Conte o que a torna única!',
    'collection_description' => 'Insira todos os dados relacionados à coleção, seja muito preciso',
    'collection_image' => 'Imagem da coleção',
    'collection_image_alt' => 'Texto alternativo da imagem da coleção',
    'add_epp' => 'Adicionar um EPP',
    'add_epp_placeholder' => 'Insira um EPP',
    'need_to_associate_epp' => 'Até associar sua galeria a um EPP, você não poderá publicá-la',
    'EGI_floor_price' => 'Preço mínimo EGI',
    'set_base_EcoNFT_price' => 'Defina um preço base que deseja cobrar por cada EGI desta coleção',
    'collection_site_URL' => 'URL do site da coleção',
    'collection_site_URL_suggest' => 'Sugestão: insira o URL do site da coleção',
    'position_for_mor_than_one_collection' => 'Se você tem mais de uma coleção, pode decidir onde colocar esta',
    'publish_collection' => 'Publicar coleção',
    'image_for_EcoNFT_collection' => 'Imagem para a coleção EGI',
    'image_description' => 'Esta é a imagem que representa toda a coleção',
    'image_alt' => 'Imagem que representa toda a coleção',
    'image_title' => 'Imagem que representa toda a coleção',
    'select_new_EcoNFT_photo' => 'Selecione uma nova foto para o EGI',
    'switch_collection' => 'Trocar coleção',
    'goto_collection' => 'Ir para a coleção',
    'type' => 'Tipo',
    'select_content_type' => 'Selecione o tipo de conteúdo',
    'type_image' => 'Imagem',
    'type_ebook' => 'Ebook',
    'type_audio' => 'Áudio',
    'type_video' => 'Vídeo',
    'EGI_number' => 'Número EGI',
    'position' => 'Posição',
    'updated_successfully' => 'Coleção salva com sucesso',
    'save_failed' => 'Falha ao salvar',
    'collection_not_found' => 'Coleção não encontrada',
    'tips_to_optimize_your_collection' => 'Dicas para otimizar sua coleção',
    'tips_for_your_collection_images' => 'Dicas para as imagens da sua coleção',
    'image_section_title' => 'Imagens da coleção',
    'image_section_description' => 'Escolha cuidadosamente as imagens que representam sua coleção',
    'data_section_title' => 'Dados da coleção',
    'data_section_description' => 'Escolha cuidadosamente os dados que representam sua coleção',
    'this_is_default_collection_of_the_team' => 'Esta é a coleção padrão da equipe',
    'wallet' => [
        'write_royalty_mint' => 'Insira a porcentagem de royalties para o mint',
        'write_royalty_rebind' => 'Insira a porcentagem de royalties para o rebind',
        'user_role' => 'Função',
        'role_unknown' => 'Sem função',
        'address' => 'Endereço da wallet',
        'balance' => 'Saldo da wallet',
        'name' => 'Nome da wallet',
        'status' => 'Status da wallet',
        'royalty' => 'Royalties',
        'royalty_mint' => 'Royalties do mint',
        'royalty_rebind' => 'Royalties do rebind',
        'manage_wallet' => 'Gerenciar wallet',
        'remove_photo' => 'Remover foto',
        'wallet' => 'Wallet',
        'cancellation' => 'Cancelamento da wallet',
        'select_a_wallet_connect' => 'Selecione uma wallet',
        'button_wallet_connect' => 'Conectar uma wallet',
        'button_wallet_disconnect' => 'Desconectar',
        'create_the_wallet' => 'Criar uma nova wallet',
        'username' => 'Nome de usuário',
        'create' => 'Criar uma wallet',
        'delete_wallet' => 'Tem certeza de que deseja excluir esta wallet?',
    ]
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/errors.php ####

<?php

/*
|--------------------------------------------------------------------------
| Traduzione in portoghese di tutti i messaggi di errore
|--------------------------------------------------------------------------
|
 */

return [
    'AUTHENTICATION_ERROR' => 'Acesso não autorizado',
    'SCAN_ERROR' => 'Erro de digitalização',
    'VIRUS_FOUND' => 'Vírus encontrado',
    'INVALID_FILE_EXTENSION' => 'Extensão de arquivo inválida',
    'MAX_FILE_SIZE' => 'O arquivo não pode exceder :max byte.',
    'INVALID_FILE_PDF' => 'Arquivo PDF inválido',
    'MIME_TYPE_NOT_ALLOWED' => 'Tipo de arquivo não permitido.',
    'INVALID_IMAGE_STRUCTURE' => 'Estrutura de imagem inválida',
    'INVALID_FILE_NAME' => 'Nome de arquivo inválido',
    'ERROR_GETTING_PRESIGNED_URL' => 'Erro ao obter URL pré-assinado',
    'ERROR_DURING_FILE_UPLOAD' => 'Erro durante o envio do arquivo',
    'UNABLE_TO_SAVE_BOT_FILE' => 'Impossível salvar arquivo.',
    'UNABLE_TO_CREATE_DIRECTORY' => 'Impossível criar pasta',
    'UNABLE_TO_CHANGE_PERMISSIONS' => 'Impossível alterar permissões da pasta',
    'IMPOSSIBLE_SAVE_FILE' => 'Impossível salvar o arquivo',
    'ERROR_DURING_CREATE_EGI_RECORD' => 'Problema interno, assistência já foi alertada',
    'ERROR_DURING_FILE_NAME_ENCRYPTION' => 'Erro durante a criptografia do nome do arquivo',
    'IMAGICK_NOT_AVAILABLE' => 'Problema interno, assistência já foi alertada',
    'JSON_ERROR_IN_DISPATCHER' => 'Erro JSON no dispatcher',
    'GENERIC_SERVER_ERROR' => 'Erro genérico do servidor, a equipe técnica foi informada',
    'FILE_NOT_FOUND' => 'Arquivo não encontrado',
    'UNEXPECTED_ERROR' => 'Erro inesperado',
    'ERROR_DELETING_LOCAL_TEMP_FILE' => 'Erro ao excluir o arquivo temporário local',

    'scan_error' => 'Erro de digitalização',
    'virus_found' => 'Vírus encontrado',
    'required' => 'O campo é obrigatório.',
    'file' => 'Ocorreu um erro ao enviar o arquivo.',
    'file_extension_not_valid' => 'Extensão de arquivo inválida',
    'mimes' => 'O arquivo deve ser do tipo: :values.',
    'max_file_size' => 'O arquivo não pode exceder :max byte.',
    'invalid_pdf_file' => 'Arquivo PDF inválido',
    'mime_type_not_allowed' => 'Tipo de arquivo não permitido.',
    'invalid_image_structure' => 'Estrutura de imagem inválida',
    'invalid_file_name' => 'Nome de arquivo inválido',
    'error_getting_presigned_URL' => 'Erro ao obter URL pré-assinado',
    'error_getting_presigned_URL_for_user' => 'Erro ao carregar arquivo',
    'error_during_file_upload' => 'Erro durante o envio do arquivo',
    'error_deleting_file' => 'Erro ao excluir arquivo',
    'upload_finished' => 'Upload finalizado',
    'some_errors' => 'alguns erros',
    'upload_failed' => 'upload falhou',
    'error_creating_folder' => 'Erro ao criar pasta',
    'error_changing_folder_permissions' => 'Erro ao alterar permissões da pasta',
    'local_save_failed_file_saved_to_external_disk_only' => 'Salvamento local falhou, arquivo salvo apenas no disco externo',
    'external_save_failed_file_saved_to_local_disk_only' => 'Salvamento externo falhou, arquivo salvo apenas no disco local',
    'file_scanning_may_take_a_long_time_for_each_file' => 'A verificação de arquivos pode levar muito tempo para cada arquivo',
    'all_files_are_saved' => 'Todos os arquivos estão salvos',
    'loading_finished_you_can_proceed_with_saving' => 'Carregamento concluído, você pode prosseguir com a gravação',
    'loading_finished_you_can_proceed_with_saving_and_scan' => 'Carregamento concluído, você pode prosseguir com a gravação e a verificação',
    'im_uploading_the_file' => 'Estou enviando o arquivo',


    'exception' => [
        'NotAllowedTermException' => 'Termo não permitido',
        'MissingCategory' => 'É necessário inserir uma categoria.',
        'DatabaseException' => 'Ocorreu um erro de banco de dados',
        'ValidationException' => 'Ocorreu um erro de validação',
        'HttpException' => 'Ocorreu um erro HTTP',
        'ModelNotFoundException' => 'Modelo não encontrado',
        'QueryException' => 'Erro de consulta',
        'MintingException' => 'Erro durante o minting',
        'FileNotFoundException' => 'Arquivo não encontrado',
        'InvalidArgumentException' => 'Argumento inválido',
        'UnexpectedValueException' => 'Valor inesperado',
        'ItemNotFoundException' => 'Item não encontrado',
        'MultipleItemsFoundException' => 'Múltiplos itens encontrados',
        'LogicException' => 'Exceção lógica',
        'EntryNotFoundException' => 'Entrada não encontrada',
        'RuntimeException' => 'Erro de tempo de execução',
        'BadMethodCallException' => 'Chamada de método inválida',
        'LockTimeoutException' => 'Tempo limite de bloqueio',
        'InvalidIntervalException' => 'Intervalo inválido',
        'InvalidPeriodParameterException' => 'Parâmetro de período inválido',
        'EndLessPeriodException' => 'Período sem fim',
        'UnreachableException' => 'Exceção inalcançável',
        'InvalidTimeZoneException' => 'Fuso horário inválido',
        'ImmutableException' => 'Exceção imutável',
        'InvalidFormatException' => 'Formato inválido',
    ],
    'forbidden_term_warning' => "
        <div style=\"text-align: left;\">
            <p>Caro usuário,</p>
            </br>
            <p>O texto que você inseriu viola nossas normas e diretrizes da comunidade. Por favor, modifique o conteúdo e tente novamente.</p>
            </br>
            <p>Se você não entender o motivo pelo qual este termo é proibido, consulte as cláusulas do acordo que você aceitou no momento do registro.
            <p>Agradecemos sua compreensão e colaboração.</p>
            </br>
            <p>Atenciosamente,
            <br>
            A Equipe Frangette</p>
        </div>
    ",
    'letter_of_the_rules_of_conduct' =>
        '<a href=\":link\" style=\"color: blue; text-decoration: underline;\">
            Consulte a página de regras da comunidade.
        </a>.',
    'forbiddenTermChecker_was_not_initialized_correctly' => 'ForbiddenTermChecker não foi inicializado corretamente',
    'table_not_exist' => 'A tabela não existe',
    'unique' => 'Este valor já está presente na sua biblioteca de traits.',
    'the_category_name_cannot_be_empty' => 'O nome da categoria não pode estar vazio',
    'nathing_to_save' => 'Nada a salvar',
    'an_error_occurred' => 'Opa! Desculpe, ocorreu um erro!',
    'error_number' => 'Número do erro:',
    'reason' => [
        'reason' => 'motivo',
        'wallet_not_valid' => 'Carteira inválida',
        'something_went_wrong' => 'Algo deu errado',
    ],
    'solution' => [
        'solution' => 'solução',
        'create_a_new_wallet_and_try_again' => 'Crie uma nova carteira e tente novamente',
        'we_are_already_working_on_solving_the_problem' => 'Já estamos trabalhando para resolver o problema',
    ],
    'min' => [
        'string' => 'O campo deve ter pelo menos :min caracteres.',
    ],
    'max' => [
        'string' => 'O campo deve ter no máximo :max caracteres.',
    ],
    'id_epp_not_found' => 'Id EPP não encontrado',
    'minting' => [
        'error_generating_token' => 'Erro ao gerar o token',
        'insufficient_wallet_balance' => 'Saldo insuficiente na carteira para comprar este EcoNFT',
        'error_during_save_the_metadataFile' => 'Erro ao salvar os metadados no arquivo',
        'error_during_save_the_metadata_on_database' => 'Erro ao salvar os metadados no banco de dados',
        'error_during_create_metadata_file' => 'Erro ao criar o arquivo de metadados',
        'error_during_save_the_buyer' => 'Erro ao salvar o comprador',
        'buyer_not_exist' => 'O comprador não existe',
        'this_wallet_does_not_belong_to_any_buyer' => 'Esta carteira não pertence a nenhum comprador',
        'seller_not_exist' => 'O vendedor não existe',
        'seller_owner_not_found' => 'O proprietário do vendedor não foi encontrado',
        'seller_wallet_address_not_found' => 'O endereço da carteira do vendedor não foi encontrado',
        'error_during_save_the_seller' => 'Erro ao salvar o vendedor',
        'error_during_save_the_buyer_transaction' => 'Erro ao salvar a transação do comprador',
        'error_during_the_saving_of_the_payment' => 'Erro ao salvar o pagamento',
        'error_during_save_the_natan' => 'Erro ao salvar os dados', // non voglio specificare che si tratta di un errore durante il salvataggio delle royalty per Natan,
        'error_during_save_the_transaction' => 'Erro ao salvar a transação',
        'seller_not_found' => 'Vendedor não encontrado',
        'error_during_the_minting' => 'Erro durante a criação',
        'error_uploading_file' => 'Erro ao enviar o arquivo',
        'insufficient_balance' => 'Saldo insuficiente',
        'eco_nft_not_found' => 'EcoNFT não encontrado',
        'no_traits_found' => 'Nenhum traço encontrado',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/label.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le etichette tradotte in portoghese
|--------------------------------------------------------------------------
|
 */

return [
    'came_to_back' => 'Voltar',
    "file_deleted_successfully" => "Arquivo excluído com sucesso",
    'extension_not_allowed' => 'Extensão não permitida!',
    'title_file_type_not_allowed' => 'Tipo de arquivo não permitido!',
    'title_file_size_exceeds' => 'Tamanho de arquivo excessivo!',
    'title_invalid_file_name' => 'Nome de arquivo inválido!',
    'file_extension_not_allowed' => 'Tipo de arquivo não permitido: :extension. Tipos de arquivo permitidos têm as seguintes extensões: :extensions.',
    'file_type_not_allowed' => 'Tipo de arquivo não permitido: :type. Os tipos MIME permitidos são: :mimetypes.',
    'file_size_exceeds' => 'O tamanho do arquivo excede o tamanho máximo permitido de :size MB.',
    'invalid_file_name' => 'Nome de arquivo inválido: :filename. O nome do arquivo contém caracteres inválidos.',
    'allowed_extensions' => 'As extensões permitidas são: :extensions.',
    'allowed_mime_types' => 'Os tipos MIME permitidos são: :mimetypes.',
    "file_infected" => "Arquivo infectado",
    "scan_error" => "Erro de varredura",
    "starting_scan" => "Iniciando varredura",
    "error_uploading_file" => "Erro ao enviar o arquivo",
    "error_getting_presigned_url" => "Erro ao obter a URL pré-assinada",
    "error_deleting_file" => "Erro ao excluir o arquivo",
    "upload_finished" => "Carregamento concluído",
    "some_errors" => "alguns erros",
    "upload_failed" => "carregamento falhou",
    "file_scanning_may_take_a_long_time_for_each_file" => "A verificação de arquivos pode levar muito tempo para cada arquivo",
    "all_files_are_saved" => "Todos os arquivos estão salvos",
    "loading_finished_you_can_proceed_with_saving" => "Carregamento concluído, você pode prosseguir com a gravação",
    "loading_finished_you_can_proceed_with_saving_and_scan" => "Carregamento concluído, você pode prosseguir com a gravação e a varredura",
    "im_uploading_the_file" => "Estou carregando o arquivo",
    "virus_scan_disabled" => "Varredura de vírus desativada",
    "virus_scan_enabled" => "Varredura de vírus ativada",
    "file_is_clean" => "O arquivo está limpo",
    "the_uploaded_file_was_detected_as_infected" => "O arquivo carregado foi detectado como infectado",
    "antivirus_scan_in_progress" => "Verificação de antivírus em andamento",
    'scanning_stopped' => 'Varredura interrompida',
    "emogy_sad" => "Emogy triste",
    "emogy_happy" => 'Emogy feliz',
    "emogy_angry" => 'Emogy com raiva',
    "im_checking_the_validity_of_the_file" => 'Estou verificando a validade do arquivo',
    "im_recording_the_information_in_the_database" => 'Estou registrando as informações no banco de dados',
    "im_saving_the_image" => 'Estou salvando a imagem',
    "file_saved_successfully" => 'Arquivo: :fileCaricato salvo com sucesso',
    "file_uploaded_successfully" => 'Arquivo: :fileCaricato carregado com sucesso',
    "all_files_were_scanned_no_infected_files" => 'Todos os arquivos foram verificados, nenhum arquivo infectado',
    "one_or_more_files_were_found_infected" => 'Um ou mais arquivos foram encontrados infectados, eles foram excluídos do upload',
    "file_scanned_successfully" => 'Arquivo: :fileCaricato verificado com sucesso',
    "no_file_uploaded" => "Nenhum arquivo carregado",
    "error_during_file_upload" => "Erro durante o carregamento do arquivo",
    'starting_uplad' => 'Iniciando upload',
    'uploaded' => 'Carregado',
    'successfully' => 'com sucesso',
    'starting_upload' => 'Iniciando upload',
    "starting_saving" => "Iniciando salvamento",
    'waiting' => 'Aguarde...',
    'upload_status' => 'Status do upload',
    'return_to_collection' => 'Voltar para a coleção',
    'EGI_image' => 'Imagem EGI',
    'error_in_the_files' => 'Erro nos arquivos',
    'mint_egis'=> 'Mint EGI',
    'egis_preview' => 'Visualização EGI',
    'drag_and_drop_your_files_here_or_click_to_select' => 'Arraste e solte seus arquivos aqui ou clique para selecionar',
    'upload_your_EGI_Files' => 'Carregue seus arquivos EGI',
    'wait_for_the_files_to_load' => 'Aguarde o carregamento dos arquivos',
    'access_the_control_panel' => 'Acesse o painel de controle',
    'of' => 'de',
    'errors_in_the_files' => 'Erros nos arquivos',
    'loading' => 'Carregando...',
    'utilities_image_file' => 'Utilitários, imagem e upload de arquivos',
    'file_upload' => 'Upload de arquivos',
    'select_files' => 'Selecione os arquivos',
    'max_file_size_reminder' => 'Lembre-se: o tamanho máximo para cada arquivo é de 100MB. Para arquivos acima de 30MB, recomendamos o upload individual para evitar problemas de rede.',
    'save_your_files' => 'Salve seus arquivos',
    'file_format_not_supported_for_viewing' => 'Formato de arquivo não suportado para visualização',
    'cancel_upload' => 'Cancelar upload',
    'upload_your_files' => 'Carregar arquivos',
    'open' => 'Abrir',
    'user_management' => 'Gerenciamento de usuários',
    'sign_in' => 'Entrar',
    'sign_out' => 'Sair',
    "who_is_natan_frangette" => "Quem é Natan Frangette?",
    'home' => 'Início',
    'remove_photo' => 'Remover foto',
    'username' => 'Nome de usuário',
    'value' => 'Valor',
    'title' => 'Título',
    'dimension' => 'Dimensão',
    'size' => 'Tamanho: ',
    'bind' => 'Vincular',
    'description' => 'Descrição',
    'name' => 'Nome',
    'date_start' => 'Data de início',
    'date_end' => 'Data de término',
    'unknown' => 'Desconhecido',
    'active' => 'Ativo',
    'inactive' => 'Inativo',
    'existing' => 'Existente',
    'welcome' => 'Bem-vindo ao hub Natan',
    'done' => 'Feito',
    'create' => 'Criar',
    'saving' => 'eu estou salvando...',
    'save' => 'Salvar',
    'saved' => 'Salvo!',
    'remember_to_save' => 'Lembre-se de salvar',
    'cancel' => 'Cancelar',
    'update' => 'Atualizar',
    'cancelled' => 'Cancelado',
    'deleted' => 'Excluído',
    'delete' => 'Excluir',
    'edit' => 'Editar',
    'add' => 'Adicionar',
    'confirm' => 'Confirmar',
    'disable' => 'Desativar',
    'close' => 'Fechar',
    'delete_confirm' => 'Tem certeza de que deseja excluir?',
    'whoops_something_went_wrong' => 'Opa! Algo deu errado. Por favor, tente novamente.',
    'action_confirm' => 'Operação concluída com sucesso!',
    'search' => 'Pesquisar',
    'traits' => 'Traits',
    'utility' => 'Utilidade',
    'zoom' => 'Zoom',
    'product_image' => 'Imagem do produto',
    'micro_logo' => 'Micro logo, molécula de Equilibrium',
    'logo' => 'Logo, molécula de Equilibrium',
    'manage_utility' => 'Gerenciar utilitários',
    'item_zoom' => 'Tamanho original',
    'esternal_transfert' => 'Transferência externa',
    'internal_transfert' => 'Transferência interna',
    'back_to_item' => 'Voltar ao item',
    'position' => 'Posição',
    'head_photo_page' => 'Foto de cabeçalho da página',
    'handle_collection_data' => 'Editar dados da coleção',
    'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este item não pode ser excluído porque existem arquivos associados a ele',
    'edit_item' => [
        'title' => 'Editar item',
        'description' => 'Edite as informações do item',
        'back_to_collection' => 'Voltar para a coleção',
        'this_item_cannot_be_transfered' => 'Este item não pode ser transferido',
        'are_you_sure_you_want_to_transfer_this_item' => 'Tem certeza de que deseja transferir este item de <span class="font-bold"> :collectionNameFrom </span> para <span class="font-bold"> :collectionNameTo </span> ?',
        'personal_collection_for_this_user_not_exists' => 'A coleção pessoal para este usuário não existe, não é possível fazer a transferência',
        'not_exist_user_width_this_email' => 'O usuário com o e-mail :emailExternalTransfer não existe.',
        'transfer' => 'Transferir',
        'internal_transfer' => 'Transferência interna',
        'external_trasfer' => 'Transferência externa',
        'max_25_char' => 'Máximo de 25 caracteres',
        'max_1000_char' => 'Máximo de 1000 caracteres',
        'write_the_description' => 'Escreva a descrição',
        'date_of_creation' => 'Data de criação',
        'publish' => 'Publicar',
        'this_item_cannot_be_deleted_because_there_are_any_files_associated_with_it' => 'Este item não pode ser excluído porque existem arquivos associados a ele',
    ],
    'bio' => [
        'your_biography' => 'A sua biografia',
        'bio_title' => 'Título da biografia',
        'manage_biography' => 'Gerenciar biografia',
        'manage_chapter' => 'Gerenciar capítulos',
        'back_to_biography' => 'Voltar à biografia',
        'back_to_profile' => 'Voltar ao perfil',
        'chapter' => 'Capítulo',
        'chapter_start_date' => 'Data de início do capítulo',
        'chapter_end_date' => 'Data de fim do capítulo',
        'chapter_title' => 'Título do capítulo',
        'chapter_biography' => 'Biografia do capítulo',
        'remove_biography' => 'Remover biografia',
        'remove_chapter' => 'Remover capítulo',
        'removed_chapter' => 'Capítulo removido',
        'add_chapter' => 'Adicionar capítulo',
        'are_you_sure_you_would_like_to_remove_this_chapter' => 'Tem certeza de que deseja remover este capítulo?',
        'are_you_sure_you_would_like_to_remove_this_biography' => 'Tem certeza de que deseja remover esta biografia?',

    ],
    'drop' => [
        'remove_from_drop' => 'Remover da drop',
        'add_to_drop' => 'Adicionar à drop',
        'are_you_sure_you_would_like_to_remove_this_item_from_drop' => 'Tem certeza de que deseja remover :itemremoved do drop?',
    ],
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/login.php ####

<?php

/*
|--------------------------------------------------------------------------
| tutte le scritte della pagina di login e registrazione: portoghese
|--------------------------------------------------------------------------
|
 */

return [

    'please_login' => 'por favor faça o login na sua conta',
    'email' => 'Endereço de e-mail',
    'password' => 'Senha',
    'remember_me' => 'Lembre de mim',
    'forgot_your_password' => 'Esqueceu sua senha?',
    'login' => 'Entrar',
    'register' => 'Registo',
    'please_register_now' => 'Por favor, registre-se agora',
    'first_name' => 'Primeiro nome',
    'last_name' => 'sobrenome',
    'confirm_password' => 'Confirme a Senha',
    'reset_password' => 'Redefinir Senha',
    'current_password' => 'Senha atual',
    'new_password' => 'Nova senha',
    'have_an_account' => 'Já tem uma conta?',
    'dont_have_an_account' => 'Não tem uma conta?',
    'logout' => 'Sair',
    'i_agree_to' => 'Eu concordo com os',
    'terms_of_service' => 'Termos de Serviço',
    'and' => 'e',
    'privacy_policy' => 'Eu concordo com os Termos de Serviço e a Política de Privacidade',
    'welcome_to_the_first_artist_business_builder' => 'Bem-vindo ao portal de Natan Frangette, o primeiro e único Gerador de Negócios para Artistas',
    'welcome_to_the_natan_site' => 'Bem-vindo ao site de Natan Frangette',
    'join_us' => 'Junte-se a uma equipe que fará a diferença!',
    'express_your_creativity' => 'Expresse sua criatividade com seus EcoNFTs',
    'change_the_world_with_every_sale' => 'Mude o mundo a cada venda',
    'innovative_partnerships' => 'Parcerias inovadoras',
    'bring_your_artistic_biography_to_life' => 'Traga sua biografia artística à vida',
    'impact_community' => 'Comunidade de impacto',
    'register_now' => 'Registre-se hoje e faça parte de uma revolução artística com impacto positivo na sociedade e no meio ambiente!',
    'change_language' => 'Mudar idioma',
    'for_your_security_please_confirm_your_password_to_continue' => 'Para sua segurança, confirme sua senha para continuar.',
    'two_factor' => [
        'title' => 'Autenticação de Dois Fatores',
        'description' => 'Adicione uma segurança extra à sua conta usando a autenticação de dois fatores.',
        'finish_enabled' => 'Conclua a ativação da autenticação de dois fatores.',
        'enabled' => 'A autenticação de dois fatores foi ativada para a sua conta!',
        'not_enabled' => 'Você não ativou a autenticação de dois fatores.',
        'prompt' => 'Quando a autenticação de dois fatores estiver ativada, será solicitado um token seguro e aleatório durante a autenticação. Você pode recuperar este token do aplicativo Google Authenticator em seu telefone.',
        'QRCode' => [
            'title' => 'Escanee o código QR abaixo no aplicativo autenticador do seu telefone.',
            'alt' => 'Código QR',
            'finish_enabled' => 'Para concluir a ativação da autenticação de dois fatores, escanee o código QR a seguir usando o aplicativo autenticador do seu telefone ou insira a chave de configuração e forneça o código OTP gerado.',
            'enabled' => 'A autenticação de dois fatores está agora ativada. Escanee o código QR a seguir usando o aplicativo autenticador do seu telefone ou insira a chave de configuração.',
            'setup_key' => 'Chave de Configuração',
            'code' => 'Código',
            'showing_recovery_codes' => 'Guarde estes códigos de recuperação em um gerenciador de senhas seguro. Eles podem ser usados para recuperar o acesso à sua conta se você perder seu dispositivo de autenticação de dois fatores.',
            'regenerate_recory_codes' => 'Regenerar Códigos de Recuperação',
            'show_recory_codes' => 'Mostrar Códigos de Recuperação',
        ],
    ],
    'browser_session' => [
        'title' => 'Sessão do Navegador',
        'description' => 'Gerencie e desconecte sessões ativas em outros navegadores e dispositivos.',
        'prompt' => 'Se necessário, você pode desconectar todas as outras sessões de navegador em todos os seus dispositivos. Algumas de suas sessões recentes estão listadas abaixo; no entanto, esta lista pode não ser exaustiva. Se você acredita que sua conta foi comprometida, você também deve atualizar sua senha.',
        'this_device' => 'Este Dispositivo',
        'last_active' => 'Última Atividade',
        'log_out_other_browser_sessions' => 'Desconectar outras sessões do navegador',
        'please_enter_your_password_to_confirm' => 'Insira sua senha para confirmar que deseja desconectar as outras sessões do navegador em todos os seus dispositivos.',
    ],
    'delete_account' => [
        'title' => 'Eliminar Conta',
        'description' => 'Exclua sua conta permanentemente.',
        'prompt' => 'Tem certeza de que deseja excluir sua conta? Uma vez excluída, todos os seus dados e recursos serão permanentemente eliminados. Insira sua senha para confirmar que deseja excluir sua conta permanentemente.',
        'once_your_account_is_deleted' => 'Depois que sua conta for excluída, todos os seus dados e recursos serão permanentemente eliminados. Antes de excluir sua conta, faça o download de quaisquer dados ou informações que deseja manter.',
        'delete_account' => 'Eliminar Conta',
    ],

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/profile.php ####

<?php

/*
|
|    Traduzione in portoghese
|    Autore: Fabio Cherici
|    scrivi le traduzioni come valore della chiave
 */

return [
    'biography' => 'Biografia',
    'account' => 'Conta',
    'first_name' => 'Primeiro nome',
    'last_name' => 'Sobrenome',
    'email' => 'Email',
    'wallet' => 'Carteira',
    'language' => 'Idioma',
    'your_email_address_is_unverified' => 'Seu endereço de e-mail não foi verificado',
    'click_here_to_re-send_the_verification_email' => 'Clique aqui para reenviar o e-mail de verificação',
    'a_new_verification_link_has_been_sent_to_your_email_address' => 'Um novo link de verificação foi enviado para seu endereço de e-mail',
    'creator' => 'Criador',
    'email_verified_at' => 'Email verificado em',
    'password' => 'Senha',
    'remember_token' => 'Lembrar token',
    'current_team_id' => 'ID da equipe atual',
    'profile_photo_path' => 'Caminho da foto do perfil',
    'consent' => 'Consentimento',
    'bio_title' => 'Título da biografia',
    'bio_story' => 'História da biografia',
    'title' => 'Título',
    'mr_miss_dott' => 'Sr. Sra. Dott.',
    'job_role' => 'Função de trabalho',
    'user_name' => 'Nome de usuário',
    'user_type' => 'Tipo de usuário',
    'street' => 'Rua',
    'city' => 'Cidade',
    'region' => 'Região',
    'state' => 'Estado',
    'zip' => 'Zip',
    'home_phone' => 'Telefone residencial',
    'cell_phone' => 'Telefone celular',
    'work_phone' => 'Telefone do trabalho',
    'site_url' => 'url do site',
    'social_facebook' => 'Facebook social',
    'social_x' => 'Social x',
    'social_telegram' => 'Telegrama social',
    'social_linkedin' => 'Linkedin social',
    'social_github' => 'Github social',
    'social_instagram' => 'Instagram social',
    'social_snapchat' => 'Snapchat social',
    'social_twich' => 'Twich social',
    'social_discord' => 'Discordar social',
    'Other' => 'Outro',
    'birth_date' => 'Data de nascimento',
    'fiscal_code' => 'Código fiscal',
    'tax_id_number' => 'Número de identificação fiscal',
    'doc_typo' => 'Tipo de documento',
    'doc_num' => 'Número do documento',
    'doc_issue_date' => 'Data de emissão do documento',
    'doc_expired_date' => 'Data de validade do documento',
    'doc_issue_from' => 'Documento emitido por',
    'doc_photo_path_f' => 'Caminho da foto do documento f',
    'doc_photo_path_r' => 'Caminho da foto do documento r',
    'org_data_sheet' => 'Folha de dados da organização',
    'please_update_your_company_information' => 'Atualize as informações da sua empresa',
    'insert_a_valid_url' => 'Insira uma URL válida',
    'enter_annotation' => 'Insira uma anotação',
    'org_name' => 'Nome da organização',
    'org_email' => 'Email da organização',
    'org_street' => 'Rua da organização',
    'org_city' => 'Cidade da organização',
    'org_region' => 'Região da organização',
    'org_state' => 'Estado da organização',
    'org_zip' => 'zip da organização',
    'org_site_url' => 'url do site da organização',
    'annotation' => 'Anotação',
    'org_phone_1' => 'Telefone 1 da organização',
    'org_phone_2' => 'Telefone 2 da organização',
    'org_phone_3' => 'Telefone 3 da organização',
    'rea' => 'Números de Identificação Fiscal (NIF)',
    'org_fiscal_code' => 'Código fiscal da organização',
    'org_vat_number' => 'Número de IVA da organização',
    'select_a_photo' => 'Selecione uma foto',
    'upload_a_photo' => 'Carregar uma foto',
    'remove_photo' => 'Remover foto',
    'select_a_language' => 'Selecione um idioma',
    'photo' => 'foto',
    'profile_information' => 'Informações do perfil',
    'update_your_profile_data' => 'Atualize seus dados de perfil',
    'biography' => 'Biografia',
    'document_data' => 'Dados do documento',
    'please_enter_your_ID_details' => 'Insira os detalhes do seu ID',
    'document_type' => 'Tipo de documento',
    'drive_licenze' => 'Licença de motorista',
    'passport' => 'Passaporte',
    'identity_card' => 'Cartão de identidade',
    'front_photograph_of_the_document' => 'Fotografia frontal do documento',
    'back_photograph_of_the_document' => 'Fotografia traseira do documento',
    'social_media' => 'Mídia social',
    'please_enter_your_social_media_details' => 'Insira os detalhes da sua mídia social',
    'update_password' => 'Atualizar senha',
    'ensure_your_account' => 'Certifique-se de que sua conta use uma senha longa e aleatória para permanecer seguro.',
    'enter_your_new_password' => 'Digite sua nova senha',
    'confirm_your_new_password' => 'Confirme sua nova senha',
    'two_factor_authentication' => 'Autenticação de dois fatores',
    'two factor authentication_add_additional_security' => 'A autenticação de dois fatores adiciona segurança adicional à sua conta usando dois fatores de autenticação',
    'You have not enabled two factor authentication.' => 'Você não habilitou a autenticação de dois fatores.',
    'text_for_two_factor_authentication' => 'Você não habilitou a autenticação de dois fatores. Quando você habilita a autenticação de dois fatores, você será solicitado a inserir um código aleatório gerado por um aplicativo no seu dispositivo móvel, além de seu nome de usuário e senha ao fazer login.',
    'browser_sessions' => 'Sessões do navegador',
    'manage_and_log_out_your_active_sessions_on_other_browsers_and_devices.' => 'Gerencie e faça logout de suas sessões ativas em outros navegadores e dispositivos.',
    'text_for_sessione' => 'Se necessário, você pode encerrar todas as outras sessões de seus navegadores em todos os seus dispositivos. Algumas de suas sessões recentes estão listadas abaixo; no entanto, esta lista pode não ser exaustiva. Se você acha que sua conta foi comprometida, você também deve atualizar sua senha.',
    'log out other browser sessions' => 'Encerrar outras sessões do navegador',
];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/side_nav_bar.php ####

<?php

/*
|--------------------------------------------------------------------------
| Tradução em português de todos os dados da sidebar e da navbar
|--------------------------------------------------------------------------
*/

return [

    'title' => [
        'collection_handling' => 'Gerenciar Coleções',
        'collections' => 'Coleções',
        'dashboard' => 'Painel',
        'admin' => 'Admin',
        'authorizations' => 'Autorizações',
    ],

    'open_collection' => 'Abrir Coleção',
    'new_collection' => 'Nova Coleção',
    'permissions_roles' => 'Papéis e Permissões',
    'assign_roles' => 'Atribuir Papéis',
    'assign_permissions' => 'Atribuir Permissões',
    'manage_roles' => 'Gerenciar Papéis',

];

#### Inizio File: /home/fabio/EGI/resources/lang/pt/traits.php ####

<?php

/*
|
| Tradução Portuguesa para os dados dos traços
| os seguintes são todos os campos que precisam ser traduzidos
| no caso de adicionar novos campos, também adicione a tradução
|
 */

return [
    'sure_you_what_match_this_trait' => 'Tem certeza de que deseja combinar este traço?',
    'yes_match_it' => 'Sim, combine',
    'the_trait_was_matched' => 'O traço foi combinado',
    'trait_added' => 'Traço adicionado',
    'category_added' => 'Categoria adicionada',
    'key_added' => 'Chave adicionada',
    'value_added' => 'Valor adicionado',
    'new_category' => 'Nova categoria',
    'new_key' => 'Nova chave',
    'key_deletion_error' => 'Esta chave está vinculada a alguns traços e não pode ser removida. Se deseja excluí-la, primeiro deve excluir os traços associados.',
    'create_a_new_trait_for_this_key' => 'Criar um novo traço para esta chave',
    'click_for_selected' => 'Clique para selecionar',
    'trait_icon' => 'Ícone de traço',
    'EGI_with_traits' => 'EGI com traços',
    'traits_library' => 'Biblioteca de traços',
    'collection' => 'Coleção',
    'manage_traits' => 'Gerenciar traços',
    'manage_key' => 'Gerenciar chaves',
    'manage_category' => 'Gerenciar categorias',
    'delete_traits' => 'Excluir traços',
    'applyTraits' => 'Voltar para Aplicar Traços',
    'create_new_key' => 'Criar nova chave',
    'open_manage' => 'Abrir gerenciamento',
    'close_manage' => 'Fechar gerenciamento',
    'apply_traits' => 'Aplicar traços',
    'key_deletion' => 'Exclusão de chave',
    'key_deletion_confirm' => 'Tem certeza de que deseja excluir esta chave: :key?',
    'key_not_possible_delete' => 'Não é possível excluir esta chave',
    'key_deleted' => 'Chave excluída',
    'key_search' => 'Buscar chave',
    'make_a_new_key' => 'Criar uma nova chave',
    'key_created' => 'Chave criada',
    'key_updated' => 'Chave atualizada',
    'key_not_possible_update' => 'Não é possível atualizar esta chave',
    'key_not_found' => 'Chave não encontrada',
    'key_not_possible_create' => 'Não é possível criar esta chave',
    'key_not_possible_find' => 'Não é possível encontrar esta chave',
    'bind' => 'Associar',
    'unbind' => 'Desassociar',
    'binded' => 'Chaves associadas',
    'unbinded' => 'Chaves para associar',
    'make' => 'Criar',
    'create_a_new_category' => 'Criar uma nova categoria',
    'category_created' => 'Categoria criada',
    'create_a_new_key' => 'Criar uma nova chave',
    'select_a_category' => 'Selecione uma categoria',
    'select_one_or_more_EGI' => 'Selecione um ou mais EGI',
    'category' => 'Categoria',
    'select_a_key' => 'Selecione uma chave',
    'key' => 'Chave',
    'value_for_key' => 'Valor para a chave',
    'select_all' => 'Selecionar tudo',
    'unselect_all' => 'Desmarcar tudo',
    'many_to_many' => 'Muitos para muitos',
    'one_to_many' => 'Um para muitos',
    'zoom_in' => 'Aproximar',
    'zoom_out' => 'Afaste-se',
    'traits_on :numberItems items_in_this_collection' => 'Traços nos :numberItems itens desta coleção',
    'are_you_sure_remove :traitKey' => 'Tem certeza de que deseja remover <span class="font-bold"> :traitKey</span>?',
    'all_the_traits_you_created' => 'Todos os traços que você criou',
    'traits_categories' => 'Categorias de traços',
    'traits' => 'Traços',
    'update_category' => 'Atualizar categoria',
    'update_key' => 'Atualizar chave',
    'category' => 'Categoria',
    'explanation_apply_traits' => 'Atribua os traços que deseja aplicar a cada item da sua coleção',
    'explanation_manage_category' => 'Gerencie as categorias de traços. Nesta seção, você pode criar novas categorias, atualizar ou excluir as já existentes. Você pode fazer o mesmo com as chaves e também associá-las às categorias. Você pode visualizar todas as chaves que já foram associadas e, se necessário, desassociá-las clicando com o botão direito do mouse no cartão correspondente. Além disso, você pode ver todas as chaves que ainda precisam ser associadas: você pode selecionar uma ou mais (note bem que, ao selecionar a chave, ela deve ser colorida de vermelho, caso contrário, significa que não foi selecionada corretamente) e, clicando com o botão direito do mouse, será mostrada a lista de categorias disponíveis. Ao escolher uma categoria, você criará a associação.',
    'trait_value' => 'Valor do traço',
    'view_your_all_traits' => 'Ver todos os seus traços',
    'view_your_traits_this_collection' => 'Ver seus traços apenas desta coleção',
    'back_to_apply_traits' => 'Voltar para aplicar traços',
    'back_to_gallery' => 'Voltar para a galeria',
    'this_traits_non_cannot_be_removed' => 'Estes traços não podem ser removidos',
];

#### Inizio File: /home/fabio/EGI/resources/views/_welcome.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Styles / Scripts -->
        @if (file_exists(public_path('build/manifest.json')) || file_exists(public_path('hot')))
            @vite(['resources/css/app.css', 'resources/js/app.js'])
        @else
            <style>
                /* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.absolute{position:absolute}.relative{position:relative}.-left-20{left:-5rem}.top-0{top:0px}.-bottom-16{bottom:-4rem}.-left-16{left:-4rem}.-mx-3{margin-left:-0.75rem;margin-right:-0.75rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.flex{display:flex}.grid{display:grid}.hidden{display:none}.aspect-video{aspect-ratio:16 / 9}.size-12{width:3rem;height:3rem}.size-5{width:1.25rem;height:1.25rem}.size-6{width:1.5rem;height:1.5rem}.h-12{height:3rem}.h-40{height:10rem}.h-full{height:100%}.min-h-screen{min-height:100vh}.w-full{width:100%}.w-\[calc\(100\%\+8rem\)\]{width:calc(100% + 8rem)}.w-auto{width:auto}.max-w-\[877px\]{max-width:877px}.max-w-2xl{max-width:42rem}.flex-1{flex:1 1 0%}.shrink-0{flex-shrink:0}.grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.gap-2{gap:0.5rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.self-center{align-self:center}.overflow-hidden{overflow:hidden}.rounded-\[10px\]{border-radius:10px}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:0.5rem}.rounded-md{border-radius:0.375rem}.rounded-sm{border-radius:0.125rem}.bg-\[\#FF2D20\]\/10{background-color:rgb(255 45 32 / 0.1)}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-gradient-to-b{background-image:linear-gradient(to bottom, var(--tw-gradient-stops))}.from-transparent{--tw-gradient-from:transparent var(--tw-gradient-from-position);--tw-gradient-to:rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-white{--tw-gradient-to:rgb(255 255 255 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-white{--tw-gradient-to:#fff var(--tw-gradient-to-position)}.stroke-\[\#FF2D20\]{stroke:#FF2D20}.object-cover{object-fit:cover}.object-top{object-position:top}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-10{padding-top:2.5rem;padding-bottom:2.5rem}.px-3{padding-left:0.75rem;padding-right:0.75rem}.py-16{padding-top:4rem;padding-bottom:4rem}.py-2{padding-top:0.5rem;padding-bottom:0.5rem}.pt-3{padding-top:0.75rem}.text-center{text-align:center}.font-sans{font-family:Figtree, ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji}.text-sm{font-size:0.875rem;line-height:1.25rem}.text-sm\/relaxed{font-size:0.875rem;line-height:1.625}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-semibold{font-weight:600}.text-black{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-\[0px_14px_34px_0px_rgba\(0\2c 0\2c 0\2c 0\.08\)\]{--tw-shadow:0px 14px 34px 0px rgba(0,0,0,0.08);--tw-shadow-colored:0px 14px 34px 0px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.ring-transparent{--tw-ring-color:transparent}.ring-white\/\[0\.05\]{--tw-ring-color:rgb(255 255 255 / 0.05)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.06\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.06));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.drop-shadow-\[0px_4px_34px_rgba\(0\2c 0\2c 0\2c 0\.25\)\]{--tw-drop-shadow:drop-shadow(0px 4px 34px rgba(0,0,0,0.25));filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.duration-300{transition-duration:300ms}.selection\:bg-\[\#FF2D20\] *::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-\[\#FF2D20\]::selection{--tw-bg-opacity:1;background-color:rgb(255 45 32 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-black:hover{--tw-text-opacity:1;color:rgb(0 0 0 / var(--tw-text-opacity))}.hover\:text-black\/70:hover{color:rgb(0 0 0 / 0.7)}.hover\:ring-black\/20:hover{--tw-ring-color:rgb(0 0 0 / 0.2)}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus-visible\:ring-1:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}@media (min-width: 640px){.sm\:size-16{width:4rem;height:4rem}.sm\:size-6{width:1.5rem;height:1.5rem}.sm\:pt-5{padding-top:1.25rem}}@media (min-width: 768px){.md\:row-span-3{grid-row:span 3 / span 3}}@media (min-width: 1024px){.lg\:col-start-2{grid-column-start:2}.lg\:h-16{height:4rem}.lg\:max-w-7xl{max-width:80rem}.lg\:grid-cols-3{grid-template-columns:repeat(3, minmax(0, 1fr))}.lg\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}.lg\:flex-col{flex-direction:column}.lg\:items-end{align-items:flex-end}.lg\:justify-center{justify-content:center}.lg\:gap-8{gap:2rem}.lg\:p-10{padding:2.5rem}.lg\:pb-10{padding-bottom:2.5rem}.lg\:pt-0{padding-top:0px}.lg\:text-\[\#FF2D20\]{--tw-text-opacity:1;color:rgb(255 45 32 / var(--tw-text-opacity))}}@media (prefers-color-scheme: dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.dark\:bg-zinc-900{--tw-bg-opacity:1;background-color:rgb(24 24 27 / var(--tw-bg-opacity))}.dark\:via-zinc-900{--tw-gradient-to:rgb(24 24 27 / 0)  var(--tw-gradient-to-position);--tw-gradient-stops:var(--tw-gradient-from), #18181b var(--tw-gradient-via-position), var(--tw-gradient-to)}.dark\:to-zinc-900{--tw-gradient-to:#18181b var(--tw-gradient-to-position)}.dark\:text-white\/50{color:rgb(255 255 255 / 0.5)}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:text-white\/70{color:rgb(255 255 255 / 0.7)}.dark\:ring-zinc-800{--tw-ring-opacity:1;--tw-ring-color:rgb(39 39 42 / var(--tw-ring-opacity))}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:hover\:text-white\/70:hover{color:rgb(255 255 255 / 0.7)}.dark\:hover\:text-white\/80:hover{color:rgb(255 255 255 / 0.8)}.dark\:hover\:ring-zinc-700:hover{--tw-ring-opacity:1;--tw-ring-color:rgb(63 63 70 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-\[\#FF2D20\]:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 45 32 / var(--tw-ring-opacity))}.dark\:focus-visible\:ring-white:focus-visible{--tw-ring-opacity:1;--tw-ring-color:rgb(255 255 255 / var(--tw-ring-opacity))}}
            </style>
        @endif
    </head>
    <body class="font-sans antialiased dark:bg-black dark:text-white/50">
        <div class="bg-gray-50 text-black/50 dark:bg-black dark:text-white/50">
            <img id="background" class="absolute -left-20 top-0 max-w-[877px]" src="https://laravel.com/assets/img/welcome/background.svg" alt="Laravel background" />
            <div class="relative min-h-screen flex flex-col items-center justify-center selection:bg-[#FF2D20] selection:text-white">
                <div class="relative w-full max-w-2xl px-6 lg:max-w-7xl">
                    <header class="grid grid-cols-2 items-center gap-2 py-10 lg:grid-cols-3">
                        <div class="flex lg:justify-center lg:col-start-2">
                            <svg class="h-12 w-auto text-white lg:h-16 lg:text-[#FF2D20]" viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="currentColor"/></svg>
                        </div>
                        @if (Route::has('login'))
                            <nav class="-mx-3 flex flex-1 justify-end">
                                @auth
                                    <a
                                        href="{{ url('/dashboard') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Dashboard
                                    </a>
                                @else
                                    <a
                                        href="{{ route('login') }}"
                                        class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                    >
                                        Log in
                                    </a>

                                    @if (Route::has('register'))
                                        <a
                                            href="{{ route('register') }}"
                                            class="rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"
                                        >
                                            Register
                                        </a>
                                    @endif
                                @endauth
                            </nav>
                        @endif
                    </header>

                    <main class="mt-6">
                        <div class="grid gap-6 lg:grid-cols-2 lg:gap-8">
                            <a
                                href="https://laravel.com/docs"
                                id="docs-card"
                                class="flex flex-col items-start gap-6 overflow-hidden rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] md:row-span-3 lg:p-10 lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div id="screenshot-container" class="relative flex w-full flex-1 items-stretch">
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-light.svg"
                                        alt="Laravel documentation screenshot"
                                        class="aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.06)] dark:hidden"
                                        onerror="
                                            document.getElementById('screenshot-container').classList.add('!hidden');
                                            document.getElementById('docs-card').classList.add('!row-span-1');
                                            document.getElementById('docs-card-content').classList.add('!flex-row');
                                            document.getElementById('background').classList.add('!hidden');
                                        "
                                    />
                                    <img
                                        src="https://laravel.com/assets/img/welcome/docs-dark.svg"
                                        alt="Laravel documentation screenshot"
                                        class="hidden aspect-video h-full w-full flex-1 rounded-[10px] object-top object-cover drop-shadow-[0px_4px_34px_rgba(0,0,0,0.25)] dark:block"
                                    />
                                    <div
                                        class="absolute -bottom-16 -left-16 h-40 w-[calc(100%+8rem)] bg-gradient-to-b from-transparent via-white to-white dark:via-zinc-900 dark:to-zinc-900"
                                    ></div>
                                </div>

                                <div class="relative flex items-center gap-6 lg:items-end">
                                    <div id="docs-card-content" class="flex items-start gap-6 lg:flex-col">
                                        <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                            <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><path fill="#FF2D20" d="M23 4a1 1 0 0 0-1.447-.894L12.224 7.77a.5.5 0 0 1-.448 0L2.447 3.106A1 1 0 0 0 1 4v13.382a1.99 1.99 0 0 0 1.105 1.79l9.448 4.728c.14.065.293.1.447.1.154-.005.306-.04.447-.105l9.453-4.724a1.99 1.99 0 0 0 1.1-1.789V4ZM3 6.023a.25.25 0 0 1 .362-.223l7.5 3.75a.251.251 0 0 1 .138.223v11.2a.25.25 0 0 1-.362.224l-7.5-3.75a.25.25 0 0 1-.138-.22V6.023Zm18 11.2a.25.25 0 0 1-.138.224l-7.5 3.75a.249.249 0 0 1-.329-.099.249.249 0 0 1-.033-.12V9.772a.251.251 0 0 1 .138-.224l7.5-3.75a.25.25 0 0 1 .362.224v11.2Z"/><path fill="#FF2D20" d="m3.55 1.893 8 4.048a1.008 1.008 0 0 0 .9 0l8-4.048a1 1 0 0 0-.9-1.785l-7.322 3.706a.506.506 0 0 1-.452 0L4.454.108a1 1 0 0 0-.9 1.785H3.55Z"/></svg>
                                        </div>

                                        <div class="pt-3 sm:pt-5 lg:pt-0">
                                            <h2 class="text-xl font-semibold text-black dark:text-white">Documentation</h2>

                                            <p class="mt-4 text-sm/relaxed">
                                                Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                            </p>
                                        </div>
                                    </div>

                                    <svg class="size-6 shrink-0 stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                                </div>
                            </a>

                            <a
                                href="https://laracasts.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M24 8.25a.5.5 0 0 0-.5-.5H.5a.5.5 0 0 0-.5.5v12a2.5 2.5 0 0 0 2.5 2.5h19a2.5 2.5 0 0 0 2.5-2.5v-12Zm-7.765 5.868a1.221 1.221 0 0 1 0 2.264l-6.626 2.776A1.153 1.153 0 0 1 8 18.123v-5.746a1.151 1.151 0 0 1 1.609-1.035l6.626 2.776ZM19.564 1.677a.25.25 0 0 0-.177-.427H15.6a.106.106 0 0 0-.072.03l-4.54 4.543a.25.25 0 0 0 .177.427h3.783c.027 0 .054-.01.073-.03l4.543-4.543ZM22.071 1.318a.047.047 0 0 0-.045.013l-4.492 4.492a.249.249 0 0 0 .038.385.25.25 0 0 0 .14.042h5.784a.5.5 0 0 0 .5-.5v-2a2.5 2.5 0 0 0-1.925-2.432ZM13.014 1.677a.25.25 0 0 0-.178-.427H9.101a.106.106 0 0 0-.073.03l-4.54 4.543a.25.25 0 0 0 .177.427H8.4a.106.106 0 0 0 .073-.03l4.54-4.543ZM6.513 1.677a.25.25 0 0 0-.177-.427H2.5A2.5 2.5 0 0 0 0 3.75v2a.5.5 0 0 0 .5.5h1.4a.106.106 0 0 0 .073-.03l4.54-4.543Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laracasts</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <a
                                href="https://laravel-news.com"
                                class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]"
                            >
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><g fill="#FF2D20"><path d="M8.75 4.5H5.5c-.69 0-1.25.56-1.25 1.25v4.75c0 .69.56 1.25 1.25 1.25h3.25c.69 0 1.25-.56 1.25-1.25V5.75c0-.69-.56-1.25-1.25-1.25Z"/><path d="M24 10a3 3 0 0 0-3-3h-2V2.5a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2V20a3.5 3.5 0 0 0 3.5 3.5h17A3.5 3.5 0 0 0 24 20V10ZM3.5 21.5A1.5 1.5 0 0 1 2 20V3a.5.5 0 0 1 .5-.5h14a.5.5 0 0 1 .5.5v17c0 .295.037.588.11.874a.5.5 0 0 1-.484.625L3.5 21.5ZM22 20a1.5 1.5 0 1 1-3 0V9.5a.5.5 0 0 1 .5-.5H21a1 1 0 0 1 1 1v10Z"/><path d="M12.751 6.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 7.3v-.5a.75.75 0 0 1 .751-.753ZM12.751 10.047h2a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-2A.75.75 0 0 1 12 11.3v-.5a.75.75 0 0 1 .751-.753ZM4.751 14.047h10a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-10A.75.75 0 0 1 4 15.3v-.5a.75.75 0 0 1 .751-.753ZM4.75 18.047h7.5a.75.75 0 0 1 .75.75v.5a.75.75 0 0 1-.75.75h-7.5A.75.75 0 0 1 4 19.3v-.5a.75.75 0 0 1 .75-.753Z"/></g></svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Laravel News</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                    </p>
                                </div>

                                <svg class="size-6 shrink-0 self-center stroke-[#FF2D20]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"/></svg>
                            </a>

                            <div class="flex items-start gap-4 rounded-lg bg-white p-6 shadow-[0px_14px_34px_0px_rgba(0,0,0,0.08)] ring-1 ring-white/[0.05] transition duration-300 hover:text-black/70 hover:ring-black/20 focus:outline-none focus-visible:ring-[#FF2D20] lg:pb-10 dark:bg-zinc-900 dark:ring-zinc-800 dark:hover:text-white/70 dark:hover:ring-zinc-700 dark:focus-visible:ring-[#FF2D20]">
                                <div class="flex size-12 shrink-0 items-center justify-center rounded-full bg-[#FF2D20]/10 sm:size-16">
                                    <svg class="size-5 sm:size-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <g fill="#FF2D20">
                                            <path
                                                d="M16.597 12.635a.247.247 0 0 0-.08-.237 2.234 2.234 0 0 1-.769-1.68c.001-.195.03-.39.084-.578a.25.25 0 0 0-.09-.267 8.8 8.8 0 0 0-4.826-1.66.25.25 0 0 0-.268.181 2.5 2.5 0 0 1-2.4 1.824.045.045 0 0 0-.045.037 12.255 12.255 0 0 0-.093 3.86.251.251 0 0 0 .208.214c2.22.366 4.367 1.08 6.362 2.118a.252.252 0 0 0 .32-.079 10.09 10.09 0 0 0 1.597-3.733ZM13.616 17.968a.25.25 0 0 0-.063-.407A19.697 19.697 0 0 0 8.91 15.98a.25.25 0 0 0-.287.325c.151.455.334.898.548 1.328.437.827.981 1.594 1.619 2.28a.249.249 0 0 0 .32.044 29.13 29.13 0 0 0 2.506-1.99ZM6.303 14.105a.25.25 0 0 0 .265-.274 13.048 13.048 0 0 1 .205-4.045.062.062 0 0 0-.022-.07 2.5 2.5 0 0 1-.777-.982.25.25 0 0 0-.271-.149 11 11 0 0 0-5.6 2.815.255.255 0 0 0-.075.163c-.008.135-.02.27-.02.406.002.8.084 1.598.246 2.381a.25.25 0 0 0 .303.193 19.924 19.924 0 0 1 5.746-.438ZM9.228 20.914a.25.25 0 0 0 .1-.393 11.53 11.53 0 0 1-1.5-2.22 12.238 12.238 0 0 1-.91-2.465.248.248 0 0 0-.22-.187 18.876 18.876 0 0 0-5.69.33.249.249 0 0 0-.179.336c.838 2.142 2.272 4 4.132 5.353a.254.254 0 0 0 .15.048c1.41-.01 2.807-.282 4.117-.802ZM18.93 12.957l-.005-.008a.25.25 0 0 0-.268-.082 2.21 2.21 0 0 1-.41.081.25.25 0 0 0-.217.2c-.582 2.66-2.127 5.35-5.75 7.843a.248.248 0 0 0-.09.299.25.25 0 0 0 .065.091 28.703 28.703 0 0 0 2.662 2.12.246.246 0 0 0 .209.037c2.579-.701 4.85-2.242 6.456-4.378a.25.25 0 0 0 .048-.189 13.51 13.51 0 0 0-2.7-6.014ZM5.702 7.058a.254.254 0 0 0 .2-.165A2.488 2.488 0 0 1 7.98 5.245a.093.093 0 0 0 .078-.062 19.734 19.734 0 0 1 3.055-4.74.25.25 0 0 0-.21-.41 12.009 12.009 0 0 0-10.4 8.558.25.25 0 0 0 .373.281 12.912 12.912 0 0 1 4.826-1.814ZM10.773 22.052a.25.25 0 0 0-.28-.046c-.758.356-1.55.635-2.365.833a.25.25 0 0 0-.022.48c1.252.43 2.568.65 3.893.65.1 0 .2 0 .3-.008a.25.25 0 0 0 .147-.444c-.526-.424-1.1-.917-1.673-1.465ZM18.744 8.436a.249.249 0 0 0 .15.228 2.246 2.246 0 0 1 1.352 2.054c0 .337-.08.67-.23.972a.25.25 0 0 0 .042.28l.007.009a15.016 15.016 0 0 1 2.52 4.6.25.25 0 0 0 .37.132.25.25 0 0 0 .096-.114c.623-1.464.944-3.039.945-4.63a12.005 12.005 0 0 0-5.78-10.258.25.25 0 0 0-.373.274c.547 2.109.85 4.274.901 6.453ZM9.61 5.38a.25.25 0 0 0 .08.31c.34.24.616.561.8.935a.25.25 0 0 0 .3.127.631.631 0 0 1 .206-.034c2.054.078 4.036.772 5.69 1.991a.251.251 0 0 0 .267.024c.046-.024.093-.047.141-.067a.25.25 0 0 0 .151-.23A29.98 29.98 0 0 0 15.957.764a.25.25 0 0 0-.16-.164 11.924 11.924 0 0 0-2.21-.518.252.252 0 0 0-.215.076A22.456 22.456 0 0 0 9.61 5.38Z"
                                            />
                                        </g>
                                    </svg>
                                </div>

                                <div class="pt-3 sm:pt-5">
                                    <h2 class="text-xl font-semibold text-black dark:text-white">Vibrant Ecosystem</h2>

                                    <p class="mt-4 text-sm/relaxed">
                                        Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white dark:focus-visible:ring-[#FF2D20]">Forge</a>, <a href="https://vapor.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Vapor</a>, <a href="https://nova.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Nova</a>, <a href="https://envoyer.io" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Envoyer</a>, and <a href="https://herd.laravel.com" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Herd</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Echo</a>, <a href="https://laravel.com/docs/horizon" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="rounded-sm underline hover:text-black focus:outline-none focus-visible:ring-1 focus-visible:ring-[#FF2D20] dark:hover:text-white">Telescope</a>, and more.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </main>

                    <footer class="py-16 text-center text-sm text-black dark:text-white/70">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </footer>
                </div>
            </div>
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/admin/assign-permissions.blade.php ####

<x-app-layout>
    <div class="container mx-auto mt-8">
        <div class="card shadow-md bg-white p-6">
            <h2 class="text-2xl font-bold mb-4">Assegna Permessi a un Utente</h2>
            <form action="{{ route('admin.assign.permissions') }}" method="POST">
                @csrf
                <div class="mb-4">
                    <label for="email" class="block text-sm font-medium text-gray-700">Email Utente</label>
                    <input type="email" name="email" id="email"
                           class="input input-bordered w-full mt-1"
                           placeholder="Inserisci l'indirizzo email" required>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-3">Permessi</label>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        @foreach($permissions as $permission)
                            <label class="label cursor-pointer justify-start gap-3">
                                <input type="checkbox"
                                       name="permissions[]"
                                       value="{{ $permission->name }}"
                                       class="checkbox checkbox-primary" />
                                <span class="label-text">{{ $permission->name }}</span>
                            </label>
                        @endforeach
                    </div>
                    @error('permissions')
                        <p class="text-error text-sm mt-1">{{ $message }}</p>
                    @enderror
                </div>
                <button type="submit" class="btn btn-primary w-full">
                    Assegna Permessi
                </button>
            </form>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/admin/assign-role.blade.php ####

<x-app-layout>
<div class="container mx-auto mt-8">
    <div class="card shadow-md bg-white p-6">
        <h2 class="text-2xl font-bold mb-4">Assegna Ruolo a un Utente</h2>
        <form action="{{ route('admin.assign.role') }}" method="POST">
            @csrf
            <div class="mb-4">
                <label for="email" class="block text-sm font-medium text-gray-700">Email Utente</label>
                <input type="email" name="email" id="email"
                       class="input input-bordered w-full mt-1"
                       placeholder="Inserisci l'indirizzo email" required>
            </div>
            <div class="mb-4">
                <label for="role" class="block text-sm font-medium text-gray-700">Ruolo</label>
                <select name="role" id="role"
                        class="select select-bordered w-full mt-1">
                    @foreach($roles as $role)
                        <option value="{{ $role->name }}">{{ $role->name }}</option>
                    @endforeach
                </select>
            </div>
            <button type="submit" class="btn btn-primary w-full">
                Assegna Ruolo
            </button>
        </form>
    </div>
</div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/create.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-base-content leading-tight">
            {{ __('Create New Role') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg p-6">
                <form method="POST" action="{{ route('admin.roles.store') }}" class="space-y-6">
                    @csrf

                    <div>
                        <x-label for="name" value="{{ __('Role Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name')" required 
                                class="input input-bordered w-full mt-1" />
                        @error('name')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div>
                        <x-label value="{{ __('Permissions') }}" class="mb-3" />
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            @foreach($permissions as $permission)
                                <label class="label cursor-pointer justify-start gap-3">
                                    <input type="checkbox" 
                                           name="permissions[]" 
                                           value="{{ $permission->id }}"
                                           class="checkbox checkbox-primary"
                                           @checked(old('permissions') && in_array($permission->id, old('permissions'))) />
                                    <span class="label-text">{{ $permission->name }}</span>
                                </label>
                            @endforeach
                        </div>
                        @error('permissions')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div class="flex items-center gap-4">
                        <x-button class="btn btn-primary">
                            {{ __('Create Role') }}
                        </x-button>
                        <a href="{{ route('admin.roles.index') }}" class="btn">
                            {{ __('Cancel') }}
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout> 
#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/edit.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-base-content leading-tight">
            {{ __('Edit Role') }}: {{ $role->name }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg p-6">
                <form method="POST" action="{{ route('admin.roles.update', $role) }}" class="space-y-6">
                    @csrf
                    @method('PUT')

                    <div>
                        <x-label for="name" value="{{ __('Role Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name', $role->name)" required 
                                class="input input-bordered w-full mt-1" />
                        @error('name')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div>
                        <x-label value="{{ __('Permissions') }}" class="mb-3" />
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            @foreach($permissions as $permission)
                                <label class="label cursor-pointer justify-start gap-3">
                                    <input type="checkbox" 
                                           name="permissions[]" 
                                           value="{{ $permission->id }}"
                                           class="checkbox checkbox-primary"
                                           @checked($role->permissions->contains($permission)) />
                                    <span class="label-text">{{ $permission->name }}</span>
                                </label>
                            @endforeach
                        </div>
                        @error('permissions')
                            <p class="text-error text-sm mt-1">{{ $message }}</p>
                        @enderror
                    </div>

                    <div class="flex items-center gap-4">
                        <x-button class="btn btn-primary">
                            {{ __('Update Role') }}
                        </x-button>
                        <a href="{{ route('admin.roles.index') }}" class="btn">
                            {{ __('Cancel') }}
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout> 
#### Inizio File: /home/fabio/EGI/resources/views/admin/roles/index.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <div class="flex justify-between items-center">
            <h2 class="font-semibold text-xl text-base-content leading-tight">
                {{ __('Roles & Permissions Management') }}
            </h2>
            <a href="{{ route('admin.roles.create') }}" class="btn btn-primary btn-sm gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                </svg>
                {{ __('New Role') }}
            </a>
        </div>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-base-100 shadow-xl rounded-lg overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="table table-zebra w-full">
                        <!-- head -->
                        <thead class="bg-base-200 text-base-content">
                            <tr>
                                <th class="bg-base-200">Role</th>
                                <th class="bg-base-200">Permissions</th>
                                <th class="bg-base-200 w-24">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach($roles as $role)
                            <tr class="hover">
                                <td class="font-medium">
                                    <div class="flex items-center gap-2">
                                        <span class="badge badge-neutral">{{ $role->name }}</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="flex flex-wrap gap-1">
                                        @foreach($role->permissions as $permission)
                                            <span class="badge badge-ghost badge-sm">
                                                {{ str_replace('_', ' ', $permission->name) }}
                                            </span>
                                        @endforeach
                                    </div>
                                </td>
                                <td>
                                    <div class="flex items-center gap-2">
                                        <a href="{{ route('admin.roles.edit', $role) }}"
                                           class="btn btn-ghost btn-sm">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                                <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                            </svg>
                                        </a>
                                        @unless($role->name === 'superadmin')
                                        <form method="POST" action="{{ route('admin.roles.destroy', $role) }}"
                                              onsubmit="return confirm('Are you sure you want to delete this role?');"
                                              class="inline">
                                            @csrf
                                            @method('DELETE')
                                            <button type="submit" class="btn btn-ghost btn-sm text-error">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                                </svg>
                                            </button>
                                        </form>
                                        @endunless
                                    </div>
                                </td>
                            </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/api/api-token-manager.blade.php ####

<div>
    <!-- Generate API Token -->
    <x-form-section submit="createApiToken">
        <x-slot name="title">
            {{ __('Create API Token') }}
        </x-slot>

        <x-slot name="description">
            {{ __('API tokens allow third-party services to authenticate with our application on your behalf.') }}
        </x-slot>

        <x-slot name="form">
            <!-- Token Name -->
            <div class="col-span-6 sm:col-span-4">
                <x-label for="name" value="{{ __('Token Name') }}" />
                <x-input id="name" type="text" class="mt-1 block w-full" wire:model="createApiTokenForm.name" autofocus />
                <x-input-error for="name" class="mt-2" />
            </div>

            <!-- Token Permissions -->
            @if (Laravel\Jetstream\Jetstream::hasPermissions())
                <div class="col-span-6">
                    <x-label for="permissions" value="{{ __('Permissions') }}" />

                    <div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4">
                        @foreach (Laravel\Jetstream\Jetstream::$permissions as $permission)
                            <label class="flex items-center">
                                <x-checkbox wire:model="createApiTokenForm.permissions" :value="$permission"/>
                                <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ $permission }}</span>
                            </label>
                        @endforeach
                    </div>
                </div>
            @endif
        </x-slot>

        <x-slot name="actions">
            <x-action-message class="me-3" on="created">
                {{ __('Created.') }}
            </x-action-message>

            <x-button>
                {{ __('Create') }}
            </x-button>
        </x-slot>
    </x-form-section>

    @if ($this->user->tokens->isNotEmpty())
        <x-section-border />

        <!-- Manage API Tokens -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Manage API Tokens') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('You may delete any of your existing tokens if they are no longer needed.') }}
                </x-slot>

                <!-- API Token List -->
                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($this->user->tokens->sortBy('name') as $token)
                            <div class="flex items-center justify-between">
                                <div class="break-all dark:text-white">
                                    {{ $token->name }}
                                </div>

                                <div class="flex items-center ms-2">
                                    @if ($token->last_used_at)
                                        <div class="text-sm text-gray-400">
                                            {{ __('Last used') }} {{ $token->last_used_at->diffForHumans() }}
                                        </div>
                                    @endif

                                    @if (Laravel\Jetstream\Jetstream::hasPermissions())
                                        <button class="cursor-pointer ms-6 text-sm text-gray-400 underline" wire:click="manageApiTokenPermissions({{ $token->id }})">
                                            {{ __('Permissions') }}
                                        </button>
                                    @endif

                                    <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="confirmApiTokenDeletion({{ $token->id }})">
                                        {{ __('Delete') }}
                                    </button>
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    <!-- Token Value Modal -->
    <x-dialog-modal wire:model.live="displayingToken">
        <x-slot name="title">
            {{ __('API Token') }}
        </x-slot>

        <x-slot name="content">
            <div>
                {{ __('Please copy your new API token. For your security, it won\'t be shown again.') }}
            </div>

            <x-input x-ref="plaintextToken" type="text" readonly :value="$plainTextToken"
                class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500 w-full break-all"
                autofocus autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"
                @showing-token-modal.window="setTimeout(() => $refs.plaintextToken.select(), 250)"
            />
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$set('displayingToken', false)" wire:loading.attr="disabled">
                {{ __('Close') }}
            </x-secondary-button>
        </x-slot>
    </x-dialog-modal>

    <!-- API Token Permissions Modal -->
    <x-dialog-modal wire:model.live="managingApiTokenPermissions">
        <x-slot name="title">
            {{ __('API Token Permissions') }}
        </x-slot>

        <x-slot name="content">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                @foreach (Laravel\Jetstream\Jetstream::$permissions as $permission)
                    <label class="flex items-center">
                        <x-checkbox wire:model="updateApiTokenForm.permissions" :value="$permission"/>
                        <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ $permission }}</span>
                    </label>
                @endforeach
            </div>
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$set('managingApiTokenPermissions', false)" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-button class="ms-3" wire:click="updateApiToken" wire:loading.attr="disabled">
                {{ __('Save') }}
            </x-button>
        </x-slot>
    </x-dialog-modal>

    <!-- Delete Token Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingApiTokenDeletion">
        <x-slot name="title">
            {{ __('Delete API Token') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to delete this API token?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingApiTokenDeletion')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="deleteApiToken" wire:loading.attr="disabled">
                {{ __('Delete') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/api/index.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('API Tokens') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('api.api-token-manager')
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/confirm-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('This is a secure area of the application. Please confirm your password before continuing.') }}
        </div>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.confirm') }}">
            @csrf

            <div>
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="current-password" autofocus />
            </div>

            <div class="flex justify-end mt-4">
                <x-button class="ms-4">
                    {{ __('Confirm') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/forgot-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.') }}
        </div>

        @session('status')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ $value }}
            </div>
        @endsession

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.email') }}">
            @csrf

            <div class="block">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            </div>

            <div class="flex items-center justify-end mt-4">
                <x-button>
                    {{ __('Email Password Reset Link') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/login.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        @session('status')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ $value }}
            </div>
        @endsession

        <form method="POST" action="{{ route('login') }}">
            @csrf

            <div>
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="current-password" />
            </div>

            <div class="block mt-4">
                <label for="remember_me" class="flex items-center">
                    <x-checkbox id="remember_me" name="remember" />
                    <span class="ms-2 text-sm text-gray-600 dark:text-gray-400">{{ __('Remember me') }}</span>
                </label>
            </div>

            <div class="flex items-center justify-end mt-4">
                @if (Route::has('password.request'))
                    <a class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" href="{{ route('password.request') }}">
                        {{ __('Forgot your password?') }}
                    </a>
                @endif

                <x-button class="ms-4">
                    {{ __('Log in') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/register.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('register') }}">
            @csrf

            <div>
                <x-label for="name" value="{{ __('Name') }}" />
                <x-input id="name" class="block mt-1 w-full" type="text" name="name" :value="old('name')" required autofocus autocomplete="name" />
            </div>

            <div class="mt-4">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            </div>

            <div class="mt-4">
                <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                <x-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" required autocomplete="new-password" />
            </div>

            @if (Laravel\Jetstream\Jetstream::hasTermsAndPrivacyPolicyFeature())
                <div class="mt-4">
                    <x-label for="terms">
                        <div class="flex items-center">
                            <x-checkbox name="terms" id="terms" required />

                            <div class="ms-2">
                                {!! __('I agree to the :terms_of_service and :privacy_policy', [
                                        'terms_of_service' => '<a target="_blank" href="'.route('terms.show').'" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800">'.__('Terms of Service').'</a>',
                                        'privacy_policy' => '<a target="_blank" href="'.route('policy.show').'" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800">'.__('Privacy Policy').'</a>',
                                ]) !!}
                            </div>
                        </div>
                    </x-label>
                </div>
            @endif

            <div class="flex items-center justify-end mt-4">
                <a class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" href="{{ route('login') }}">
                    {{ __('Already registered?') }}
                </a>

                <x-button class="ms-4">
                    {{ __('Register') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/reset-password.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <x-validation-errors class="mb-4" />

        <form method="POST" action="{{ route('password.update') }}">
            @csrf

            <input type="hidden" name="token" value="{{ $request->route('token') }}">

            <div class="block">
                <x-label for="email" value="{{ __('Email') }}" />
                <x-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $request->email)" required autofocus autocomplete="username" />
            </div>

            <div class="mt-4">
                <x-label for="password" value="{{ __('Password') }}" />
                <x-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            </div>

            <div class="mt-4">
                <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                <x-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" required autocomplete="new-password" />
            </div>

            <div class="flex items-center justify-end mt-4">
                <x-button>
                    {{ __('Reset Password') }}
                </x-button>
            </div>
        </form>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/two-factor-challenge.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div x-data="{ recovery: false }">
            <div class="mb-4 text-sm text-gray-600 dark:text-gray-400" x-show="! recovery">
                {{ __('Please confirm access to your account by entering the authentication code provided by your authenticator application.') }}
            </div>

            <div class="mb-4 text-sm text-gray-600 dark:text-gray-400" x-cloak x-show="recovery">
                {{ __('Please confirm access to your account by entering one of your emergency recovery codes.') }}
            </div>

            <x-validation-errors class="mb-4" />

            <form method="POST" action="{{ route('two-factor.login') }}">
                @csrf

                <div class="mt-4" x-show="! recovery">
                    <x-label for="code" value="{{ __('Code') }}" />
                    <x-input id="code" class="block mt-1 w-full" type="text" inputmode="numeric" name="code" autofocus x-ref="code" autocomplete="one-time-code" />
                </div>

                <div class="mt-4" x-cloak x-show="recovery">
                    <x-label for="recovery_code" value="{{ __('Recovery Code') }}" />
                    <x-input id="recovery_code" class="block mt-1 w-full" type="text" name="recovery_code" x-ref="recovery_code" autocomplete="one-time-code" />
                </div>

                <div class="flex items-center justify-end mt-4">
                    <button type="button" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 underline cursor-pointer"
                                    x-show="! recovery"
                                    x-on:click="
                                        recovery = true;
                                        $nextTick(() => { $refs.recovery_code.focus() })
                                    ">
                        {{ __('Use a recovery code') }}
                    </button>

                    <button type="button" class="text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 underline cursor-pointer"
                                    x-cloak
                                    x-show="recovery"
                                    x-on:click="
                                        recovery = false;
                                        $nextTick(() => { $refs.code.focus() })
                                    ">
                        {{ __('Use an authentication code') }}
                    </button>

                    <x-button class="ms-4">
                        {{ __('Log in') }}
                    </x-button>
                </div>
            </form>
        </div>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/auth/verify-email.blade.php ####

<x-guest-layout>
    <x-authentication-card>
        <x-slot name="logo">
            <x-authentication-card-logo />
        </x-slot>

        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
            {{ __('Before continuing, could you verify your email address by clicking on the link we just emailed to you? If you didn\'t receive the email, we will gladly send you another.') }}
        </div>

        @if (session('status') == 'verification-link-sent')
            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                {{ __('A new verification link has been sent to the email address you provided in your profile settings.') }}
            </div>
        @endif

        <div class="mt-4 flex items-center justify-between">
            <form method="POST" action="{{ route('verification.send') }}">
                @csrf

                <div>
                    <x-button type="submit">
                        {{ __('Resend Verification Email') }}
                    </x-button>
                </div>
            </form>

            <div>
                <a
                    href="{{ route('profile.show') }}"
                    class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800"
                >
                    {{ __('Edit Profile') }}</a>

                <form method="POST" action="{{ route('logout') }}" class="inline">
                    @csrf

                    <button type="submit" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 ms-2">
                        {{ __('Log Out') }}
                    </button>
                </form>
            </div>
        </div>
    </x-authentication-card>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/components/action-message.blade.php ####

@props(['on'])

<div x-data="{ shown: false, timeout: null }"
    x-init="@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, 2000); })"
    x-show.transition.out.opacity.duration.1500ms="shown"
    x-transition:leave.opacity.duration.1500ms
    style="display: none;"
    {{ $attributes->merge(['class' => 'text-sm text-gray-600 dark:text-gray-400']) }}>
    {{ $slot->isEmpty() ? 'Saved.' : $slot }}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/action-section.blade.php ####

<div {{ $attributes->merge(['class' => 'md:grid md:grid-cols-3 md:gap-6']) }}>
    <x-section-title>
        <x-slot name="title">{{ $title }}</x-slot>
        <x-slot name="description">{{ $description }}</x-slot>
    </x-section-title>

    <div class="mt-5 md:mt-0 md:col-span-2">
        <div class="px-4 py-5 sm:p-6 bg-white dark:bg-gray-800 shadow sm:rounded-lg">
            {{ $content }}
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/application-logo.blade.php ####

{{-- <svg viewBox="0 0 317 48" fill="none" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
  <path d="M74.09 30.04V13h-4.14v21H82.1v-3.96h-8.01zM95.379 19v1.77c-1.08-1.35-2.7-2.19-4.89-2.19-3.99 0-7.29 3.45-7.29 7.92s3.3 7.92 7.29 7.92c2.19 0 3.81-.84 4.89-2.19V34h3.87V19h-3.87zm-4.17 11.73c-2.37 0-4.14-1.71-4.14-4.23 0-2.52 1.77-4.23 4.14-4.23 2.4 0 4.17 1.71 4.17 4.23 0 2.52-1.77 4.23-4.17 4.23zM106.628 21.58V19h-3.87v15h3.87v-7.17c0-3.15 2.55-4.05 4.56-3.81V18.7c-1.89 0-3.78.84-4.56 2.88zM124.295 19v1.77c-1.08-1.35-2.7-2.19-4.89-2.19-3.99 0-7.29 3.45-7.29 7.92s3.3 7.92 7.29 7.92c2.19 0 3.81-.84 4.89-2.19V34h3.87V19h-3.87zm-4.17 11.73c-2.37 0-4.14-1.71-4.14-4.23 0-2.52 1.77-4.23 4.14-4.23 2.4 0 4.17 1.71 4.17 4.23 0 2.52-1.77 4.23-4.17 4.23zM141.544 19l-3.66 10.5-3.63-10.5h-4.26l5.7 15h4.41l5.7-15h-4.26zM150.354 28.09h11.31c.09-.51.15-1.02.15-1.59 0-4.41-3.15-7.92-7.59-7.92-4.71 0-7.92 3.45-7.92 7.92s3.18 7.92 8.22 7.92c2.88 0 5.13-1.17 6.54-3.21l-3.12-1.8c-.66.87-1.86 1.5-3.36 1.5-2.04 0-3.69-.84-4.23-2.82zm-.06-3c.45-1.92 1.86-3.03 3.93-3.03 1.62 0 3.24.87 3.72 3.03h-7.65zM164.516 34h3.87V12.1h-3.87V34zM185.248 34.36c3.69 0 6.9-2.01 6.9-6.3V13h-2.1v15.06c0 3.03-2.07 4.26-4.8 4.26-2.19 0-3.93-.78-4.62-2.61l-1.77 1.05c1.05 2.43 3.57 3.6 6.39 3.6zM203.124 18.64c-4.65 0-7.83 3.45-7.83 7.86 0 4.53 3.24 7.86 7.98 7.86 3.03 0 5.34-1.41 6.6-3.45l-1.74-1.02c-.81 1.44-2.46 2.55-4.83 2.55-3.18 0-5.55-1.89-5.97-4.95h13.17c.03-.3.06-.63.06-.93 0-4.11-2.85-7.92-7.44-7.92zm0 1.92c2.58 0 4.98 1.71 5.4 5.01h-11.19c.39-2.94 2.64-5.01 5.79-5.01zM221.224 20.92V19h-4.32v-4.2l-1.98.6V19h-3.15v1.92h3.15v9.09c0 3.6 2.25 4.59 6.3 3.99v-1.74c-2.91.12-4.32.33-4.32-2.25v-9.09h4.32zM225.176 22.93c0-1.62 1.59-2.37 3.15-2.37 1.44 0 2.97.57 3.6 2.1l1.65-.96c-.87-1.86-2.79-3.06-5.25-3.06-3 0-5.13 1.89-5.13 4.29 0 5.52 8.76 3.39 8.76 7.11 0 1.77-1.68 2.4-3.45 2.4-2.01 0-3.57-.99-4.11-2.52l-1.68.99c.75 1.92 2.79 3.45 5.79 3.45 3.21 0 5.43-1.77 5.43-4.32 0-5.52-8.76-3.39-8.76-7.11zM244.603 20.92V19h-4.32v-4.2l-1.98.6V19h-3.15v1.92h3.15v9.09c0 3.6 2.25 4.59 6.3 3.99v-1.74c-2.91.12-4.32.33-4.32-2.25v-9.09h4.32zM249.883 21.49V19h-1.98v15h1.98v-8.34c0-3.72 2.34-4.98 4.74-4.98v-1.92c-1.92 0-3.69.63-4.74 2.73zM263.358 18.64c-4.65 0-7.83 3.45-7.83 7.86 0 4.53 3.24 7.86 7.98 7.86 3.03 0 5.34-1.41 6.6-3.45l-1.74-1.02c-.81 1.44-2.46 2.55-4.83 2.55-3.18 0-5.55-1.89-5.97-4.95h13.17c.03-.3.06-.63.06-.93 0-4.11-2.85-7.92-7.44-7.92zm0 1.92c2.58 0 4.98 1.71 5.4 5.01h-11.19c.39-2.94 2.64-5.01 5.79-5.01zM286.848 19v2.94c-1.26-2.01-3.39-3.3-6.06-3.3-4.23 0-7.74 3.42-7.74 7.86s3.51 7.86 7.74 7.86c2.67 0 4.8-1.29 6.06-3.3V34h1.98V19h-1.98zm-5.91 13.44c-3.33 0-5.91-2.61-5.91-5.94 0-3.33 2.58-5.94 5.91-5.94s5.91 2.61 5.91 5.94c0 3.33-2.58 5.94-5.91 5.94zM309.01 18.64c-1.92 0-3.75.87-4.86 2.73-.84-1.74-2.46-2.73-4.56-2.73-1.8 0-3.42.72-4.59 2.55V19h-1.98v15H295v-8.31c0-3.72 2.16-5.13 4.32-5.13 2.13 0 3.51 1.41 3.51 4.08V34h1.98v-8.31c0-3.72 1.86-5.13 4.17-5.13 2.13 0 3.66 1.41 3.66 4.08V34h1.98v-9.36c0-3.75-2.31-6-5.61-6z" class="fill-black"/>
  <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
  <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
</svg> --}}
<img class ="h-24 w-24" src= '{{ config('app.logo_04') }}'>

#### Inizio File: /home/fabio/EGI/resources/views/components/application-mark.blade.php ####

<svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
  <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
  <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
</svg>

#### Inizio File: /home/fabio/EGI/resources/views/components/auth-session-status.blade.php ####

@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'alert alert-success']) }}>
        {{ $status }}
    </div>
@endif

#### Inizio File: /home/fabio/EGI/resources/views/components/authentication-card-logo.blade.php ####

<a href="/">
    <svg class="size-16" viewbox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.395 44.428C4.557 40.198 0 32.632 0 24 0 10.745 10.745 0 24 0a23.891 23.891 0 0113.997 4.502c-.2 17.907-11.097 33.245-26.602 39.926z" fill="#6875F5"/>
        <path d="M14.134 45.885A23.914 23.914 0 0024 48c13.255 0 24-10.745 24-24 0-3.516-.756-6.856-2.115-9.866-4.659 15.143-16.608 27.092-31.75 31.751z" fill="#6875F5"/>
    </svg>
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/authentication-card.blade.php ####

<div class="min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100 dark:bg-gray-900">
    <div>
        {{ $logo }}
    </div>

    <div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg">
        {{ $slot }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/back-button.blade.php ####

<div>
    <a href="{{ url()->previous() }}"
        class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium mb-4">
         <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
         </svg>
         <span>{{ $label }}</span>
     </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/banner.blade.php ####

@props(['style' => session('flash.bannerStyle', 'success'), 'message' => session('flash.banner')])

<div x-data="{{ json_encode(['show' => true, 'style' => $style, 'message' => $message]) }}"
    :class="{ 'bg-indigo-500': style == 'success', 'bg-red-700': style == 'danger', 'bg-yellow-500': style == 'warning', 'bg-gray-500': style != 'success' && style != 'danger' && style != 'warning'}"
            style="display: none;"
            x-show="show && message"
            x-on:banner-message.window="
                style = event.detail.style;
                message = event.detail.message;
                show = true;
            ">
    <div class="max-w-screen-xl mx-auto py-2 px-3 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between flex-wrap">
            <div class="w-0 flex-1 flex items-center min-w-0">
                <span class="flex p-2 rounded-lg" :class="{ 'bg-indigo-600': style == 'success', 'bg-red-600': style == 'danger', 'bg-yellow-600': style == 'warning' }">
                    <svg x-show="style == 'success'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <svg x-show="style == 'danger'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z" />
                    </svg>
                    <svg x-show="style != 'success' && style != 'danger' && style != 'warning'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />
                    </svg>
                    <svg x-show="style == 'warning'" class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="1.5" fill="none" />
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4v.01 0 0 " />
                    </svg>
                </span>

                <p class="ms-3 font-medium text-sm text-white truncate" x-text="message"></p>
            </div>

            <div class="shrink-0 sm:ms-3">
                <button
                    type="button"
                    class="-me-1 flex p-2 rounded-md focus:outline-none sm:-me-2 transition"
                    :class="{ 'hover:bg-indigo-600 focus:bg-indigo-600': style == 'success', 'hover:bg-red-600 focus:bg-red-600': style == 'danger', 'hover:bg-yellow-600 focus:bg-yellow-600': style == 'warning'}"
                    aria-label="Dismiss"
                    x-on:click="show = false">
                    <svg class="size-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/button.blade.php ####

<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-gray-800 dark:bg-gray-200 border border-transparent rounded-md font-semibold text-xs text-white dark:text-gray-800 uppercase tracking-widest hover:bg-gray-700 dark:hover:bg-white focus:bg-gray-700 dark:focus:bg-white active:bg-gray-900 dark:active:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/checkbox.blade.php ####

<input type="checkbox" {!! $attributes->merge(['class' => 'rounded dark:bg-gray-900 border-gray-300 dark:border-gray-700 text-indigo-600 shadow-sm focus:ring-indigo-500 dark:focus:ring-indigo-600 dark:focus:ring-offset-gray-800']) !!}>

#### Inizio File: /home/fabio/EGI/resources/views/components/collection-card.blade.php ####

@props(['id', 'editable' => false, 'imageType' => 'card', 'show_save_button' => true])

<div x-data="{ preview: null }" class="bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-shadow duration-300 overflow-hidden flex flex-col h-full">
    <!-- Immagine o Placeholder -->
    <figure class="h-48 w-full overflow-hidden bg-gray-900 flex items-center justify-center cursor-pointer">
        <!-- Anteprima dell'immagine caricata con Alpine.js -->
        <template x-if="preview">
            <img
                :src="preview"
                alt="Preview"
                class="w-full h-full object-contain transition-transform duration-300 group-hover:scale-105"
            >
        </template>

        @php
            $imagePath = $imageType === 'card' ? $collection->image_card : $collection->image_EGI;
        @endphp

        <!-- Immagine salvata se esiste, nascosta se c'è l'anteprima -->
        @if($imagePath)
            <img
                x-show="!preview"
                src="{{ $imagePath }}"
                alt="{{ $collection->collection_name }}"
                class="w-full h-full object-contain transition-transform duration-300 group-hover:scale-105"
            >
        @endif

        <!-- Icona della fotocamera se non c'è immagine -->
        @if(!$imagePath)
            <div
                class="h-full w-full flex items-center justify-center bg-gradient-to-r from-blue-500 to-purple-600"
                @if($editable) onclick="document.getElementById('image-{{ $imageType }}-{{ $id }}').click();" @endif
            >
                <x-repo-icon name="camera" class="w-20 h-20 text-white opacity-50" />
            </div>
        @endif
    </figure>

    <!-- Input File per il Caricamento dell’Immagine -->
    <input
        type="file"
        wire:model="uploadedImage"
        id="image-{{ $imageType }}-{{ $id }}"
        class="hidden"
        accept="image/*"
        @change="preview = URL.createObjectURL($event.target.files[0])"
    >

    <!-- Contenuto della Card -->
    <div class="p-4 flex flex-col justify-between flex-grow">
        <h2 class="text-xl font-bold text-white mb-2">
            {{ $collection->collection_name }}
        </h2>
        <p class="text-gray-400 text-sm line-clamp-2 mb-4">
            {{ Str::limit($collection->description, 100) }}
        </p>

        <!-- Badge e ID -->
        <div class="flex justify-between items-center mt-auto">
            <span class="badge bg-gradient-to-r from-purple-500 to-blue-500 text-white px-4 py-3 rounded-full">
                EGI
            </span>
            <span class="text-xs text-gray-500">ID: {{ $collection->id }}</span>
        </div>

        <!-- Pulsanti di Azione -->
        <div class="flex justify-end space-x-2 mt-4">
            @if($show_save_button)
                <a href="{{ route('collections.edit', ['id' => $collection->id]) }}" class="btn btn-primary btn-sm">
                    {{ __('collection.open_collection') }}
                </a>
            @endif
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/confirmation-modal.blade.php ####

@props(['id' => null, 'maxWidth' => null])

<x-modal :id="$id" :maxWidth="$maxWidth" {{ $attributes }}>
    <div class="bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
            <div class="mx-auto shrink-0 flex items-center justify-center size-12 rounded-full bg-red-100 sm:mx-0 sm:size-10">
                <svg class="size-6 text-red-600 dark:text-red-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
                </svg>
            </div>

            <div class="mt-3 text-center sm:mt-0 sm:ms-4 sm:text-start">
                <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                    {{ $title }}
                </h3>

                <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
                    {{ $content }}
                </div>
            </div>
        </div>
    </div>

    <div class="flex flex-row justify-end px-6 py-4 bg-gray-100 dark:bg-gray-800 text-end">
        {{ $footer }}
    </div>
</x-modal>

#### Inizio File: /home/fabio/EGI/resources/views/components/confirms-password.blade.php ####

@props(['title' => __('Confirm Password'), 'content' => __('For your security, please confirm your password to continue.'), 'button' => __('Confirm')])

@php
    $confirmableId = md5($attributes->wire('then'));
@endphp

<span
    {{ $attributes->wire('then') }}
    x-data
    x-ref="span"
    x-on:click="$wire.startConfirmingPassword('{{ $confirmableId }}')"
    x-on:password-confirmed.window="setTimeout(() => $event.detail.id === '{{ $confirmableId }}' && $refs.span.dispatchEvent(new CustomEvent('then', { bubbles: false })), 250);"
>
    {{ $slot }}
</span>

@once
<x-dialog-modal wire:model.live="confirmingPassword">
    <x-slot name="title">
        {{ $title }}
    </x-slot>

    <x-slot name="content">
        {{ $content }}

        <div class="mt-4" x-data="{}" x-on:confirming-password.window="setTimeout(() => $refs.confirmable_password.focus(), 250)">
            <x-input type="password" class="mt-1 block w-3/4" placeholder="{{ __('Password') }}" autocomplete="current-password"
                        x-ref="confirmable_password"
                        wire:model="confirmablePassword"
                        wire:keydown.enter="confirmPassword" />

            <x-input-error for="confirmable_password" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="footer">
        <x-secondary-button wire:click="stopConfirmingPassword" wire:loading.attr="disabled">
            {{ __('Cancel') }}
        </x-secondary-button>

        <x-button class="ms-3" dusk="confirm-password-button" wire:click="confirmPassword" wire:loading.attr="disabled">
            {{ $button }}
        </x-button>
    </x-slot>
</x-dialog-modal>
@endonce

#### Inizio File: /home/fabio/EGI/resources/views/components/danger-button.blade.php ####

<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/dialog-modal.blade.php ####

@props(['id' => null, 'maxWidth' => null])

<x-modal :id="$id" :maxWidth="$maxWidth" {{ $attributes }}>
    <div class="px-6 py-4">
        <div class="text-lg font-medium text-gray-900 dark:text-gray-100">
            {{ $title }}
        </div>

        <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
            {{ $content }}
        </div>
    </div>

    <div class="flex flex-row justify-end px-6 py-4 bg-gray-100 dark:bg-gray-800 text-end">
        {{ $footer }}
    </div>
</x-modal>

#### Inizio File: /home/fabio/EGI/resources/views/components/dropdown-link.blade.php ####

<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:bg-gray-100 dark:focus:bg-gray-800 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/dropdown.blade.php ####

@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white dark:bg-gray-700', 'dropdownClasses' => ''])

@php
$alignmentClasses = match ($align) {
    'left' => 'ltr:origin-top-left rtl:origin-top-right start-0',
    'top' => 'origin-top',
    'none', 'false' => '',
    default => 'ltr:origin-top-right rtl:origin-top-left end-0',
};

$width = match ($width) {
    '48' => 'w-48',
    '60' => 'w-60',
    default => 'w-48',
};
@endphp

<div class="relative" x-data="{ open: false }" @click.away="open = false" @close.stop="open = false">
    <div @click="open = ! open">
        {{ $trigger }}
    </div>

    <div x-show="open"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="transform opacity-0 scale-95"
            x-transition:enter-end="transform opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="transform opacity-100 scale-100"
            x-transition:leave-end="transform opacity-0 scale-95"
            class="absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }} {{ $dropdownClasses }}"
            style="display: none;"
            @click="open = false">
        <div class="rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}">
            {{ $content }}
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/form-button.blade.php ####

<button
    type="{{ $type }}"
    {{ $attributes->merge([
        'class' => 'btn btn-' . $style .
                  ($size ? ' btn-' . $size : '') .
                  ' transition-transform duration-150 transform shadow-lg' .
                  ' active:shadow-md active:translate-y-1 hover:scale-105' .
                  ' focus:outline-none focus:ring-2 focus:ring-' . $style . ' focus:ring-opacity-50' .
                  ' ' . $class
    ]) }}
>
    {{ $slot }}
</button> 

#### Inizio File: /home/fabio/EGI/resources/views/components/form-input-icon.blade.php ####

@props([
    'type' => 'text',
    'label' => '',
    'model' => '',
    'id' => '',
    'required' => false,
    'class' => '',
    'placeholder' => '',
    'icon' => '',
    'iconPosition' => 'right',
    'value' => ''
])

<div>
    @if($label)
        <label for="{{ $id }}" class="block mb-1 text-sm font-medium">{{ $label }}</label>
    @endif

    <label class="input input-bordered flex items-center gap-2 {{ $class }}">
        @if($iconPosition === 'left')
            @include("components.icons.$icon")
        @endif

        <input
            type="{{ $type }}"
            @if($model) wire:model="{{ $model }}" @endif
            id="{{ $id }}"
            class="grow"
            placeholder="{{ $placeholder }}"
            @if($value) value="{{ $value }}" @endif
            {{ $required ? 'required' : '' }}
        >

        @if($iconPosition === 'right')
            @include("components.icons.$icon")
        @endif
    </label>

    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div> 

#### Inizio File: /home/fabio/EGI/resources/views/components/form-input.blade.php ####

@props([
    'type' => 'text',
    'label',
    'model',
    'datatip',
    'id',
    'required' => false,
    'width_label' => '',
    'width_input' => '',
    'placeholder' => '',
    'style' => 'primary',
    'icon' => null,

])

<div>
    <label class="text-sm label">{{ $label }}</label>
    <label
        class="for={{ $id }} input-{{ $style }} {{ $width_label }} input input-bordered flex items-center gap-2 text-sm w-full"
    >
        @if ($iconHtml)
            <div>{!! $iconHtml !!}</div>
        @endif

        <!-- Div tooltip che si comporta da "contenitore" flessibile -->
        <div class="tooltip tooltip-info flex-1 min-w-0" data-tip="{{ $datatip }}">
            <input
                type="{{ $type }}"
                wire:model="{{ $model }}"
                id="{{ $id }}"
                class="border-0 border-e-orange-800 focus:border-transparent focus:ring-0 {{ $width_input }} text-sm w-full"
                placeholder="{{ $placeholder }}" {{ $required ? 'required' : '' }}
            >
        </div>
    </label>

    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div>


#### Inizio File: /home/fabio/EGI/resources/views/components/form-section.blade.php ####

@props(['submit'])

<div {{ $attributes->merge(['class' => 'md:grid md:grid-cols-3 md:gap-6']) }}>
    <x-section-title>
        <x-slot name="title">{{ $title }}</x-slot>
        <x-slot name="description">{{ $description }}</x-slot>
    </x-section-title>

    <div class="mt-5 md:mt-0 md:col-span-2">
        <form wire:submit="{{ $submit }}">
            <div class="px-4 py-5 bg-white dark:bg-gray-800 sm:p-6 shadow {{ isset($actions) ? 'sm:rounded-tl-md sm:rounded-tr-md' : 'sm:rounded-md' }}">
                <div class="grid grid-cols-6 gap-6">
                    {{ $form }}
                </div>
            </div>

            @if (isset($actions))
                <div class="flex items-center justify-end px-4 py-3 bg-gray-50 dark:bg-gray-800 text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">
                    {{ $actions }}
                </div>
            @endif
        </form>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/form-select.blade.php ####

@props([
    'label',
    'model',
    'id',
    'options' => [],
    'required' => false,
    'class' => '',
    'style' => 'primary', // primary, secondary, accent, info, success, warning, error
    'maxWidth' => 'xs' // xs, sm, md, lg, xl
])

<div>
    <label for="{{ $id }}" class="label text-sm">{{ $label }}</label>
    <select
        wire:model="{{ $model }}"
        id="{{ $id }}"
        class="select select-{{ $style }} max-w-{{ $maxWidth }} {{ $class }}"
        {{ $required ? 'required' : '' }}
    >
        {{ $slot }}
    </select>
    @error($model)
        <span class="text-xs text-red-500">{{ $message }}</span>
    @enderror
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/email.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z" />
    <path
        d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/help.blade.php ####


#### Inizio File: /home/fabio/EGI/resources/views/components/icons/password.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        fill-rule="evenodd"
        d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
        clip-rule="evenodd" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/search.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        fill-rule="evenodd"
        d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
        clip-rule="evenodd" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/icons/user.blade.php ####

<svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 16 16"
    fill="currentColor"
    class="w-4 h-4 opacity-70">
    <path
        d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM12.735 14c.618 0 1.093-.561.872-1.139a6.002 6.002 0 0 0-11.215 0c-.22.578.254 1.139.872 1.139h9.47Z" />
</svg> 

#### Inizio File: /home/fabio/EGI/resources/views/components/image-uploader.blade.php ####

@props([
    'model',
    'id',
    'label',
    'image',
    'removeMethod' => 'removeImage',
])


<div class="items-center form-control">
    <label class="label">
        <span class="font-semibold label-text">{{ $label }}</span>
    </label>

    {{--
        Debug. Vista su url temporaneo dell'immagine caricata
        @if ($this->$model instanceof Illuminate\Http\UploadedFile)
            @dump($this->$model->temporaryUrl())
        @endif
    --}}

    <div class="tooltip" data-tip="Click to upload image">

            <div class="avatar">
                <div class="w-24 border rounded-full cursor-pointer border-base-300 hover:border-primary"
                @if($image === '' || $image === null)
                    onclick="document.getElementById('{{ $id }}').click();"
                @endif
                >

                    @if($image !== '' && $image !== null )
                        <img src="{{ Storage::url($image) }}" class="object-cover w-full h-full rounded-full" title="{{ $image }}">
                    @else
                        @if ($this->$model instanceof Illuminate\Http\UploadedFile)
                            <img src="{{ $this->$model->temporaryUrl() }}" class="object-cover w-full h-full rounded-full">
                        @else
                            <div class="flex items-center justify-center h-full text-base-content">
                                @if ($iconHtml)
                                <x-icon name="camera" class="w-8 h-8 opacity-50" />
                                @endif
                            </div>
                        @endif
                    @endif
                </div>
            </div>
    </div>

    <input
        type="file"
        wire:model={{ $model }}
        id="{{ $id }}"
        class="hidden"
        accept="image/*"
    >

    @error($model)
        <span class="mt-1 text-sm text-error">messaggio {{ $message }}</span>
    @enderror

    @if ($image !== '' && $image !== null )
        <button
            type="button"
            wire:click="{{ $removeMethod }}( '{{ $id }}' )"
            onclick="document.getElementById('{{ $id }}').value = '';"
            class="mt-3 btn btn-error"
        >
            {{ __('label.delete') }}
        </button>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/input-error.blade.php ####

@props(['for'])

@error($for)
    <p {{ $attributes->merge(['class' => 'text-sm text-red-600 dark:text-red-400']) }}>{{ $message }}</p>
@enderror

#### Inizio File: /home/fabio/EGI/resources/views/components/input.blade.php ####

@props(['disabled' => false])

<input {{ $disabled ? 'disabled' : '' }} {!! $attributes->merge(['class' => 'border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm']) !!}>

#### Inizio File: /home/fabio/EGI/resources/views/components/label.blade.php ####

@props(['value'])

<label {{ $attributes->merge(['class' => 'block font-medium text-sm text-gray-700 dark:text-gray-300']) }}>
    {{ $value ?? $slot }}
</label>

#### Inizio File: /home/fabio/EGI/resources/views/components/layouts/app.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <title>{{ config('app.name', 'Florence EGI') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
        <script>console.log('resources/views/components/layouts/app.blade.php');</script>

        {{-- Icone di MaterialIcons --}}
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

        <!-- Styles -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"/>
    </head>
    <body class="font-sans antialiased bg-base-200">
        <div class="drawer lg:drawer-open">
            <input id="main-drawer" type="checkbox" class="drawer-toggle" />

            <!-- Page Content -->
            <div class="flex flex-col min-h-screen drawer-content">
                <!-- Navbar -->
                <livewire:navigation-menu />

                <!-- Page Heading -->
                @if (isset($header))
                    <header class="shadow bg-base-100">
                        <div class="px-4 py-6 mx-auto max-w-7xl sm:px-6 lg:px-8">
                            {{ $header }}
                        </div>
                    </header>
                @endif

                <!-- Main Content -->
                <main class="flex-1 p-4 lg:p-8">
                    {{ $slot }}
                </main>
            </div>

            <!-- Sidebar -->
            <livewire:sidebar />

            @stack('modals')

            @if(app()->environment('local'))
                {!! $debugInfo ?? '' !!}
            @endif
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/components/modal.blade.php ####

@props(['id', 'maxWidth'])

@php
$id = $id ?? md5($attributes->wire('model'));

$maxWidth = [
    'sm' => 'sm:max-w-sm',
    'md' => 'sm:max-w-md',
    'lg' => 'sm:max-w-lg',
    'xl' => 'sm:max-w-xl',
    '2xl' => 'sm:max-w-2xl',
][$maxWidth ?? '2xl'];
@endphp

<div
    x-data="{ show: @entangle($attributes->wire('model')) }"
    x-on:close.stop="show = false"
    x-on:keydown.escape.window="show = false"
    x-show="show"
    id="{{ $id }}"
    class="jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50"
    style="display: none;"
>
    <div x-show="show" class="fixed inset-0 transform transition-all" x-on:click="show = false" x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0">
        <div class="absolute inset-0 bg-gray-500 dark:bg-gray-900 opacity-75"></div>
    </div>

    <div x-show="show" class="mb-6 bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto"
                    x-trap.inert.noscroll="show"
                    x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95">
        {{ $slot }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/nav-link.blade.php ####

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 dark:border-indigo-600 text-sm font-medium leading-5 text-gray-900 dark:text-gray-100 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-700 focus:outline-none focus:text-gray-700 dark:focus:text-gray-300 focus:border-gray-300 dark:focus:border-gray-700 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/repo-icon.blade.php ####

<div class="{{ $class ?? 'w-6 h-6' }}">
    {!! $iconHtml !!}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/responsive-nav-link.blade.php ####

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'block w-full ps-3 pe-4 py-2 border-l-4 border-indigo-400 dark:border-indigo-600 text-start text-base font-medium text-indigo-700 dark:text-indigo-300 bg-indigo-50 dark:bg-indigo-900/50 focus:outline-none focus:text-indigo-800 dark:focus:text-indigo-200 focus:bg-indigo-100 dark:focus:bg-indigo-900 focus:border-indigo-700 dark:focus:border-indigo-300 transition duration-150 ease-in-out'
            : 'block w-full ps-3 pe-4 py-2 border-l-4 border-transparent text-start text-base font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 hover:border-gray-300 dark:hover:border-gray-600 focus:outline-none focus:text-gray-800 dark:focus:text-gray-200 focus:bg-gray-50 dark:focus:bg-gray-700 focus:border-gray-300 dark:focus:border-gray-600 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

#### Inizio File: /home/fabio/EGI/resources/views/components/secondary-button.blade.php ####

<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-500 rounded-md font-semibold text-xs text-gray-700 dark:text-gray-300 uppercase tracking-widest shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-25 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

#### Inizio File: /home/fabio/EGI/resources/views/components/section-border.blade.php ####

<div class="hidden sm:block">
    <div class="py-8">
        <div class="border-t border-gray-200 dark:border-gray-700"></div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/section-title.blade.php ####

<div class="md:col-span-1 flex justify-between">
    <div class="px-4 sm:px-0">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">{{ $title }}</h3>

        <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
            {{ $description }}
        </p>
    </div>

    <div class="px-4 sm:px-0">
        {{ $aside ?? '' }}
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/separator.blade.php ####

<div class="border-t border-gray-200 dark:border-gray-600"></div>

#### Inizio File: /home/fabio/EGI/resources/views/components/suggestion-icon.blade.php ####

@props([
    'tooltip',
])

<div
    @click="open = true"
    class="relative cursor-pointer flex items-center justify-center tooltip tooltip-info"
    data-tip="{{ $tooltip }}"
>
    <svg
        xmlns="http://www.w3.org/2000/svg"
        height="24px"
        viewBox="0 0 24 24"
        width="24px"
        fill="#5f6368"
    >
        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z" />
    </svg>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/components/switchable-team.blade.php ####

@props(['team', 'component' => 'dropdown-link'])

<form method="POST" action="{{ route('current-team.update') }}" x-data>
    @method('PUT')
    @csrf

    <!-- Hidden Team ID -->
    <input type="hidden" name="team_id" value="{{ $team->id }}">

    <x-dynamic-component :component="$component" href="#" x-on:click.prevent="$root.submit();">
        <div class="flex items-center">
            @if (Auth::user()->isCurrentTeam($team))
                <svg class="me-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            @endif

            <div class="truncate">{{ $team->name }}</div>
        </div>
    </x-dynamic-component>
</form>

#### Inizio File: /home/fabio/EGI/resources/views/components/validation-errors.blade.php ####

@if ($errors->any())
    <div {{ $attributes }}>
        <div class="font-medium text-red-600 dark:text-red-400">{{ __('Whoops! Something went wrong.') }}</div>

        <ul class="mt-3 list-disc list-inside text-sm text-red-600 dark:text-red-400">
            @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
            @endforeach
        </ul>
    </div>
@endif

#### Inizio File: /home/fabio/EGI/resources/views/components/welcome.blade.php ####

<div class="p-6 lg:p-8 bg-white border-b border-gray-200">
    <x-application-logo class="block h-12 w-auto" />

    <h1 class="mt-8 text-2xl font-medium text-gray-900">
        Welcome to your Florence EGI Platform!
    </h1>

    <p class="mt-6 text-gray-500 leading-relaxed">
        Florence EGI è una piattaforma innovativa, progettata per supportare creatori e sostenitori ambientali nella gestione e promozione delle proprie collezioni digitali. Qui troverai strumenti avanzati per creare, organizzare e presentare le tue collezioni, con un focus speciale sulla trasparenza e sull’impatto positivo. L’obiettivo è connettere creatori, utenti e programmi di protezione ambientale (EPP) attraverso un’esperienza intuitiva e funzionale. Esplora le possibilità offerte da Florence EGI e porta il tuo contributo creativo verso un impatto concreto e sostenibile.
    </p>
</div>

<div class="bg-gray-200 bg-opacity-25 grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8 p-6 lg:p-8">
    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://laravel.com/docs">Documentation</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Florence EGI offre una documentazione completa che copre ogni aspetto della piattaforma. Che tu sia un nuovo utente o abbia già esperienza, ti consigliamo di leggere tutta la documentazione dall'inizio alla fine per comprendere appieno le funzionalità e le potenzialità della piattaforma.
        </p>

        <p class="mt-4 text-sm">
            <a href="https://laravel.com/docs" class="inline-flex items-center font-semibold text-indigo-700">
                Explore the documentation

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 w-5 h-5 fill-indigo-500">
                    <path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd" />
                </svg>
            </a>
        </p>
    </div>

    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://florenceegi.com/casts">Florence EGI Casts</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Florence EGI Casts offre una collezione crescente di tutorial video per esplorare la piattaforma Florence EGI, scoprire le funzionalità del marketplace, e imparare a navigare e creare collezioni EGI. Approfondisci, scopri nuove opportunità e accresci le tue competenze creative con questi contenuti esclusivi.
        </p>

        <p class="mt-4 text-sm">
            <a href="https://florenceegi.com/casts" class="inline-flex items-center font-semibold text-indigo-700">
                Inizia a guardare Florence EGI Casts

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" class="ms-1 w-5 h-5 fill-indigo-500">
                    <path fill-rule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clip-rule="evenodd" />
                </svg>
            </a>
        </p>
    </div>


    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                <a href="https://florenceegi.com/">Florence EGI Marketplace</a>
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Il Florence EGI Marketplace è progettato per essere la tua piattaforma di riferimento per esplorare, scoprire e supportare collezioni uniche di EGI, tutte connesse a progetti ambientali. La piattaforma offre un'esperienza di navigazione moderna e intuitiva, arricchita da funzionalità di prenotazione e valutazione per aiutarti a scegliere le opere che più ti ispirano.
        </p>
    </div>

    <div>
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-6 h-6 stroke-gray-400">
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z" />
            </svg>
            <h2 class="ms-3 text-xl font-semibold text-gray-900">
                Florence EGI Institutional Site
            </h2>
        </div>

        <p class="mt-4 text-gray-500 text-sm leading-relaxed">
            Il sito istituzionale Florence EGI offre informazioni complete sul progetto, inclusi documenti ufficiali, il white paper, la roadmap e dettagli sugli obiettivi ambientali. Questo è il punto di riferimento per tutti coloro che desiderano comprendere la missione di Florence EGI, scoprire gli EPP, e contribuire alle nostre iniziative di sostenibilità.
        </p>
    </div>

</div>

#### Inizio File: /home/fabio/EGI/resources/views/dashboard.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-xl sm:rounded-lg">
                {{-- <x-welcome /> --}}
                <livewire:dashboard />

            </div>
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/emails/team-invitation.blade.php ####

@component('mail::message')
{{ __('You have been invited to join the :team team!', ['team' => $invitation->team->name]) }}

@if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::registration()))
{{ __('If you do not have an account, you may create one by clicking the button below. After creating an account, you may click the invitation acceptance button in this email to accept the team invitation:') }}

@component('mail::button', ['url' => route('register')])
{{ __('Create Account') }}
@endcomponent

{{ __('If you already have an account, you may accept this invitation by clicking the button below:') }}

@else
{{ __('You may accept this invitation by clicking the button below:') }}
@endif


@component('mail::button', ['url' => $acceptUrl])
{{ __('Accept Invitation') }}
@endcomponent

{{ __('If you did not expect to receive an invitation to this team, you may discard this email.') }}
@endcomponent

#### Inizio File: /home/fabio/EGI/resources/views/error.blade.php ####

<x-app-layout>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8d7da;
            color: #721c24;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;Qà
            align-items: center;
            height: 100vh;
        }
        .error-container {
            background-color: #f5c6cb;
            padding: 20px 40px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }
        p {
            font-size: 18px;
            margin: 0;
        }
    </style>
    <div class="error-container">
        <h1>Si è verificato un errore</h1>
        <p>{{ $message }}</p>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/app.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
        <script>console.log('resources/views/layouts/app.blade.php gg');</script>

         {{-- Icone di MaterialIcons --}}
         <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
         <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />

         <!-- Styles -->
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"/>

        <!-- Styles -->
        @livewireStyles
    </head>

    <body class="font-sans antialiased bg-base-200">
        <!-- Inizio drawer -->
        <!-- lg:drawer-open => Su schermi lg o maggiori, la sidebar è sempre visibile -->
        <!-- drawer => classe DaisyUI per attivare il layout a scomparsa -->
        <div class="drawer lg:drawer-open">

            <!-- Questo checkbox controlla lo stato del drawer -->
            <input id="main-drawer" type="checkbox" class="drawer-toggle" />

            <!-- Contenuto principale della pagina -->
            <div class="flex flex-col min-h-screen drawer-content">
                <!-- Navbar -->
                <livewire:navigation-menu />

                <!-- Page Heading -->
                @if (isset($header))
                    <header class="shadow bg-base-100">
                        <div class="px-4 py-6 mx-auto max-w-7xl sm:px-6 lg:px-8">
                            {{ $header }}
                        </div>
                    </header>
                @endif

                <!-- Main Content -->
                <main class="flex-1 p-4 lg:p-8">
                    {{ $slot }}
                </main>
            </div>

            <!-- Sidebar -->
            <!-- Sidebar rimane invariata, semplicemente sta dentro .drawer-side -->
            <livewire:sidebar/>

            @stack('modals')

            @if(app()->environment('local'))
                {!! $debugInfo ?? '' !!}
            @endif
        </div>
    </body>




</html>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/guest-welcome.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}" data-theme="florenceegi">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Florence EGI') }}</title>
        <script>console.log('resources/views/layouts/guest-welcome.blade.php');</script>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
    </head>
    <body class="font-sans antialiased bg-gradient-to-br from-gray-900 to-gray-800 text-green-800">
        <div class="min-h-screen">
            {{ $slot }}
        </div>
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/layouts/guest.blade.php ####

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>
        <script>console.log('resources/views/layouts/guest.blade.php');</script>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])

        <!-- Styles -->
        @livewireStyles
    </head>
    <body>
        <div class="font-sans text-gray-900 dark:text-gray-100 antialiased">
            {{ $slot }}
        </div>

        @livewireScripts
    </body>
</html>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/back_to_collection_button.blade.php ####

<div class="mt-8 ml-2">
    <a href="{{ route('collections.edit', ['id' => $collection->id]) }}" class="p-4">
        <!-- disegna un bottone primario -->
        <div class="flex gap-2 border border-green-500 p-4 w-fit rounded-lg items-center bg-green-500 hover:bg-green-600 text-white font-bold shadow-md transition-all duration-300 cursor-pointer">
            <x-repo-icon name="back" class="text-gray-500 opacity-50" />
            {{ __('collection.came_back_to_collection') }}
        </div>

    </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/data_section.blade.php ####

<div id="image_of_collection" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">

    <!-- Titolo della sezione -->
    <div class="mb-6 flex items-start justify-between">
        <div>
            <h2 class="text-2xl font-bold text-white">{{ __('collection.data_section_title') }}</h2>
            <p class="text-sm text-gray-400">{{ __('collection.data_section_description') }}</p>
        </div>

        <div class="ml-4">
            @include('livewire.modale.collection_general_suggestion')
        </div>
    </div>

    <!-- Campi di Input -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2">

        <!-- Collection Name -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.collection_name') }}</span>
            </div>
            <x-form-input
                id="collection_name"
                type="text"
                :label="__('collection.collection_name')"
                :placeholder="__('collection.collection_name')"
                :datatip="__('collection.collection_name')"
                model="collection_name"
                width_label="w-full"
                width_input="w-full"
                icon="collection-name"
                required
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Collection is_published -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="form-control w-52">
                <label class="cursor-pointer label">
                    <span class="label-text text-white">{{ __('collection.publish_collection') }}</span>
                    <input type="checkbox" class="toggle toggle-primary" wire:model='is_published' />
                </label>
            </div>
        </div>

        <!-- Select Content Type -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <label class="form-control w-full max-w-xs">
                <div class="label">
                    <span class="label-text text-white">{{ __('collection.collection_name') }}</span>
                </div>
                <select class="select select-bordered select-primary bg-gray-700 text-white" wire:model='type'>
                    <option disabled selected>{{ __('collection.select_content_type') }}</option>
                    <option value="image">{{ __('collection.type_image') }}</option>
                    <option value="ebook">{{ __('collection.type_ebook') }}</option>
                    <option value="audio">{{ __('collection.type_audio') }}</option>
                    <option value="video">{{ __('collection.type_video') }}</option>
                </select>
            </label>
        </div>

    </div>

    <!-- Altri Campi -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3 mt-6">

        <!-- EGI Number -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.EGI_number') }}</span>
            </div>
            <x-form-input
                :label="__('collection.EGI_number')"
                :placeholder="__('collection.EGI_number')"
                :datatip="__('collection.EGI_number')"
                type="number"
                model="EGI_number"
                id="EGI_number"
                width_label="w-full"
                width_input="w-full"
                required
                icon="collection-number"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Floor Price -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.set_base_EcoNFT_price') }}</span>
            </div>
            <x-form-input
                :label="__('collection.EGI_floor_price')"
                :placeholder="__('collection.set_base_EcoNFT_price')"
                :datatip="__('collection.set_base_EcoNFT_price')"
                type="number"
                model="floor_price"
                id="floor_price"
                width_label="w-full"
                width_input="w-full"
                required
                icon="egi-base-price"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

        <!-- Collection Position -->
        <div class="bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.position_for_mor_than_one_collection') }}</span>
            </div>
            <x-form-input
                :label="__('collection.position')"
                type="number"
                :datatip="__('collection.position_for_mor_than_one_collection')"
                model="position"
                :placeholder="__('collection.position')"
                id="position"
                width_label="w-full"
                width_input="w-full"
                required
                icon="collection-position"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

    </div>

    <!-- Textarea per la Descrizione -->
    <div class="mt-6">
        <h2 for="description" class="block mb-2 text-sm font-medium text-white">
            {{ __('collection.collection_description') }}
        </h2>
        <div class="w-full tooltip tooltip-info z-10" data-tip="{{ __('collection.collection_description_suggest') }}">
            <textarea wire:model="description"
                      id="description"
                      class="textarea textarea-bordered textarea-primary bg-gray-900 text-white w-full min-h-[120px] rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300"
                      required
                      placeholder="{{ __('collection.collection_description_placeholder') }}">
            </textarea>
        </div>
        @error('collection.description')
            <span class="text-xs text-error">{{ $message }}</span>
        @enderror
    </div>

    <div class="grid grid-cols-1 gap-6 md:grid-cols-1">
        <!-- URL della Collection -->
        <div class="mt-6 bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="label">
                <span class="label-text text-white">{{ __('collection.collection_site_URL_suggest') }}</span>
            </div>
            <x-form-input
                :label="__('collection.collection_site_URL')"
                type="url"
                :datatip="__('collection.collection_site_URL_suggest')"
                model="url_collection_site"
                id="url_collection_site"
                :placeholder="__('collection.collection_site_URL')"
                width_label="w-full"
                width_input="w-full"
                required
                icon="url"
                icon_class="w-5 h-5 text-gray-400" />
        </div>

    </div>

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/image_section.blade.php ####

<div id="image_of_collection" class="p-4 border border-gray-300 rounded-lg bg-white shadow-md">

    <div class="mb-4 flex items-start justify-between">
        <!-- Primo div con il titolo e la descrizione -->
        <div>
            <h2 class="text-lg font-semibold text-gray-800">{{ __('collection.image_section_title') }}</h2>
            <p class="text-sm text-gray-500">{{ __('collection.image_section_description') }}</p>
        </div>

        <!-- Div per il pulsante dei suggerimenti -->
        <div class="ml-4">
            @include('livewire.modale.collection_image_suggestion')
        </div>
    </div>

    <!-- Griglia delle immagini -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        <!-- Immagine banner -->
        <x-image-uploader id="banner"
            id="banner"
            :label="__('collection.banner_image')"
            model="path_image_banner"
            :image="$collection['path_image_banner']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
        <!-- Immagine Card -->
        <x-image-uploader
            id="card"
            :label="__('collection.card_image')"
            model="path_image_card"
            :image="$collection['path_image_card']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
        {{-- @include('livewire.collection-manager-includes.path_image_card') --}}

        <!-- Immagine Avatar -->
        <x-image-uploader id="avatar"
            id="avatar"
            :label="__('collection.avatar_image')"
            model="path_image_avatar"
            :image="$collection['path_image_avatar']"
            icon="camera"
            icon_class="w-6 h-6 opacity-50 text-base-content"
            remove-method="removeImage"
            />
    </div>

    <div class="flex justify-end space-x-2 mt-4">
        <a href="{{ route('collections.head_images', ['id' => $collectionId]) }}" class="btn btn-primary btn-sm">
            {{ __('collection.open_collection') }}
        </a>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_avatar.blade.php ####

<div class="text-center">
    <label for="banner" class="block mb-2 text-sm font-semibold text-gray-700">Image Avatar</label>
    <div class="relative inline-block cursor-pointer" onclick="document.getElementById('banner').click();">
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">
            @if ($path_image_avatar)
                <img src="{{ $path_image_avatar->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif
        </div>
    </div>

    <input type="file" wire:model="path_image_avatar" id="avatar" class="hidden" accept="image/*">
    @error('path_image_avatar')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_avatar)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('banner')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_banner.blade.php ####

<div class="text-center">
    <label for="banner" class="block mb-2 text-sm font-semibold text-gray-700">Banner Image</label>
    <div class="relative inline-block cursor-pointer" onclick="document.getElementById('banner').click();">
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">
            @if ($path_image_banner)
                <img src="{{ $path_image_banner->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif
        </div>
    </div>

    <input type="file" wire:model="path_image_banner" id="banner" class="hidden" accept="image/*">
    @error('path_image_banner')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_banner)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('banner')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/path_image_card.blade.php ####

<div class="text-center">
    <label for="card" class="block mb-2 text-sm font-semibold text-gray-700">Card Image</label>
    {{-- <div class="relative inline-block cursor-pointer" onclick="document.getElementById('card').click();"> --}}
        <div class="flex items-center justify-center transition-transform transform rounded-lg shadow-lg avatar w-28 h-28 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 hover:scale-105">

            @if ($path_image_card)
                <img src="{{ $path_image_card->temporaryUrl() }}" class="object-cover w-full h-full border-4 border-white rounded">
            @else
                <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 text-white rounded opacity-75" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display: block; margin: auto;">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/>
                    <path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
            @endif

        </div>
    {{-- </div> --}}

    <input type="file" wire:model="path_image_card" id="card" class="" accept="image/*">

    @error('path_image_card')
        <span class="mt-1 text-xs text-red-500">{{ $message }}</span>
    @enderror

    {{-- Action Button --}}
    @if ($path_image_card)
        <div class="flex justify-center mt-3">
            <button type="button" wire:click="removeImage('card')" class="px-4 py-1 text-white transition-all duration-200 transform bg-red-500 border-none rounded-lg shadow-lg btn hover:scale-110 hover:shadow-2xl">
                Remove
            </button>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collection-manager-includes/wallets_section.blade.php ####

<div id="wallet_section" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">

    <!-- Titolo della sezione -->
    <div class="mb-6">
        <h2 class="text-2xl font-bold text-white">{{ __('collection.wallet_section_title') }}</h2>
        <p class="text-sm text-gray-400">{{ __('collection.wallet_section_description') }}</p>
    </div>

    <!-- Vista Desktop degli Wallets -->
    @if($wallets)
        <div class="hidden md:block overflow-x-auto">
            <table class="table-auto w-full border-collapse rounded-2xl shadow-md overflow-hidden">
                <thead class="bg-gradient-to-r from-blue-500 to-purple-600 text-white">
                    <tr>
                        <th class="px-4 py-3 text-left">{{ __('collection.wallet_address') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.user_role') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.royalty_mint') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.royalty_rebind') }}</th>
                        <th class="px-4 py-3 text-left">{{ __('collection.status') }}</th>
                    </tr>
                </thead>
                <tbody class="bg-gray-900 text-gray-300">
                    @forelse ($wallets as $wallet)
                        <tr class="hover:bg-gray-700 transition-colors duration-200">
                            <td class="px-4 py-3">
                                @if ($wallet->wallet)
                                    <div class="tooltip tooltip-right" data-tip="{{ $wallet->wallet }}">
                                        <span class="text-blue-400 hover:underline cursor-pointer" onclick="copyToClipboard('{{ $wallet->wallet }}')">
                                            {{ $wallet->short_wallet }}
                                        </span>
                                    </div>
                                @endif
                            </td>
                            <td class="px-4 py-3">{{ $wallet->user_role ?? __('collection.role_unknown') }}</td>
                            <td class="px-4 py-3">{{ $wallet->royalty_mint }}%</td>
                            <td class="px-4 py-3">{{ $wallet->royalty_rebind }}%</td>
                            <td class="px-4 py-3">
                                <span class="badge {{ $wallet->status ? 'bg-green-500' : 'bg-red-500' }} text-white px-2 py-1 rounded-full">
                                    {{ $wallet->status ? __('collection.active') : __('collection.inactive') }}
                                </span>
                            </td>
                        </tr>
                    @empty
                        <tr>
                            <td colspan="5" class="px-4 py-3 text-center text-gray-400">
                                {{ __('collection.no_wallets') }}
                            </td>
                        </tr>
                    @endforelse
                </tbody>
            </table>
        </div>
    @endif

    <!-- Vista Mobile degli Wallets -->
    @if($wallets)
        <div class="block md:hidden">
            @forelse ($wallets as $wallet)
                <div class="p-4 mb-4 bg-gray-900 rounded-2xl shadow-md hover:shadow-lg transition-shadow duration-300">
                    <p class="text-gray-300">
                        <strong>{{ __('collection.wallet.address') }}:</strong>
                        <span class="text-blue-400 hover:underline cursor-pointer" onclick="copyToClipboard('{{ $wallet->wallet }}')">
                            {{ $wallet->short_wallet }}
                        </span>
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.user_role') }}:</strong> {{ $wallet->user_role ?? __('collection.wallet.role_unknown') }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.royalty_mint') }}:</strong> {{ $wallet->royalty_mint }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.royalty_rebind') }}:</strong> {{ $wallet->royalty_rebind }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('collection.wallet.status') }}:</strong>
                        <span class="badge {{ $wallet->status ? 'bg-green-500' : 'bg-red-500' }} text-white px-2 py-1 rounded-full">
                            {{ $wallet->status ? __('label.active') : __('label.inactive') }}
                        </span>
                    </p>
                </div>
            @empty
                <p class="text-center text-gray-400">{{ __('collection.no_wallets') }}</p>
            @endforelse
        </div>
    @endif

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-carousel.blade.php ####

<div x-data="{ activeSlide: @entangle('activeSlide') }" class="relative w-full overflow-hidden">
    <h3 class="mt-6 text-xl">{{ __('collection.collections') }}</h3>

    <!-- Contenitore del carousel con larghezza fissa per le card -->
    <div class="relative">
        <div class="flex transition-transform duration-500 ease-in-out"
             :style="{ transform: `translateX(-${activeSlide * 25}%)` }">

            @foreach($collections as $index => $collection)
            <div class="w-full sm:max-w-[350px] px-2 flex-shrink-0">
                <x-collection-card :id="$collection->id" :editable="false" imageType="card" />

                </div>
            @endforeach

        </div>

        <!-- Pulsante per Slide Precedente -->
        <button wire:click="prevSlide"
                class="btn btn-circle absolute left-4 top-1/2 transform -translate-y-1/2 z-50">
            ❮
        </button>

        <!-- Pulsante per Slide Successiva -->
        <button wire:click="nextSlide"
                class="btn btn-circle absolute right-4 top-1/2 transform -translate-y-1/2 z-50">
            ❯
        </button>
    </div>

    <!-- Indicatori del Carousel -->
    <div class="flex justify-center mt-4">
        @foreach($collections as $index => $collection)
            <button wire:click="$set('activeSlide', {{ $index }})"
                    class="btn btn-xs mx-1"
                    :class="{ 'btn-active': activeSlide === {{ $index }} }">
            </button>
        @endforeach
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-manager.blade.php ####

<div class="max-w-4xl p-4 mx-auto">

    <!-- Flash Messages -->
    @if (session()->has('message'))
        <div class="mb-4 alert alert-success">
            {{ session('message') }}
        </div>
    @endif

    @if (session()->has('error'))
        <div class="mb-4 alert alert-error">
            {{ session('error') }}
        </div>
    @endif

    <h2 class="mb-4 text-2xl font-bold">{{ __('collection.manage_collection') }}</h2>

    <form wire:submit.prevent="save({{ $collectionId }})"
        class="p-6 space-y-6 bg-white rounded-lg shadow-sm">

        <!-- Sezione dei dati della collection -->
        @include('livewire.collection-manager-includes.data_section')

        <div class="mt-6 bg-gray-900 p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300 flex items-center justify-center">
            <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
                <!-- Bottone per aprire la vista per la gestione delle immagini di testata -->
                <a href="{{ route('collections.head_images', ['id' => $collectionId]) }}" class="btn btn-primary btn-lg">
                    {{ __('collection.collection_image') }}
                </a>

                <!-- Bottone per aprire la vista dei membri della collection -->
                <a href="{{ route('collections.collection_user', ['id' => $collectionId]) }}" class="btn btn-primary btn-lg">
                    {{ __('collection.collection_members') }}
                </a>
                <!-- Bottone per il salvataggio -->
                <div class="flex justify-end">
                    <x-form-button type="submit" style="primary" class="px-6">
                        {{ __('label.save') }}
                    </x-form-button>
                </div>
            </div>
        </div>
    </form>

</div>

<script>
    console.log('resources/views/livewire/collection-manager.blade.php');
</script>


<script>
    function closeModal() {
    document.querySelector('.fixed').remove();
}
</script>

<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            alert('Indirizzo copiato negli appunti!');
        }).catch(err => {
            console.error('Errore durante la copia: ', err);
        });
    }
</script>

<script>
    document.addEventListener('livewire:init', () => {
        // Gestisce errori di permessi o appartenenza
        Livewire.on('swal:error', (text) => {
            Swal.fire({
                icon: 'error',
                title: text[0]['title'],
                text: text[0]['text'],
                confirmButtonColor: '#d33',
                confirmButtonText: 'Chiudi'
            });
        });
    });
</script>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/collection-user.blade.php ####

@php
    $canCreateWallet = (new \App\Livewire\Collections\CollectionUserMember)->userHasPermissionInCollection($collectionId, 'create_wallet');
@endphp
<div id="collection_management" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">
    <!-- Titolo della sezione -->
    <div id="collection_management" class="p-6 border border-gray-700 rounded-2xl bg-gray-800 shadow-lg">
        <!-- Titolo della sezione -->
        <div class="mb-6 flex items-start justify-between flex-wrap gap-4">
            <div>
                <h2 class="text-2xl font-bold text-white">{{ $collectionName }}</h2>
                <p class="text-sm text-gray-400">
                    {{ __('Owner:') }} {{ $collectionOwner->name }} {{ $collectionOwner->last_name }}
                </p>
                <p class="text-sm text-gray-400">{{ __('collection.team_members_description') }}</p>
            </div>
            @if($canCreateWallet)
                <div class="flex flex-wrap space-x-0 gap-4">
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="dispatch('openInviteModal')">
                        {{ __('collection.invite_collection_member') }}
                    </button>
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="$dispatch('openForCreateNewWallets')">
                        {{ __('collection.wallet.create_the_wallet') }}
                    </button>
                </div>
            @endif
        </div>
        <!-- Restante contenuto della vista -->
    </div>

    <!-- Sezione Membri della Collection -->
    <h3 class="text-xl font-bold text-white mb-4">{{ __('collection.members') }}</h3>
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        @foreach($collectionUsers as $member)
            <div class="{{ $member->status === 'pending' ? 'bg-yellow-800' : 'bg-gray-900' }} p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
                <div class="flex items-center mb-4">
                    <img class="w-12 h-12 rounded-full" src="{{ $member->user->profile_photo_url }}" alt="{{ $member->user->name }}">
                    <div class="ml-4">
                        <h3 class="text-lg font-bold text-white">{{ $member->user->name }} {{ $member->user->last_name }}</h3>
                        <p class="text-sm text-gray-400">{{ __('Role: ') . $member->role }}</p>
                        <p class="text-sm text-gray-400">{{ __('User id: ') . $member->user_id }}</p>
                    </div>
                </div>
                @if(!$member->wallet && $canCreateWallet)
                <!-- Bottone per creare un nuovo wallet. Il listener si trova in /home/fabio/EGI/app/Livewire/Collections/EditWalletModal.php -->
                    <button class="btn btn-primary w-full sm:w-auto" wire:click="$dispatch('openForCreateNewWallets', { collectionId: {{ $member->collection_id }}, userId: {{ $member->user_id }} })">
                        {{ __('collection.wallet.create_wallet_for_member') }}
                    </button>
                @endif
            </div>
        @endforeach
    </div>

    <!-- Sezione Wallet -->
    <h3 class="text-xl font-bold text-white mt-8 mb-4">{{ __('collection.wallets') }}</h3>
    <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
        @foreach($wallets as $wallet)
            <div class="{{ !$canCreateWallet || in_array($wallet->platform_role, ['natan', 'EPP']) ? 'bg-gray-700 opacity-75 cursor-not-allowed' : 'bg-gray-900' }} p-4 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300">
                <div>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Role:') }}</strong> {{ $wallet->platform_role }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Wallet Address:') }}</strong> {{ substr($wallet->wallet, 0, 6) }}...{{ substr($wallet->wallet, -4) }}
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Mint Royalty:') }}</strong> {{ $wallet->royalty_mint }}%
                    </p>
                    <p class="text-sm text-gray-400">
                        <strong>{{ __('Rebind Royalty:') }}</strong> {{ $wallet->royalty_rebind }}%
                    </p>

                    <!-- Nome e Cognome dell'Utente Correlato -->
                    @if($wallet->user)
                        <p class="text-sm text-gray-400">
                            <strong>{{ __('Owner:') }}</strong> {{ $wallet->user->name }} {{ $wallet->user->last_name }}
                        </p>
                    @else
                        <p class="text-sm text-gray-400">
                            <strong>{{ __('Owner:') }}</strong> {{ __('Unassigned') }}
                        </p>
                    @endif
                </div>

                @if($canCreateWallet && (!in_array($wallet->platform_role, ['natan', 'EPP']) || Auth::user()->hasRole('superadmin')))
                    <button wire:click="$dispatch('openHandleWallets', { walletId: {{ $wallet->id }} })" class="btn btn-primary mt-4 w-full">
                        {{ __('collection.wallet.manage_wallet') }}
                    </button>
                @endif
            </div>
        @endforeach

    </div>

    <!-- Bottone che permette di aprire la collection -->
    @include('livewire.collection-manager-includes.back_to_collection_button')

    <!-- Placeholder se non ci sono membri o wallet -->

    <!-- Include le Modali -->
    <livewire:collections.edit-wallet-modal />
    <livewire:collections.invite-user-to-collection-modal :collectionId="$collectionId" />
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/create-collection.blade.php ####

<div class="max-w-2xl mx-auto p-6 bg-white rounded shadow">
    <h1 class="text-2xl font-bold mb-4">Crea una Nuova Collection</h1>

    <form wire:submit.prevent="create">
        <div class="mb-4">
            <label for="collection_name" class="block font-semibold">Nome della Collection</label>
            <input type="text" id="collection_name" wire:model="collection.collection_name" class="w-full border rounded p-2">
            @error('collection_name') <span class="text-red-500">{{ $message }}</span> @enderror
        </div>

        <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">{{ __('collection.new_collection') }}</button>
    </form>

    @if (session()->has('error'))
        <div class="text-red-500 mt-4">{{ session('error') }}</div>
    @endif
</div>

<script>
    console.log('resources/views/livewire/create-collection.blade.php');
</script>



#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/edit-wallet-modal.blade.php ####

<div>
    @if($show)
        <div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center">
            <div class="bg-gray-800 p-6 rounded-2xl w-full max-w-md shadow-lg">
                <h3 class="text-2xl font-bold text-white mb-4">{{ __('Edit Wallet Details') }}</h3>

                <!-- Wallet Address -->
                <div class="mb-4">
                    <label for="walletAddress" class="block text-sm font-medium text-gray-300">{{ __('Wallet Address') }}</label>
                    <input type="text" id="walletAddress" wire:model="walletAddress"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter wallet address') }}">
                    @error('walletAddress') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Royalty Mint -->
                <div class="mb-4">
                    <label for="royaltyMint" class="block text-sm font-medium text-gray-300">{{ __('Royalty Mint (%)') }}</label>
                    <input type="number" id="royaltyMint" wire:model="royaltyMint"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter royalty mint percentage') }}">
                    @error('royaltyMint') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Royalty Rebind -->
                <div class="mb-4">
                    <label for="royaltyRebind" class="block text-sm font-medium text-gray-300">{{ __('Royalty Rebind (%)') }}</label>
                    <input type="number" id="royaltyRebind" wire:model="royaltyRebind"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter royalty rebind percentage') }}">
                    @error('royaltyRebind') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Azioni -->
                <div class="flex justify-end space-x-4 mt-6">
                    <button wire:click="closeHandleWallets" class="btn btn-secondary">{{ __('label.cancel') }}</button>
                    @if($mode === 'create')
                        <button wire:click="createNewWallet" class="btn btn-secondary">{{ __('label.save') }}</button>
                    @else
                        <button wire:click="saveWallet" class="btn btn-primary">{{ __('label.save') }}</button>
                    @endif

                </div>
            </div>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/head-images-manager.blade.php ####

<div class="mx-auto max-w-4xl rounded-2xl border border-gray-700 bg-gray-800 p-6 shadow-lg">

    <h2 class="mb-6 text-2xl font-bold text-white">{{ __('collection.manage_head_images') }}</h2>

    <livewire:collections.images.banner-image-upload :collectionId="$collectionId">

    <div class="grid grid-cols-1 gap-6 sm:col-span-2 sm:grid-cols-3">
        <livewire:collections.images.card-image-upload :collectionId="$collectionId" />

        <!-- EGI Image -->
        @if (config('app.egi_asset'))
            <livewire:collections.images.egi-image-upload :collectionId="$collectionId" />
        @endif

        <!-- Avatar -->
        <livewire:collections.images.avatar-image-upload :collectionId="$collectionId" />
    </div>

    <!-- Bottone che permette di aprire la collection -->
    @include('livewire.collection-manager-includes.back_to_collection_button')

</div>

<!-- Script per SweetAlert2 -->
<script>

    function confirmDelete(type) {

        console.log('confirmDelete',type);

        // Mappa dei tipi di immagine per le traduzioni
        const typeMap = {
            'banner': '{{ __("collection.banner_image") }}',
            'avatar': '{{ __("collection.avatar_image") }}',
            'card': '{{ __("collection.card_image") }}',
            'EGI': '{{ __("collection.EGI_image") }}'
        };

        Swal.fire({
            title: '{{ __("collection.confirm_delete_title") }}',
            text: '{{ __("collection.confirm_delete_text", ["type" => ":type"]) }}'.replace(':type', typeMap[type]),
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: '{{ __("collection.confirm_delete_button") }}',
            cancelButtonText: '{{ __("collection.cancel_delete_button") }}'
        }).then((result) => {
            if (result.isConfirmed) {
                @this.removeImage(type);
                Swal.fire(
                    '{{ __("collection.deleted_title") }}',
                    '{{ __("collection.deleted_text", ["type" => ":type"]) }}'.replace(':type', typeMap[type]),
                    'success'
                );
            }
        });
    }

</script>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/avatar-image-upload.blade.php ####

<div class="mb-8 text-center">
    <h3 class="text-lg font-semibold text-white mb-2">{{ __('collection.avatar_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_avatar instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Cornice con bordo dinamico -->
    <div class="w-32 h-32 mx-auto bg-gray-900 rounded-full shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('avatar-image-{{ $collectionId }}').click();" @endif>
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Avatar" class="w-full h-full object-cover" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-10 h-10 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_avatar" id="avatar-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_avatar instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_avatar') }}
            </button>
        @endif

        @if($existingImageUrl || $image_avatar)
            <button type="button" onclick="confirmDelete('avatar')" class="btn btn-error">
                {{ __('collection.delete_avatar') }}
            </button>
        @endif
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/banner-image-upload.blade.php ####

<div class="mb-8">
    <h3 class="text-lg font-semibold text-white mb-2">{{ __('collection.banner_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_banner instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Cornice con bordo dinamico -->
    <div class="max-w-[1200px] max-h-[300px] w-full h-auto mx-auto md:h-64 bg-gray-900 rounded-2xl shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('banner-image-{{ $collectionId }}').click();" @endif>
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Banner image" class="w-full h-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-16 h-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_banner" id="banner-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_banner instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_banner') }}
            </button>
        @endif

        @if($existingImageUrl || $image_banner)
            <button type="button" onclick="confirmDelete('banner')" class="btn btn-error">
                {{ __('collection.delete_banner') }}
            </button>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/card-image-upload.blade.php ####

<div class="w-full sm:max-w-[300px] px-2 flex-shrink-0">
    <h3 class="text-lg font-semibold text-white mb-2"> {{ __('collection.card_image') }}</h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_card instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Applica il bordo al div genitore -->
    <div class="w-full h-48 bg-gray-900 rounded-2xl shadow-md flex items-center justify-center overflow-hidden cursor-pointer hover:shadow-lg transition-shadow duration-300 border-4 {{ $borderColor }}"
         @if(!$imageUrl) onclick="document.getElementById('card-image-{{ $collectionId }}').click();" @endif>
        <!-- Immagine o icona di default -->
        @if($imageUrl)
            <img src="{{ $imageUrl }}" alt="Card Image" class="w-full h-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="w-16 h-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_card" id="card-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex gap-2 justify-center">
        @if($image_card instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_card') }}
            </button>
        @endif

        @if($existingImageUrl || $image_card)
            <button type="button" onclick="confirmDelete('card')" class="btn btn-error">
                {{ __('collection.delete_card') }}
            </button>
        @endif
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/images/egi-image-upload.blade.php ####

<div class="w-full flex-shrink-0 px-2 sm:max-w-[300px]">
    <h3 class="mb-2 text-lg font-semibold text-white">
        {{ __('collection.EGI_image') }}
    </h3>

    @php
        // Determina lo stato dell'immagine
        $borderColor = 'border-red-500'; // Default: nessuna immagine caricata

        if ($image_EGI instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile) {
            $borderColor = 'border-yellow-500'; // Immagine in anteprima
        } elseif ($existingImageUrl) {
            $borderColor = 'border-green-500'; // Immagine salvata
        }
    @endphp

    <!-- Applica il bordo al div genitore -->
    <div class="{{ $borderColor }} flex h-48 w-full cursor-pointer items-center justify-center overflow-hidden rounded-2xl border-4 bg-gray-900 shadow-md transition-shadow duration-300 hover:shadow-lg"
        @if (!$imageUrl) onclick="document.getElementById('egi-image-{{ $collectionId }}').click();" @endif>
        <!-- Immagine o icona di default -->
        @if ($imageUrl)
            <img src="{{ $imageUrl }}" alt="EGI Image" class="h-full w-full object-contain" loading="lazy">
        @else
            <x-repo-icon name="camera" class="h-16 w-16 text-gray-500 opacity-50" />
        @endif
    </div>

    <!-- Input nascosto per caricare l'immagine -->
    <input type="file" wire:model="image_EGI" id="egi-image-{{ $collectionId }}" class="hidden" accept="image/*">

    <!-- Pulsanti per Salvare e Rimuovere l’Immagine -->
    <div class="mt-2 flex justify-center gap-2">
        @if ($image_EGI instanceof \Livewire\Features\SupportFileUploads\TemporaryUploadedFile)
            <button type="button" wire:click="saveImage" class="btn btn-success">
                {{ __('collection.save_EGI') }}
            </button>
        @endif

        @if ($existingImageUrl || $image_EGI)
            <button type="button" onclick="confirmDelete('EGI')" class="btn btn-error">
                {{ __('collection.delete_EGI') }}
            </button>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/invite-user-to-collection-modal.blade.php ####

<div>
    @if($show)
        <div class="fixed inset-0 bg-black bg-opacity-50 z-50 flex justify-center items-center">
            <div class="bg-gray-800 p-6 rounded-2xl w-full max-w-md shadow-lg">
                <h3 class="text-2xl font-bold text-white mb-4">{{ __('Invite Collection Member') }}</h3>

                <!-- Email -->
                <div class="mb-4">
                    <label for="email" class="block text-sm font-medium text-gray-300">{{ __('Email') }}</label>
                    <input type="email" id="email" wire:model="email"
                        class="input input-bordered input-primary w-full bg-gray-700 text-white"
                        placeholder="{{ __('Enter user email') }}">
                    @error('email') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Role -->
                <div class="mb-4">
                    <label for="role" class="block text-sm font-medium text-gray-300">{{ __('Role') }}</label>
                    <select id="role" wire:model="role"
                        class="select select-bordered select-primary w-full bg-gray-700 text-white">
                        <option value="" disabled>{{ __('Select a role') }}</option>
                        @foreach($roles as $role)
                            <option value="{{ $role }}">{{ ucfirst($role) }}</option>
                        @endforeach
                    </select>
                    @error('role') <span class="text-error text-sm">{{ $message }}</span> @enderror
                </div>

                <!-- Azioni -->
                <div class="flex justify-end space-x-4 mt-6">
                    <button wire:click="closeModal" class="btn btn-secondary">{{ __('Cancel') }}</button>
                    <button wire:click="invite" class="btn btn-primary">{{ __('Send Invitation') }}</button>
                </div>
            </div>
        </div>
    @endif
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/no-team.blade.php ####

<div class="p-6 bg-red-100 border border-red-400 rounded-md">
    <h2 class="text-lg font-bold text-red-700">Attenzione</h2>
    <p class="mt-2 text-red-600">{{ $message }}</p>
    <a href="{{ route('teams.create') }}" class="mt-4 inline-block bg-blue-500 text-white px-4 py-2 rounded">
        Crea una collection
    </a>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/open.blade.php ####

<div>
    {{-- Nothing in the world is as soft and yielding as water. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/reject-modal.blade.php ####

<div>
    <form wire:submit.prevent="reject">
        <textarea wire:model="rejectionReason" placeholder="Motivo del rifiuto"></textarea>
        <button type="submit" class="btn btn-danger">Rifiuta Modifica</button>
    </form>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/livewire/collections/show.blade.php ####

<div>
    {{-- Success is as dangerous as failure. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/dashboard.blade.php ####

<div class="p-6 bg-gray-800 text-white rounded-2xl shadow-lg">
    @php
        use App\Repositories\IconRepository;
    @endphp

    <!-- Titolo della Dashboard -->
    <h2 class="text-3xl font-bold mb-6">{{ __('Dashboard') }}</h2>

    <!-- Statistiche -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        <div class="bg-gray-700 p-4 rounded-lg shadow-md flex items-center">
            <div class="icon mr-4">
                <!-- Icona per le Collections -->
                <div class="icon-placeholder bg-gray-600 w-12 h-12 rounded-full flex items-center justify-center">
                   <x-repo-icon name="open_collection" class="text-gray-500 opacity-90" />
                </div>
            </div>
            <div>
                <h3 class="text-xl font-semibold">{{ __('Collections') }}</h3>
                <p class="text-2xl font-bold">{{ $collectionsCount }}</p>
            </div>
        </div>

        <div class="bg-gray-700 p-4 rounded-lg shadow-md flex items-center">
            <div class="icon mr-4">
                <!-- Icona per i Collection Members -->
                <div class="icon-placeholder bg-gray-600 w-12 h-12 rounded-full flex items-center justify-center">
                    <x-repo-icon name="collection-name" class="" />
                </div>
            </div>
            <div>
                <h3 class="text-xl font-semibold">{{ __('Collection Members') }}</h3>
                <p class="text-2xl font-bold">{{ $collectionMembersCount }}</p>
            </div>
        </div>
    </div>

    <!-- Notifiche -->
    <div class="bg-gray-700 p-6 rounded-lg shadow-md">
        <h3 class="text-2xl font-bold mb-4">{{ __('Notifications') }}</h3>

        <!-- Notifiche Pendenti -->
        @forelse ($pendingNotifications as $notification)
            @include($this->getNotificationView($notification))
            {{-- @dump($notification) --}}
        @empty
            <p class="text-gray-400">{{ __('No pending notifications available.') }}</p>
        @endforelse
    </div>

    <!-- Bottone per Mostrare/Nascondere Storico -->
    <div class="text-right mt-4">
        <button wire:click="toggleHistoricalNotifications" class="btn btn-sm btn-secondary">
            {{ $showHistoricalNotifications ? __('Hide Processed Notifications') : __('Show Processed Notifications') }}
        </button>
    </div>

    <!-- Notifiche Storiche -->
    @if ($showHistoricalNotifications)
        <div class="bg-gray-700 p-6 rounded-lg shadow-md mt-4">
            <h3 class="text-xl font-bold text-white mb-4">{{ __('Processed Notifications') }}</h3>

            <div class="space-y-4">
                @forelse ($historicalNotifications as $notification)
                    <div class="flex items-start space-x-4">
                        <div class="w-2 h-2 rounded-full bg-gray-400 mt-2"></div>
                        <div class="flex-1 bg-gray-800 p-4 rounded-lg shadow-md">
                            <!-- Inizio del Collapse -->
                            <div class="collapse collapse-arrow bg-gray-600 rounded-lg">
                                <input type="checkbox" id="collapse-{{ $notification->id }}" class="peer hidden" />

                                <!-- Label modificata -->
                                <label for="collapse-{{ $notification->id }}" class="collapse-title flex justify-between items-center text-lg font-medium cursor-pointer text-gray-200">
                                    <span>{{ $notification->data['message'] }}</span>
                                    <button
                                        wire:click="deleteNotificationAction('{{ $notification->id }}')"
                                        wire:confirm="{{ __('notification.confirm_delete') }}"
                                        class="btn btn-warning btn-sm">
                                        {{ __('label.delete') }}
                                    </button>
                                </label>

                                <!-- Contenuto del Collapse -->
                                <div class="collapse-content peer-checked:block hidden">
                                    <p class="text-sm text-gray-300">
                                        {{ __('notification.reply') }}:
                                        <span class="font-bold {{ $notification->outcome === 'declined' ? 'text-red-500' : 'text-green-500' }}">
                                            {{ ucfirst($notification->outcome) }}
                                        </span>
                                    </p>

                                    @if(isset($notification->data['reason']) && $notification->data['reason'])
                                        @if(isset($notification->data['approver']) && $notification->data['approver'])
                                            <p class="text-sm text-gray-300">
                                                {{ __('notification.receiver') }}: <span class="font-bold">{{ $notification->data['approver'] }}</span>
                                            </p>
                                        @endif
                                        <p class="text-sm text-gray-300">
                                            {{ __('notification.proposal_declined_reason') }}: <span class="font-bold">{{ $notification->data['reason'] }}</span>
                                        </p>
                                        <p class="text-sm text-gray-300">
                                            {{ __('collection.wallet.royalty_mint') }}: <span class="font-bold">{{ $notification->data['royalty_mint'] .'%' }}</span>
                                        </p>
                                        <p class="text-sm text-gray-300">
                                            {{ __('collection.wallet.royalty_rebind') }}: <span class="font-bold">{{ $notification->data['royalty_rebind'] .'%' }}</span>
                                        </p>
                                    @endif
                                </div>
                            </div>
                            <!-- Fine del Collapse -->
                            <p class="text-xs text-gray-500">{{ $notification->created_at->diffForHumans() }}</p>
                        </div>
                    </div>
                @empty
                    <p class="text-gray-400">{{ __('No historical notifications.') }}</p>
                @endforelse
            </div>

        </div>
    @endif


    <livewire:proposals.decline-proposal-modal />

</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/language-selector.blade.php ####

<div class="dropdown">
    <div tabindex="0" role="button" class="m-1 btn btn-sm">
        <span class="fi fi-{{ $currentLocale === 'en' ? 'gb' : $currentLocale }}"></span>
        {{ config('app.languages')[$currentLocale] }}
    </div>
    <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box">
        @foreach ($languages as $code => $name)
            <li>
                <a wire:click="$set('currentLocale', '{{ $code }}')" class="flex items-center gap-2">
                    <span class="fi fi-{{ $code === 'en' ? 'gb' : $code }}"></span>
                    {{ $name }}
                </a>
            </li>
        @endforeach
    </ul>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/layout/navigation.blade.php ####

<div class="shadow-lg navbar bg-base-100">
    <div class="flex-none lg:hidden">
        <label for="main-drawer" class="btn btn-square btn-ghost drawer-button">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-5 h-5 stroke-current">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
        </label>
    </div>

    @livewire('language-selector')

    <div class="flex-1">
        <a href="{{ route('dashboard') }}" class="text-xl normal-case btn btn-ghost">
            {{ config('app.name') . " " . config('app.version') }}
        </a>
        <span class="text-xl normal-case btn btn-ghost">{{ $currentTeam }}</span>

    </div>

    <div class="flex-none">
        <div class="dropdown dropdown-end">
            <label tabindex="0" class="btn btn-ghost btn-circle avatar">
                <div class="w-10 rounded-full">
                    <img src="{{ $user->profile_photo_url }}" alt="{{ $user->name }}" />
                </div>
            </label>
            <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
                <li>
                    <a href="{{ route('profile.show') }}" class="justify-between">
                        Profile
                    </a>
                </li>
                @can('manage_roles')
                <li>
                    <a href="{{ route('admin.roles.index') }}">
                        Roles & Permissions
                    </a>
                </li>
                @endcan
                <li>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <a href="{{ route('logout') }}" onclick="event.preventDefault(); this.closest('form').submit();">
                            Logout
                        </a>
                    </form>
                </li>

            </ul>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/modale/collection_general_suggestion.blade.php ####

@php
    use Illuminate\Support\Str;

    $markdownFile = resource_path('markdown/collection_general_suggestion.md');
    $content = Str::markdown(file_get_contents($markdownFile));
@endphp

<!-- Finestra modale -->
<div x-data="{ open: false }">

    <!-- Pulsante per aprire la modale -->
    <x-suggestion-icon :tooltip="__('collection.tips_to_optimize_your_collection')" icon-color="#5f6368" />

    <!-- Modale -->
    <div
        x-show="open"
        class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
        x-cloak
    >
        <div class="bg-white rounded-lg shadow-lg max-w-3xl w-full p-6 relative overflow-hidden">
            <!-- Titolo -->
            <div class="border-b pb-4 mb-4">
                <h2 class="text-xl font-bold text-gray-800">{{ __('collection.tips_to_optimize_your_collection') }}</h2>
                <button
                    class="absolute top-4 right-4 text-gray-500 hover:text-gray-800"
                    @click="open = false"
                >
                    &times;
                </button>
            </div>

            <!-- Contenuto Scrollabile -->
            <div class="overflow-y-auto max-h-96 px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 prose">
                {!! $content !!}
            </div>

            <!-- Pulsante di chiusura -->
            <div class="text-right mt-4">
                <button
                    class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
                    @click="open = false"
                >
                    Chiudi
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/modale/collection_image_suggestion.blade.php ####

@php
    use Illuminate\Support\Str;

    $markdownFile = resource_path('markdown/collection_image_suggestion.md');
    $content = Str::markdown(file_get_contents($markdownFile));
@endphp

<!-- Finestra modale -->
<div x-data="{ open: false }">

    <!-- Pulsante per aprire la modale -->
    <x-suggestion-icon :tooltip="__('collection.tips_for_your_collection_images')" icon-color="#5f6368" />

    <!-- Modale -->
    <div
        x-show="open"
        class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50"
        x-cloak
    >
        <div class="bg-white rounded-lg shadow-lg max-w-3xl w-full p-6 relative overflow-hidden">
            <!-- Titolo -->
            <div class="border-b pb-4 mb-4">
                <h2 class="text-xl font-bold text-gray-800">{{ __('collection.tips_for_your_collection_images') }}</h2>
                <button
                    class="absolute top-4 right-4 text-gray-500 hover:text-gray-800"
                    @click="open = false"
                >
                    &times;
                </button>
            </div>

            <!-- Contenuto Scrollabile -->
            <div class="overflow-y-auto max-h-96 px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 prose">
                {!! $content !!}
            </div>

            <!-- Pulsante di chiusura -->
            <div class="text-right mt-4">
                <button
                    class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700"
                    @click="open = false"
                >
                    Chiudi
                </button>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/photo-uploader.blade.php ####

<div class="p-6 bg-white shadow-md rounded-md">
    <h2 class="text-xl font-bold mb-4">Carica una Foto</h2>

    <!-- Form per il caricamento della foto -->
    <form wire:submit.prevent="save" class="space-y-4">
        <!-- Input per il caricamento del file -->
        <input type="file" wire:model="photo" class="block w-full text-gray-700 border border-gray-300 rounded-md shadow-sm">

        <!-- Mostra l'anteprima se è stato selezionato un file -->
        @if ($photo)
            @dump($this->getTemporaryUrl())
            @if ($this->getTemporaryUrl())
                <img src="{{ $this->getTemporaryUrl() }}" alt="Anteprima della foto" class="w-48 h-48 object-cover rounded-md">
            @else
                <p class="text-red-500">Errore nel generare l'anteprima.</p>
            @endif
        @endif

        <!-- Bottone di caricamento -->
        <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-md shadow hover:bg-blue-600">
            Carica
        </button>
    </form>

    <!-- Messaggio di successo -->
    @if (session()->has('message'))
        <div class="mt-4 p-2 bg-green-100 text-green-700 rounded-md">
            {{ session('message') }}
        </div>
    @endif
</div

#### Inizio File: /home/fabio/EGI/resources/views/livewire/proposals/decline-proposal-modal.blade.php ####

<div class="{{ $isVisible ? 'block' : 'hidden' }}">
    <!-- Overlay -->
    <div class="fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-50">
        <!-- Modale -->
        <div class="bg-gray-800 rounded-lg shadow-2xl w-full max-w-lg p-6 text-white">
            <!-- Header -->
            <div class="flex justify-between items-center border-b border-gray-700 pb-4">
                <h5 class="text-xl font-bold">{{ __('Decline Proposal') }}</h5>
                <button type="button" class="text-gray-400 hover:text-gray-300" wire:click="closeModal">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Body -->
            <div class="mt-4">
                <form wire:submit.prevent="decline">
                    <div class="mb-4">
                        <label for="reason" class="block text-sm font-medium text-gray-300">{{ __('Reason for Decline') }}</label>
                        <textarea id="reason"
                                  class="w-full bg-gray-700 text-white border border-gray-600 rounded-lg p-3 focus:ring-indigo-500 focus:border-indigo-500"
                                  wire:model="reason"
                                  rows="4"
                                  required></textarea>
                        @error('reason') <span class="text-red-500 text-sm mt-1">{{ $message }}</span> @enderror
                    </div>
                    <!-- Actions -->
                    <div class="flex justify-end space-x-4">
                        <button type="button" wire:click="closeModal" class="bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded-lg">
                            {{ __('Cancel') }}
                        </button>
                        <button type="submit" class="bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded-lg">
                            {{ __('Decline') }}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade copy 2.php ####

<script>
    console.log('resources/views/livewire/sidebar.blade.php');
</script>
<div class="drawer-side">
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100">
        <div class="space-y-4 p-4">
            @if (!empty($menus))
                @foreach ($menus as $menu)
                    @can($menu['permission'])
                        @if (count($menu['submenu']) > 0)

                            <!-- Summary con sottomenù -->
                            <details class="collapse collapse-arrow bg-base-200">
                                @if($menu['summary_head'] == true)
                                    <div class="flex gap-2">
                                        @if ($menu['summary_icon'])
                                            {!! $menu['summary_icon'] !!}
                                        @endif
                                        {{ $menu['name'] }}
                                    </div>
                                @else
                                    <summary class="collapse-title text-lg font-medium">
                                        <div class="flex gap-2">
                                            @if ($menu['summary_icon'])
                                                {!! $menu['summary_icon'] !!}
                                            @endif
                                            {{ $menu['name'] }}
                                        </div>
                                    </summary>
                                @endif

                                <div class="collapse-content space-y-2">
                                    @foreach ($menu['submenu'] as $submenu)
                                        @can($submenu['permission'])
                                        <a href="{{ Route::has($submenu['route']) ? route($submenu['route']) : '#' }}"
                                            class="{{ request()->routeIs($submenu['route']) ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                                            {{-- @if($submenu['icon'] === 'fallback')
                                                <img src="{{ config('app.logo_04') }}" alt="{{ $submenu['name'] }}" class="w-12 h-12">
                                            @else --}}
                                                {!! $submenu['icon'] !!}
                                            {{-- @endif --}}
                                                {{ $submenu['name'] }}
                                            </a>
                                        @endcan
                                    @endforeach
                                </div>
                            </details>
                        @else
                            <!-- Summary senza voci -->
                            <a href="{{ Route::has($menu['summary_route']) ? route($menu['summary_route']) : '#' }}"
                                class="text-lg font-medium text-gray-500">
                                <div class="flex gap-2 mb-8 mt-32">
                                    <div class = "mt-0"> {!! $menu['summary_icon'] !!} </div>
                                    <div class = "mt-1">{{ $menu['name'] }}</div>
                                </div>
                            </a>
                            
                            <div class="border-t border-gray-200 dark:border-gray-600"></div>

                        @endif
                    @endcan
                @endforeach
            @else
                <p class="text-center">Nessun menu disponibile</p>
            @endif

        </div>
    </aside>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade copy.php ####

<script>
    console.log('resources/views/livewire/sidebar.blade.php');
</script>
<div class="drawer-side">
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100">
        <div class="space-y-4 p-4">
            <!-- Dashboard -->
            <a href="{{ route('dashboard') }}"
                class="{{ request()->routeIs('dashboard') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                <svg xmlns="http://www.w3.org/2000/svg" class="mr-2 h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path
                        d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" />
                </svg>
                Dashboard
            </a>

            <!-- Admin Section -->
            @can('manage_roles')
                <details class="collapse collapse-arrow bg-base-200">
                    <summary class="collapse-title text-lg font-medium">Admin</summary>
                    <div class="collapse-content space-y-2">
                        <a href="{{ route('admin.roles.index') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40" height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M361.6 370s0 .1 0 0c0 .6.1 1.1.1 1.6v.4c0 .4.1.8.1 1.2 0 .2 0 .4.1.5 0 .4.1.8.2 1.1 0 .2 0 .3.1.5.1.5.2 1.1.3 1.6.1.5.2.9.3 1.4.2.9.5 1.8.8 2.7.1.4.3.9.4 1.3 2 5.6 5 10.2 8.6 13.2.8.7 1.7 1.3 2.5 1.8.6.4 1.2.7 1.8.9.6.3 1.2.5 1.8.7.6.2 1.2.3 1.8.4 1.9.3 3.7.2 5.6-.4l.9-.3c.1 0 .2-.1.3-.1.2-.1.4-.2.6-.2.1-.1.2-.1.3-.2.2-.1.3-.2.5-.3.1-.1.2-.1.4-.2s.3-.2.5-.3c.1-.1.2-.2.4-.2.1-.1.3-.2.4-.3.1 0 .1-.1.2-.1 15.4 40.6 46.9 75.5 83.4 75.5s68-34.9 83.4-75.5c.1 0 .1.1.2.1.1.1.3.2.4.3.1.1.2.2.4.2.1.1.3.2.5.3.1.1.2.1.4.2s.3.2.5.3c.1.1.2.1.3.2.2.1.4.2.6.2.1 0 .2.1.3.1l.9.3c1.9.6 3.7.7 5.6.4.6-.1 1.2-.2 1.8-.4s1.2-.4 1.8-.7l1.8-.9c.9-.5 1.7-1.1 2.5-1.8 4.7-3.9 8.4-10.5 10.1-18.6.1-.5.2-1.1.3-1.6 0-.2 0-.3.1-.5.1-.4.1-.8.2-1.2 0-.2 0-.3.1-.5 0-.4.1-.8.1-1.2v-.4c0-.5.1-1 .1-1.5v-3.7c0-.5 0-.9-.1-1.4v-.2c0-.5-.1-1-.2-1.5-1.2-9.6-6-17.4-12.8-19.4-1.9-.6-3.9-.7-5.8-.3.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2v.1c-1.9-.3-3.9-.2-5.8.3-6.9 2.1-11.6 9.8-12.8 19.4-.1.5-.1 1-.2 1.5v.2c0 .4-.1.9-.1 1.4V368.2c-.4.7-.4 1.2-.4 1.8zM735.1 567.4c-3.2-1.3-6.3-2.5-9.5-3.6v-30.3c0-48-39-87-87-87s-87 39-87 87v10.4c-2.5 7.9-5.4 15.6-8.4 23.2-.4.1-.7.3-1.1.4v2.3c-9.7 23.2-21.9 44.7-36.3 63.8L490.4 557l6.9-9.4 7.7-10.5c.3-.3.5-.6.7-1 .1-.1.1-.2.2-.3.2-.2.3-.5.4-.7.1-.1.2-.3.2-.4.1-.2.2-.4.3-.7.1-.2.2-.3.2-.5.1-.2.2-.4.3-.7.1-.2.1-.4.2-.5.1-.2.1-.4.2-.7.1-.2.1-.4.2-.6.1-.2.1-.4.2-.6l.3-1.5c0-.1 0-.2.1-.3 0-.3.1-.6.1-.9v-.4c0-.3 0-.6.1-.9v-1.6c0-.3 0-.7-.1-1v-.1c-.1-1.6-.5-3.1-1-4.6-.4-1-.8-1.9-1.3-2.8l-12.9-18.1c-2.3-3.8-5.8-6.1-9.5-6.1h-20.3c-3.7 0-7.2 2.3-9.5 6.1l-12.9 18.1c-.5.9-1 1.9-1.3 2.8-.5 1.5-.9 3-1 4.6v.1c0 .3 0 .7-.1 1v1.6c0 .3 0 .6.1.9v.4c0 .3.1.6.1.9 0 .1 0 .2.1.3l.3 1.5c0 .2.1.4.2.6.1.2.1.4.2.6.1.2.1.4.2.7.1.2.1.4.2.5.1.2.2.4.3.7.1.2.1.3.2.5s.2.4.3.7c.1.1.2.3.2.4.1.2.3.5.4.7.1.1.1.2.2.3.2.3.5.7.7 1l7.7 10.5 6.9 9.4-11.2 56-4.1 20.6c-25.5-33.7-44-74.9-54.1-119.7-1.5-6.7-6.8-10.6-12-9L297.6 530c-9.9 3.2-17.3 13.9-18.7 26.9l-13.3 124.2-.4 3.6c-.2 1.8-.3 3.6-.2 5.4.3 12.4 6 23.3 14.4 28.4 1.2.7 2.5 1.3 3.7 1.8.9.3 1.7.6 2.7.8 1.4.3 2.7.4 4.2.4h254.2c12.1 4.8 24.4 8.6 36.8 11.5h.1c7.9 1.8 15.8 3.3 23.8 4.4h.1c8 1.1 15.9 1.8 23.9 2.1 6.4.2 12.8.2 19.2 0 8-.3 16-1 23.9-2.1h.1c7.9-1.1 15.9-2.5 23.8-4.4h.1c6.3-1.5 12.6-3.2 18.9-5.2 6.8-2.1 13.5-4.5 20.2-7.2V567.4zM638.6 477c31.1 0 56.5 25.3 56.5 56.5v21.3c-9.2-2.1-18.4-3.7-27.6-4.7-2.8-9.8-9.3-17.4-17.4-20.1l-62.7-20.2c8.9-19.3 28.5-32.8 51.2-32.8z" />
                                        </g>
                                        <g>
                                            <path fill="#A44995"
                                                d="m504.9 517-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-4.5-5.4-5.1-14.3-1.4-20.6l12.9-18.1c2.3-3.8 5.8-6.1 9.5-6.1H484c3.7 0 7.2 2.3 9.5 6.1l12.9 18.1c3.7 6.3 3.1 15.2-1.5 20.6z" />
                                            <path fill="#952584"
                                                d="m504.9 504.1-23 31.4c-4.6 5.5-11.6 5.5-16.2 0l-23-31.4c-1.2-1.4-2.1-3.1-2.7-4.9-2.1 6-1.1 13.2 2.7 17.8l23 31.4c4.6 5.5 11.6 5.5 16.2 0l23-31.4c3.9-4.6 4.9-11.8 2.7-17.8-.6 1.8-1.5 3.5-2.7 4.9z" />
                                            <path fill="#FFF"
                                                d="M398.4 346.1c3.1 15.2-2.3 30-12.3 33s-20.5-6.9-23.6-22.1c-3.1-15.2 2.3-30 12.3-33 9.8-3 20.4 6.8 23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M386.1 369c-9.9 3-20.5-6.9-23.6-22.1-.2-1.2-.4-2.4-.6-3.5-.5 4.3-.4 8.9.6 13.5 3.1 15.2 13.7 25.1 23.6 22.1 9.1-2.8 14.5-15.5 12.8-29.4-1.2 9.6-5.9 17.4-12.8 19.4z" />
                                            <path fill="#FFF"
                                                d="M549.3 346.1c-3.1 15.2 2.3 30 12.3 33 9.9 3 20.5-6.9 23.6-22.1 3.1-15.2-2.3-30-12.3-33-9.9-3-20.5 6.8-23.6 22.1z" />
                                            <path fill="#DADADA"
                                                d="M585.2 346.9c-3.1 15.2-13.7 25.1-23.6 22.1-6.9-2.1-11.6-9.8-12.8-19.4-1.7 13.9 3.7 26.7 12.8 29.4 9.9 3 20.5-6.9 23.6-22.1 1-4.7 1.1-9.3.6-13.5-.2 1.2-.4 2.4-.6 3.5z" />
                                            <path fill="#FFF"
                                                d="M567.2 325.5c0 57-41.8 126.8-93.3 126.8s-93.3-69.7-93.3-126.8 41.8-103.2 93.3-103.2 93.3 46.2 93.3 103.2z" />
                                            <path fill="#DADADA"
                                                d="M473.8 432.3c-48.5 0-88.4-61.8-92.9-116.6-.3 3.3-.4 6.5-.4 9.9 0 57 41.8 126.8 93.3 126.8s93.3-69.7 93.3-126.8c0-3.3-.1-6.6-.4-9.9-4.5 54.8-44.4 116.6-92.9 116.6z" />
                                            <path fill="#A44995" d="M517.8 673.8h-88L462 513.3h23.6z" />
                                            <path fill="#952584"
                                                d="m517.8 673.8-16.2-80.9c-2.3 2.9-4.6 5.7-7 8.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 601.3c-2.4-2.7-4.7-5.6-7-8.4l-16.2 80.9h88z" />
                                            <path fill="#A44995"
                                                d="M448 276.3s13 24.3 50.4 36.7c20.2 6.7 47.7 9 68.7 10.6.5-57.5-41.4-103.3-93.3-103.3-51.5 0-93.3 46.2-93.3 103.2 0 0 20.7-3.4 39.1-15.3 18.4-11.9 28.4-31.9 28.4-31.9z" />
                                            <path fill="#952584" d="M457.3 525.3h33.1v11.6h-33.1z" />
                                            <path fill="#36A9E1"
                                                d="M668.8 536.9c-1.4-13.1-8.8-23.7-18.7-26.9l-78.2-25.2c-5.2-1.7-10.5 2.3-12 9-11.5 51.1-33.9 97.5-65.2 133.4l-14.1 16.3c-3.8 4.4-9.5 4.4-13.3 0L453 627.2c-31.3-36-53.7-82.3-65.2-133.4-1.5-6.7-6.8-10.6-12-9L297.6 510c-9.9 3.2-17.3 13.9-18.7 26.9l-13.7 127.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-13.8-127.8z" />
                                            <path fill="#0091C5"
                                                d="M681.3 654c-3.4 12.5-12.6 21.7-23.6 21.7H289.9c-11 0-20.2-9.2-23.6-21.7l-1.2 10.8c-2.1 19.4 9.6 36.8 24.8 36.8h367.8c15.2 0 26.8-17.3 24.8-36.8l-1.2-10.8z" />
                                            <path fill="#0091C5"
                                                d="M657.7 701.5c15.2 0 26.8-17.3 24.8-36.8l-12.3-114.3c-29.3-3.7-59-2.3-88.1 4.4v-21.3c0-15.6 6.4-29.8 16.7-40l-26.9-8.7c-1.9-.6-3.8-.5-5.5.2-3.1 4.6-5.8 9.5-8 14.7-1.8 7.2-3.7 14.3-5.9 21.3-.6 4.1-.9 8.2-.9 12.4v30.3c-3.2 1.2-6.4 2.4-9.5 3.6v134.1h115.6z" />
                                            <g>
                                                <path fill="#FFF"
                                                    d="M725.6 615h-30.5V513.5c0-31.1-25.3-56.5-56.5-56.5-31.1 0-56.5 25.3-56.5 56.5V615h-30.5V513.5c0-48 39-87 87-87s87 39 87 87V615z" />
                                                <path fill="#DADADA"
                                                    d="M638.6 444.1c-38.1 0-69.1 27.4-69.1 61.1V615h12.6V513.5c0-31.1 25.3-56.5 56.5-56.5 31.1 0 56.5 25.3 56.5 56.5V615h12.6V505.2c-.1-33.7-31-61.1-69.1-61.1z" />
                                                <path fill="#952584"
                                                    d="M735.1 700.7c-62.8 25.4-130.2 25.4-193.1 0V547.4c58.8-23.8 121.7-25.3 181-4.5 4 1.4 8.1 2.9 12.1 4.5v153.3z" />
                                                <path fill="#A44995"
                                                    d="M562.3 540.2v167.7c50.1 15.7 102.5 15.7 152.6 0V540.2c-50.1-15.7-102.5-15.7-152.6 0z" />
                                                <circle fill="#36A9E1" cx="638.6" cy="601.7" r="26.1" />
                                                <path fill="#36A9E1"
                                                    d="M647.4 666.3h-17.6c-3.7 0-6.7-3-6.7-6.7v-58.2H654v58.2c0 3.7-2.9 6.7-6.6 6.7z" />
                                                <path fill="#2C3088"
                                                    d="M641.7 659.9h-6.3c-1.8 0-3.2-1.4-3.2-3.2v-47.9h12.7v47.9c0 1.7-1.4 3.2-3.2 3.2z" />
                                                <circle fill="#2C3088" cx="638.6" cy="601.7" r="15.5" />
                                                <path fill="#DADADA"
                                                    d="M735.1 561.3c-3.5-1.4-6.9-2.7-10.4-3.9-60.1-21-123.2-19.6-182.6 3.9v10.4c.6 0 1.3-.1 1.9-.4 57.7-23.3 119.1-24.9 177.5-4.5 4 1.4 7.9 2.9 11.8 4.5.6.2 1.2.4 1.9.4l-.1-10.4zM542 685.8c3.5 1.4 6.9 2.7 10.4 3.9 28.3 9.9 57.2 14.8 86.1 14.8 32.5 0 65-6.3 96.5-18.7v-10.4c-.6 0-1.3.1-1.9.4-57.7 23.3-119.1 24.9-177.5 4.5-4-1.4-7.9-2.9-11.8-4.5-.6-.2-1.2-.4-1.9-.4v10.4z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>
                            Roles & Permissions
                        </a>
                        <a href="{{ route('admin.assign.role.form') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                                viewBox="0 0 48 48" width="40" height="40">
                                <defs>
                                    <linearGradient id="c" x1="19.5" y1="47.82" x2="19.5"
                                        y2="-42.52" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#273a9b" />
                                        <stop offset=".56" stop-color="#202f65" />
                                        <stop offset="1" stop-color="#021e2f" />
                                    </linearGradient>
                                    <linearGradient id="a" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#27e9de" />
                                        <stop offset=".52" stop-color="#03a4ec" />
                                        <stop offset="1" stop-color="#2547a8" />
                                    </linearGradient>
                                    <linearGradient id="e" x1="19.5" y1="33.53" x2="19.5"
                                        y2="15.56" xlink:href="#a" />
                                    <linearGradient id="f" x1="19.5" y1="39.3" x2="19.5"
                                        y2="-55.02" xlink:href="#a" />
                                    <linearGradient id="b" x1="33" y1="33.92" x2="33"
                                        y2="15.04" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#fff" />
                                        <stop offset=".52" stop-color="#cce2e6" />
                                        <stop offset="1" stop-color="#8fa1bb" />
                                    </linearGradient>
                                    <linearGradient id="g" x1="27.88" y1="28.99" x2="20.63"
                                        y2="16.24" xlink:href="#b" />
                                    <linearGradient id="h" y1="26.44" y2="38.78" xlink:href="#b" />
                                    <linearGradient id="i" x1="33" y1="56.25" x2="33"
                                        y2="3.66" xlink:href="#c" />
                                    <linearGradient id="j" x1="33" y1="36.81" x2="33"
                                        y2="42.75" xlink:href="#c" />
                                    <linearGradient id="d" x1="33" y1="48.03" x2="33"
                                        y2="33.02" gradientUnits="userSpaceOnUse">
                                        <stop offset="0" stop-color="#f3c57a" />
                                        <stop offset=".49" stop-color="#f39369" />
                                        <stop offset="1" stop-color="#e94867" />
                                    </linearGradient>
                                    <linearGradient id="k" x1="33" y1="41.5" x2="33"
                                        y2="34.55" xlink:href="#d" />
                                </defs>
                                <circle cx="19.5" cy="19.5" r="16.5" style="fill:url(#c)" />
                                <path
                                    d="M19.5 24.27a16.46 16.46 0 0 0-12.61 5.86 16.48 16.48 0 0 0 25.21 0 16.46 16.46 0 0 0-12.6-5.86z"
                                    style="fill:url(#a)" />
                                <path
                                    d="M19.5 24.27a16.37 16.37 0 0 0-6.06 1.18 6.6 6.6 0 0 0 12.12 0 16.37 16.37 0 0 0-6.06-1.18z"
                                    style="fill:url(#e)" />
                                <circle cx="19.5" cy="16.22" r="6.61" style="fill:url(#f)" />
                                <path d="M40.5 39h-15V28.5a7.5 7.5 0 0 1 15 0zm-12-3h9v-7.5a4.5 4.5 0 0 0-9 0z"
                                    style="fill:url(#b)" />
                                <path d="M31.5 36h-3v-7.5a4.49 4.49 0 0 1 3-4.22v-3.13a7.51 7.51 0 0 0-6 7.35V39h6z"
                                    style="fill:url(#g)" />
                                <path
                                    d="M40.5 30.12a2.17 2.17 0 0 0-.69-.12H37.5v6h-9v-6h-2.31a2.17 2.17 0 0 0-.69.12V39h15z"
                                    style="fill:url(#h)" />
                                <rect x="24" y="31.5" width="18" height="13.5" rx="2.19" ry="2.19"
                                    style="fill:url(#i)" />
                                <path d="M26.19 31.5a2.18 2.18 0 0 0-2.07 1.5h17.76a2.18 2.18 0 0 0-2.07-1.5z"
                                    style="fill:url(#j)" />
                                <path
                                    d="M35.16 38.16a2.16 2.16 0 0 0-4.26-.52 2.14 2.14 0 0 0 .42 1.87 1.15 1.15 0 0 1 .24.73v.32A1.44 1.44 0 0 0 33 42a1.44 1.44 0 0 0 1.44-1.44v-.32a1.18 1.18 0 0 1 .25-.74 2.13 2.13 0 0 0 .47-1.34z"
                                    style="fill:url(#d)" />
                                <path
                                    d="M35 38.92a2.16 2.16 0 0 0-2.59-1.35A2.13 2.13 0 0 0 31 38.91a2.16 2.16 0 0 0 .33.6 1.15 1.15 0 0 1 .24.73v.32a1.44 1.44 0 1 0 2.88 0v-.32a1.18 1.18 0 0 1 .25-.74 2.16 2.16 0 0 0 .3-.58z"
                                    style="fill:url(#k)" />
                            </svg>
                            Assign roles
                        </a>
                        <a href="{{ route('admin.assign.permissions.form') }}"
                            class="{{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" width="40"
                                height="40" xml:space="preserve">
                                <switch>
                                    <g>
                                        <circle fill="#13333D" cx="500" cy="500" r="398" />
                                        <circle fill="#0F3D4E" cx="500" cy="500" r="344.3" />
                                        <g fill="#13333D">
                                            <path
                                                d="M690.9 656.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9v4.5c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-4.5c-.1-9.9-8.1-17.9-18-17.9zM708.8 601.9V393c0-13.8-11.2-25-25-25H612v-53.4c0-11.5-6.6-22-17-26.9-60.1-28.6-129.9-28.6-190 0-10.4 4.9-17 15.4-17 26.9V368h-71.8c-13.8 0-25 11.2-25 25v218.9c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10h-.1z" />
                                        </g>
                                        <g>
                                            <path fill="#952584"
                                                d="M683.8 684.3H316.2c-13.8 0-25-11.2-25-25v-4.5h417.7v4.5c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#A44995"
                                                d="M690.9 636.9H557.5c-2.8 0-5 2.2-5 5v.4c0 5.5-4.5 10-10 10h-85c-5.5 0-10-4.5-10-10 0-3-2.4-5.4-5.4-5.4h-133c-9.9 0-17.9 8-17.9 17.9 0 9.9 8 17.9 17.9 17.9h381.8c9.9 0 17.9-8 17.9-17.9 0-9.9-8-17.9-17.9-17.9zM683.8 616.9H316.2c-13.8 0-25-11.2-25-25V373c0-13.8 11.2-25 25-25h367.7c13.8 0 25 11.2 25 25v218.9c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#952584"
                                                d="M683.8 606.9H316.2c-13.8 0-25-11.2-25-25v10c0 13.8 11.2 25 25 25h367.7c13.8 0 25-11.2 25-25v-10c-.1 13.8-11.3 25-25.1 25z" />
                                            <path fill="#36A9E1"
                                                d="M669.1 581.9H330.9c-6.9 0-12.6-5.6-12.6-12.6V375.6c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v193.7c0 7-5.7 12.6-12.6 12.6z" />
                                            <path fill="#0091C5"
                                                d="M669.1 363H330.9c-6.9 0-12.6 5.6-12.6 12.6v10c0-6.9 5.6-12.6 12.6-12.6h338.2c6.9 0 12.6 5.6 12.6 12.6v-10c0-7-5.7-12.6-12.6-12.6z" />
                                            <path fill="#FFF"
                                                d="M364.7 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3s-2.8 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M364.7 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1 2.3-3.2 3.8-5.8 3.8z" />
                                            <path fill="#FFF"
                                                d="M672.1 661.1h-36.8c-3.5 0-6.3-2.8-6.3-6.3s2.8-6.3 6.3-6.3h36.8c3.5 0 6.3 2.8 6.3 6.3-.1 3.5-2.9 6.3-6.3 6.3z" />
                                            <path fill="#DADADA"
                                                d="M672.1 656.1h-36.8c-2.6 0-4.8-1.6-5.8-3.8-.3.8-.5 1.6-.5 2.5 0 3.5 2.8 6.3 6.3 6.3h36.8c3.5 0 6.3-2.8 6.3-6.3 0-.9-.2-1.7-.5-2.5-1.1 2.3-3.3 3.8-5.8 3.8z" />
                                            <circle fill="#36A9E1" cx="612.8" cy="654.8" r="6.2" />
                                            <path fill="#0091C5"
                                                d="M612.8 656c-2.5 0-4.7-1.5-5.6-3.7-.3.8-.5 1.6-.5 2.5 0 3.4 2.8 6.2 6.2 6.2 3.4 0 6.2-2.8 6.2-6.2 0-.9-.2-1.7-.5-2.5-1.1 2.2-3.3 3.7-5.8 3.7z" />
                                            <g>
                                                <path fill="#0091C5"
                                                    d="m589.1 485.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 470.7 388 451 388 430.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#FFF"
                                                    d="m589.1 465.1-73.9 72.7c-8.4 8.3-22 8.3-30.4 0l-73.9-72.7C396.3 450.7 388 431 388 410.5v-116c0-11.5 6.6-22 17-26.9 60.1-28.6 129.9-28.6 190 0 10.4 4.9 17 15.4 17 26.9v116c0 20.6-8.2 40.3-22.9 54.6z" />
                                                <path fill="#DADADA"
                                                    d="M599.5 404.6V303.2c0-10-5.9-19.2-15.1-23.5-53.4-25-115.4-25-168.8 0-9.2 4.3-15.1 13.5-15.1 23.5v101.4c0 17.9 7.3 35.1 20.3 47.7l65.7 63.6c7.5 7.3 19.5 7.3 27 0l65.7-63.6c13-12.5 20.3-29.7 20.3-47.7z" />
                                                <path fill="#A44995"
                                                    d="m572.4 448-60.1 59.1c-6.9 6.7-17.9 6.7-24.7 0l-60-59.1a62.263 62.263 0 0 1-18.6-44.4v-94.3c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v94.3c0 16.8-6.7 32.7-18.6 44.4z" />
                                                <path fill="#952584"
                                                    d="M577.2 287.6c-48.8-23.3-105.6-23.3-154.4 0-8.4 4-13.8 12.5-13.8 21.9v13c0-9.3 5.4-17.8 13.8-21.9 48.8-23.3 105.6-23.3 154.4 0 8.4 4 13.8 12.5 13.8 21.9v-13c0-9.4-5.4-17.9-13.8-21.9z" />
                                            </g>
                                            <g>
                                                <path fill="#952584"
                                                    d="M489.6 447.5c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22l-61.4 79.2c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#FFF"
                                                    d="M489.6 433.8c-3.9-.7-7.5-2.8-9.9-6.1l-38.5-51.8c-5.2-6.9-3.7-16.7 3.2-21.9 6.9-5.2 16.7-3.7 21.9 3.2l26.2 35.3 48.7-62.9c5.3-6.8 15.1-8.1 22-2.8 6.8 5.3 8.1 15.1 2.8 22L504.6 428c-3 3.9-7.6 6.1-12.5 6.1-.9-.1-1.7-.2-2.5-.3z" />
                                                <path fill="#DADADA"
                                                    d="m563.4 326.9-71.1 91.8-39.4-53c-3.1-4.1-7.2-6.9-11.8-8.4-3.9 5.4-4.1 12.9.1 18.6l38.5 51.8c2.4 3.3 6 5.4 9.9 6.1.8.1 1.6.2 2.5.2 4.9.1 9.5-2.2 12.5-6.1l61.4-79.2c5.2-6.8 4-16.5-2.6-21.8z" />
                                            </g>
                                        </g>
                                    </g>
                                </switch>
                            </svg>
                            Assign permissions
                        </a>
                        {{-- <details class="collapse collapse-arrow bg-base-200">
                            <summary class="collapse-title text-lg font-medium">Ultra Confi Manager</summary>
                                <a href="{{ route('admin.open_uconfig') }}"
                                class="btn btn-ghost w-full justify-start {{ request()->routeIs('admin.roles.*') ? 'btn-active' : '' }}">
                                    Ultra Config Manager
                                </a>
                        </details> --}}
                    </div>
                </details>
            @endcan

            <!-- Gestione Collezioni -->
            <details class="collapse-arrow collapse bg-base-200">
                <summary class="collapse-title text-lg font-medium">Gestione Collezioni</summary>
                <div class="collapse-content space-y-2">
                    <a href="{{ route('collections.index') }}"
                        class="{{ request()->routeIs('collections.*') ? 'btn-active' : '' }} btn btn-ghost w-full justify-start">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" width="40" height="40"
                            style="enable-background:new 0 0 256 256" xml:space="preserve">
                            <style>
                                .st2 {
                                    fill: none;
                                    stroke: #6b1d1d;
                                    stroke-width: .5;
                                    stroke-miterlimit: 10
                                }

                                .st3 {
                                    fill: #3a312a
                                }

                                .st8 {
                                    fill: #f16c7a
                                }

                                .st9 {
                                    fill: #8ac6dd
                                }

                                .st14 {
                                    fill: #d7e057
                                }
                            </style>
                            <g id="Layer_1">
                                <path
                                    d="M215.716 91.134h-7.02l-2.17 4.26c.18.58.28 1.19.28 1.83v67.58l7.81 17.84a1.5 1.5 0 0 1-.77 1.97l-7.04 3.08v30.01c0 3.36-2.73 6.09-6.09 6.09h15c3.36 0 6.09-2.73 6.09-6.09V97.224c0-3.36-2.73-6.09-6.09-6.09z"
                                    style="fill:#decaad" />
                                <path class="st14"
                                    d="M47.717 25.964s3.408 12.659 13.222 13.246c0 0-13.1 4.525-13.321 14.202 0 0-2.579-13.572-12.925-14.059 0 .001 12.05-1.825 13.024-13.389z" />
                                <path class="st3"
                                    d="M47.617 54.912a1.502 1.502 0 0 1-1.473-1.217c-.023-.124-2.494-12.417-11.522-12.842a1.5 1.5 0 0 1-.155-2.982c.441-.069 10.895-1.817 11.754-12.033a1.501 1.501 0 0 1 2.943-.265c.031.116 3.259 11.626 11.864 12.141a1.501 1.501 0 0 1 .402 2.915c-.121.042-12.119 4.311-12.312 12.819a1.498 1.498 0 0 1-1.501 1.464zm-7.741-15.73c3.878 1.969 6.23 5.746 7.587 8.877 2.026-4.021 5.941-6.787 8.949-8.427-4.135-1.842-6.784-5.651-8.335-8.722-1.793 4.36-5.27 6.867-8.201 8.272z" />
                                <path class="st14"
                                    d="M26.018 42.945s2.411 8.954 9.352 9.369c0 0-9.266 3.201-9.422 10.045 0 0-1.824-9.6-9.142-9.944 0 0 8.524-1.291 9.212-9.47z" />
                                <path class="st3"
                                    d="M25.947 63.859a1.5 1.5 0 0 1-1.473-1.22c-.016-.082-1.704-8.442-7.739-8.726a1.5 1.5 0 0 1-.154-2.982c.296-.047 7.364-1.243 7.942-8.113a1.501 1.501 0 0 1 1.361-1.368 1.506 1.506 0 0 1 1.581 1.102c.023.079 2.229 7.919 7.994 8.264a1.5 1.5 0 0 1 .4 2.916c-.081.028-8.282 2.953-8.412 8.662a1.5 1.5 0 0 1-1.5 1.465zm-4.519-11.527c2.108 1.333 3.524 3.394 4.447 5.28 1.376-2.232 3.516-3.872 5.365-4.973-2.287-1.269-3.884-3.35-4.941-5.224-1.173 2.287-3.015 3.876-4.871 4.917z" />
                                <path class="st14"
                                    d="M26.018 16.287s2.411 8.954 9.352 9.37c0 0-9.266 3.201-9.422 10.045 0 0-1.824-9.6-9.142-9.944 0 0 8.524-1.292 9.212-9.471z" />
                                <path class="st3"
                                    d="M25.947 37.202a1.5 1.5 0 0 1-1.473-1.22c-.016-.082-1.704-8.442-7.739-8.726a1.5 1.5 0 0 1-.154-2.981c.296-.047 7.364-1.243 7.942-8.114a1.499 1.499 0 0 1 2.942-.267c.023.079 2.229 7.92 7.994 8.265a1.5 1.5 0 0 1 .4 2.915c-.081.028-8.282 2.952-8.412 8.662a1.5 1.5 0 0 1-1.5 1.466zm-4.519-11.528c2.108 1.333 3.524 3.395 4.447 5.28 1.376-2.232 3.516-3.872 5.365-4.973-2.287-1.269-3.884-3.35-4.941-5.223-1.173 2.286-3.015 3.875-4.871 4.916z" />
                                <path
                                    d="M126.234 75.213H33.411c-9.447 0-17.105 7.658-17.105 17.105v130.289c0 9.447 7.658 17.105 17.105 17.105H222.2c9.447 0 17.105-7.658 17.105-17.105V92.318c0-9.447-7.658-17.105-17.105-17.105H126.234z"
                                    style="fill:#87796f" />
                                <path class="st3"
                                    d="M222.2 241.213H33.411c-10.259 0-18.605-8.346-18.605-18.605V92.318c0-10.259 8.347-18.605 18.605-18.605h92.822a1.5 1.5 0 1 1 0 3H33.411c-8.604 0-15.605 7.001-15.605 15.605v130.289c0 8.605 7.001 15.605 15.605 15.605H222.2c8.605 0 15.605-7.001 15.605-15.605V92.318c0-8.605-7.001-15.605-15.605-15.605h-83.155a1.5 1.5 0 1 1 0-3H222.2c10.259 0 18.605 8.346 18.605 18.605v130.289c.001 10.26-8.346 18.606-18.605 18.606z" />
                                <path
                                    d="M223.306 147.226V97.224c0-4.194-3.4-7.594-7.594-7.594H56.9a7.594 7.594 0 0 0-7.594 7.594v120.478c0 4.194 3.4 7.594 7.594 7.594h158.811c4.194 0 7.594-3.4 7.594-7.594v-70.476z"
                                    style="fill:#fce8cb" />
                                <path class="st3"
                                    d="M215.712 226.796H56.9c-5.015 0-9.095-4.08-9.095-9.095V97.224c0-5.015 4.08-9.095 9.095-9.095h158.811c5.015 0 9.094 4.08 9.094 9.095v120.478c.001 5.014-4.078 9.094-9.093 9.094zM56.9 91.129a6.102 6.102 0 0 0-6.095 6.095v120.478a6.102 6.102 0 0 0 6.095 6.095h158.811a6.101 6.101 0 0 0 6.094-6.095V97.224a6.1 6.1 0 0 0-6.094-6.095H56.9z" />
                                <circle class="st8" cx="32.306" cy="156.963" r="8" />
                                <path class="st3"
                                    d="M32.306 166.463c-5.238 0-9.5-4.262-9.5-9.5s4.262-9.5 9.5-9.5 9.5 4.262 9.5 9.5-4.262 9.5-9.5 9.5zm0-16c-3.584 0-6.5 2.916-6.5 6.5s2.916 6.5 6.5 6.5 6.5-2.916 6.5-6.5-2.916-6.5-6.5-6.5z" />
                                <path class="st8" d="m92.306 150.577-31.754 55h63.508z" />
                                <path class="st3"
                                    d="M124.061 207.078H60.552a1.5 1.5 0 0 1-1.299-2.25l31.754-55a1.5 1.5 0 0 1 2.598 0l31.755 55a1.5 1.5 0 0 1-1.299 2.25zm-60.912-3h58.313l-29.157-50.5-29.156 50.5z" />
                                <path transform="rotate(-23.648 160.806 162.746)" class="st9"
                                    d="M120.996 122.935h79.619v79.619h-79.619z" />
                                <path class="st3"
                                    d="M140.308 216.679a1.5 1.5 0 0 1-1.375-.899l-31.936-72.934a1.502 1.502 0 0 1 .773-1.976l72.935-31.936a1.498 1.498 0 0 1 1.975.772l31.935 72.934a1.5 1.5 0 0 1-.773 1.976l-72.934 31.936c-.195.087-.4.127-.6.127zm-29.961-73.661 30.732 70.186 70.186-30.732-30.731-70.186-70.187 30.732z" />
                                <path class="st8"
                                    d="m235.846 34.542 2.932-5.801a8.499 8.499 0 0 0-3.752-11.42 8.499 8.499 0 0 0-11.42 3.752l-2.932 5.801 15.172 7.668z" />
                                <path class="st3"
                                    d="M235.847 36.042c-.232 0-.465-.054-.677-.161l-15.173-7.669a1.501 1.501 0 0 1-.662-2.016l2.933-5.801a9.936 9.936 0 0 1 5.804-4.99 9.946 9.946 0 0 1 7.632.576c4.921 2.487 6.9 8.515 4.414 13.436l-2.932 5.801a1.506 1.506 0 0 1-1.339.824zm-13.158-9.831 12.495 6.316 2.255-4.462c1.741-3.445.354-7.664-3.09-9.405a6.953 6.953 0 0 0-5.342-.403 6.948 6.948 0 0 0-4.062 3.493l-2.256 4.461z" />
                                <path class="st9"
                                    d="m202.646 62.252-51.209 100.499 15.172 7.668 69.237-135.877-15.172-7.669-11.968 23.488z" />
                                <path class="st3"
                                    d="M166.608 171.92c-.227 0-.459-.052-.676-.162l-15.173-7.669a1.504 1.504 0 0 1-.66-2.02l51.21-100.498a1.5 1.5 0 0 1 2.674 1.363l-50.527 99.157 12.496 6.315 67.875-133.205-12.496-6.315-11.289 22.156a1.5 1.5 0 0 1-2.674-1.363l11.969-23.488a1.501 1.501 0 0 1 2.014-.658l15.173 7.668a1.504 1.504 0 0 1 .66 2.02l-69.237 135.878a1.503 1.503 0 0 1-1.339.821z" />
                                <path class="st8" d="m185.942 95.035-34.505 67.716 15.172 7.668 34.505-67.716z" />
                                <path class="st3"
                                    d="M166.608 171.92c-.227 0-.459-.052-.676-.162l-15.173-7.669a1.504 1.504 0 0 1-.66-2.02l34.506-67.716a1.502 1.502 0 0 1 2.014-.658l15.172 7.669a1.504 1.504 0 0 1 .66 2.02L167.946 171.1c-.265.52-.792.82-1.338.82zm-13.152-9.829 12.496 6.315 33.143-65.043-12.495-6.315-33.144 65.043z" />
                                <path class="st14" d="m166.609 170.419-15.172-7.668-2.338 23.468z" />
                                <path class="st3"
                                    d="M149.099 187.72a1.502 1.502 0 0 1-1.493-1.649l2.338-23.469a1.5 1.5 0 0 1 2.168-1.19l15.173 7.669a1.5 1.5 0 0 1 .329 2.453l-17.511 15.8a1.499 1.499 0 0 1-1.004.386zm3.613-22.644-1.736 17.429 13.005-11.734-11.269-5.695z" />
                                <circle class="st14" cx="120.806" cy="126.744" r="28.5" />
                                <path class="st3"
                                    d="M120.806 156.744c-16.542 0-30-13.458-30-30s13.458-30 30-30 30 13.458 30 30-13.458 30-30 30zm0-57c-14.888 0-27 12.112-27 27s12.112 27 27 27 27-12.112 27-27-12.113-27-27-27z" />
                            </g>
                        </svg>
                        {{ __('collection.manage_collection') }}
                    </a>
                </div>
            </details>
        </div>
    </aside>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/sidebar.blade.php ####

<div class="drawer-side">
    <!-- drawer-overlay gestisce il click fuori dalla sidebar per chiuderla su mobile -->
    <label for="main-drawer" class="drawer-overlay"></label>
    <aside class="min-h-screen w-80 bg-base-100 flex flex-col">
        <!-- Titolo del Contesto -->
        <div class="p-4 bg-gray-900 text-white text-2xl font-bold">
            {{ __($contextTitle) }}
        </div>

        <div class="p-6">
            <x-back-button />
        </div>

        <x-separator />

        <!-- Menu -->
        <div class="space-y-4 p-4 flex-1 overflow-y-auto">
            @if (!empty($menus))
                @foreach ($menus as $menu)
                    @if (empty($menu['permission']) || Gate::allows($menu['permission']))
                        @if (!empty($menu['items']))
                            <!-- Summary con sottomenù -->
                            <details class="collapse collapse-arrow bg-base-200">
                                <summary class="collapse-title text-lg font-medium flex items-center gap-2">
                                    @if (!empty($menu['icon']))
                                        {!! $menu['icon'] !!}
                                    @endif
                                    <span>{{ $menu['name'] }}</span>
                                </summary>

                                <div class="collapse-content space-y-2 ml-4">
                                    @foreach ($menu['items'] as $item)
                                        @if (empty($item['permission']) || Gate::allows($item['permission']))
                                            <a href="{{ route($item['route']) }}"
                                               class="btn btn-ghost w-full justify-start flex items-center gap-2 hover:bg-gray-200">
                                                {!! $item['icon'] !!}
                                                <span>{{ $item['name'] }}</span>
                                            </a>
                                        @endif
                                    @endforeach
                                </div>
                            </details>
                        @else
                            <!-- Summary senza voci -->
                            <a href="{{ route($menu['summary_route']) }}"
                               class="text-lg font-medium text-gray-700 flex items-center gap-2 hover:text-blue-600">
                                @if (!empty($menu['icon']))
                                    {!! $menu['icon'] !!}
                                @endif
                                <span>{{ $menu['name'] }}</span>
                            </a>
                            <div class="border-t border-gray-300 my-4"></div>
                        @endif
                        <x-separator />
                    @endif
                @endforeach
            @else
                <p class="text-center text-gray-500">Nessun menu disponibile</p>
            @endif
        </div>
    </aside>
</div>



#### Inizio File: /home/fabio/EGI/resources/views/livewire/team-manager.blade.php ####

<div>
    {{-- Be like water. --}}
</div>

#### Inizio File: /home/fabio/EGI/resources/views/livewire/welcome/auth-forms.blade.php ####

<div>
    <!-- Tab Navigation -->
    <div class="tabs tabs-boxed bg-base-200 bg-opacity-50 mb-6">
        <a wire:click="$set('showLogin', true)"
           class="tab {{ $showLogin ? 'tab-active' : '' }}">
            Login
        </a>
        <a wire:click="$set('showLogin', false)"
           class="tab {{ !$showLogin ? 'tab-active' : '' }}">
            Register
        </a>
    </div>

    <!-- Forms Container -->
    <div class="transition-all duration-300">
        @if($showLogin)
            <x-auth-session-status class="mb-4" :status="session('status')" />

            <form method="POST" action="{{ route('login') }}">
                @csrf
                <div class="space-y-4">
                    <div>
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" name="email" :value="old('email')" required autofocus autocomplete="username"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password" value="{{ __('Password') }}" />
                        <x-input id="password" type="password" name="password" required autocomplete="current-password"
                                class="input input-bordered w-full" />
                    </div>

                    <div class="flex items-center justify-between">
                        <label class="label cursor-pointer">
                            <input type="checkbox" name="remember" class="checkbox checkbox-primary" />
                            <span class="label-text ml-2">{{ __('Remember me') }}</span>
                        </label>

                        @if (Route::has('password.request'))
                            <a class="link link-primary" href="{{ route('password.request') }}">
                                {{ __('Forgot password?') }}
                            </a>
                        @endif
                    </div>

                    <x-button class="btn btn-primary w-full">
                        {{ __('Log in') }}
                    </x-button>
                </div>
            </form>
        @else
            <form method="POST" action="{{ route('register') }}">
                @csrf
                <div class="space-y-4">
                    <div>
                        <x-label for="name" value="{{ __('Name') }}" />
                        <x-input id="name" type="text" name="name" :value="old('name')" required autofocus autocomplete="name"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" name="email" :value="old('email')" required autocomplete="username"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password" value="{{ __('Password') }}" />
                        <x-input id="password" type="password" name="password" required autocomplete="new-password"
                                class="input input-bordered w-full" />
                    </div>

                    <div>
                        <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
                        <x-input id="password_confirmation" type="password" name="password_confirmation" required autocomplete="new-password"
                                class="input input-bordered w-full" />
                    </div>

                    @if (Laravel\Jetstream\Jetstream::hasTermsAndPrivacyPolicyFeature())
                        <div>
                            <x-label for="terms">
                                <div class="flex items-center">
                                    <x-checkbox name="terms" id="terms" required />
                                    <div class="ml-2">
                                        {!! __('I agree to the :terms_of_service and :privacy_policy', [
                                            'terms_of_service' => '<a target="_blank" href="'.route('terms.show').'" class="link link-primary">'.__('Terms of Service').'</a>',
                                            'privacy_policy' => '<a target="_blank" href="'.route('policy.show').'" class="link link-primary">'.__('Privacy Policy').'</a>',
                                        ]) !!}
                                    </div>
                                </div>
                            </x-label>
                        </div>
                    @endif

                    <x-button class="btn btn-primary w-full">
                        {{ __('Register') }}
                    </x-button>
                </div>
            </form>
        @endif
    </div>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/navigation-menu.blade.php ####

<nav x-data="{ open: false }" class="bg-white dark:bg-gray-800 border-b border-gray-100 dark:border-gray-700">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
            <div class="flex">
                <!-- Logo -->
                <div class="shrink-0 flex items-center">
                    <a href="{{ route('dashboard') }}">
                        <x-application-mark class="block h-9 w-auto" />
                    </a>
                </div>

                {{-- @if (Auth::user()->can('superadmin')) --}}
                {{-- @endif --}}

                <!-- Navigation Links Desktop -->
                <div class="hidden space-x-8 sm:-my-px sm:ms-10 sm:flex">
                    <x-nav-link href="{{ route('dashboard') }}" :active="request()->routeIs('dashboard')">
                        {{ __('Dashboard') }}
                    </x-nav-link>
                    <!-- Altri link desktop se vuoi -->
                </div>

            </div>

            <div class="flex">
                <div class="shrink-0 flex items-center text-4xl text-gray-700 dark:text-gray-500">
                    {{ Auth::user()->name }}
                </div>
            </div>


            <div class="hidden sm:flex sm:items-center sm:ms-6">
                <!-- Teams Dropdown (se abilitato) -->
                {{-- @if (Laravel\Jetstream\Jetstream::hasTeamFeatures())
                    <div class="ms-3 relative">
                        <x-dropdown align="right" width="60">
                            <x-slot name="trigger">
                                <span class="inline-flex rounded-md">
                                    <button type="button"
                                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:text-gray-700 dark:hover:text-gray-300 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 active:bg-gray-50 dark:active:bg-gray-700 transition ease-in-out duration-150">
                                        {{ Auth::user()?->currentTeam?->name ?? 'Nessun team assegnato' }}

                                        <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                                             viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                  d="M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"/>
                                        </svg>
                                    </button>
                                </span>
                            </x-slot>

                            <x-slot name="content">
                                <!-- Team Management -->
                                <div class="w-60">
                                    <div class="block px-4 py-2 text-xs text-gray-400">
                                        {{ __('Manage Team') }}
                                    </div>

                                    <x-dropdown-link
                                        href="{{ Auth::user()?->currentTeam?->id ? route('teams.show', Auth::user()->currentTeam->id) : '#' }}">
                                        {{ __('Team Settings') }}
                                    </x-dropdown-link>

                                    @can('create', Laravel\Jetstream\Jetstream::newTeamModel())
                                        <x-dropdown-link href="{{ route('teams.create') }}">
                                            {{ __('Create New Team') }}
                                        </x-dropdown-link>
                                    @endcan

                                    @if (Auth::user()->allTeams()->count() > 1)
                                        <div class="border-t border-gray-200 dark:border-gray-600"></div>

                                        <div class="block px-4 py-2 text-xs text-gray-400">
                                            {{ __('Switch Teams') }}
                                        </div>

                                        @foreach (Auth::user()->allTeams() as $team)
                                            <x-switchable-team :team="$team" />
                                        @endforeach
                                    @endif
                                </div>
                            </x-slot>
                        </x-dropdown>
                    </div>
                @endif --}}

                <!-- Settings Dropdown -->
                <div class="ms-3 relative">
                    <x-dropdown align="right" width="48">
                        <x-slot name="trigger">
                            @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
                                <button
                                    class="flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition">
                                    <img class="size-8 rounded-full object-cover" src="{{ Auth::user()->profile_photo_url }}"
                                         alt="{{ Auth::user()->name }}"/>
                                </button>
                            @else
                                <span class="inline-flex rounded-md">
                                    <button type="button"
                                            class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:text-gray-700 dark:hover:text-gray-300 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 active:bg-gray-50 dark:active:bg-gray-700 transition ease-in-out duration-150">
                                        {{ Auth::user()->name }}

                                        <svg class="ms-2 -me-0.5 size-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                                             viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                  d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
                                        </svg>
                                    </button>
                                </span>
                            @endif
                        </x-slot>

                        <x-slot name="content">
                            <!-- Account Management -->
                            <div class="block px-4 py-2 text-xs text-gray-400">
                                {{ __('Manage Account') }}
                            </div>

                            <x-dropdown-link href="{{ route('profile.show') }}">
                                {{ __('Profile') }}
                            </x-dropdown-link>

                            @if (Laravel\Jetstream\Jetstream::hasApiFeatures())
                                <x-dropdown-link href="{{ route('api-tokens.index') }}">
                                    {{ __('API Tokens') }}
                                </x-dropdown-link>
                            @endif

                            <div class="border-t border-gray-200 dark:border-gray-600"></div>

                            <!-- Authentication -->
                            <form method="POST" action="{{ route('logout') }}" x-data>
                                @csrf

                                <x-dropdown-link href="{{ route('logout') }}"
                                             @click.prevent="$root.submit();">
                                    {{ __('Log Out') }}
                                </x-dropdown-link>
                            </form>
                        </x-slot>
                    </x-dropdown>
                </div>
            </div>

            <!-- Sezione mobile (schermi piccoli) con due pulsanti: uno per la navbar, uno per la sidebar -->
            <div class="-me-2 flex items-center sm:hidden">
                <!-- Pulsante per togglare la SIDEBAR (Drawer DaisyUI) -->
                <!-- Usa un'icona diversa per distinguere questo dal menu navbar -->
                <label for="main-drawer" class="inline-flex items-center justify-center p-2 ms-2 rounded-md text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-900 focus:outline-none transition duration-150 ease-in-out">
                    <svg class="size-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <!-- Ad esempio puntini che simboleggiano la sidebar -->
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M10 6h9M10 12h9M10 18h9M4 6h.01M4 12h.01M4 18h.01" />
                    </svg>
                </label>

                <!-- Pulsante per togglare il menu della NAVBAR (Alpine) -->
                <button @click="open = ! open" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-900 focus:outline-none transition duration-150 ease-in-out">
                    <svg class="size-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                        <!-- Icona hamburger (visibile quando open = false) -->
                        <path :class="{'inline-flex': ! open, 'hidden': open }" class="inline-flex"
                              stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M4 6h16M4 12h16M4 18h16" />
                        <!-- Icona X (visibile quando open = true) -->
                        <path :class="{'hidden': ! open, 'inline-flex': open }" class="hidden"
                              stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Responsive Navigation Menu (Alpine) -->
    <!-- Resta come nel tuo codice, questo serve per il menu responsive della NAVBAR, non per la sidebar -->
    <div :class="{'block': open, 'hidden': ! open}" class="hidden sm:hidden">
        <div class="pt-2 pb-3 space-y-1">
            <x-responsive-nav-link href="{{ route('dashboard') }}" :active="request()->routeIs('dashboard')">
                {{ __('Dashboard') }}
            </x-responsive-nav-link>
            <!-- Altri link responsive se vuoi -->
        </div>

        <!-- Responsive Settings Options -->
        <div class="pt-4 pb-1 border-t border-gray-200 dark:border-gray-600">
            <div class="flex items-center px-4">
                @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
                    <div class="shrink-0 me-3">
                        <img class="size-10 rounded-full object-cover" src="{{ Auth::user()->profile_photo_url }}"
                             alt="{{ Auth::user()->name }}" />
                    </div>
                @endif

                <div>
                    <div class="font-medium text-base text-gray-800 dark:text-gray-200">{{ Auth::user()->name }}</div>
                    <div class="font-medium text-sm text-gray-500">{{ Auth::user()->email }}</div>
                </div>
            </div>

            <div class="mt-3 space-y-1">
                <x-responsive-nav-link href="{{ route('profile.show') }}" :active="request()->routeIs('profile.show')">
                    {{ __('Profile') }}
                </x-responsive-nav-link>

                @if (Laravel\Jetstream\Jetstream::hasApiFeatures())
                    <x-responsive-nav-link href="{{ route('api-tokens.index') }}" :active="request()->routeIs('api-tokens.index')">
                        {{ __('API Tokens') }}
                    </x-responsive-nav-link>
                @endif

                <!-- Authentication -->
                <form method="POST" action="{{ route('logout') }}" x-data>
                    @csrf
                    <x-responsive-nav-link href="{{ route('logout') }}"
                                   @click.prevent="$root.submit();">
                        {{ __('Log Out') }}
                    </x-responsive-nav-link>
                </form>

                <!-- Team Management -->
                {{-- @if (Laravel\Jetstream\Jetstream::hasTeamFeatures())
                    <div class="border-t border-gray-200 dark:border-gray-600"></div>

                    <div class="block px-4 py-2 text-xs text-gray-400">
                        {{ __('Manage Team') }}
                    </div>

                    <x-responsive-nav-link
                        href="{{ Auth::user()?->currentTeam?->id ? route('teams.show', Auth::user()->currentTeam->id) : '#' }}"
                        :active="Auth::user()?->currentTeam && request()->routeIs('teams.show')">
                        {{ __('Team Settings') }}
                    </x-responsive-nav-link>

                    @can('create', Laravel\Jetstream\Jetstream::newTeamModel())
                        <x-responsive-nav-link href="{{ route('teams.create') }}" :active="request()->routeIs('teams.create')">
                            {{ __('Create New Team') }}
                        </x-responsive-nav-link>
                    @endcan

                    @if (Auth::user()->allTeams()->count() > 1)
                        <div class="border-t border-gray-200 dark:border-gray-600"></div>

                        <div class="block px-4 py-2 text-xs text-gray-400">
                            {{ __('Switch Teams') }}
                        </div>

                        @foreach (Auth::user()->allTeams() as $team)
                            <x-switchable-team :team="$team" component="responsive-nav-link" />
                        @endforeach
                    @endif
                @endif --}}
            </div>
        </div>
    </div>
</nav>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/default.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg shadow-md">
    <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>
    <p class="text-sm text-gray-400">{{ $notification->created_at->diffForHumans() }}</p>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/invitation.blade.php ####

<div class="bg-blue-600 p-4 mb-4 rounded-lg shadow-md">
    <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>

    <div class="flex space-x-2 mt-2">

        <button wire:click="handleNotificationAction('{{ $notification->id }}', 'accept')" class="btn btn-primary">
            {{ __('Accept') }}
        </button>
        <button wire:click="handleNotificationAction('{{ $notification->id }}', 'decline')" class="btn btn-secondary">
            {{ __('Decline') }}
        </button>
    </div>
    <p class="text-sm text-gray-400">{{ __('Created:') }} {{ $notification->created_at->diffForHumans() }}</p>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/notifications/proposa-declined-notification.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg">
    <h3 class="text-2xl font-bold mb-4 text-red-500">{{ __('Proposta rifiutata') }}</h3>
    <!-- Contenitore principale -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <!-- Contenitore dei Dettagli -->
        <div class="bg-gray-800 p-4 rounded-lg shadow-md mb-4 md:mb-0 w-full md:w-auto">
            @if(isset($notification->data['reason']) && $notification->data['reason'])
                <p class="text-sm text-gray-300">
                    {{ __('notification.receiver') }}: <span class="font-bold">{{ $notification->data['approver'] }}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('notification.proposal_declined_reason') }}: <span class="font-bold">{{ $notification->data['reason'] }}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('collection.wallet.royalty_mint') }}: <span class="font-bold">{{ $notification->data['royalty_mint'] .'%'}}</span>
                </p>
                <p class="text-sm text-gray-300">
                    {{ __('collection.wallet.royalty_rebind') }}: <span class="font-bold">{{ $notification->data['royalty_rebind'] .'%' }}</span>
                </p>
            @endif
        </div>

        <!-- Contenitore dei Bottoni -->
        <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2">
            @if ( $notification->data['status'] === 'response')
                <button wire:click="notificationArchive('{{ $notification->id }}', 'declined')" class="btn btn-primary w-full md:w-auto">
                    {{ __('archive') }}
                </button>
            @endif
        </div>
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/notifications/wallet-change-request.blade.php ####

<div class="bg-gray-600 p-4 mb-4 rounded-lg">
    <!-- Contenitore principale -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between">
        <!-- Contenitore dei Dettagli -->
        <div class="bg-gray-800 p-4 rounded-lg shadow-md mb-4 md:mb-0 w-full md:w-auto">
            <div class="mb-2">
                <p class="text-lg font-semibold text-white">{{ $notification->data['message'] }}</p>
           </div>
            <div class="mb-2">
                <p class="text-md text-gray-300 truncate w-full" title="{{ $notification->data['wallet_address'] }}">
                    <strong>{{ __('Wallet Address:') }}</strong>
                    {{ $notification->data['wallet_address'] }}
                </p>
            </div>
            <div class="mb-2">
                <p class="text-md text-gray-300">
                    <strong>{{ __('Mint Royalty:') }}</strong> {{ $notification->data['royalty_mint'] }}%
                </p>
            </div>
            <div class="mb-2">
                <p class="text-md text-gray-300">
                    <strong>{{ __('Rebind Royalty:') }}</strong> {{ $notification->data['royalty_rebind'] }}%
                </p>
            </div>

            <div>
                <p class="text-sm text-gray-400">
                    {{ __('Created:') }} {{ $notification->created_at->diffForHumans() }}
                </p>
            </div>
        </div>

        <!-- Contenitore dei Bottoni -->
        <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-2">
            @if (isset($notification->data['wallet_change_approvals_id']) && $notification->data['type'] === 'create')
                <button wire:click="handleNotificationAction('{{ $notification->id }}', 'accept')" class="btn btn-primary w-full md:w-auto">
                    {{ __('Accept') }}
                </button>

                <button
                    wire:click="openDeclineModal({{ json_encode($notification)}})"
                    class="btn btn-secondary">
                    {{ __('Decline') }}
                </button>


            @endif
        </div>
    </div>
</div>


#### Inizio File: /home/fabio/EGI/resources/views/policy.blade.php ####

<x-guest-layout>
    <div class="pt-4 bg-gray-100 dark:bg-gray-900">
        <div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0">
            <div>
                <x-authentication-card-logo />
            </div>

            <div class="w-full sm:max-w-2xl mt-6 p-6 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg prose dark:prose-invert">
                {!! $policy !!}
            </div>
        </div>
    </div>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/profile/delete-user-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Delete Account') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Permanently delete your account.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.') }}
        </div>

        <div class="mt-5">
            <x-danger-button wire:click="confirmUserDeletion" wire:loading.attr="disabled">
                {{ __('Delete Account') }}
            </x-danger-button>
        </div>

        <!-- Delete User Confirmation Modal -->
        <x-dialog-modal wire:model.live="confirmingUserDeletion">
            <x-slot name="title">
                {{ __('Delete Account') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}

                <div class="mt-4" x-data="{}" x-on:confirming-delete-user.window="setTimeout(() => $refs.password.focus(), 250)">
                    <x-input type="password" class="mt-1 block w-3/4"
                                autocomplete="current-password"
                                placeholder="{{ __('Password') }}"
                                x-ref="password"
                                wire:model="password"
                                wire:keydown.enter="deleteUser" />

                    <x-input-error for="password" class="mt-2" />
                </div>
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingUserDeletion')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3" wire:click="deleteUser" wire:loading.attr="disabled">
                    {{ __('Delete Account') }}
                </x-danger-button>
            </x-slot>
        </x-dialog-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/logout-other-browser-sessions-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Browser Sessions') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Manage and log out your active sessions on other browsers and devices.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password.') }}
        </div>

        @if (count($this->sessions) > 0)
            <div class="mt-5 space-y-6">
                <!-- Other Browser Sessions -->
                @foreach ($this->sessions as $session)
                    <div class="flex items-center">
                        <div>
                            @if ($session->agent->isDesktop())
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8 text-gray-500">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25" />
                                </svg>
                            @else
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8 text-gray-500">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3" />
                                </svg>
                            @endif
                        </div>

                        <div class="ms-3">
                            <div class="text-sm text-gray-600 dark:text-gray-400">
                                {{ $session->agent->platform() ? $session->agent->platform() : __('Unknown') }} - {{ $session->agent->browser() ? $session->agent->browser() : __('Unknown') }}
                            </div>

                            <div>
                                <div class="text-xs text-gray-500">
                                    {{ $session->ip_address }},

                                    @if ($session->is_current_device)
                                        <span class="text-green-500 font-semibold">{{ __('This device') }}</span>
                                    @else
                                        {{ __('Last active') }} {{ $session->last_active }}
                                    @endif
                                </div>
                            </div>
                        </div>
                    </div>
                @endforeach
            </div>
        @endif

        <div class="flex items-center mt-5">
            <x-button wire:click="confirmLogout" wire:loading.attr="disabled">
                {{ __('Log Out Other Browser Sessions') }}
            </x-button>

            <x-action-message class="ms-3" on="loggedOut">
                {{ __('Done.') }}
            </x-action-message>
        </div>

        <!-- Log Out Other Devices Confirmation Modal -->
        <x-dialog-modal wire:model.live="confirmingLogout">
            <x-slot name="title">
                {{ __('Log Out Other Browser Sessions') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices.') }}

                <div class="mt-4" x-data="{}" x-on:confirming-logout-other-browser-sessions.window="setTimeout(() => $refs.password.focus(), 250)">
                    <x-input type="password" class="mt-1 block w-3/4"
                                autocomplete="current-password"
                                placeholder="{{ __('Password') }}"
                                x-ref="password"
                                wire:model="password"
                                wire:keydown.enter="logoutOtherBrowserSessions" />

                    <x-input-error for="password" class="mt-2" />
                </div>
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingLogout')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-button class="ms-3"
                            wire:click="logoutOtherBrowserSessions"
                            wire:loading.attr="disabled">
                    {{ __('Log Out Other Browser Sessions') }}
                </x-button>
            </x-slot>
        </x-dialog-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/show.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Profile') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @if (Laravel\Fortify\Features::canUpdateProfileInformation())
                @livewire('profile.update-profile-information-form')

                <x-section-border />
            @endif

            @if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::updatePasswords()))
                <div class="mt-10 sm:mt-0">
                    @livewire('profile.update-password-form')
                </div>

                <x-section-border />
            @endif

            @if (Laravel\Fortify\Features::canManageTwoFactorAuthentication())
                <div class="mt-10 sm:mt-0">
                    @livewire('profile.two-factor-authentication-form')
                </div>

                <x-section-border />
            @endif

            <div class="mt-10 sm:mt-0">
                @livewire('profile.logout-other-browser-sessions-form')
            </div>

            @if (Laravel\Jetstream\Jetstream::hasAccountDeletionFeatures())
                <x-section-border />

                <div class="mt-10 sm:mt-0">
                    @livewire('profile.delete-user-form')
                </div>
            @endif
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/profile/two-factor-authentication-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Two Factor Authentication') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Add additional security to your account using two factor authentication.') }}
    </x-slot>

    <x-slot name="content">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
            @if ($this->enabled)
                @if ($showingConfirmation)
                    {{ __('Finish enabling two factor authentication.') }}
                @else
                    {{ __('You have enabled two factor authentication.') }}
                @endif
            @else
                {{ __('You have not enabled two factor authentication.') }}
            @endif
        </h3>

        <div class="mt-3 max-w-xl text-sm text-gray-600 dark:text-gray-400">
            <p>
                {{ __('When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone\'s Google Authenticator application.') }}
            </p>
        </div>

        @if ($this->enabled)
            @if ($showingQrCode)
                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        @if ($showingConfirmation)
                            {{ __('To finish enabling two factor authentication, scan the following QR code using your phone\'s authenticator application or enter the setup key and provide the generated OTP code.') }}
                        @else
                            {{ __('Two factor authentication is now enabled. Scan the following QR code using your phone\'s authenticator application or enter the setup key.') }}
                        @endif
                    </p>
                </div>

                <div class="mt-4 p-2 inline-block bg-white">
                    {!! $this->user->twoFactorQrCodeSvg() !!}
                </div>

                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        {{ __('Setup Key') }}: {{ decrypt($this->user->two_factor_secret) }}
                    </p>
                </div>

                @if ($showingConfirmation)
                    <div class="mt-4">
                        <x-label for="code" value="{{ __('Code') }}" />

                        <x-input id="code" type="text" name="code" class="block mt-1 w-1/2" inputmode="numeric" autofocus autocomplete="one-time-code"
                            wire:model="code"
                            wire:keydown.enter="confirmTwoFactorAuthentication" />

                        <x-input-error for="code" class="mt-2" />
                    </div>
                @endif
            @endif

            @if ($showingRecoveryCodes)
                <div class="mt-4 max-w-xl text-sm text-gray-600 dark:text-gray-400">
                    <p class="font-semibold">
                        {{ __('Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost.') }}
                    </p>
                </div>

                <div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 dark:bg-gray-900 dark:text-gray-100 rounded-lg">
                    @foreach (json_decode(decrypt($this->user->two_factor_recovery_codes), true) as $code)
                        <div>{{ $code }}</div>
                    @endforeach
                </div>
            @endif
        @endif

        <div class="mt-5">
            @if (! $this->enabled)
                <x-confirms-password wire:then="enableTwoFactorAuthentication">
                    <x-button type="button" wire:loading.attr="disabled">
                        {{ __('Enable') }}
                    </x-button>
                </x-confirms-password>
            @else
                @if ($showingRecoveryCodes)
                    <x-confirms-password wire:then="regenerateRecoveryCodes">
                        <x-secondary-button class="me-3">
                            {{ __('Regenerate Recovery Codes') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @elseif ($showingConfirmation)
                    <x-confirms-password wire:then="confirmTwoFactorAuthentication">
                        <x-button type="button" class="me-3" wire:loading.attr="disabled">
                            {{ __('Confirm') }}
                        </x-button>
                    </x-confirms-password>
                @else
                    <x-confirms-password wire:then="showRecoveryCodes">
                        <x-secondary-button class="me-3">
                            {{ __('Show Recovery Codes') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @endif

                @if ($showingConfirmation)
                    <x-confirms-password wire:then="disableTwoFactorAuthentication">
                        <x-secondary-button wire:loading.attr="disabled">
                            {{ __('Cancel') }}
                        </x-secondary-button>
                    </x-confirms-password>
                @else
                    <x-confirms-password wire:then="disableTwoFactorAuthentication">
                        <x-danger-button wire:loading.attr="disabled">
                            {{ __('Disable') }}
                        </x-danger-button>
                    </x-confirms-password>
                @endif

            @endif
        </div>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/update-password-form.blade.php ####

<x-form-section submit="updatePassword">
    <x-slot name="title">
        {{ __('Update Password') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Ensure your account is using a long, random password to stay secure.') }}
    </x-slot>

    <x-slot name="form">
        <div class="col-span-6 sm:col-span-4">
            <x-label for="current_password" value="{{ __('Current Password') }}" />
            <x-input id="current_password" type="password" class="mt-1 block w-full" wire:model="state.current_password" autocomplete="current-password" />
            <x-input-error for="current_password" class="mt-2" />
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="password" value="{{ __('New Password') }}" />
            <x-input id="password" type="password" class="mt-1 block w-full" wire:model="state.password" autocomplete="new-password" />
            <x-input-error for="password" class="mt-2" />
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="password_confirmation" value="{{ __('Confirm Password') }}" />
            <x-input id="password_confirmation" type="password" class="mt-1 block w-full" wire:model="state.password_confirmation" autocomplete="new-password" />
            <x-input-error for="password_confirmation" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-action-message class="me-3" on="saved">
            {{ __('Saved.') }}
        </x-action-message>

        <x-button>
            {{ __('Save') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/profile/update-profile-information-form.blade.php ####

<x-form-section submit="updateProfileInformation">
    <x-slot name="title">
        {{ __('Profile Information') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Update your account\'s profile information and email address.') }}
    </x-slot>

    <x-slot name="form">
        <!-- Profile Photo -->
        @if (Laravel\Jetstream\Jetstream::managesProfilePhotos())
            <div x-data="{photoName: null, photoPreview: null}" class="col-span-6 sm:col-span-4">
                <!-- Profile Photo File Input -->
                <input type="file" id="photo" class="hidden"
                            wire:model.live="photo"
                            x-ref="photo"
                            x-on:change="
                                    photoName = $refs.photo.files[0].name;
                                    const reader = new FileReader();
                                    reader.onload = (e) => {
                                        photoPreview = e.target.result;
                                    };
                                    reader.readAsDataURL($refs.photo.files[0]);
                            " />

                <x-label for="photo" value="{{ __('Photo') }}" />

                <!-- Current Profile Photo -->
                <div class="mt-2" x-show="! photoPreview">
                    <img src="{{ $this->user->profile_photo_url }}" alt="{{ $this->user->name }}" class="rounded-full size-20 object-cover">
                </div>

                <!-- New Profile Photo Preview -->
                <div class="mt-2" x-show="photoPreview" style="display: none;">
                    <span class="block rounded-full size-20 bg-cover bg-no-repeat bg-center"
                          x-bind:style="'background-image: url(\'' + photoPreview + '\');'">
                    </span>
                </div>

                <x-secondary-button class="mt-2 me-2" type="button" x-on:click.prevent="$refs.photo.click()">
                    {{ __('Select A New Photo') }}
                </x-secondary-button>

                @if ($this->user->profile_photo_path)
                    <x-secondary-button type="button" class="mt-2" wire:click="deleteProfilePhoto">
                        {{ __('Remove Photo') }}
                    </x-secondary-button>
                @endif

                <x-input-error for="photo" class="mt-2" />
            </div>
        @endif

        <!-- Name -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Name') }}" />
            <x-input id="name" type="text" class="mt-1 block w-full" wire:model="state.name" required autocomplete="name" />
            <x-input-error for="name" class="mt-2" />
        </div>

        <!-- Email -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="email" value="{{ __('Email') }}" />
            <x-input id="email" type="email" class="mt-1 block w-full" wire:model="state.email" required autocomplete="username" />
            <x-input-error for="email" class="mt-2" />

            @if (Laravel\Fortify\Features::enabled(Laravel\Fortify\Features::emailVerification()) && ! $this->user->hasVerifiedEmail())
                <p class="text-sm mt-2 dark:text-white">
                    {{ __('Your email address is unverified.') }}

                    <button type="button" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800" wire:click.prevent="sendEmailVerification">
                        {{ __('Click here to re-send the verification email.') }}
                    </button>
                </p>

                @if ($this->verificationLinkSent)
                    <p class="mt-2 font-medium text-sm text-green-600 dark:text-green-400">
                        {{ __('A new verification link has been sent to your email address.') }}
                    </p>
                @endif
            @endif
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-action-message class="me-3" on="saved">
            {{ __('Saved.') }}
        </x-action-message>

        <x-button wire:loading.attr="disabled" wire:target="photo">
            {{ __('Save') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/create-team-form.blade.php ####

<x-form-section submit="createTeam">
    <x-slot name="title">
        {{ __('Team Details') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Create a new team to collaborate with others on projects.') }}
    </x-slot>

    <x-slot name="form">
        <div class="col-span-6">
            <x-label value="{{ __('Team Owner') }}" />

            <div class="flex items-center mt-2">
                <img class="size-12 rounded-full object-cover" src="{{ $this->user->profile_photo_url }}" alt="{{ $this->user->name }}">

                <div class="ms-4 leading-tight">
                    <div class="text-gray-900 dark:text-white">{{ $this->user->name }}</div>
                    <div class="text-gray-700 dark:text-gray-300 text-sm">{{ $this->user->email }}</div>
                </div>
            </div>
        </div>

        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Team Name') }}" />
            <x-input id="name" type="text" class="mt-1 block w-full" wire:model="state.name" autofocus />
            <x-input-error for="name" class="mt-2" />
        </div>
    </x-slot>

    <x-slot name="actions">
        <x-button>
            {{ __('Create') }}
        </x-button>
    </x-slot>
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/create.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Create Team') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('teams.create-team-form')
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/teams/delete-team-form.blade.php ####

<x-action-section>
    <x-slot name="title">
        {{ __('Delete Team') }}
    </x-slot>

    <x-slot name="description">
        {{ __('Permanently delete this team.') }}
    </x-slot>

    <x-slot name="content">
        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
            {{ __('Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain.') }}
        </div>

        <div class="mt-5">
            <x-danger-button wire:click="$toggle('confirmingTeamDeletion')" wire:loading.attr="disabled">
                {{ __('Delete Team') }}
            </x-danger-button>
        </div>

        <!-- Delete Team Confirmation Modal -->
        <x-confirmation-modal wire:model.live="confirmingTeamDeletion">
            <x-slot name="title">
                {{ __('Delete Team') }}
            </x-slot>

            <x-slot name="content">
                {{ __('Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted.') }}
            </x-slot>

            <x-slot name="footer">
                <x-secondary-button wire:click="$toggle('confirmingTeamDeletion')" wire:loading.attr="disabled">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3" wire:click="deleteTeam" wire:loading.attr="disabled">
                    {{ __('Delete Team') }}
                </x-danger-button>
            </x-slot>
        </x-confirmation-modal>
    </x-slot>
</x-action-section>

#### Inizio File: /home/fabio/EGI/resources/views/teams/show.blade.php ####

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
            {{ __('Team Settings') }}
        </h2>
    </x-slot>

    <div>
        <div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8">
            @livewire('teams.update-team-name-form', ['team' => $team])

            @livewire('teams.team-member-manager', ['team' => $team])

            @if (Gate::check('delete', $team) && ! $team->personal_team)
                <x-section-border />

                <div class="mt-10 sm:mt-0">
                    @livewire('teams.delete-team-form', ['team' => $team])
                </div>
            @endif
        </div>
    </div>
</x-app-layout>

#### Inizio File: /home/fabio/EGI/resources/views/teams/team-member-manager.blade.php ####

<div>
    @if (Gate::check('addTeamMember', $team))
        <x-section-border />

        <!-- Add Team Member -->
        <div class="mt-10 sm:mt-0">
            <x-form-section submit="addTeamMember">
                <x-slot name="title">
                    {{ __('Add Team Member') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('Add a new team member to your team, allowing them to collaborate with you.') }}
                </x-slot>

                <x-slot name="form">
                    <div class="col-span-6">
                        <div class="max-w-xl text-sm text-gray-600 dark:text-gray-400">
                            {{ __('Please provide the email address of the person you would like to add to this team.') }}
                        </div>
                    </div>

                    <!-- Member Email -->
                    <div class="col-span-6 sm:col-span-4">
                        <x-label for="email" value="{{ __('Email') }}" />
                        <x-input id="email" type="email" class="mt-1 block w-full" wire:model="addTeamMemberForm.email" />
                        <x-input-error for="email" class="mt-2" />
                    </div>

                    <!-- Role -->
                    @if (count($this->roles) > 0)
                        <div class="col-span-6 lg:col-span-4">
                            <x-label for="role" value="{{ __('Role') }}" />
                            <x-input-error for="role" class="mt-2" />

                            <div class="relative z-0 mt-1 border border-gray-200 dark:border-gray-700 rounded-lg cursor-pointer">
                                @foreach ($this->roles as $index => $role)
                                    <button type="button" class="relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-600 {{ $index > 0 ? 'border-t border-gray-200 dark:border-gray-700 focus:border-none rounded-t-none' : '' }} {{ ! $loop->last ? 'rounded-b-none' : '' }}"
                                                    wire:click="$set('addTeamMemberForm.role', '{{ $role->key }}')">
                                        <div class="{{ isset($addTeamMemberForm['role']) && $addTeamMemberForm['role'] !== $role->key ? 'opacity-50' : '' }}">
                                            <!-- Role Name -->
                                            <div class="flex items-center">
                                                <div class="text-sm text-gray-600 dark:text-gray-400 {{ $addTeamMemberForm['role'] == $role->key ? 'font-semibold' : '' }}">
                                                    {{ $role->name }}
                                                </div>

                                                @if ($addTeamMemberForm['role'] == $role->key)
                                                    <svg class="ms-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                    </svg>
                                                @endif
                                            </div>

                                            <!-- Role Description -->
                                            <div class="mt-2 text-xs text-gray-600 dark:text-gray-400 text-start">
                                                {{ $role->description }}
                                            </div>
                                        </div>
                                    </button>
                                @endforeach
                            </div>
                        </div>
                    @endif
                </x-slot>

                <x-slot name="actions">
                    <x-action-message class="me-3" on="saved">
                        {{ __('Added.') }}
                    </x-action-message>

                    <x-button>
                        {{ __('Add') }}
                    </x-button>
                </x-slot>
            </x-form-section>
        </div>
    @endif

    @if ($team->teamInvitations->isNotEmpty() && Gate::check('addTeamMember', $team))
        <x-section-border />

        <!-- Team Member Invitations -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Pending Team Invitations') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation.') }}
                </x-slot>

                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($team->teamInvitations as $invitation)
                            <div class="flex items-center justify-between">
                                <div class="text-gray-600 dark:text-gray-400">{{ $invitation->email }}</div>

                                <div class="flex items-center">
                                    @if (Gate::check('removeTeamMember', $team))
                                        <!-- Cancel Team Invitation -->
                                        <button class="cursor-pointer ms-6 text-sm text-red-500 focus:outline-none"
                                                            wire:click="cancelTeamInvitation({{ $invitation->id }})">
                                            {{ __('Cancel') }}
                                        </button>
                                    @endif
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    @if ($team->users->isNotEmpty())
        <x-section-border />

        <!-- Manage Team Members -->
        <div class="mt-10 sm:mt-0">
            <x-action-section>
                <x-slot name="title">
                    {{ __('Team Members') }}
                </x-slot>

                <x-slot name="description">
                    {{ __('All of the people that are part of this team.') }}
                </x-slot>

                <!-- Team Member List -->
                <x-slot name="content">
                    <div class="space-y-6">
                        @foreach ($team->users->sortBy('name') as $user)
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <img class="size-8 rounded-full object-cover" src="{{ $user->profile_photo_url }}" alt="{{ $user->name }}">
                                    <div class="ms-4 dark:text-white">{{ $user->name }}</div>
                                </div>

                                <div class="flex items-center">
                                    <!-- Manage Team Member Role -->
                                    @if (Gate::check('updateTeamMember', $team) && Laravel\Jetstream\Jetstream::hasRoles())
                                        <button class="ms-2 text-sm text-gray-400 underline" wire:click="manageRole('{{ $user->id }}')">
                                            {{ Laravel\Jetstream\Jetstream::findRole($user->membership->role)->name }}
                                        </button>
                                    @elseif (Laravel\Jetstream\Jetstream::hasRoles())
                                        <div class="ms-2 text-sm text-gray-400">
                                            {{ Laravel\Jetstream\Jetstream::findRole($user->membership->role)->name }}
                                        </div>
                                    @endif

                                    <!-- Leave Team -->
                                    @if ($this->user->id === $user->id)
                                        <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="$toggle('confirmingLeavingTeam')">
                                            {{ __('Leave') }}
                                        </button>

                                    <!-- Remove Team Member -->
                                    @elseif (Gate::check('removeTeamMember', $team))
                                        <button class="cursor-pointer ms-6 text-sm text-red-500" wire:click="confirmTeamMemberRemoval('{{ $user->id }}')">
                                            {{ __('Remove') }}
                                        </button>
                                    @endif
                                </div>
                            </div>
                        @endforeach
                    </div>
                </x-slot>
            </x-action-section>
        </div>
    @endif

    <!-- Role Management Modal -->
    <x-dialog-modal wire:model.live="currentlyManagingRole">
        <x-slot name="title">
            {{ __('Manage Role') }}
        </x-slot>

        <x-slot name="content">
            <div class="relative z-0 mt-1 border border-gray-200 dark:border-gray-700 rounded-lg cursor-pointer">
                @foreach ($this->roles as $index => $role)
                    <button type="button" class="relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-600 {{ $index > 0 ? 'border-t border-gray-200 dark:border-gray-700 focus:border-none rounded-t-none' : '' }} {{ ! $loop->last ? 'rounded-b-none' : '' }}"
                                    wire:click="$set('currentRole', '{{ $role->key }}')">
                        <div class="{{ $currentRole !== $role->key ? 'opacity-50' : '' }}">
                            <!-- Role Name -->
                            <div class="flex items-center">
                                <div class="text-sm text-gray-600 dark:text-gray-400 {{ $currentRole == $role->key ? 'font-semibold' : '' }}">
                                    {{ $role->name }}
                                </div>

                                @if ($currentRole == $role->key)
                                    <svg class="ms-2 size-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                @endif
                            </div>

                            <!-- Role Description -->
                            <div class="mt-2 text-xs text-gray-600 text-start dark:text-gray-400">
                                {{ $role->description }}
                            </div>
                        </div>
                    </button>
                @endforeach
            </div>
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="stopManagingRole" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-button class="ms-3" wire:click="updateRole" wire:loading.attr="disabled">
                {{ __('Save') }}
            </x-button>
        </x-slot>
    </x-dialog-modal>

    <!-- Leave Team Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingLeavingTeam">
        <x-slot name="title">
            {{ __('Leave Team') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to leave this team?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingLeavingTeam')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="leaveTeam" wire:loading.attr="disabled">
                {{ __('Leave') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>

    <!-- Remove Team Member Confirmation Modal -->
    <x-confirmation-modal wire:model.live="confirmingTeamMemberRemoval">
        <x-slot name="title">
            {{ __('Remove Team Member') }}
        </x-slot>

        <x-slot name="content">
            {{ __('Are you sure you would like to remove this person from the team?') }}
        </x-slot>

        <x-slot name="footer">
            <x-secondary-button wire:click="$toggle('confirmingTeamMemberRemoval')" wire:loading.attr="disabled">
                {{ __('Cancel') }}
            </x-secondary-button>

            <x-danger-button class="ms-3" wire:click="removeTeamMember" wire:loading.attr="disabled">
                {{ __('Remove') }}
            </x-danger-button>
        </x-slot>
    </x-confirmation-modal>
</div>

#### Inizio File: /home/fabio/EGI/resources/views/teams/update-team-name-form.blade.php ####

<x-form-section submit="updateTeamName">
    <x-slot name="title">
        {{ __('Team Name') }}
    </x-slot>

    <x-slot name="description">
        {{ __('The team\'s name and owner information.') }}
    </x-slot>

    <x-slot name="form">
        <!-- Team Owner Information -->
        <div class="col-span-6">
            <x-label value="{{ __('Team Owner') }}" />

            <div class="flex items-center mt-2">
                <img class="size-12 rounded-full object-cover" src="{{ $team->owner->profile_photo_url }}" alt="{{ $team->owner->name }}">

                <div class="ms-4 leading-tight">
                    <div class="text-gray-900 dark:text-white">{{ $team->owner->name }}</div>
                    <div class="text-gray-700 dark:text-gray-300 text-sm">{{ $team->owner->email }}</div>
                </div>
            </div>
        </div>

        <!-- Team Name -->
        <div class="col-span-6 sm:col-span-4">
            <x-label for="name" value="{{ __('Team Name') }}" />

            <x-input id="name"
                        type="text"
                        class="mt-1 block w-full"
                        wire:model="state.name"
                        :disabled="! Gate::check('update', $team)" />

            <x-input-error for="name" class="mt-2" />
        </div>
    </x-slot>

    @if (Gate::check('update', $team))
        <x-slot name="actions">
            <x-action-message class="me-3" on="saved">
                {{ __('Saved.') }}
            </x-action-message>

            <x-button>
                {{ __('Save') }}
            </x-button>
        </x-slot>
    @endif
</x-form-section>

#### Inizio File: /home/fabio/EGI/resources/views/terms.blade.php ####

<x-guest-layout>
    <div class="pt-4 bg-gray-100 dark:bg-gray-900">
        <div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0">
            <div>
                <x-authentication-card-logo />
            </div>

            <div class="w-full sm:max-w-2xl mt-6 p-6 bg-white dark:bg-gray-800 shadow-md overflow-hidden sm:rounded-lg prose dark:prose-invert">
                {!! $terms !!}
            </div>
        </div>
    </div>
</x-guest-layout>

#### Inizio File: /home/fabio/EGI/resources/views/welcome.blade.php ####

<x-guest-welcome-layout>
    <div class="relative min-h-screen">
        <!-- Hero Section -->
        <div class="container mx-auto px-4 py-12">
            <div class="grid items-center gap-12 lg:grid-cols-2">
                <!-- Left Side - Welcome Content -->
                <div class="space-y-8">
                    <h1 class="text-5xl font-bold text-white">
                        Welcome to Florence EGI
                    </h1>
                    <p class="text-xl text-gray-300">
                        Your gateway to the next generation of digital assets.
                    </p>

                    <!-- Features Grid -->
                    <div class="mt-8 grid grid-cols-2 gap-4">
                        <div class="card bg-base-100 bg-opacity-10 p-4">
                            <div class="mb-2 text-2xl text-primary">🔒</div>
                            <h3 class="font-semibold">Secure Platform</h3>
                            <p class="text-sm text-gray-400">Enhanced with 2FA protection</p>
                        </div>
                        <div class="card bg-base-100 bg-opacity-10 p-4">
                            <div class="mb-2 text-2xl text-primary">👥</div>
                            <h3 class="font-semibold">Team Management</h3>
                            <p class="text-sm text-gray-400">Collaborate seamlessly</p>
                        </div>
                    </div>
                </div>

                <!-- Right Side - Auth Forms -->
                <div class="card bg-base-100 bg-opacity-10 shadow-xl backdrop-blur-lg">
                    <div class="card-body">
                        <livewire:welcome.auth-forms />
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-guest-welcome-layout>

#### Inizio File: /home/fabio/EGI/routes/api.php ####

<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

Route::get('/user', function (Request $request) {
    return $request->user();
})->middleware('auth:sanctum');

#### Inizio File: /home/fabio/EGI/routes/console.php ####

<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote')->hourly();

#### Inizio File: /home/fabio/EGI/routes/web.php ####

<?php

use App\Livewire\Collections\CollectionCarousel;
use App\Livewire\Collections\CollectionEdit;
use App\Livewire\Collections\CollectionUserMember;
use App\Livewire\Collections\CollectionWallet;
use App\Livewire\Collections\CreateCollection;
use App\Livewire\Collections\HeadImagesManager;
use Illuminate\Support\Facades\Route;
use App\Livewire\PhotoUploader;
use App\Http\Controllers\Admin\RoleController;
use App\Http\Controllers\IconAdminController;
use App\Http\Controllers\WalletController;
use App\Http\Controllers\DropController;
use App\Http\Middleware\SetLanguage;
use App\Livewire\Collections\CollectionOpen;
use Illuminate\Support\Facades\Log;
use UltraProject\UConfig\Http\Controllers\UConfigController;


// Rotta per PhotoUploader
Route::get('/photo-uploader', PhotoUploader::class)->name('photo-uploader');

// Rotta per la home
Route::get('/', function () {
    return view('welcome');
});

// Rotte protette da middleware
Route::middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])
    ->group(function () {

        // Dashboard
        Route::get('/dashboard', function () {
            return view('dashboard');
        })->name('dashboard');

        Route::get('/debug-context', function () {
            return Route::currentRouteName();
        })->name('debug.context');

        // Admin Routes
        Route::prefix('admin')->name('admin.')->group(function () {
            Route::resource('roles', RoleController::class)
                ->middleware(['role_or_permission:manage_roles']);

            Route::resource('icons', IconAdminController::class)
                ->middleware(['role_or_permission: manage_icons']);

            Route::get('/assign-role', [RoleController::class, 'showAssignRoleForm'])
                ->name('assign.role.form')
                ->middleware(['role_or_permission:manage_roles']);

            Route::post('/assign-role', [RoleController::class, 'assignRole'])
                ->name('assign.role')
                ->middleware(['role_or_permission:manage_roles']);

            Route::get('/assign-permissions', [RoleController::class, 'showAssignPermissionsForm'])
                ->name('assign.permissions.form')
                ->middleware(['role_or_permission:manage_roles']);

            Route::post('/assign-permissions', [RoleController::class, 'assignPermissions'])
                ->name('assign.permissions')
                ->middleware(['role_or_permission:manage_roles']);
        });

        Route::prefix('collections')->group(function () {

            // Rotte per visualizzare il carousel delle collezioni, viene usata solamente se il team corrente ha più di una collezione associata
            Route::get('/carousel', CollectionCarousel::class)
                ->middleware('collection_can:read_collection')
                ->name('collections.carousel');

            // Rotta per aprire vista della collezione
            Route::get('/{id}/edit', CollectionEdit::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.edit');

            // Rotta per discernere se mostrare il carousel o la vista della collezione
            Route::get('/open', CollectionOpen::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.open');

            Route::get('/{id}/head-images', HeadImagesManager::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.head_images');

            Route::get('/create', CreateCollection::class)
                ->middleware('collection_can:create_collection')
                ->name('collections.create');

            Route::get('/{id}/members', CollectionUserMember::class)
                ->middleware('collection_can:view_collection_header')
                ->name('collections.collection_user');

        });




        // Route::get('/teams', TeamManager::class)
        //     ->middleware(['can:read_collection'])
        //     ->name('teams');

        // Rotte per Wallet
        Route::post('/wallets/{id}/approve', [WalletController::class, 'approve'])
            ->name('wallets.approve')
            ->middleware(['can:approve_wallet']);

        Route::post('/wallets/{id}/reject', [WalletController::class, 'reject'])
            ->name('wallets.reject')
            ->middleware(['can:reject_wallet']);

        // Rotte per Drop
        Route::post('/drops/{id}/join', [DropController::class, 'join'])
            ->name('drops.join')
            ->middleware(['can:join_drop']);

        // Rotta di debug per visualizzare la sessione
        Route::get('/session', function () {
            dd((session()->all()));
        });
    });

#### Inizio File: /home/fabio/EGI/tests/Feature/ApiTokenPermissionsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Str;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class ApiTokenPermissionsTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_token_permissions_can_be_updated(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $token = $user->tokens()->create([
            'name' => 'Test Token',
            'token' => Str::random(40),
            'abilities' => ['create', 'read'],
        ]);

        Livewire::test(ApiTokenManager::class)
            ->set(['managingPermissionsFor' => $token])
            ->set(['updateApiTokenForm' => [
                'permissions' => [
                    'delete',
                    'missing-permission',
                ],
            ]])
            ->call('updateApiToken');

        $this->assertTrue($user->fresh()->tokens->first()->can('delete'));
        $this->assertFalse($user->fresh()->tokens->first()->can('read'));
        $this->assertFalse($user->fresh()->tokens->first()->can('missing-permission'));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/AuthenticationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AuthenticationTest extends TestCase
{
    use RefreshDatabase;

    public function test_login_screen_can_be_rendered(): void
    {
        $response = $this->get('/login');

        $response->assertStatus(200);
    }

    public function test_users_can_authenticate_using_the_login_screen(): void
    {
        $user = User::factory()->create();

        $response = $this->post('/login', [
            'email' => $user->email,
            'password' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }

    public function test_users_can_not_authenticate_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $this->post('/login', [
            'email' => $user->email,
            'password' => 'wrong-password',
        ]);

        $this->assertGuest();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/BrowserSessionsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\LogoutOtherBrowserSessionsForm;
use Livewire\Livewire;
use Tests\TestCase;

class BrowserSessionsTest extends TestCase
{
    use RefreshDatabase;

    public function test_other_browser_sessions_can_be_logged_out(): void
    {
        $this->actingAs(User::factory()->create());

        Livewire::test(LogoutOtherBrowserSessionsForm::class)
            ->set('password', 'password')
            ->call('logoutOtherBrowserSessions')
            ->assertSuccessful();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/CreateApiTokenTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class CreateApiTokenTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_tokens_can_be_created(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(ApiTokenManager::class)
            ->set(['createApiTokenForm' => [
                'name' => 'Test Token',
                'permissions' => [
                    'read',
                    'update',
                ],
            ]])
            ->call('createApiToken');

        $this->assertCount(1, $user->fresh()->tokens);
        $this->assertEquals('Test Token', $user->fresh()->tokens->first()->name);
        $this->assertTrue($user->fresh()->tokens->first()->can('read'));
        $this->assertFalse($user->fresh()->tokens->first()->can('delete'));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/CreateTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\CreateTeamForm;
use Livewire\Livewire;
use Tests\TestCase;

class CreateTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_teams_can_be_created(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(CreateTeamForm::class)
            ->set(['state' => ['name' => 'Test Team']])
            ->call('createTeam');

        $this->assertCount(2, $user->fresh()->ownedTeams);
        $this->assertEquals('Test Team', $user->fresh()->ownedTeams()->latest('id')->first()->name);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteAccountTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\DeleteUserForm;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteAccountTest extends TestCase
{
    use RefreshDatabase;

    public function test_user_accounts_can_be_deleted(): void
    {
        if (! Features::hasAccountDeletionFeatures()) {
            $this->markTestSkipped('Account deletion is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $component = Livewire::test(DeleteUserForm::class)
            ->set('password', 'password')
            ->call('deleteUser');

        $this->assertNull($user->fresh());
    }

    public function test_correct_password_must_be_provided_before_account_can_be_deleted(): void
    {
        if (! Features::hasAccountDeletionFeatures()) {
            $this->markTestSkipped('Account deletion is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        Livewire::test(DeleteUserForm::class)
            ->set('password', 'wrong-password')
            ->call('deleteUser')
            ->assertHasErrors(['password']);

        $this->assertNotNull($user->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteApiTokenTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Str;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\ApiTokenManager;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteApiTokenTest extends TestCase
{
    use RefreshDatabase;

    public function test_api_tokens_can_be_deleted(): void
    {
        if (! Features::hasApiFeatures()) {
            $this->markTestSkipped('API support is not enabled.');
        }

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $token = $user->tokens()->create([
            'name' => 'Test Token',
            'token' => Str::random(40),
            'abilities' => ['create', 'read'],
        ]);

        Livewire::test(ApiTokenManager::class)
            ->set(['apiTokenIdBeingDeleted' => $token->id])
            ->call('deleteApiToken');

        $this->assertCount(0, $user->fresh()->tokens);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/DeleteTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\Team;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\DeleteTeamForm;
use Livewire\Livewire;
use Tests\TestCase;

class DeleteTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_teams_can_be_deleted(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->ownedTeams()->save($team = Team::factory()->make([
            'personal_team' => false,
        ]));

        $team->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'test-role']
        );

        Livewire::test(DeleteTeamForm::class, ['team' => $team->fresh()])
            ->call('deleteTeam');

        $this->assertNull($team->fresh());
        $this->assertCount(0, $otherUser->fresh()->teams);
    }

    public function test_personal_teams_cant_be_deleted(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(DeleteTeamForm::class, ['team' => $user->currentTeam])
            ->call('deleteTeam')
            ->assertHasErrors(['team']);

        $this->assertNotNull($user->currentTeam->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/EmailVerificationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;
use Laravel\Fortify\Features;
use Tests\TestCase;

class EmailVerificationTest extends TestCase
{
    use RefreshDatabase;

    public function test_email_verification_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        $user = User::factory()->withPersonalTeam()->unverified()->create();

        $response = $this->actingAs($user)->get('/email/verify');

        $response->assertStatus(200);
    }

    public function test_email_can_be_verified(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        Event::fake();

        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1($user->email)]
        );

        $response = $this->actingAs($user)->get($verificationUrl);

        Event::assertDispatched(Verified::class);

        $this->assertTrue($user->fresh()->hasVerifiedEmail());
        $response->assertRedirect(route('dashboard', absolute: false).'?verified=1');
    }

    public function test_email_can_not_verified_with_invalid_hash(): void
    {
        if (! Features::enabled(Features::emailVerification())) {
            $this->markTestSkipped('Email verification not enabled.');
        }

        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1('wrong-email')]
        );

        $this->actingAs($user)->get($verificationUrl);

        $this->assertFalse($user->fresh()->hasVerifiedEmail());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/ExampleTest.php ####

<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/InviteTeamMemberTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Mail;
use Laravel\Jetstream\Features;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Laravel\Jetstream\Mail\TeamInvitation;
use Livewire\Livewire;
use Tests\TestCase;

class InviteTeamMemberTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_members_can_be_invited_to_team(): void
    {
        if (! Features::sendsTeamInvitations()) {
            $this->markTestSkipped('Team invitations not enabled.');
        }

        Mail::fake();

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('addTeamMemberForm', [
                'email' => 'test@example.com',
                'role' => 'admin',
            ])->call('addTeamMember');

        Mail::assertSent(TeamInvitation::class);

        $this->assertCount(1, $user->currentTeam->fresh()->teamInvitations);
    }

    public function test_team_member_invitations_can_be_cancelled(): void
    {
        if (! Features::sendsTeamInvitations()) {
            $this->markTestSkipped('Team invitations not enabled.');
        }

        Mail::fake();

        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        // Add the team member...
        $component = Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('addTeamMemberForm', [
                'email' => 'test@example.com',
                'role' => 'admin',
            ])->call('addTeamMember');

        $invitationId = $user->currentTeam->fresh()->teamInvitations->first()->id;

        // Cancel the team invitation...
        $component->call('cancelTeamInvitation', $invitationId);

        $this->assertCount(0, $user->currentTeam->fresh()->teamInvitations);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/LeaveTeamTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class LeaveTeamTest extends TestCase
{
    use RefreshDatabase;

    public function test_users_can_leave_teams(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->call('leaveTeam');

        $this->assertCount(0, $user->currentTeam->fresh()->users);
    }

    public function test_team_owners_cant_leave_their_own_team(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->call('leaveTeam')
            ->assertHasErrors(['team']);

        $this->assertNotNull($user->currentTeam->fresh());
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/PasswordConfirmationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PasswordConfirmationTest extends TestCase
{
    use RefreshDatabase;

    public function test_confirm_password_screen_can_be_rendered(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $response = $this->actingAs($user)->get('/user/confirm-password');

        $response->assertStatus(200);
    }

    public function test_password_can_be_confirmed(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/user/confirm-password', [
            'password' => 'password',
        ]);

        $response->assertRedirect();
        $response->assertSessionHasNoErrors();
    }

    public function test_password_is_not_confirmed_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/user/confirm-password', [
            'password' => 'wrong-password',
        ]);

        $response->assertSessionHasErrors();
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/PasswordResetTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Auth\Notifications\ResetPassword;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Laravel\Fortify\Features;
use Tests\TestCase;

class PasswordResetTest extends TestCase
{
    use RefreshDatabase;

    public function test_reset_password_link_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        $response = $this->get('/forgot-password');

        $response->assertStatus(200);
    }

    public function test_reset_password_link_can_be_requested(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class);
    }

    public function test_reset_password_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class, function (object $notification) {
            $response = $this->get('/reset-password/'.$notification->token);

            $response->assertStatus(200);

            return true;
        });
    }

    public function test_password_can_be_reset_with_valid_token(): void
    {
        if (! Features::enabled(Features::resetPasswords())) {
            $this->markTestSkipped('Password updates are not enabled.');
        }

        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', [
            'email' => $user->email,
        ]);

        Notification::assertSentTo($user, ResetPassword::class, function (object $notification) use ($user) {
            $response = $this->post('/reset-password', [
                'token' => $notification->token,
                'email' => $user->email,
                'password' => 'password',
                'password_confirmation' => 'password',
            ]);

            $response->assertSessionHasNoErrors();

            return true;
        });
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/ProfileInformationTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\UpdateProfileInformationForm;
use Livewire\Livewire;
use Tests\TestCase;

class ProfileInformationTest extends TestCase
{
    use RefreshDatabase;

    public function test_current_profile_information_is_available(): void
    {
        $this->actingAs($user = User::factory()->create());

        $component = Livewire::test(UpdateProfileInformationForm::class);

        $this->assertEquals($user->name, $component->state['name']);
        $this->assertEquals($user->email, $component->state['email']);
    }

    public function test_profile_information_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdateProfileInformationForm::class)
            ->set('state', ['name' => 'Test Name', 'email' => 'test@example.com'])
            ->call('updateProfileInformation');

        $this->assertEquals('Test Name', $user->fresh()->name);
        $this->assertEquals('test@example.com', $user->fresh()->email);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/RegistrationTest.php ####

<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Fortify\Features;
use Laravel\Jetstream\Jetstream;
use Tests\TestCase;

class RegistrationTest extends TestCase
{
    use RefreshDatabase;

    public function test_registration_screen_can_be_rendered(): void
    {
        if (! Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is not enabled.');
        }

        $response = $this->get('/register');

        $response->assertStatus(200);
    }

    public function test_registration_screen_cannot_be_rendered_if_support_is_disabled(): void
    {
        if (Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is enabled.');
        }

        $response = $this->get('/register');

        $response->assertStatus(404);
    }

    public function test_new_users_can_register(): void
    {
        if (! Features::enabled(Features::registration())) {
            $this->markTestSkipped('Registration support is not enabled.');
        }

        $response = $this->post('/register', [
            'name' => 'Test User',
            'email' => 'test@example.com',
            'password' => 'password',
            'password_confirmation' => 'password',
            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature(),
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/RemoveTeamMemberTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class RemoveTeamMemberTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_members_can_be_removed_from_teams(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('teamMemberIdBeingRemoved', $otherUser->id)
            ->call('removeTeamMember');

        $this->assertCount(0, $user->currentTeam->fresh()->users);
    }

    public function test_only_team_owner_can_remove_team_members(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('teamMemberIdBeingRemoved', $user->id)
            ->call('removeTeamMember')
            ->assertStatus(403);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/TwoFactorAuthenticationSettingsTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Fortify\Features;
use Laravel\Jetstream\Http\Livewire\TwoFactorAuthenticationForm;
use Livewire\Livewire;
use Tests\TestCase;

class TwoFactorAuthenticationSettingsTest extends TestCase
{
    use RefreshDatabase;

    public function test_two_factor_authentication_can_be_enabled(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication');

        $user = $user->fresh();

        $this->assertNotNull($user->two_factor_secret);
        $this->assertCount(8, $user->recoveryCodes());
    }

    public function test_recovery_codes_can_be_regenerated(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        $component = Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication')
            ->call('regenerateRecoveryCodes');

        $user = $user->fresh();

        $component->call('regenerateRecoveryCodes');

        $this->assertCount(8, $user->recoveryCodes());
        $this->assertCount(8, array_diff($user->recoveryCodes(), $user->fresh()->recoveryCodes()));
    }

    public function test_two_factor_authentication_can_be_disabled(): void
    {
        if (! Features::canManageTwoFactorAuthentication()) {
            $this->markTestSkipped('Two factor authentication is not enabled.');
        }

        $this->actingAs($user = User::factory()->create());

        $this->withSession(['auth.password_confirmed_at' => time()]);

        $component = Livewire::test(TwoFactorAuthenticationForm::class)
            ->call('enableTwoFactorAuthentication');

        $this->assertNotNull($user->fresh()->two_factor_secret);

        $component->call('disableTwoFactorAuthentication');

        $this->assertNull($user->fresh()->two_factor_secret);
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdatePasswordTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Hash;
use Laravel\Jetstream\Http\Livewire\UpdatePasswordForm;
use Livewire\Livewire;
use Tests\TestCase;

class UpdatePasswordTest extends TestCase
{
    use RefreshDatabase;

    public function test_password_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ])
            ->call('updatePassword');

        $this->assertTrue(Hash::check('new-password', $user->fresh()->password));
    }

    public function test_current_password_must_be_correct(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'wrong-password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ])
            ->call('updatePassword')
            ->assertHasErrors(['current_password']);

        $this->assertTrue(Hash::check('password', $user->fresh()->password));
    }

    public function test_new_passwords_must_match(): void
    {
        $this->actingAs($user = User::factory()->create());

        Livewire::test(UpdatePasswordForm::class)
            ->set('state', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'wrong-password',
            ])
            ->call('updatePassword')
            ->assertHasErrors(['password']);

        $this->assertTrue(Hash::check('password', $user->fresh()->password));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdateTeamMemberRoleTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\TeamMemberManager;
use Livewire\Livewire;
use Tests\TestCase;

class UpdateTeamMemberRoleTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_member_roles_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('managingRoleFor', $otherUser)
            ->set('currentRole', 'editor')
            ->call('updateRole');

        $this->assertTrue($otherUser->fresh()->hasTeamRole(
            $user->currentTeam->fresh(), 'editor'
        ));
    }

    public function test_only_team_owner_can_update_team_member_roles(): void
    {
        $user = User::factory()->withPersonalTeam()->create();

        $user->currentTeam->users()->attach(
            $otherUser = User::factory()->create(), ['role' => 'admin']
        );

        $this->actingAs($otherUser);

        Livewire::test(TeamMemberManager::class, ['team' => $user->currentTeam])
            ->set('managingRoleFor', $otherUser)
            ->set('currentRole', 'editor')
            ->call('updateRole')
            ->assertStatus(403);

        $this->assertTrue($otherUser->fresh()->hasTeamRole(
            $user->currentTeam->fresh(), 'admin'
        ));
    }
}

#### Inizio File: /home/fabio/EGI/tests/Feature/UpdateTeamNameTest.php ####

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Laravel\Jetstream\Http\Livewire\UpdateTeamNameForm;
use Livewire\Livewire;
use Tests\TestCase;

class UpdateTeamNameTest extends TestCase
{
    use RefreshDatabase;

    public function test_team_names_can_be_updated(): void
    {
        $this->actingAs($user = User::factory()->withPersonalTeam()->create());

        Livewire::test(UpdateTeamNameForm::class, ['team' => $user->currentTeam])
            ->set(['state' => ['name' => 'Test Team']])
            ->call('updateTeamName');

        $this->assertCount(1, $user->fresh()->ownedTeams);
        $this->assertEquals('Test Team', $user->currentTeam->fresh()->name);
    }
}

#### Inizio File: /home/fabio/EGI/tests/TestCase.php ####

<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}

#### Inizio File: /home/fabio/EGI/tests/Unit/ExampleTest.php ####

<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_that_true_is_true(): void
    {
        $this->assertTrue(true);
    }
}
