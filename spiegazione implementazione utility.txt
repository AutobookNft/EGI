üìã ISTRUZIONI PER COPILOT - IMPLEMENTAZIONE UTILITY COMPONENT
CONTESTO E OBIETTIVO
Stiamo implementando il sistema Utility per FlorenceEGI - un marketplace NFT dove ogni EGI (NFT) pu√≤ avere una "utility" associata, ovvero un valore aggiunto concreto (bene fisico, servizio, o benefit digitale) che rende l'NFT pi√π di un semplice asset digitale.
Cosa dobbiamo fare:
Creare un Blade Component Laravel che permetta al creator (proprietario della collection) di aggiungere/modificare una utility al proprio EGI. Questo component sar√† visibile SOLO al creator quando visualizza un EGI della sua collection, prima che la collection sia pubblicata.
Dove va inserito:
Il component verr√† renderizzato nella vista egis/show.blade.php, solo se:

L'utente autenticato √® il creator della collection
La collection NON √® ancora pubblicata (status != 'published')


STRUTTURA DATABASE NECESSARIA
Prima di creare il component, assicurati che esistano queste tabelle:
sql-- Tabella utilities
CREATE TABLE utilities (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    egi_id BIGINT UNIQUE NOT NULL,
    type ENUM('physical','service','hybrid','digital') NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    status VARCHAR(50) DEFAULT 'active',
    
    -- Physical shipping fields
    requires_shipping BOOLEAN DEFAULT FALSE,
    shipping_type VARCHAR(50),
    estimated_shipping_days INT,
    weight DECIMAL(10,3),
    dimensions JSON,
    fragile BOOLEAN DEFAULT FALSE,
    insurance_recommended BOOLEAN DEFAULT FALSE,
    shipping_notes TEXT,
    
    -- Escrow configuration
    escrow_tier ENUM('immediate','standard','premium') DEFAULT 'standard',
    
    -- Service fields
    valid_from DATE,
    valid_until DATE,
    max_uses INT,
    current_uses INT DEFAULT 0,
    activation_instructions TEXT,
    
    -- Metadata
    metadata JSON,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (egi_id) REFERENCES egis(id) ON DELETE CASCADE
);

STEP 1: CREARE IL BLADE COMPONENT
Path: app/View/Components/Utility/UtilityManager.php
php<?php

namespace App\View\Components\Utility;

use App\Models\Egi;
use App\Models\Utility;
use Illuminate\View\Component;

/**
 * Component per gestione Utility di un EGI
 * 
 * @package App\View\Components\Utility
 * @author Padmin D. Curtis (AI Partner OS3.0) for Fabio Cherici
 * @version 1.0.0 (FlorenceEGI - Utility System)
 * @date 2025-01-03
 * @purpose Permette al creator di aggiungere/modificare utility prima della pubblicazione
 */
class UtilityManager extends Component
{
    public Egi $egi;
    public ?Utility $utility;
    public bool $canEdit;
    public array $utilityTypes;
    public array $escrowTiers;
    
    /**
     * Create component instance
     */
    public function __construct(Egi $egi)
    {
        $this->egi = $egi;
        $this->utility = $egi->utility;
        
        // Verifica permessi: solo creator della collection non pubblicata
        $this->canEdit = auth()->check() 
            && auth()->id() === $egi->collection->user_id
            && $egi->collection->status !== 'published';
            
        // Definizione tipi utility
        $this->utilityTypes = [
            'physical' => [
                'label' => 'Bene Fisico',
                'icon' => 'üì¶',
                'description' => 'Oggetto fisico da spedire (quadro, scultura, etc.)'
            ],
            'service' => [
                'label' => 'Servizio',
                'icon' => 'üéØ',
                'description' => 'Servizio o esperienza (workshop, consulenza, etc.)'
            ],
            'hybrid' => [
                'label' => 'Ibrido',
                'icon' => 'üîÑ',
                'description' => 'Combinazione fisico + servizio'
            ],
            'digital' => [
                'label' => 'Digitale',
                'icon' => 'üíæ',
                'description' => 'Contenuto o accesso digitale'
            ]
        ];
        
        // Calcola tier escrow basato sul prezzo EGI
        $this->escrowTiers = $this->calculateEscrowInfo();
    }
    
    /**
     * Calcola informazioni escrow basate sul prezzo
     */
    private function calculateEscrowInfo(): array
    {
        $price = $this->egi->price ?? 0;
        
        if ($price < 100) {
            return [
                'tier' => 'immediate',
                'label' => 'Pagamento Immediato',
                'description' => 'Nessun escrow, pagamento diretto al creator',
                'days' => 0,
                'requirements' => []
            ];
        } elseif ($price <= 2000) {
            return [
                'tier' => 'standard',
                'label' => 'Escrow Standard',
                'description' => 'Fondi rilasciati dopo 14 giorni dalla consegna',
                'days' => 14,
                'requirements' => ['Tracking obbligatorio']
            ];
        } else {
            return [
                'tier' => 'premium',
                'label' => 'Escrow Premium',
                'description' => 'Fondi rilasciati dopo 21 giorni dalla consegna',
                'days' => 21,
                'requirements' => ['Tracking obbligatorio', 'Firma alla consegna', 'Assicurazione consigliata']
            ];
        }
    }
    
    /**
     * Get the view representation
     */
    public function render()
    {
        return view('components.utility.utility-manager');
    }
}

STEP 2: CREARE LA VISTA DEL COMPONENT
Path: resources/views/components/utility/utility-manager.blade.php
blade{{-- Component Utility Manager per EGI --}}
@if($canEdit)
<div class="utility-manager-component bg-white rounded-lg shadow-lg p-6 mt-6">
    <div class="utility-header flex items-center justify-between mb-6">
        <h3 class="text-xl font-bold text-gray-800">
            <span class="mr-2">‚ö°</span>
            Gestione Utility
        </h3>
        
        @if($utility)
            <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm">
                Utility Configurata
            </span>
        @else
            <span class="px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                Nessuna Utility
            </span>
        @endif
    </div>
    
    {{-- Alert informativo --}}
    <div class="alert alert-info mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <p class="text-sm text-blue-800">
            <strong>‚ÑπÔ∏è Nota:</strong> 
            La utility pu√≤ essere aggiunta o modificata solo prima della pubblicazione della collection.
            Una volta pubblicata, non sar√† pi√π possibile modificarla.
        </p>
    </div>
    
    {{-- Form Utility --}}
    <form id="utility-form" 
          action="{{ $utility ? route('utilities.update', $utility) : route('utilities.store') }}"
          method="POST"
          enctype="multipart/form-data"
          class="space-y-6">
        
        @csrf
        @if($utility) @method('PUT') @endif
        
        <input type="hidden" name="egi_id" value="{{ $egi->id }}">
        
        {{-- Selezione Tipo --}}
        <div class="form-group">
            <label class="block text-sm font-medium text-gray-700 mb-2">
                Tipo di Utility
            </label>
            
            <div class="grid grid-cols-2 gap-4">
                @foreach($utilityTypes as $type => $info)
                <label class="utility-type-option cursor-pointer">
                    <input type="radio" 
                           name="type" 
                           value="{{ $type }}"
                           {{ ($utility && $utility->type === $type) ? 'checked' : '' }}
                           class="hidden peer"
                           onchange="toggleUtilitySections('{{ $type }}')">
                    
                    <div class="border-2 border-gray-200 rounded-lg p-4 
                                peer-checked:border-primary-500 peer-checked:bg-primary-50
                                hover:border-gray-300 transition">
                        <div class="flex items-center mb-2">
                            <span class="text-2xl mr-2">{{ $info['icon'] }}</span>
                            <span class="font-semibold">{{ $info['label'] }}</span>
                        </div>
                        <p class="text-xs text-gray-600">{{ $info['description'] }}</p>
                    </div>
                </label>
                @endforeach
            </div>
            
            {{-- Opzione "Nessuna Utility" --}}
            @if($utility)
            <label class="flex items-center mt-4 cursor-pointer">
                <input type="radio" name="type" value="" class="mr-2">
                <span class="text-sm text-gray-600">Rimuovi Utility</span>
            </label>
            @endif
        </div>
        
        {{-- Sezione Dettagli Base (sempre visibile se type selezionato) --}}
        <div id="utility-base-section" style="display: {{ $utility ? 'block' : 'none' }}">
            {{-- Titolo --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    Titolo Utility *
                </label>
                <input type="text" 
                       name="title" 
                       value="{{ $utility?->title }}"
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500"
                       placeholder="Es: Quadro Originale 50x70cm">
            </div>
            
            {{-- Descrizione --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    Descrizione Dettagliata
                </label>
                <textarea name="description" 
                          rows="4"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500"
                          placeholder="Descrivi in dettaglio cosa ricever√† l'acquirente...">{{ $utility?->description }}</textarea>
            </div>
        </div>
        
        {{-- Sezione PHYSICAL (mostrata solo se type = physical/hybrid) --}}
        <div id="utility-physical-section" 
             style="display: none"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üöö</span>
                Dettagli Spedizione
            </h4>
            
            {{-- Info Escrow basato sul prezzo --}}
            <div class="escrow-info mb-4 p-3 bg-{{ $escrowTiers['tier'] === 'immediate' ? 'green' : ($escrowTiers['tier'] === 'standard' ? 'yellow' : 'orange') }}-50 
                        border border-{{ $escrowTiers['tier'] === 'immediate' ? 'green' : ($escrowTiers['tier'] === 'standard' ? 'yellow' : 'orange') }}-200 rounded">
                <p class="text-sm font-semibold mb-1">
                    {{ $escrowTiers['label'] }}
                </p>
                <p class="text-xs text-gray-700">
                    {{ $escrowTiers['description'] }}
                </p>
                @if(count($escrowTiers['requirements']) > 0)
                <ul class="mt-2 text-xs text-gray-600">
                    @foreach($escrowTiers['requirements'] as $req)
                    <li>‚Ä¢ {{ $req }}</li>
                    @endforeach
                </ul>
                @endif
            </div>
            
            <div class="grid grid-cols-2 gap-4">
                {{-- Peso --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Peso (kg) *
                    </label>
                    <input type="number" 
                           name="weight" 
                           step="0.1"
                           value="{{ $utility?->weight }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
                
                {{-- Giorni spedizione --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Giorni preparazione/spedizione
                    </label>
                    <input type="number" 
                           name="estimated_shipping_days" 
                           value="{{ $utility?->estimated_shipping_days ?? 5 }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Dimensioni --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    Dimensioni (cm)
                </label>
                <div class="grid grid-cols-3 gap-2">
                    <input type="number" 
                           name="dimensions[length]" 
                           placeholder="Lunghezza"
                           value="{{ $utility?->dimensions['length'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                    <input type="number" 
                           name="dimensions[width]" 
                           placeholder="Larghezza"
                           value="{{ $utility?->dimensions['width'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                    <input type="number" 
                           name="dimensions[height]" 
                           placeholder="Altezza"
                           value="{{ $utility?->dimensions['height'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Checkbox opzioni --}}
            <div class="flex items-center space-x-6 mt-4">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" 
                           name="fragile" 
                           value="1"
                           {{ $utility?->fragile ? 'checked' : '' }}
                           class="mr-2">
                    <span class="text-sm">Oggetto Fragile</span>
                </label>
                
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" 
                           name="insurance_recommended" 
                           value="1"
                           {{ $utility?->insurance_recommended ? 'checked' : '' }}
                           class="mr-2">
                    <span class="text-sm">Assicurazione Consigliata</span>
                </label>
            </div>
            
            {{-- Note spedizione --}}
            <div class="form-group mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    Note per la Spedizione
                </label>
                <textarea name="shipping_notes" 
                          rows="2"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg"
                          placeholder="Istruzioni speciali per l'imballaggio o la spedizione...">{{ $utility?->shipping_notes }}</textarea>
            </div>
        </div>
        
        {{-- Sezione SERVICE (mostrata solo se type = service/hybrid) --}}
        <div id="utility-service-section" 
             style="display: none"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üéØ</span>
                Dettagli Servizio
            </h4>
            
            <div class="grid grid-cols-2 gap-4">
                {{-- Validit√† --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Valido Dal
                    </label>
                    <input type="date" 
                           name="valid_from" 
                           value="{{ $utility?->valid_from }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
                
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        Valido Fino Al
                    </label>
                    <input type="date" 
                           name="valid_until" 
                           value="{{ $utility?->valid_until }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Numero utilizzi --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    Numero Massimo Utilizzi
                </label>
                <input type="number" 
                       name="max_uses" 
                       value="{{ $utility?->max_uses }}"
                       placeholder="Lascia vuoto per illimitato"
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg">
            </div>
            
            {{-- Istruzioni attivazione --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    Istruzioni per l'Attivazione
                </label>
                <textarea name="activation_instructions" 
                          rows="3"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg"
                          placeholder="Come l'acquirente pu√≤ usufruire del servizio...">{{ $utility?->activation_instructions }}</textarea>
            </div>
        </div>
        
        {{-- Upload Media Gallery --}}
        <div id="utility-media-section" 
             style="display: {{ $utility ? 'block' : 'none' }}"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üì∏</span>
                Galleria Immagini Dettagli
            </h4>
            
            <p class="text-sm text-gray-600 mb-4">
                Aggiungi foto dell'oggetto da vari angoli, dettagli importanti, 
                certificati di autenticit√†, etc. (Max 10 immagini)
            </p>
            
            {{-- Drag & Drop Area --}}
            <div class="upload-area border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                <input type="file" 
                       name="gallery[]" 
                       multiple 
                       accept="image/*"
                       class="hidden"
                       id="gallery-upload">
                
                <label for="gallery-upload" class="cursor-pointer">
                    <div class="text-gray-400">
                        <svg class="mx-auto h-12 w-12" fill="none" stroke="currentColor">
                            <!-- Icona upload -->
                        </svg>
                        <p class="mt-2 text-sm">
                            Clicca per caricare o trascina le immagini qui
                        </p>
                    </div>
                </label>
            </div>
            
            {{-- Preview immagini esistenti --}}
            @if($utility && $utility->getMedia('utility_gallery')->count() > 0)
            <div class="existing-images mt-4">
                <p class="text-sm font-medium text-gray-700 mb-2">Immagini Attuali:</p>
                <div class="grid grid-cols-4 gap-2">
                    @foreach($utility->getMedia('utility_gallery') as $media)
                    <div class="relative group">
                        <img src="{{ $media->getUrl('thumb') }}" 
                             class="w-full h-24 object-cover rounded">
                        <button type="button" 
                                onclick="removeMedia({{ $media->id }})"
                                class="absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 
                                       opacity-0 group-hover:opacity-100 transition">
                            √ó
                        </button>
                    </div>
                    @endforeach
                </div>
            </div>
            @endif
        </div>
        
        {{-- Pulsanti Azione --}}
        <div class="flex justify-between items-center pt-6 border-t">
            <button type="button" 
                    onclick="resetUtilityForm()"
                    class="text-gray-600 hover:text-gray-800">
                Annulla
            </button>
            
            <button type="submit"
                    class="px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 
                           focus:outline-none focus:ring-2 focus:ring-primary-500">
                {{ $utility ? 'Aggiorna Utility' : 'Salva Utility' }}
            </button>
        </div>
    </form>
</div>

{{-- JavaScript per gestione form --}}
<script>
function toggleUtilitySections(type) {
    // Mostra sezione base
    document.getElementById('utility-base-section').style.display = type ? 'block' : 'none';
    document.getElementById('utility-media-section').style.display = type ? 'block' : 'none';
    
    // Mostra/nascondi sezioni specifiche
    const showPhysical = ['physical', 'hybrid'].includes(type);
    const showService = ['service', 'hybrid'].includes(type);
    
    document.getElementById('utility-physical-section').style.display = showPhysical ? 'block' : 'none';
    document.getElementById('utility-service-section').style.display = showService ? 'block' : 'none';
}

function resetUtilityForm() {
    if (confirm('Sei sicuro di voler annullare? Le modifiche non salvate andranno perse.')) {
        document.getElementById('utility-form').reset();
        toggleUtilitySections('');
    }
}

function removeMedia(mediaId) {
    if (confirm('Rimuovere questa immagine?')) {
        // Aggiungi input nascosto per rimozione
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'remove_media[]';
        input.value = mediaId;
        document.getElementById('utility-form').appendChild(input);
        
        // Nascondi visivamente l'immagine
        event.target.closest('.relative').style.display = 'none';
    }
}

// Inizializza stato form se utility esistente
@if($utility)
    toggleUtilitySections('{{ $utility->type }}');
@endif
</script>

@endif {{-- Fine if $canEdit --}}

STEP 3: UTILIZZO IN EGIS/SHOW.BLADE.PHP
Aggiungi questo nel file egis/show.blade.php dove vuoi mostrare il component:
blade{{-- Sezione dettagli EGI esistenti... --}}

{{-- Component Utility Manager (solo per creator prima della pubblicazione) --}}
@auth
    @if(auth()->id() === $egi->collection->user_id && $egi->collection->status !== 'published')
        <x-utility.utility-manager :egi="$egi" />
    @endif
@endauth

{{-- Se utility presente e collection pubblicata, mostra solo in lettura --}}
@if($egi->utility && $egi->collection->status === 'published')
    <x-utility.utility-display :utility="$egi->utility" />
@endif

STEP 4: MODEL UTILITY
Crea il model app/Models/Utility.php:
php<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;

/**
 * Model Utility
 * 
 * @package App\Models
 * @author Padmin D. Curtis (AI Partner OS3.0) for Fabio Cherici
 * @version 1.0.0
 */
class Utility extends Model implements HasMedia
{
    use InteractsWithMedia;
    
    protected $fillable = [
        'egi_id',
        'type',
        'title',
        'description',
        'status',
        'requires_shipping',
        'shipping_type',
        'estimated_shipping_days',
        'weight',
        'dimensions',
        'fragile',
        'insurance_recommended',
        'shipping_notes',
        'escrow_tier',
        'valid_from',
        'valid_until',
        'max_uses',
        'current_uses',
        'activation_instructions',
        'metadata'
    ];
    
    protected $casts = [
        'dimensions' => 'array',
        'metadata' => 'array',
        'fragile' => 'boolean',
        'insurance_recommended' => 'boolean',
        'requires_shipping' => 'boolean',
        'valid_from' => 'date',
        'valid_until' => 'date'
    ];
    
    /**
     * Boot method - auto-set values
     */
    protected static function boot()
    {
        parent::boot();
        
        static::creating(function ($utility) {
            // Auto-set requires_shipping based on type
            if (in_array($utility->type, ['physical', 'hybrid'])) {
                $utility->requires_shipping = true;
            }
            
            // Calculate escrow tier based on EGI price
            $utility->escrow_tier = $utility->calculateEscrowTier();
        });
    }
    
    /**
     * Relationship to EGI
     */
    public function egi()
    {
        return $this->belongsTo(Egi::class);
    }
    
    /**
     * Register media collections
     */
    public function registerMediaCollections(): void
    {
        $this->addMediaCollection('utility_gallery')
            ->acceptsMimeTypes(['image/jpeg', 'image/png', 'image/webp'])
            ->useDisk('public')
            ->useFallbackUrl('/images/no-image.jpg');
            
        $this->addMediaCollection('utility_documents')
            ->acceptsMimeTypes(['application/pdf'])
            ->useDisk('public');
    }
    
    /**
     * Calculate escrow tier based on EGI price
     */
    public function calculateEscrowTier(): string
    {
        $price = $this->egi->price ?? 0;
        
        if ($price < 100) {
            return 'immediate';
        } elseif ($price <= 2000) {
            return 'standard';
        } else {
            return 'premium';
        }
    }
}

STEP 5: CONTROLLER PER GESTIONE UTILITY
Crea app/Http/Controllers/UtilityController.php:
php<?php

namespace App\Http\Controllers;

use App\Models\Utility;
use App\Models\Egi;
use Illuminate\Http\Request;

/**
 * Controller per gestione Utility
 * 
 * @package App\Http\Controllers
 * @author Padmin D. Curtis (AI Partner OS3.0) for Fabio Cherici
 * @version 1.0.0
 */
class UtilityController extends Controller
{
    /**
     * Store new utility
     */
    public function store(Request $request)
    {
        // Validazione
        $validated = $request->validate([
            'egi_id' => 'required|exists:egis,id',
            'type' => 'required|in:physical,service,hybrid,digital',
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            // Physical fields
            'weight' => 'required_if:type,physical,hybrid|numeric|min:0',
            'dimensions' => 'nullable|array',
            'estimated_shipping_days' => 'nullable|integer|min:1',
            'fragile' => 'nullable|boolean',
            'insurance_recommended' => 'nullable|boolean',
            'shipping_notes' => 'nullable|string',
            // Service fields
            'valid_from' => 'nullable|date',
            'valid_until' => 'nullable|date|after:valid_from',
            'max_uses' => 'nullable|integer|min:1',
            'activation_instructions' => 'nullable|string',
            // Media
            'gallery' => 'nullable|array',
            'gallery.*' => 'image|max:10240' // Max 10MB per image
        ]);
        
        // Verifica permessi
        $egi = Egi::findOrFail($validated['egi_id']);
        $this->authorize('update', $egi->collection);
        
        // Crea utility
        $utility = Utility::create($validated);
        
        // Gestione media
        if ($request->hasFile('gallery')) {
            foreach ($request->file('gallery') as $image) {
                $utility->addMedia($image)->toMediaCollection('utility_gallery');
            }
        }
        
        return redirect()
            ->route('egis.show', $egi)
            ->with('success', 'Utility aggiunta con successo!');
    }
    
    /**
     * Update existing utility
     */
    public function update(Request $request, Utility $utility)
    {
        // Verifica permessi
        $this->authorize('update', $utility->egi->collection);
        
        // Validazione (stessa di store)
        $validated = $request->validate([
            // ... stessi campi di store
        ]);
        
        // Update utility
        $utility->update($validated);
        
        // Gestione rimozione media
        if ($request->has('remove_media')) {
            foreach ($request->remove_media as $mediaId) {
                $utility->media()->find($mediaId)?->delete();
            }
        }
        
        // Aggiungi nuove immagini
        if ($request->hasFile('gallery')) {
            foreach ($request->file('gallery') as $image) {
                $utility->addMedia($image)->toMediaCollection('utility_gallery');
            }
        }
        
        return redirect()
            ->route('egis.show', $utility->egi)
            ->with('success', 'Utility aggiornata con successo!');
    }
}

STEP 6: ROUTES
Aggiungi in routes/web.php:
php// Utility management routes
Route::middleware(['auth'])->group(function () {
    Route::post('utilities', [UtilityController::class, 'store'])->name('utilities.store');
    Route::put('utilities/{utility}', [UtilityController::class, 'update'])->name('utilities.update');
    Route::delete('utilities/{utility}', [UtilityController::class, 'destroy'])->name('utilities.destroy');
});

NOTE IMPORTANTI PER L'IMPLEMENTAZIONE

Stile: Il component usa le classi Tailwind standard della piattaforma. Adatta i colori primary-XXX ai tuoi colori brand.
Validazione: Il form include validazione lato client (HTML5) e server. Aggiungi validazione JS custom se necessario.
Media Library: Assicurati che Spatie Media Library sia configurato correttamente con i disk e le conversions necessarie.
Permessi: Il component verifica automaticamente che solo il creator possa modificare. Aggiungi Policy Laravel se non esistono.
Escrow Logic: Il calcolo del tier escrow √® automatico basato sul prezzo dell'EGI. Modifica i threshold se necessario.
Notifiche: Aggiungi notifiche email/database quando una utility viene creata/modificata se richiesto.
Testing: Testa tutti i casi: creazione, modifica, upload immagini, rimozione immagini, permessi.


üìã ISTRUZIONI PER COPILOT - IMPLEMENTAZIONE UTILITY COMPONENT CON LOCALIZZAZIONE‚ö†Ô∏è IMPORTANTE: LOCALIZZAZIONE MULTILINGUATUTTI i testi hardcoded devono essere gestiti tramite il sistema di localizzazione Laravel per le 6 lingue della piattaforma:

üáÆüáπ Italiano (it)
üáµüáπ Portoghese (pt)
üá´üá∑ Francese (fr)
üá™üá∏ Spagnolo (es)
üá¨üáß Inglese (en)
üá©üá™ Tedesco (de)
NESSUN TESTO deve essere scritto direttamente nel codice. Usa sempre __() o @lang()STEP 0: CREARE I FILE DI TRADUZIONEPrima di implementare il component, crea i file di traduzione per tutte le lingue.Path: resources/lang/{locale}/utility.phpCrea questi file per ogni lingua (it, pt, fr, es, en, de):resources/lang/it/utility.php:
php<?php

return [
    // Titoli e header
    'title' => 'Gestione Utility',
    'subtitle' => 'Aggiungi valore reale al tuo EGI',
    'status_configured' => 'Utility Configurata',
    'status_none' => 'Nessuna Utility',
    
    // Alert e messaggi
    'info_edit_before_publish' => 'La utility pu√≤ essere aggiunta o modificata solo prima della pubblicazione della collection. Una volta pubblicata, non sar√† pi√π possibile modificarla.',
    'success_created' => 'Utility aggiunta con successo!',
    'success_updated' => 'Utility aggiornata con successo!',
    'confirm_reset' => 'Sei sicuro di voler annullare? Le modifiche non salvate andranno perse.',
    'confirm_remove_image' => 'Rimuovere questa immagine?',
    
    // Tipi di utility
    'types' => [
        'label' => 'Tipo di Utility',
        'physical' => [
            'label' => 'Bene Fisico',
            'description' => 'Oggetto fisico da spedire (quadro, scultura, etc.)'
        ],
        'service' => [
            'label' => 'Servizio',
            'description' => 'Servizio o esperienza (workshop, consulenza, etc.)'
        ],
        'hybrid' => [
            'label' => 'Ibrido',
            'description' => 'Combinazione fisico + servizio'
        ],
        'digital' => [
            'label' => 'Digitale',
            'description' => 'Contenuto o accesso digitale'
        ],
        'remove' => 'Rimuovi Utility'
    ],
    
    // Campi form base
    'fields' => [
        'title' => 'Titolo Utility',
        'title_placeholder' => 'Es: Quadro Originale 50x70cm',
        'description' => 'Descrizione Dettagliata',
        'description_placeholder' => 'Descrivi in dettaglio cosa ricever√† l\'acquirente...',
    ],
    
    // Sezione spedizione
    'shipping' => [
        'title' => 'Dettagli Spedizione',
        'weight' => 'Peso (kg)',
        'dimensions' => 'Dimensioni (cm)',
        'length' => 'Lunghezza',
        'width' => 'Larghezza', 
        'height' => 'Altezza',
        'days' => 'Giorni preparazione/spedizione',
        'fragile' => 'Oggetto Fragile',
        'insurance' => 'Assicurazione Consigliata',
        'notes' => 'Note per la Spedizione',
        'notes_placeholder' => 'Istruzioni speciali per l\'imballaggio o la spedizione...'
    ],
    
    // Sezione servizio
    'service' => [
        'title' => 'Dettagli Servizio',
        'valid_from' => 'Valido Dal',
        'valid_until' => 'Valido Fino Al',
        'max_uses' => 'Numero Massimo Utilizzi',
        'max_uses_placeholder' => 'Lascia vuoto per illimitato',
        'instructions' => 'Istruzioni per l\'Attivazione',
        'instructions_placeholder' => 'Come l\'acquirente pu√≤ usufruire del servizio...'
    ],
    
    // Escrow
    'escrow' => [
        'immediate' => [
            'label' => 'Pagamento Immediato',
            'description' => 'Nessun escrow, pagamento diretto al creator'
        ],
        'standard' => [
            'label' => 'Escrow Standard',
            'description' => 'Fondi rilasciati dopo 14 giorni dalla consegna',
            'requirement_tracking' => 'Tracking obbligatorio'
        ],
        'premium' => [
            'label' => 'Escrow Premium',
            'description' => 'Fondi rilasciati dopo 21 giorni dalla consegna',
            'requirement_tracking' => 'Tracking obbligatorio',
            'requirement_signature' => 'Firma alla consegna',
            'requirement_insurance' => 'Assicurazione consigliata'
        ]
    ],
    
    // Media/Gallery
    'media' => [
        'title' => 'Galleria Immagini Dettagli',
        'description' => 'Aggiungi foto dell\'oggetto da vari angoli, dettagli importanti, certificati di autenticit√†, etc. (Max 10 immagini)',
        'upload_prompt' => 'Clicca per caricare o trascina le immagini qui',
        'current_images' => 'Immagini Attuali:',
        'remove_image' => 'Rimuovi'
    ],
    
    // Pulsanti
    'buttons' => [
        'cancel' => 'Annulla',
        'save' => 'Salva Utility',
        'update' => 'Aggiorna Utility',
        'remove' => 'Rimuovi',
        'upload' => 'Carica'
    ],
    
    // Validation errors
    'validation' => [
        'title_required' => 'Il titolo √® obbligatorio',
        'type_required' => 'Seleziona un tipo di utility',
        'weight_required' => 'Il peso √® obbligatorio per beni fisici',
        'valid_until_after' => 'La data di fine deve essere successiva alla data di inizio'
    ]
];resources/lang/en/utility.php:
php<?php

return [
    // Titles and headers
    'title' => 'Utility Management',
    'subtitle' => 'Add real value to your EGI',
    'status_configured' => 'Utility Configured',
    'status_none' => 'No Utility',
    
    // Alerts and messages
    'info_edit_before_publish' => 'The utility can only be added or modified before the collection is published. Once published, it cannot be modified.',
    'success_created' => 'Utility successfully added!',
    'success_updated' => 'Utility successfully updated!',
    'confirm_reset' => 'Are you sure you want to cancel? Unsaved changes will be lost.',
    'confirm_remove_image' => 'Remove this image?',
    
    // Utility types
    'types' => [
        'label' => 'Utility Type',
        'physical' => [
            'label' => 'Physical Good',
            'description' => 'Physical object to ship (painting, sculpture, etc.)'
        ],
        'service' => [
            'label' => 'Service',
            'description' => 'Service or experience (workshop, consultation, etc.)'
        ],
        'hybrid' => [
            'label' => 'Hybrid',
            'description' => 'Physical + service combination'
        ],
        'digital' => [
            'label' => 'Digital',
            'description' => 'Digital content or access'
        ],
        'remove' => 'Remove Utility'
    ],
    
    // Base form fields
    'fields' => [
        'title' => 'Utility Title',
        'title_placeholder' => 'E.g.: Original Painting 50x70cm',
        'description' => 'Detailed Description',
        'description_placeholder' => 'Describe in detail what the buyer will receive...',
    ],
    
    // Shipping section
    'shipping' => [
        'title' => 'Shipping Details',
        'weight' => 'Weight (kg)',
        'dimensions' => 'Dimensions (cm)',
        'length' => 'Length',
        'width' => 'Width',
        'height' => 'Height',
        'days' => 'Preparation/shipping days',
        'fragile' => 'Fragile Item',
        'insurance' => 'Insurance Recommended',
        'notes' => 'Shipping Notes',
        'notes_placeholder' => 'Special instructions for packaging or shipping...'
    ],
    
    // Service section
    'service' => [
        'title' => 'Service Details',
        'valid_from' => 'Valid From',
        'valid_until' => 'Valid Until',
        'max_uses' => 'Maximum Number of Uses',
        'max_uses_placeholder' => 'Leave empty for unlimited',
        'instructions' => 'Activation Instructions',
        'instructions_placeholder' => 'How the buyer can use the service...'
    ],
    
    // Escrow
    'escrow' => [
        'immediate' => [
            'label' => 'Immediate Payment',
            'description' => 'No escrow, direct payment to creator'
        ],
        'standard' => [
            'label' => 'Standard Escrow',
            'description' => 'Funds released after 14 days from delivery',
            'requirement_tracking' => 'Tracking required'
        ],
        'premium' => [
            'label' => 'Premium Escrow',
            'description' => 'Funds released after 21 days from delivery',
            'requirement_tracking' => 'Tracking required',
            'requirement_signature' => 'Signature on delivery',
            'requirement_insurance' => 'Insurance recommended'
        ]
    ],
    
    // Media/Gallery
    'media' => [
        'title' => 'Detail Images Gallery',
        'description' => 'Add photos of the object from various angles, important details, authenticity certificates, etc. (Max 10 images)',
        'upload_prompt' => 'Click to upload or drag images here',
        'current_images' => 'Current Images:',
        'remove_image' => 'Remove'
    ],
    
    // Buttons
    'buttons' => [
        'cancel' => 'Cancel',
        'save' => 'Save Utility',
        'update' => 'Update Utility',
        'remove' => 'Remove',
        'upload' => 'Upload'
    ],
    
    // Validation errors
    'validation' => [
        'title_required' => 'Title is required',
        'type_required' => 'Please select a utility type',
        'weight_required' => 'Weight is required for physical goods',
        'valid_until_after' => 'End date must be after start date'
    ]
];Ripeti la stessa struttura per: pt, fr, es, de

üìã ISTRUZIONI PER COPILOT - IMPLEMENTAZIONE UTILITY COMPONENT CON LOCALIZZAZIONE
‚ö†Ô∏è IMPORTANTE: LOCALIZZAZIONE MULTILINGUA
TUTTI i testi hardcoded devono essere gestiti tramite il sistema di localizzazione Laravel per le 6 lingue della piattaforma:

üáÆüáπ Italiano (it)
üáµüáπ Portoghese (pt)
üá´üá∑ Francese (fr)
üá™üá∏ Spagnolo (es)
üá¨üáß Inglese (en)
üá©üá™ Tedesco (de)

NESSUN TESTO deve essere scritto direttamente nel codice. Usa sempre __() o @lang()

STEP 0: CREARE I FILE DI TRADUZIONE
Prima di implementare il component, crea i file di traduzione per tutte le lingue.
Path: resources/lang/{locale}/utility.php
Crea questi file per ogni lingua (it, pt, fr, es, en, de):
resources/lang/it/utility.php:
php<?php

return [
    // Titoli e header
    'title' => 'Gestione Utility',
    'subtitle' => 'Aggiungi valore reale al tuo EGI',
    'status_configured' => 'Utility Configurata',
    'status_none' => 'Nessuna Utility',
    
    // Alert e messaggi
    'info_edit_before_publish' => 'La utility pu√≤ essere aggiunta o modificata solo prima della pubblicazione della collection. Una volta pubblicata, non sar√† pi√π possibile modificarla.',
    'success_created' => 'Utility aggiunta con successo!',
    'success_updated' => 'Utility aggiornata con successo!',
    'confirm_reset' => 'Sei sicuro di voler annullare? Le modifiche non salvate andranno perse.',
    'confirm_remove_image' => 'Rimuovere questa immagine?',
    
    // Tipi di utility
    'types' => [
        'label' => 'Tipo di Utility',
        'physical' => [
            'label' => 'Bene Fisico',
            'description' => 'Oggetto fisico da spedire (quadro, scultura, etc.)'
        ],
        'service' => [
            'label' => 'Servizio',
            'description' => 'Servizio o esperienza (workshop, consulenza, etc.)'
        ],
        'hybrid' => [
            'label' => 'Ibrido',
            'description' => 'Combinazione fisico + servizio'
        ],
        'digital' => [
            'label' => 'Digitale',
            'description' => 'Contenuto o accesso digitale'
        ],
        'remove' => 'Rimuovi Utility'
    ],
    
    // Campi form base
    'fields' => [
        'title' => 'Titolo Utility',
        'title_placeholder' => 'Es: Quadro Originale 50x70cm',
        'description' => 'Descrizione Dettagliata',
        'description_placeholder' => 'Descrivi in dettaglio cosa ricever√† l\'acquirente...',
    ],
    
    // Sezione spedizione
    'shipping' => [
        'title' => 'Dettagli Spedizione',
        'weight' => 'Peso (kg)',
        'dimensions' => 'Dimensioni (cm)',
        'length' => 'Lunghezza',
        'width' => 'Larghezza', 
        'height' => 'Altezza',
        'days' => 'Giorni preparazione/spedizione',
        'fragile' => 'Oggetto Fragile',
        'insurance' => 'Assicurazione Consigliata',
        'notes' => 'Note per la Spedizione',
        'notes_placeholder' => 'Istruzioni speciali per l\'imballaggio o la spedizione...'
    ],
    
    // Sezione servizio
    'service' => [
        'title' => 'Dettagli Servizio',
        'valid_from' => 'Valido Dal',
        'valid_until' => 'Valido Fino Al',
        'max_uses' => 'Numero Massimo Utilizzi',
        'max_uses_placeholder' => 'Lascia vuoto per illimitato',
        'instructions' => 'Istruzioni per l\'Attivazione',
        'instructions_placeholder' => 'Come l\'acquirente pu√≤ usufruire del servizio...'
    ],
    
    // Escrow
    'escrow' => [
        'immediate' => [
            'label' => 'Pagamento Immediato',
            'description' => 'Nessun escrow, pagamento diretto al creator'
        ],
        'standard' => [
            'label' => 'Escrow Standard',
            'description' => 'Fondi rilasciati dopo 14 giorni dalla consegna',
            'requirement_tracking' => 'Tracking obbligatorio'
        ],
        'premium' => [
            'label' => 'Escrow Premium',
            'description' => 'Fondi rilasciati dopo 21 giorni dalla consegna',
            'requirement_tracking' => 'Tracking obbligatorio',
            'requirement_signature' => 'Firma alla consegna',
            'requirement_insurance' => 'Assicurazione consigliata'
        ]
    ],
    
    // Media/Gallery
    'media' => [
        'title' => 'Galleria Immagini Dettagli',
        'description' => 'Aggiungi foto dell\'oggetto da vari angoli, dettagli importanti, certificati di autenticit√†, etc. (Max 10 immagini)',
        'upload_prompt' => 'Clicca per caricare o trascina le immagini qui',
        'current_images' => 'Immagini Attuali:',
        'remove_image' => 'Rimuovi'
    ],
    
    // Pulsanti
    'buttons' => [
        'cancel' => 'Annulla',
        'save' => 'Salva Utility',
        'update' => 'Aggiorna Utility',
        'remove' => 'Rimuovi',
        'upload' => 'Carica'
    ],
    
    // Validation errors
    'validation' => [
        'title_required' => 'Il titolo √® obbligatorio',
        'type_required' => 'Seleziona un tipo di utility',
        'weight_required' => 'Il peso √® obbligatorio per beni fisici',
        'valid_until_after' => 'La data di fine deve essere successiva alla data di inizio'
    ]
];
resources/lang/en/utility.php:
php<?php

return [
    // Titles and headers
    'title' => 'Utility Management',
    'subtitle' => 'Add real value to your EGI',
    'status_configured' => 'Utility Configured',
    'status_none' => 'No Utility',
    
    // Alerts and messages
    'info_edit_before_publish' => 'The utility can only be added or modified before the collection is published. Once published, it cannot be modified.',
    'success_created' => 'Utility successfully added!',
    'success_updated' => 'Utility successfully updated!',
    'confirm_reset' => 'Are you sure you want to cancel? Unsaved changes will be lost.',
    'confirm_remove_image' => 'Remove this image?',
    
    // Utility types
    'types' => [
        'label' => 'Utility Type',
        'physical' => [
            'label' => 'Physical Good',
            'description' => 'Physical object to ship (painting, sculpture, etc.)'
        ],
        'service' => [
            'label' => 'Service',
            'description' => 'Service or experience (workshop, consultation, etc.)'
        ],
        'hybrid' => [
            'label' => 'Hybrid',
            'description' => 'Physical + service combination'
        ],
        'digital' => [
            'label' => 'Digital',
            'description' => 'Digital content or access'
        ],
        'remove' => 'Remove Utility'
    ],
    
    // Base form fields
    'fields' => [
        'title' => 'Utility Title',
        'title_placeholder' => 'E.g.: Original Painting 50x70cm',
        'description' => 'Detailed Description',
        'description_placeholder' => 'Describe in detail what the buyer will receive...',
    ],
    
    // Shipping section
    'shipping' => [
        'title' => 'Shipping Details',
        'weight' => 'Weight (kg)',
        'dimensions' => 'Dimensions (cm)',
        'length' => 'Length',
        'width' => 'Width',
        'height' => 'Height',
        'days' => 'Preparation/shipping days',
        'fragile' => 'Fragile Item',
        'insurance' => 'Insurance Recommended',
        'notes' => 'Shipping Notes',
        'notes_placeholder' => 'Special instructions for packaging or shipping...'
    ],
    
    // Service section
    'service' => [
        'title' => 'Service Details',
        'valid_from' => 'Valid From',
        'valid_until' => 'Valid Until',
        'max_uses' => 'Maximum Number of Uses',
        'max_uses_placeholder' => 'Leave empty for unlimited',
        'instructions' => 'Activation Instructions',
        'instructions_placeholder' => 'How the buyer can use the service...'
    ],
    
    // Escrow
    'escrow' => [
        'immediate' => [
            'label' => 'Immediate Payment',
            'description' => 'No escrow, direct payment to creator'
        ],
        'standard' => [
            'label' => 'Standard Escrow',
            'description' => 'Funds released after 14 days from delivery',
            'requirement_tracking' => 'Tracking required'
        ],
        'premium' => [
            'label' => 'Premium Escrow',
            'description' => 'Funds released after 21 days from delivery',
            'requirement_tracking' => 'Tracking required',
            'requirement_signature' => 'Signature on delivery',
            'requirement_insurance' => 'Insurance recommended'
        ]
    ],
    
    // Media/Gallery
    'media' => [
        'title' => 'Detail Images Gallery',
        'description' => 'Add photos of the object from various angles, important details, authenticity certificates, etc. (Max 10 images)',
        'upload_prompt' => 'Click to upload or drag images here',
        'current_images' => 'Current Images:',
        'remove_image' => 'Remove'
    ],
    
    // Buttons
    'buttons' => [
        'cancel' => 'Cancel',
        'save' => 'Save Utility',
        'update' => 'Update Utility',
        'remove' => 'Remove',
        'upload' => 'Upload'
    ],
    
    // Validation errors
    'validation' => [
        'title_required' => 'Title is required',
        'type_required' => 'Please select a utility type',
        'weight_required' => 'Weight is required for physical goods',
        'valid_until_after' => 'End date must be after start date'
    ]
];
Ripeti la stessa struttura per: pt, fr, es, de

STEP 1: BLADE COMPONENT AGGIORNATO CON LOCALIZZAZIONE
Path: app/View/Components/Utility/UtilityManager.php
php<?php

namespace App\View\Components\Utility;

use App\Models\Egi;
use App\Models\Utility;
use Illuminate\View\Component;

/**
 * Component per gestione Utility con supporto multilingua
 * 
 * @package App\View\Components\Utility
 * @author Padmin D. Curtis (AI Partner OS3.0) for Fabio Cherici
 * @version 1.0.0 (FlorenceEGI - Utility System Multilingual)
 * @date 2025-01-03
 * @purpose Permette al creator di aggiungere/modificare utility prima della pubblicazione
 */
class UtilityManager extends Component
{
    public Egi $egi;
    public ?Utility $utility;
    public bool $canEdit;
    public array $utilityTypes;
    public array $escrowTiers;
    
    /**
     * Create component instance
     */
    public function __construct(Egi $egi)
    {
        $this->egi = $egi;
        $this->utility = $egi->utility;
        
        // Verifica permessi: solo creator della collection non pubblicata
        $this->canEdit = auth()->check() 
            && auth()->id() === $egi->collection->user_id
            && $egi->collection->status !== 'published';
            
        // Definizione tipi utility con localizzazione
        $this->utilityTypes = [
            'physical' => [
                'label' => __('utility.types.physical.label'),
                'icon' => 'üì¶',
                'description' => __('utility.types.physical.description')
            ],
            'service' => [
                'label' => __('utility.types.service.label'),
                'icon' => 'üéØ',
                'description' => __('utility.types.service.description')
            ],
            'hybrid' => [
                'label' => __('utility.types.hybrid.label'),
                'icon' => 'üîÑ',
                'description' => __('utility.types.hybrid.description')
            ],
            'digital' => [
                'label' => __('utility.types.digital.label'),
                'icon' => 'üíæ',
                'description' => __('utility.types.digital.description')
            ]
        ];
        
        // Calcola tier escrow basato sul prezzo EGI
        $this->escrowTiers = $this->calculateEscrowInfo();
    }
    
    /**
     * Calcola informazioni escrow basate sul prezzo con testi localizzati
     */
    private function calculateEscrowInfo(): array
    {
        $price = $this->egi->price ?? 0;
        
        if ($price < 100) {
            return [
                'tier' => 'immediate',
                'label' => __('utility.escrow.immediate.label'),
                'description' => __('utility.escrow.immediate.description'),
                'days' => 0,
                'requirements' => []
            ];
        } elseif ($price <= 2000) {
            return [
                'tier' => 'standard',
                'label' => __('utility.escrow.standard.label'),
                'description' => __('utility.escrow.standard.description'),
                'days' => 14,
                'requirements' => [
                    __('utility.escrow.standard.requirement_tracking')
                ]
            ];
        } else {
            return [
                'tier' => 'premium',
                'label' => __('utility.escrow.premium.label'),
                'description' => __('utility.escrow.premium.description'),
                'days' => 21,
                'requirements' => [
                    __('utility.escrow.premium.requirement_tracking'),
                    __('utility.escrow.premium.requirement_signature'),
                    __('utility.escrow.premium.requirement_insurance')
                ]
            ];
        }
    }
    
    /**
     * Get the view representation
     */
    public function render()
    {
        return view('components.utility.utility-manager');
    }
}

STEP 2: VISTA BLADE CON LOCALIZZAZIONE
Path: resources/views/components/utility/utility-manager.blade.php
blade{{-- Component Utility Manager per EGI con localizzazione multilingua --}}
@if($canEdit)
<div class="utility-manager-component bg-white rounded-lg shadow-lg p-6 mt-6">
    <div class="utility-header flex items-center justify-between mb-6">
        <h3 class="text-xl font-bold text-gray-800">
            <span class="mr-2">‚ö°</span>
            {{ __('utility.title') }}
        </h3>
        
        @if($utility)
            <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm">
                {{ __('utility.status_configured') }}
            </span>
        @else
            <span class="px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm">
                {{ __('utility.status_none') }}
            </span>
        @endif
    </div>
    
    {{-- Alert informativo --}}
    <div class="alert alert-info mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <p class="text-sm text-blue-800">
            <strong>‚ÑπÔ∏è {{ __('common.note') }}:</strong> 
            {{ __('utility.info_edit_before_publish') }}
        </p>
    </div>
    
    {{-- Form Utility --}}
    <form id="utility-form" 
          action="{{ $utility ? route('utilities.update', $utility) : route('utilities.store') }}"
          method="POST"
          enctype="multipart/form-data"
          class="space-y-6">
        
        @csrf
        @if($utility) @method('PUT') @endif
        
        <input type="hidden" name="egi_id" value="{{ $egi->id }}">
        
        {{-- Selezione Tipo --}}
        <div class="form-group">
            <label class="block text-sm font-medium text-gray-700 mb-2">
                {{ __('utility.types.label') }}
            </label>
            
            <div class="grid grid-cols-2 gap-4">
                @foreach($utilityTypes as $type => $info)
                <label class="utility-type-option cursor-pointer">
                    <input type="radio" 
                           name="type" 
                           value="{{ $type }}"
                           {{ ($utility && $utility->type === $type) ? 'checked' : '' }}
                           class="hidden peer"
                           onchange="toggleUtilitySections('{{ $type }}')">
                    
                    <div class="border-2 border-gray-200 rounded-lg p-4 
                                peer-checked:border-primary-500 peer-checked:bg-primary-50
                                hover:border-gray-300 transition">
                        <div class="flex items-center mb-2">
                            <span class="text-2xl mr-2">{{ $info['icon'] }}</span>
                            <span class="font-semibold">{{ $info['label'] }}</span>
                        </div>
                        <p class="text-xs text-gray-600">{{ $info['description'] }}</p>
                    </div>
                </label>
                @endforeach
            </div>
            
            {{-- Opzione "Nessuna Utility" --}}
            @if($utility)
            <label class="flex items-center mt-4 cursor-pointer">
                <input type="radio" name="type" value="" class="mr-2">
                <span class="text-sm text-gray-600">{{ __('utility.types.remove') }}</span>
            </label>
            @endif
        </div>
        
        {{-- Sezione Dettagli Base (sempre visibile se type selezionato) --}}
        <div id="utility-base-section" style="display: {{ $utility ? 'block' : 'none' }}">
            {{-- Titolo --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    {{ __('utility.fields.title') }} *
                </label>
                <input type="text" 
                       name="title" 
                       value="{{ $utility?->title }}"
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500"
                       placeholder="{{ __('utility.fields.title_placeholder') }}">
            </div>
            
            {{-- Descrizione --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    {{ __('utility.fields.description') }}
                </label>
                <textarea name="description" 
                          rows="4"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-primary-500 focus:border-primary-500"
                          placeholder="{{ __('utility.fields.description_placeholder') }}">{{ $utility?->description }}</textarea>
            </div>
        </div>
        
        {{-- Sezione PHYSICAL (mostrata solo se type = physical/hybrid) --}}
        <div id="utility-physical-section" 
             style="display: none"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üöö</span>
                {{ __('utility.shipping.title') }}
            </h4>
            
            {{-- Info Escrow basato sul prezzo --}}
            <div class="escrow-info mb-4 p-3 bg-{{ $escrowTiers['tier'] === 'immediate' ? 'green' : ($escrowTiers['tier'] === 'standard' ? 'yellow' : 'orange') }}-50 
                        border border-{{ $escrowTiers['tier'] === 'immediate' ? 'green' : ($escrowTiers['tier'] === 'standard' ? 'yellow' : 'orange') }}-200 rounded">
                <p class="text-sm font-semibold mb-1">
                    {{ $escrowTiers['label'] }}
                </p>
                <p class="text-xs text-gray-700">
                    {{ $escrowTiers['description'] }}
                </p>
                @if(count($escrowTiers['requirements']) > 0)
                <ul class="mt-2 text-xs text-gray-600">
                    @foreach($escrowTiers['requirements'] as $req)
                    <li>‚Ä¢ {{ $req }}</li>
                    @endforeach
                </ul>
                @endif
            </div>
            
            <div class="grid grid-cols-2 gap-4">
                {{-- Peso --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        {{ __('utility.shipping.weight') }} *
                    </label>
                    <input type="number" 
                           name="weight" 
                           step="0.1"
                           value="{{ $utility?->weight }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
                
                {{-- Giorni spedizione --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        {{ __('utility.shipping.days') }}
                    </label>
                    <input type="number" 
                           name="estimated_shipping_days" 
                           value="{{ $utility?->estimated_shipping_days ?? 5 }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Dimensioni --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    {{ __('utility.shipping.dimensions') }}
                </label>
                <div class="grid grid-cols-3 gap-2">
                    <input type="number" 
                           name="dimensions[length]" 
                           placeholder="{{ __('utility.shipping.length') }}"
                           value="{{ $utility?->dimensions['length'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                    <input type="number" 
                           name="dimensions[width]" 
                           placeholder="{{ __('utility.shipping.width') }}"
                           value="{{ $utility?->dimensions['width'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                    <input type="number" 
                           name="dimensions[height]" 
                           placeholder="{{ __('utility.shipping.height') }}"
                           value="{{ $utility?->dimensions['height'] ?? '' }}"
                           class="px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Checkbox opzioni --}}
            <div class="flex items-center space-x-6 mt-4">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" 
                           name="fragile" 
                           value="1"
                           {{ $utility?->fragile ? 'checked' : '' }}
                           class="mr-2">
                    <span class="text-sm">{{ __('utility.shipping.fragile') }}</span>
                </label>
                
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" 
                           name="insurance_recommended" 
                           value="1"
                           {{ $utility?->insurance_recommended ? 'checked' : '' }}
                           class="mr-2">
                    <span class="text-sm">{{ __('utility.shipping.insurance') }}</span>
                </label>
            </div>
            
            {{-- Note spedizione --}}
            <div class="form-group mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    {{ __('utility.shipping.notes') }}
                </label>
                <textarea name="shipping_notes" 
                          rows="2"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg"
                          placeholder="{{ __('utility.shipping.notes_placeholder') }}">{{ $utility?->shipping_notes }}</textarea>
            </div>
        </div>
        
        {{-- Sezione SERVICE (mostrata solo se type = service/hybrid) --}}
        <div id="utility-service-section" 
             style="display: none"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üéØ</span>
                {{ __('utility.service.title') }}
            </h4>
            
            <div class="grid grid-cols-2 gap-4">
                {{-- Validit√† --}}
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        {{ __('utility.service.valid_from') }}
                    </label>
                    <input type="date" 
                           name="valid_from" 
                           value="{{ $utility?->valid_from }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
                
                <div class="form-group">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        {{ __('utility.service.valid_until') }}
                    </label>
                    <input type="date" 
                           name="valid_until" 
                           value="{{ $utility?->valid_until }}"
                           class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                </div>
            </div>
            
            {{-- Numero utilizzi --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    {{ __('utility.service.max_uses') }}
                </label>
                <input type="number" 
                       name="max_uses" 
                       value="{{ $utility?->max_uses }}"
                       placeholder="{{ __('utility.service.max_uses_placeholder') }}"
                       class="w-full px-3 py-2 border border-gray-300 rounded-lg">
            </div>
            
            {{-- Istruzioni attivazione --}}
            <div class="form-group">
                <label class="block text-sm font-medium text-gray-700 mb-1">
                    {{ __('utility.service.instructions') }}
                </label>
                <textarea name="activation_instructions" 
                          rows="3"
                          class="w-full px-3 py-2 border border-gray-300 rounded-lg"
                          placeholder="{{ __('utility.service.instructions_placeholder') }}">{{ $utility?->activation_instructions }}</textarea>
            </div>
        </div>
        
        {{-- Upload Media Gallery --}}
        <div id="utility-media-section" 
             style="display: {{ $utility ? 'block' : 'none' }}"
             class="bg-gray-50 p-4 rounded-lg">
            
            <h4 class="font-semibold text-gray-800 mb-4">
                <span class="mr-2">üì∏</span>
                {{ __('utility.media.title') }}
            </h4>
            
            <p class="text-sm text-gray-600 mb-4">
                {{ __('utility.media.description') }}
            </p>
            
            {{-- Drag & Drop Area --}}
            <div class="upload-area border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                <input type="file" 
                       name="gallery[]" 
                       multiple 
                       accept="image/*"
                       class="hidden"
                       id="gallery-upload">
                
                <label for="gallery-upload" class="cursor-pointer">
                    <div class="text-gray-400">
                        <svg class="mx-auto h-12 w-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                        </svg>
                        <p class="mt-2 text-sm">
                            {{ __('utility.media.upload_prompt') }}
                        </p>
                    </div>
                </label>
            </div>
            
            {{-- Preview immagini esistenti --}}
            @if($utility && $utility->getMedia('utility_gallery')->count() > 0)
            <div class="existing-images mt-4">
                <p class="text-sm font-medium text-gray-700 mb-2">{{ __('utility.media.current_images') }}</p>
                <div class="grid grid-cols-4 gap-2">
                    @foreach($utility->getMedia('utility_gallery') as $media)
                    <div class="relative group">
                        <img src="{{ $media->getUrl('thumb') }}" 
                             class="w-full h-24 object-cover rounded">
                        <button type="button" 
                                onclick="removeMedia({{ $media->id }})"
                                class="absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 
                                       opacity-0 group-hover:opacity-100 transition">
                            √ó
                        </button>
                    </div>
                    @endforeach
                </div>
            </div>
            @endif
        </div>
        
        {{-- Pulsanti Azione --}}
        <div class="flex justify-between items-center pt-6 border-t">
            <button type="button" 
                    onclick="resetUtilityForm()"
                    class="text-gray-600 hover:text-gray-800">
                {{ __('utility.buttons.cancel') }}
            </button>
            
            <button type="submit"
                    class="px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 
                           focus:outline-none focus:ring-2 focus:ring-primary-500">
                {{ $utility ? __('utility.buttons.update') : __('utility.buttons.save') }}
            </button>
        </div>
    </form>
</div>

{{-- JavaScript per gestione form con testi localizzati --}}
<script>
function toggleUtilitySections(type) {
    // Mostra sezione base
    document.getElementById('utility-base-section').style.display = type ? 'block' : 'none';
    document.getElementById('utility-media-section').style.display = type ? 'block' : 'none';
    
    // Mostra/nascondi sezioni specifiche
    const showPhysical = ['physical', 'hybrid'].includes(type);
    const showService = ['service', 'hybrid'].includes(type);
    
    document.getElementById('utility-physical-section').style.display = showPhysical ? 'block' : 'none';
    document.getElementById('utility-service-section').style.display = showService ? 'block' : 'none';
}

function resetUtilityForm() {
    if (confirm('{{ __('utility.confirm_reset') }}')) {
        document.getElementById('utility-form').reset();
        toggleUtilitySections('');
    }
}

function removeMedia(mediaId) {
    if (confirm('{{ __('utility.confirm_remove_image') }}')) {
        // Aggiungi input nascosto per rimozione
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'remove_media[]';
        input.value = mediaId;
        document.getElementById('utility-form').appendChild(input);
        
        // Nascondi visualmente l'immagine
        event.target.closest('.relative').style.display = 'none';
    }
}

// Inizializza stato form se utility esistente
@if($utility)
    toggleUtilitySections('{{ $utility->type }}');
@endif
</script>

@endif {{-- Fine if $canEdit --}}

STEP 3: CONTROLLER CON MESSAGGI LOCALIZZATI
Path: app/Http/Controllers/UtilityController.php
php<?php

namespace App\Http\Controllers;

use App\Models\Utility;
use App\Models\Egi;
use Illuminate\Http\Request;

/**
 * Controller per gestione Utility con supporto multilingua
 * 
 * @package App\Http\Controllers
 * @author Padmin D. Curtis (AI Partner OS3.0) for Fabio Cherici
 * @version 1.0.0 (FlorenceEGI - Utility System Multilingual)
 */
class UtilityController extends Controller
{
    /**
     * Store new utility
     */
    public function store(Request $request)
    {
        // Validazione con messaggi localizzati
        $validated = $request->validate([
            'egi_id' => 'required|exists:egis,id',
            'type' => 'required|in:physical,service,hybrid,digital',
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            // Physical fields
            'weight' => 'required_if:type,physical,hybrid|numeric|min:0',
            'dimensions' => 'nullable|array',
            'estimated_shipping_days' => 'nullable|integer|min:1',
            'fragile' => 'nullable|boolean',
            'insurance_recommended' => 'nullable|boolean',
            'shipping_notes' => 'nullable|string',
            // Service fields
            'valid_from' => 'nullable|date',
            'valid_until' => 'nullable|date|after:valid_from',
            'max_uses' => 'nullable|integer|min:1',
            'activation_instructions' => 'nullable|string',
            // Media
            'gallery' => 'nullable|array',
            'gallery.*' => 'image|max:10240' // Max 10MB per image
        ], [
            // Messaggi di validazione localizzati
            'title.required' => __('utility.validation.title_required'),
            'type.required' => __('utility.validation.type_required'),
            'weight.required_if' => __('utility.validation.weight_required'),
            'valid_until.after' => __('utility.validation.valid_until_after'),
        ]);
        
        // Verifica permessi
        $egi = Egi::findOrFail($validated['egi_id']);
        $this->authorize('update', $egi->collection);
        
        // Crea utility
        $utility = Utility::create($validated);
        
        // Gestione media
        if ($request->hasFile('gallery')) {
            foreach ($request->file('gallery') as $image) {
                $utility->addMedia($image)->toMediaCollection('utility_gallery');
            }
        }
        
        return redirect()
            ->route('egis.show', $egi)
            ->with('success', __('utility.success_created'));
    }
    
    /**
     * Update existing utility
     */
    public function update(Request $request, Utility $utility)
    {
        // Verifica permessi
        $this->authorize('update', $utility->egi->collection);
        
        // Validazione con messaggi localizzati (stessa di store)
        $validated = $request->validate([
            // ... stessi campi di store
        ], [
            'title.required' => __('utility.validation.title_required'),
            'type.required' => __('utility.validation.type_required'),
            'weight.required_if' => __('utility.validation.weight_required'),
            'valid_until.after' => __('utility.validation.valid_until_after'),
        ]);
        
        // Update utility
        $utility->update($validated);
        
        // Gestione rimozione media
        if ($request->has('remove_media')) {
            foreach ($request->remove_media as $mediaId) {
                $utility->media()->find($mediaId)?->delete();
            }
        }
        
        // Aggiungi nuove immagini
        if ($request->hasFile('gallery')) {
            foreach ($request->file('gallery') as $image) {
                $utility->addMedia($image)->toMediaCollection('utility_gallery');
            }
        }
        
        return redirect()
            ->route('egis.show', $utility->egi)
            ->with('success', __('utility.success_updated'));
    }
}

STEP 4: FILE COMMON.PHP PER TESTI CONDIVISI
Crea anche un file per i testi comuni usati in tutta la piattaforma:
resources/lang/it/label.php:
php<?php

return [
    'note' => 'Nota',
    'info' => 'Informazione',
    'warning' => 'Attenzione',
    'error' => 'Errore',
    'success' => 'Successo',
    'required' => 'Obbligatorio',
    'optional' => 'Opzionale',
    'yes' => 'S√¨',
    'no' => 'No',
    'confirm' => 'Conferma',
    'cancel' => 'Annulla',
    'save' => 'Salva',
    'update' => 'Aggiorna',
    'delete' => 'Elimina',
    'remove' => 'Rimuovi',
    'upload' => 'Carica',
    'download' => 'Scarica',
    'back' => 'Indietro',
    'next' => 'Avanti',
    'finish' => 'Fine',
];

NOTE IMPORTANTI PER L'IMPLEMENTAZIONE MULTILINGUA

NESSUN TESTO HARDCODED: Ogni singolo testo mostrato all'utente deve usare __() o @lang()
FILE DI TRADUZIONE: Crea SEMPRE i file per tutte e 6 le lingue (it, pt, fr, es, en, de)
NAMESPACE: Usa namespace per organizzare le traduzioni (es: utility.fields.title)
PLACEHOLDER: Anche i placeholder dei form devono essere tradotti
JAVASCRIPT: Per i testi JavaScript, utilizza il sistema esistente di traduzioni che trovi in resources/ts/config/appConfig.ts
VALIDATION: I messaggi di errore di validazione devono essere localizzati
SUCCESS/ERROR MESSAGES: Tutti i messaggi flash devono usare traduzioni
FALLBACK: Laravel usa automaticamente 'en' come fallback se manca una traduzione
TESTING: Testa sempre il component cambiando lingua per verificare che tutte le traduzioni funzionino
CONSISTENCY: Usa gli stessi termini tra le varie lingue per concetti simili
PER GESTIONE ERRORI: Utilizza sempre UEM: vedi file docs/Oracode/UEM-ULM-IMPLEMENTATION-GUIDE.md
PER GESIOTNE LOG: Utilizza ULM vedi file docs/Oracode/UEM-ULM-IMPLEMENTATION-GUIDE.md

PROCEDI STEP BY STEP, OGNI SCRIPT CHE CREI DEVE ESSERE VALIDATO DA FABIO